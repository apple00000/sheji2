{"version":3,"sources":["assets/script/quad-tree/LooseQuadTreeCell.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport AABBRegion from \"./AABBRegion\";\r\nimport LooseQuadTree from \"./LooseQuadTree\";\r\n\r\n\r\nexport default class LooseQuadTreeCell {\r\n\r\n    constructor(level:number, index:number, bounds:cc.Rect, children:Array<LooseQuadTreeCell>){\r\n        this.level = level;\r\n        this.index = index;\r\n        this.bounds = bounds;\r\n        this.looseBounds = cc.rect(bounds.xMin-bounds.width/2, bounds.yMin-bounds.height/2, bounds.width*2, bounds.height*2);\r\n        this.children = children;\r\n        this.children.forEach(value => value.parent = this);\r\n    }\r\n\r\n    level = 0;\r\n    index = 0;\r\n    bounds:cc.Rect = null;\r\n    looseBounds:cc.Rect = null;\r\n    parent:LooseQuadTreeCell = null;\r\n    /** 这里是根据索引来访问的，所以不能链表结构 */\r\n    children:Array<LooseQuadTreeCell> = null;\r\n    /** 这里可优化成链表，移除方便 */\r\n    private _objects:Array<AABBRegion> = [];\r\n\r\n    /** 子节点对象的数量 */\r\n    private _objectCount = 0;\r\n\r\n\r\n    get objectCount(): number {\r\n        return this._objectCount;\r\n    }\r\n\r\n    get objects(): Array<AABBRegion> {\r\n        return this._objects;\r\n    }\r\n\r\n    removeObject(region:AABBRegion){\r\n        let index = this._objects.indexOf(region);\r\n        if (index < 0){\r\n            console.error(\"remove not found cell==> level=\"+region.level+\" index=\"+region.index);\r\n            return;\r\n        }\r\n        this._objects.splice(index, 1);\r\n        region.index = -1;\r\n        region.level = -1;\r\n        let cell = this;\r\n        while (cell){\r\n            cell._objectCount--;\r\n            cell = cell.parent;\r\n        }\r\n    }\r\n\r\n\r\n    addObject(region:AABBRegion){\r\n        this._objects.push(region);\r\n        region.index = this.index;\r\n        region.level = this.level;\r\n        let cell = this;\r\n        while (cell){\r\n            cell._objectCount++;\r\n            cell = cell.parent;\r\n        }\r\n    }\r\n\r\n    retrieve(rect:cc.Rect, out:Array<AABBRegion>){\r\n        //从根结点往下找\r\n        if (this._objectCount > 0 && this.looseBounds.intersects(rect)){\r\n            LooseQuadTree.retrieveCount++;\r\n            if (this._objects.length > 0){\r\n                out.push(...this._objects);\r\n            }\r\n            this.children.forEach(value => {\r\n                if (value._objectCount > 0){\r\n                    value.retrieve(rect, out);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n"]}