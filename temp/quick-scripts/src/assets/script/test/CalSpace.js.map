{"version":3,"sources":["assets/script/test/CalSpace.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport SpacePartition from \"../../framework/extend/SpacePartition\";\r\nimport Enemy from \"../app/entities/enemy/Enemy\";\r\nimport LooseQuadTree from \"../quad-tree/LooseQuadTree\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CalSpace extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    entityNode:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    entityNode2:cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    enemyLayer:cc.Node = null;\r\n\r\n    @property(cc.Graphics)\r\n    graphics:cc.Graphics = null;\r\n\r\n    @property(cc.Node)\r\n    touchNode:cc.Node = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    _rect:cc.Rect = cc.rect(0, 0, 600, 800);\r\n\r\n    onTouchMove(event){\r\n        this.touchNode.position = this.touchNode.position.add(event.getDelta());\r\n        this.getComponent(LooseQuadTree).test(cc.rect(this.touchNode.x-this.touchNode.width/2, this.touchNode.y-this.touchNode.height/2, this.touchNode.width, this.touchNode.height));\r\n    }\r\n\r\n    start () {\r\n        this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        //获取矩形内的敌人\r\n        this._rect.width = this.node.width;\r\n        this._rect.height = this.node.height;\r\n        this._rect.origin = cc.v2(-this._rect.width/2, -this._rect.height/2);\r\n        this.graphics.rect(this._rect.x, this._rect.y, this._rect.width, this._rect.height);\r\n\r\n        // let list:Array<cc.Rect> = [];\r\n        // this.enemyLayer.children.forEach(value => {\r\n        //     let space = value.getComponent(EnemyAttributes).space;\r\n        //     let rect = cc.rect();\r\n        //     rect.width = rect.height = space.getRadius()*2;\r\n        //     rect.origin = space.getWorldPos().sub(cc.v2(rect.width/2, rect.height/2));\r\n        //     let intersection = new cc.Rect();\r\n        //     this._rect.intersection(intersection, rect);\r\n        //     if (intersection.width > 0 && intersection.height > 0){\r\n        //         list.push(rect);\r\n        //     }\r\n        // });\r\n        // console.log(list, \"list\");\r\n        // //画list\r\n        // list.forEach(value => this.graphics.rect(value.xMin, value.yMin, value.width, value.height));\r\n        // //开始划分含有子矩形的矩形\r\n        // let arr = this.partitionRect(this._rect, list);\r\n        // console.log(arr, \"arr\");\r\n        // //画arr\r\n        // arr.forEach(value => this.graphics.rect(value.xMin, value.yMin, value.width, value.height));\r\n        let startTime = new Date().getTime();\r\n        let count = 1;\r\n        let partitions = [this._rect];\r\n        let radius = this.entityNode.getComponent(Enemy).spaceCircleCollider.radius;\r\n        let arr = SpacePartition.randomSpaces(partitions, radius*2, radius*2, count);\r\n        console.log(\"生成数量:\"+arr.length+\" 生成时间:\"+(new Date().getTime() - startTime));\r\n        // console.log(partitions, \"====>\");\r\n        console.log(arr, \"===>\");\r\n        arr.forEach(value => {\r\n            let enmeyNode = cc.instantiate(this.entityNode);\r\n            enmeyNode.position = value.center;\r\n            this.enemyLayer.addChild(enmeyNode);\r\n\r\n            this.getComponent(LooseQuadTree).insert(enmeyNode.getComponent(Enemy).enemyAABB);\r\n        });\r\n        // partitions = this.randomEntity(partitions);\r\n        // partitions.forEach(value => this.graphics.rect(value.xMin, value.yMin, value.width, value.height));\r\n        this.schedule(()=>{\r\n            if (count < 10){\r\n                let startTime = new Date().getTime();\r\n                let rect = SpacePartition.randomSpace(partitions, radius*2, radius*2);\r\n                if (rect){\r\n                    let enmeyNode = cc.instantiate(this.entityNode2);\r\n                    enmeyNode.position = rect.center;\r\n                    this.enemyLayer.addChild(enmeyNode);\r\n\r\n                    this.getComponent(LooseQuadTree).insert(enmeyNode.getComponent(Enemy).enemyAABB);\r\n                    count++;\r\n                    console.log(\"生成数量:\"+count+\" 生成时间:\"+(new Date().getTime() - startTime));\r\n                }\r\n            }\r\n        }, 0.11);\r\n\r\n        this.graphics.stroke();\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}