{"version":3,"sources":["assets/script/app/welcome/Welcome.ts"],"names":[],"mappings":";;;;;AAEA,2DAAsD;AAEhD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAqC,2BAAY;IAAjD;QAAA,qEA8BC;QA3BG,YAAM,GAAW,IAAI,CAAC;;IA2B1B,CAAC;IAzBG,wBAAM,GAAN;QAAA,iBAwBC;QAvBG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QAEnB,EAAE,CAAC,IAAI,GAAG,cAAK,CAAC,CAAC;QACjB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAElB,QAAQ,CAAC,IAAI,CAAC,gBAAM,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QACnB,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;YAC7B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,cAAI,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QACnB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;YACvB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,QAAQ;gBAC7D,IAAI,KAAK,IAAI,IAAI,EAAC;oBACd,IAAI,SAAS,GAAG,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBACzC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBACtC,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;iBACzB;qBAAK;oBACF,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACxB;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IACvB,CAAC;IA1BD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;2CACI;IAHL,OAAO;QAD3B,OAAO;OACa,OAAO,CA8B3B;IAAD,cAAC;CA9BD,AA8BC,CA9BoC,EAAE,CAAC,SAAS,GA8BhD;kBA9BoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["\r\nimport Network from \"../network/Network\";\r\nimport Facade from \"../../../framework/facade/Facade\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Welcome extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    bgNode:cc.Node = null;\r\n\r\n    onLoad () {\r\n        console.log(\"xxx1\")\r\n\r\n        cc.warn = ()=>{};\r\n        let promises = [];\r\n\r\n        promises.push(Facade.executeCommand(\"LoadingCommand\"));\r\n        console.log(\"xxx2\")\r\n        promises.push(new Promise(resolve => {\r\n            this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(()=>resolve())));\r\n        }));\r\n        console.log(\"xxx3\")\r\n        Promise.all(promises).then(()=>{\r\n            cc.loader.loadRes(\"prefab/HomeScene\", cc.Prefab, (error, resource) => {\r\n                if (error == null){\r\n                    let homeScene = cc.instantiate(resource);\r\n                    Facade.canvasNode.addChild(homeScene);\r\n                    this.bgNode.destroy();\r\n                }else {\r\n                    console.error(error);\r\n                }\r\n            });\r\n        });\r\n        console.log(\"xxx4\")\r\n    }\r\n}\r\n"]}