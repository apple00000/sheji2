{"version":3,"sources":["assets/script/app/home/TopController.ts"],"names":[],"mappings":";;;;;AACA,uCAAoC;AACpC,2DAAqD;AACrD,2DAAsD;AAIhD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA2C,iCAAY;IAAvD;QAAA,qEA6CC;QA1CG,eAAS,GAAe,IAAI,CAAC;QAG7B,cAAQ,GAAkB,EAAE,CAAC;;IAuCjC,CAAC;IArCG,4BAAI,GAAJ;QACI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,CAAC,MAAM,GAAG,wCAAqC,aAAK,CAAC,OAAO,CAAC,SAAS,GAAC,CAAC,GAAC,KAAK,oBAAgB,EAAnG,CAAmG,CAAC,CAAC;QAC7I,IAAI,aAAK,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,EAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,GAAG,KAAK,CAAC;SACpD;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,8BAAM,GAAN;QACI,gBAAM,CAAC,UAAU,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QACvE,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,iCAAS,GAAT;QACI,gBAAM,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAC5E,CAAC;IAED,4CAAoB,GAApB,UAAqB,GAAU;QAC3B,IAAI,GAAG,IAAI,OAAO,EAAC;SAClB;aAAM,IAAI,GAAG,IAAI,WAAW,EAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,uCAAqC,YAAG,CAAC,WAAW,CAAC,aAAK,CAAC,OAAO,CAAC,SAAS,CAAC,mBAAgB,CAAC;SACzH;aAAM,IAAI,GAAG,IAAI,cAAc,EAAC;SAChC;IACL,CAAC;IAED,kCAAU,GAAV;QACI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,uCAAqC,YAAG,CAAC,WAAW,CAAC,aAAK,CAAC,OAAO,CAAC,SAAS,CAAC,mBAAgB,CAAC;IAC1H,CAAC;IAEK,mCAAW,GAAjB,UAAkB,IAAI,EAAE,IAAI;;;;;;wBACxB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAA;wBAExC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACT,qBAAM,gBAAM,CAAC,cAAc,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,EAAA;;wBAAzE,IAAI,GAAI,CAAA,SAAiE,CAAA,GAArE;wBACL,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;wBACjE,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;;;;;KAClC;IAzCD;QADC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;oDACO;IAG7B;QADC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;mDACO;IANZ,aAAa;QADjC,OAAO;OACa,aAAa,CA6CjC;IAAD,oBAAC;CA7CD,AA6CC,CA7C0C,EAAE,CAAC,SAAS,GA6CtD;kBA7CoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["\r\nimport {World} from \"../info/World\";\r\nimport {ext} from \"../../../framework/extend/Extend\";\r\nimport Facade from \"../../../framework/facade/Facade\";\r\nimport ExchangeController from \"./ExchangeController\";\r\nimport LoadingCommand from \"./LoadingCommand\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TopController extends cc.Component {\r\n\r\n    @property(cc.RichText)\r\n    goldLabel:cc.RichText = null;\r\n\r\n    @property(cc.RichText)\r\n    lvLabels: [cc.RichText] = [];\r\n\r\n    init(){\r\n        this.lvLabels.forEach((value, index) => value.string = `<b><outline color=#1e1e1e width=3>${World.Storage.gameLevel-1+index}</outline></b>`);\r\n        if (World.Storage.gameLevel < 2){\r\n            this.lvLabels[0].node.getParent().active = false;\r\n        }\r\n        this.updateView();\r\n    }\r\n\r\n    onLoad () {\r\n        Facade.canvasNode.on(\"UpdateStorage\", this.onUpdateStorageEvent, this);\r\n        this.init();\r\n    }\r\n\r\n    onDestroy(){\r\n        Facade.canvasNode.off(\"UpdateStorage\", this.onUpdateStorageEvent, this);\r\n    }\r\n\r\n    onUpdateStorageEvent(key:string){\r\n        if (key == \"power\"){\r\n        } else if (key == \"goldCount\"){\r\n            this.goldLabel.string = `<b><outline color=#1e1e1e width=3>${ext.shortFormat(World.Storage.goldCount)}</outline></b>`;\r\n        } else if (key == \"diamondCount\"){\r\n        }\r\n    }\r\n\r\n    updateView() {\r\n        this.goldLabel.string = `<b><outline color=#1e1e1e width=3>${ext.shortFormat(World.Storage.goldCount)}</outline></b>`;\r\n    }\r\n\r\n    async onClickPlus(vent, data){\r\n        console.log(\"【click】TopController Plus\")\r\n\r\n        data = parseInt(data);\r\n        let [node] = await Facade.executeCommand(\"OpenViewCommand\", \"prefab/exchange\");\r\n        let exchangeController = node.getComponent(\"ExchangeController\");\r\n        exchangeController.type = data;\r\n    }\r\n}\r\n"]}