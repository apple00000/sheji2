{"version":3,"sources":["assets/script/app/entities/bullet/BulletOfShouLei.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport Bullet from \"./Bullet\";\r\nimport Facade from \"../../../../framework/facade/Facade\";\r\nimport {GameProxy} from \"../../game/GameProxy\";\r\nimport {World} from \"../../info/World\";\r\nimport {ExcelConfig} from \"../../../../framework/config/ExcelConfig\";\r\nimport {ExcelTableNames} from \"../../config/ExcelTableNames\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BulletOfShouLei extends Bullet {\r\n\r\n    private _ske:sp.Skeleton = null;\r\n\r\n    private _bounds:cc.Rect = cc.rect();\r\n\r\n    private _gameExplosivesController = null;\r\n\r\n\r\n    strike(other, self): void {\r\n        // super.strike(other, self);\r\n    }\r\n\r\n    init(id: number): void {\r\n        this.bulletId = id;\r\n        let cfg = ExcelConfig.getExcelTable(ExcelTableNames.Prop)[this.bulletId-1];\r\n        this.bThrought = cfg['pierce'] === 1;\r\n        this.repel = cfg['repel'];\r\n        this.stiff = cfg['stiff'];\r\n        let config = ExcelConfig.getExcelTable(ExcelTableNames.Weapon)[0];\r\n        this.hurt = Math.floor(config['hurt']*World.My.armory.hurtMulOf(1))*cfg['hurt'];\r\n        let bgNode = cc.find('Canvas').getChildByName('GameScene').getChildByName('shakeNode').getChildByName('bg');\r\n        this._bounds.x = - bgNode.width/2;\r\n        this._bounds.y = - bgNode.height/2;\r\n        this._bounds.width = bgNode.width;\r\n        this._bounds.height = bgNode.height;\r\n    }\r\n\r\n\r\n    onLoad(): void {\r\n        super.onLoad();\r\n        this._ske = this.getComponent(sp.Skeleton);\r\n        this._gameExplosivesController = Facade.findComponent(\"GameScene\", \"GameExplosivesController\");\r\n    }\r\n\r\n\r\n    move(dir: cc.Vec2): void {\r\n        if (this.node.x <= this._bounds.xMin || this.node.x >= this._bounds.xMax || this.node.y <= this._bounds.yMin || this.node.y >= this._bounds.yMax){\r\n            this.node.active = false;\r\n            return;\r\n        }\r\n        this._ske.setAnimation(0, \"animation\", true);\r\n        /** 计算终点 */\r\n        let destPos = dir.mul(this._bounds.height+this._bounds.width);\r\n        let intersections = [];\r\n        if (dir.x > 0){\r\n            //右边界\r\n            if (destPos.x >= this._bounds.xMax){\r\n                let point = cc.v2();\r\n                if(cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMax, this._bounds.yMin), cc.v2(this._bounds.xMax, this._bounds.yMax), point)){\r\n                    intersections.push(point);\r\n                }\r\n            }\r\n        }else if (dir.x < 0) {\r\n            //左边界\r\n            if (destPos.x <= this._bounds.xMin){\r\n                let point = cc.v2();\r\n                if(cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMin), cc.v2(this._bounds.xMin, this._bounds.yMax), point)){\r\n                    intersections.push(point);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (dir.y > 0){\r\n            //上边界\r\n            if (destPos.y >= this._bounds.yMax){\r\n                let point = cc.v2();\r\n                if(cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMax), cc.v2(this._bounds.xMax, this._bounds.yMax), point)){\r\n                    intersections.push(point);\r\n                }\r\n            }\r\n        }else if (dir.y < 0){\r\n            //上边界\r\n            if (destPos.y <= this._bounds.yMin){\r\n                let point = cc.v2();\r\n                if(cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMin), cc.v2(this._bounds.xMax, this._bounds.yMin), point)){\r\n                    intersections.push(point);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (intersections.length > 0){\r\n            // console.log(\"重新计算destPos===>intersections\", intersections);\r\n            /** 重新计算destPos */\r\n            if (intersections.length == 1){\r\n                destPos = intersections[0];\r\n            } else {\r\n                /** 取距离怪物最近的那个点 */\r\n                let p = intersections[0];\r\n                let minDistance = p.sub(this.node.position).mag();\r\n                for (let i=1; i<intersections.length; i++){\r\n                    let mag = intersections[i].sub(this.node.position).mag();\r\n                    if (mag < minDistance){\r\n                        p = intersections[i];\r\n                        minDistance = mag;\r\n                    }\r\n                }\r\n                destPos = p;\r\n            }\r\n        }\r\n\r\n        let distance = destPos.sub(this.node.position).mag();\r\n        let speed = 50;\r\n        let action = cc.sequence(cc.moveTo(distance/speed, destPos), cc.callFunc(()=>{\r\n            this.node.active = false;\r\n        }));\r\n        this.node.runAction(action);\r\n    }\r\n\r\n    onCollisionEnter(other, self): void {\r\n        /** 爆炸 */\r\n        this.node.active = false;\r\n        this.boom();\r\n    }\r\n\r\n    boom(){\r\n        let explosiveHuoJianTong = this._gameExplosivesController.getInactiveExplosive(9);\r\n        explosiveHuoJianTong.node.position = this.node.position;\r\n        explosiveHuoJianTong.node.active = true;\r\n        explosiveHuoJianTong.node.scale = 0.5;\r\n        explosiveHuoJianTong.node.rotation = Math.random()*360;\r\n        explosiveHuoJianTong.boom();\r\n        GameProxy.emit(GameProxy.Event.ShakeScreen, 0.08, 2, 2);\r\n    }\r\n}\r\n"]}