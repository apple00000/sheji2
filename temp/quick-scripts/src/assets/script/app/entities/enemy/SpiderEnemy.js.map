{"version":3,"sources":["assets/script/app/entities/enemy/SpiderEnemy.ts"],"names":[],"mappings":";;;;;AAEA,2DAAwD;AACxD,kDAA+C;AAC/C,iCAA4B;AAEtB,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAyC,+BAAK;IAA9C;QAAA,qEAiDC;QA9CG,eAAS,GAAW,IAAI,CAAC;;IA8C7B,CAAC;IA5CG,sBAAI,6BAAI;aAAR,UAAS,KAAc;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC;gBACrC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3D,IAAI,QAAQ,GAAG,GAAG,CAAC;gBACnB,IAAI,UAAU,GAAG;oBACb,IAAI,CAAC,qBAAS,CAAC,SAAS,EAAC;wBACrB,aAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;qBACpC;oBACD,qFAAqF;oBACrF,uBAAuB;oBACvB,+BAA+B;oBAC/B,IAAI;gBACR,CAAC,CAAC;gBACF,UAAU,EAAE,CAAC;aAChB;QACL,CAAC;;;OAAA;IAGS,8BAAQ,GAAlB;QACI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;IACzB,CAAC;IAGD,8BAAQ,GAAR;QACI,iBAAM,QAAQ,WAAE,CAAC;QACjB,SAAS;QACT,IAAI,MAAM,GAAmB,MAAM,CAAC,uBAAuB,CAAC,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnG,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAC1B,MAAM,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAED,2BAAK,GAAL;QACI,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;IAClC,CAAC;IA1CD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;kDACO;IAHR,WAAW;QAD/B,OAAO;OACa,WAAW,CAiD/B;IAAD,kBAAC;CAjDD,AAiDC,CAjDwC,eAAK,GAiD7C;kBAjDoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["\r\nimport BulletOfSpider from \"../bullet/BulletOfSpider\";\r\nimport {Music} from \"../../../../framework/audio/Music\";\r\nimport {GameProxy} from \"../../game/GameProxy\";\r\nimport Enemy from \"./Enemy\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class SpiderEnemy extends Enemy {\r\n\r\n    @property(cc.Node)\r\n    blinkNode:cc.Node = null;\r\n\r\n    set bAcc(value: boolean) {\r\n        this._bAcc = value;\r\n        if (this._bAcc && !this.blinkNode.active){\r\n            this.blinkNode.active = true;\r\n            this.blinkNode.runAction(cc.repeatForever(cc.blink(1, 3)));\r\n            let duration = 0.5;\r\n            let repeatFunc = ()=>{\r\n                if (!GameProxy.pauseGame){\r\n                    Music.playSFX(\"sound/msc_en002\");\r\n                }\r\n                // this.node.runAction(cc.sequence(cc.delayTime(duration), cc.callFunc(repeatFunc)));\r\n                // if (duration > 0.3){\r\n                //     duration -= duration/10;\r\n                // }\r\n            };\r\n            repeatFunc();\r\n        }\r\n    }\r\n\r\n\r\n    protected doAttack(): void {\r\n        this.hp = 0;\r\n        console.log(\"爆炸蜘蛛死掉\")\r\n    }\r\n\r\n\r\n    playDead(): void {\r\n        super.playDead();\r\n        /** 爆炸 */\r\n        let bullet = <BulletOfSpider>window['GameBulletsController'].getInactiveEnemyBullet(this._enemyID);\r\n        bullet.node.position = this.node.position;\r\n        bullet.node.rotation = this.node.rotation;\r\n        bullet.node.active = true;\r\n        bullet.boom();\r\n    }\r\n\r\n    reset(): void {\r\n        super.reset();\r\n        this.blinkNode.stopAllActions();\r\n        this.blinkNode.active = false;\r\n    }\r\n\r\n\r\n\r\n}\r\n"]}