{"version":3,"sources":["assets/script/app/info/Task.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport {World} from \"./World\";\r\nimport {ExcelTableNames} from \"../config/ExcelTableNames\";\r\nimport {ExcelConfig} from \"../../../framework/config/ExcelConfig\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport interface TaskItemProxy {\r\n    id:number;\r\n    num:number;\r\n    take:boolean;\r\n}\r\nexport interface TaskProxy {\r\n    list:Array<TaskItemProxy>;\r\n    expireTime:number;\r\n    box:boolean;\r\n}\r\n\r\n@ccclass\r\nexport default class Task {\r\n\r\n    private static _taskItemsOfCurrentLv:Array<TaskItemProxy>;\r\n\r\n    private static initCurrentLvData(){\r\n        this._taskItemsOfCurrentLv = this._taskProxy.list.map(value => <TaskItemProxy>{id:value.id, num:0, take:false});\r\n    }\r\n\r\n    static  mergeCurrentLvData(){\r\n        console.log(\"mergeCurrentLvData==>\");\r\n        console.log(this._taskItemsOfCurrentLv, \"this._taskItemsOfCurrentLv\");\r\n        let update = false;\r\n        this._taskItemsOfCurrentLv.forEach((value, index) => {\r\n            let line = ExcelConfig.getExcelLine(ExcelTableNames.task, \"id\", value.id);\r\n            if (value.num > 0 && this._taskProxy.list[index].num < line['num']){\r\n                this._taskProxy.list[index].num += value.num;\r\n                if (this._taskProxy.list[index].num >= line['num']){\r\n                    this._taskProxy.list[index].num = line['num'];\r\n                }\r\n                update = true;\r\n            }\r\n        });\r\n        if (update){\r\n            this.write();\r\n        }\r\n    }\r\n\r\n    static write(){\r\n        World.Storage.task = JSON.stringify(this._taskProxy);\r\n    }\r\n\r\n    private static _taskProxy:TaskProxy;\r\n\r\n    private static addNum(taskId:number, num:number){\r\n        console.log(\"======>addNum\", taskId, num);\r\n        let find = this._taskItemsOfCurrentLv.find(value => value.id == taskId);\r\n        if (find){\r\n            find.num += num;\r\n        }\r\n        console.log(this._taskItemsOfCurrentLv, \"----\");\r\n    }\r\n\r\n    /** 任务只增不减 */\r\n\r\n    /** 击碎靶子 */\r\n    public static killEnemy(){\r\n        this.addNum(1, 1);\r\n    }\r\n\r\n    /** 击碎幸运转盘 */\r\n    public static killLuckyEnemy(){\r\n        this.addNum(2, 1);\r\n    }\r\n\r\n    /** 触发疯狂模式 */\r\n    public static triggerCrazy(){\r\n        this.addNum(3, 1);\r\n    }\r\n\r\n    /** 打败Boss */\r\n    public static killBoss(){\r\n        this.addNum(4, 1);\r\n    }\r\n\r\n    /** 使用道具 */\r\n    public static useTool(){\r\n        this.addNum(5, 1);\r\n    }\r\n\r\n\r\n    public static init(){\r\n        console.log(\"Task.initBullet===>\");\r\n        /** 初始每日任务表 */\r\n        let task = <TaskProxy>JSON.parse(World.Storage.task);\r\n        if (!task || !task.expireTime || task.expireTime <= World.My.serverTime){\r\n            /** 更新任务 */\r\n            task = <TaskProxy>{};\r\n            /** 计算今天的时分秒 */\r\n            let date = new Date(World.My.serverTime);\r\n            console.log(`${date.getFullYear()}年${date.getMonth()}月${date.getDay()}日${date.getHours()}时${date.getMinutes()}分${date.getSeconds()}秒${date.getMilliseconds()}毫秒`);\r\n            let cd = 24*60*60 - (date.getHours()*60*60 + date.getMinutes()*60 + date.getSeconds());\r\n            let h = Math.floor(cd/3600);\r\n            let m = Math.floor((cd-h*3600)/60);\r\n            let s = cd%60;\r\n            console.log(`${h}时${m}分${s}秒-----------`);\r\n            task.expireTime = World.My.serverTime + cd*1000 - date.getMilliseconds();\r\n            task.box = false;\r\n            task.list = [];\r\n            /** 随机三个任务 */\r\n            let taskDatas = ExcelConfig.getExcelTable(ExcelTableNames.task).filter(value => value['type'] == 1);\r\n            for (let i=0; i<3; i++){\r\n                let index = Math.floor(Math.random()*100)%taskDatas.length;\r\n                let item = taskDatas[index];\r\n                console.log(index, item['id'], \"=====\");\r\n                task.list.push({id:parseInt(item['id']), num:0, take:false});\r\n                taskDatas.splice(index, 1);\r\n            }\r\n            World.Storage.task = JSON.stringify(task);\r\n        }else if(task && !task.list) {\r\n            this._taskProxy.list = [];\r\n            for (let key in this._taskProxy){\r\n                if (key != 'expireTime' && key != 'box' && key != 'list'){\r\n                    let id = parseInt(key);\r\n                    let num = this._taskProxy[key];\r\n                    let line = ExcelConfig.getExcelLine(ExcelTableNames.task, \"id\", id);\r\n                    if (line['num']){\r\n                        let take = num >= line['num'];\r\n                        this._taskProxy.list.push({id:id, num:num, take:take});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._taskProxy = task;\r\n\r\n        this.initCurrentLvData();\r\n    }\r\n\r\n\r\n    static get taskProxy(): TaskProxy {\r\n        return this._taskProxy;\r\n    }\r\n\r\n\r\n    static get taskItemsOfCurrentLv(): Array<TaskItemProxy> {\r\n        return this._taskItemsOfCurrentLv;\r\n    }\r\n}\r\n"]}