{"version":3,"sources":["assets/script/app/game/GameCollisionController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\n\r\nimport LooseQuadTree from \"../../quad-tree/LooseQuadTree\";\r\nimport AABBRegion from \"../../quad-tree/AABBRegion\";\r\nimport EnemyAABB from \"../entities/enemy/EnemyAABB\";\r\nimport {GameProxy} from \"./GameProxy\";\r\nimport BulletOfEnemy from \"../entities/bullet/BulletOfEnemy\";\r\nimport PropBase from \"../entities/prop/PropBase\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst math = cc.math;\r\n\r\nlet _vec2 = cc.v2();\r\n\r\nfunction obbApplyMatrix (rect, mat4, out_bl, out_tl, out_tr, out_br) {\r\n    var x = rect.x;\r\n    var y = rect.y;\r\n    var width = rect.width;\r\n    var height = rect.height;\r\n\r\n    var m00 = mat4.m0, m01 = mat4.m1, m04 = mat4.m4, m05 = mat4.m5;\r\n    var m12 = mat4.m12, m13 = mat4.m13;\r\n\r\n    var tx = m00 * x + m04 * y + m12;\r\n    var ty = m01 * x + m05 * y + m13;\r\n    var xa = m00 * width;\r\n    var xb = m01 * width;\r\n    var yc = m04 * height;\r\n    var yd = m05 * height;\r\n\r\n    out_tl.x = tx;\r\n    out_tl.y = ty;\r\n    out_tr.x = xa + tx;\r\n    out_tr.y = xb + ty;\r\n    out_bl.x = yc + tx;\r\n    out_bl.y = yd + ty;\r\n    out_br.x = xa + yc + tx;\r\n    out_br.y = xb + yd + ty;\r\n};\r\n\r\n@ccclass\r\nexport default class GameCollisionController extends cc.Component {\r\n    @property(cc.Node)\r\n    enemyBulletLayer:cc.Node = null;\r\n\r\n    @property(LooseQuadTree)\r\n    looseQuadTree:LooseQuadTree = null;\r\n\r\n\r\n\r\n    onLoad(){\r\n        window['GameCollisionController'] = this;\r\n    }\r\n\r\n    static updateCollider (collider) {\r\n        let offset = collider.offset;\r\n        let world = collider.world;\r\n        let aabb = world.aabb;\r\n\r\n        let m = world.matrix;\r\n        collider.node.getLocalMatrix(m);\r\n\r\n        let preAabb = world.preAabb;\r\n        preAabb.x = aabb.x;\r\n        preAabb.y = aabb.y;\r\n        preAabb.width = aabb.width;\r\n        preAabb.height = aabb.height;\r\n\r\n        if (collider instanceof cc.BoxCollider) {\r\n            let size = collider.size;\r\n\r\n            aabb.x = offset.x - size.width/2;\r\n            aabb.y = offset.y - size.height/2;\r\n            aabb.width = size.width;\r\n            aabb.height = size.height;\r\n\r\n            let wps = world.points;\r\n            let wp0 = wps[0], wp1 = wps[1],\r\n                wp2 = wps[2], wp3 = wps[3];\r\n            obbApplyMatrix(aabb, m, wp0, wp1, wp2, wp3);\r\n\r\n            let minx = Math.min(wp0.x, wp1.x, wp2.x, wp3.x);\r\n            let miny = Math.min(wp0.y, wp1.y, wp2.y, wp3.y);\r\n            let maxx = Math.max(wp0.x, wp1.x, wp2.x, wp3.x);\r\n            let maxy = Math.max(wp0.y, wp1.y, wp2.y, wp3.y);\r\n\r\n            aabb.x = minx;\r\n            aabb.y = miny;\r\n            aabb.width = maxx - minx;\r\n            aabb.height = maxy - miny;\r\n        }\r\n        else if (collider instanceof cc.CircleCollider) {\r\n            // calculate world position\r\n            math.Vec2.transformMat4(_vec2, collider.offset, m);\r\n\r\n            world.position.x = _vec2.x;\r\n            world.position.y = _vec2.y;\r\n\r\n            // calculate world radius\r\n            let tempx = m.m12, tempy = m.m13;\r\n            m.m12 = m.m13 = 0;\r\n\r\n            _vec2.x = collider.radius;\r\n            _vec2.y = 0;\r\n\r\n            math.Vec2.transformMat4(_vec2, _vec2, m);\r\n            let d = Math.sqrt(_vec2.x * _vec2.x + _vec2.y * _vec2.y);\r\n\r\n            world.radius = d;\r\n\r\n            aabb.x = world.position.x - d;\r\n            aabb.y = world.position.y - d;\r\n            aabb.width = d * 2;\r\n            aabb.height = d * 2;\r\n\r\n            m.m12 = tempx;\r\n            m.m13 = tempy;\r\n        }\r\n        else if (collider instanceof cc.PolygonCollider) {\r\n            let points = collider.points;\r\n            let worldPoints = world.points;\r\n\r\n            worldPoints.length = points.length;\r\n\r\n            let minx = 1e6, miny = 1e6, maxx = -1e6, maxy = -1e6;\r\n            for (let i = 0, l = points.length; i < l; i++) {\r\n                if (!worldPoints[i]) {\r\n                    worldPoints[i] = cc.v2();\r\n                }\r\n\r\n                _vec2.x = points[i].x + offset.x;\r\n                _vec2.y = points[i].y + offset.y;\r\n\r\n                math.Vec2.transformMat4(_vec2, _vec2, m);\r\n\r\n                let x = _vec2.x;\r\n                let y = _vec2.y;\r\n\r\n                worldPoints[i].x = x;\r\n                worldPoints[i].y = y;\r\n\r\n                if (x > maxx) maxx = x;\r\n                if (x < minx) minx = x;\r\n                if (y > maxy) maxy = y;\r\n                if (y < miny) miny = y;\r\n            }\r\n\r\n            aabb.x = minx;\r\n            aabb.y = miny;\r\n            aabb.width = maxx - minx;\r\n            aabb.height = maxy - miny;\r\n        }\r\n    }\r\n\r\n    private _updateColliders:Array<AABBRegion> = [];\r\n\r\n    update(dt:number){\r\n        if (GameProxy.pauseGame)return;\r\n        this.looseQuadTree.updateAll();\r\n        this._updateColliders.forEach(value => value.bUpdateCollider = false);\r\n        this._updateColliders.length = 0;\r\n        let gameBulletsController = window['GameBulletsController'];\r\n        /** 与敌人的碰撞 */\r\n        /** 子弹和其他爆炸物 */\r\n        let enemyContacts = gameBulletsController.roleBullets;\r\n        for (let enemyContact of enemyContacts){\r\n            if (enemyContact.collider.enabled){\r\n                GameCollisionController.updateCollider(enemyContact.collider);\r\n                /** 获取可能发生碰撞的敌人 */\r\n                let arr = [];\r\n                this.looseQuadTree.retrieve(enemyContact.collider.world.aabb, arr);\r\n                for (let aabbRegion of arr){\r\n                    let enemy = (<EnemyAABB>aabbRegion).enemy;\r\n                    if (!aabbRegion.bUpdateCollider){\r\n                        GameCollisionController.updateCollider(enemy.spaceCircleCollider);\r\n                        GameCollisionController.updateCollider(enemy.defenceBoxCollider);\r\n                        aabbRegion.bUpdateCollider = true;\r\n                        this._updateColliders.push(aabbRegion);\r\n                    }\r\n                    let bContact = false;\r\n                    if (enemyContact.collider instanceof cc.CircleCollider){\r\n                        bContact = cc.Intersection.polygonCircle(enemy.defenceBoxCollider.world.points, enemyContact.collider.world);\r\n                    }else {\r\n                        bContact = cc.Intersection.polygonPolygon(enemy.defenceBoxCollider.world.points, enemyContact.collider.world.points);\r\n                    }\r\n                    if (bContact){\r\n                        // console.log(\"========>产生了碰撞..\");\r\n                        if (!enemyContact.contacts.includes(enemy)){\r\n                            // console.log(\"=======>onCollisionEnter\");\r\n                            enemyContact.contacts.push(enemy);\r\n                            enemyContact.onCollisionEnter(enemy.defenceBoxCollider, enemyContact.collider);\r\n                            if(!enemyContact.bThrought)break;\r\n                        }else {\r\n                            // console.log(\"========>onCollisionStay\");\r\n                            enemyContact.onCollisionStay(enemy.defenceBoxCollider, enemyContact.collider);\r\n                        }\r\n                    }else {\r\n                        let index = enemyContact.contacts.indexOf(enemy);\r\n                        if (index >= 0){\r\n                            enemyContact.contacts.splice(index, 1);\r\n                            enemyContact.onCollisionExit(enemy.defenceBoxCollider, enemyContact.collider);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let gameRoleController = window['GameRoleController'];\r\n\r\n        /** 与角色的碰撞 */\r\n        let bRoleUpdateCollider = false;\r\n        /** 敌人的子弹 */\r\n        gameBulletsController.enemyBullets.forEach(bullet => {\r\n            /** 先过滤掉一些比较远的 */\r\n            if (bullet.node.position.sub(gameRoleController.role.node.position).mag() < Math.max(bullet.node.width, bullet.node.height) + gameRoleController.role.spaceCircleCollider.radius){\r\n                /** 精密判断 */\r\n                GameCollisionController.updateCollider(bullet.collider);\r\n                if (!bRoleUpdateCollider){\r\n                    GameCollisionController.updateCollider(gameRoleController.role.spaceCircleCollider);\r\n                }\r\n                /** 判断圆形与多边形的碰撞 */\r\n                let bContact = false;\r\n                if (bullet.collider instanceof cc.CircleCollider){\r\n                    bContact = cc.Intersection.circleCircle(bullet.collider.world, gameRoleController.role.spaceCircleCollider.world);\r\n                }else {\r\n                    bContact = cc.Intersection.polygonCircle(bullet.collider.world.points, gameRoleController.role.spaceCircleCollider.world);\r\n                }\r\n                if (bContact){\r\n                    // console.log(\"========>产生了碰撞..\");\r\n                    if (!bullet.contacts.includes(gameRoleController.role)){\r\n                        // console.log(\"=======>onCollisionEnter\");\r\n                        bullet.contacts.push(gameRoleController.role);\r\n                        bullet.onCollisionEnter(gameRoleController.role.spaceCircleCollider, bullet.collider);\r\n                    }else {\r\n                        // console.log(\"========>onCollisionStay\");\r\n                        bullet.onCollisionStay(gameRoleController.role.spaceCircleCollider, bullet.collider);\r\n                    }\r\n                }else {\r\n                    let index = bullet.contacts.indexOf(gameRoleController.role);\r\n                    if (index >= 0){\r\n                        bullet.contacts.splice(index, 1);\r\n                        bullet.onCollisionExit(gameRoleController.role.spaceCircleCollider, bullet.collider);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        /** 道具 */\r\n        window['GameEnemysController'].gameProps.forEach(prop => {\r\n            if (!prop.on_off){\r\n                let distance = prop.node.position.sub(gameRoleController.role.node.position).mag();\r\n                if (GameProxy.magnetic && !prop.magnetic){\r\n                    if (distance < 100){\r\n                        prop.magnetic = true;\r\n                    }\r\n                }\r\n                if (distance < Math.max(prop.node.width, prop.node.height) + gameRoleController.role.spaceCircleCollider.radius){\r\n                    /** 精密判断 */\r\n                    GameCollisionController.updateCollider(prop.collider);\r\n                    if (!bRoleUpdateCollider){\r\n                        GameCollisionController.updateCollider(gameRoleController.role.spaceCircleCollider);\r\n                    }\r\n\r\n                    /** 判断圆形与多边形的碰撞 */\r\n                    let bContact = false;\r\n                    if (prop.collider instanceof cc.CircleCollider){\r\n                        bContact = cc.Intersection.circleCircle(prop.collider.world, gameRoleController.role.spaceCircleCollider.world);\r\n                    }else {\r\n                        bContact = cc.Intersection.polygonCircle(prop.collider.world.points, gameRoleController.role.spaceCircleCollider.world);\r\n                    }\r\n                    if (bContact){\r\n                        // console.log(\"========>产生了碰撞..\");\r\n                        prop.trigger();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n"]}