{"version":3,"sources":["assets/framework/facade/Facade.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\nimport {ICommand} from \"./ICommand\";\r\nimport {ext} from \"../extend/Extend\";\r\nimport Actions from \"../actions/Actions\";\r\nimport {Interceptor} from \"../interceptor/Interceptor\";\r\n\r\nexport default class Facade {\r\n\r\n    static findComponent<T>(nodeName:string, type: {prototype: T} | string, referenceNode?: cc.Node): T;\r\n\r\n    static  findComponent(nodeName:string, type, referenceNode?: cc.Node){\r\n        referenceNode = referenceNode || this.canvasNode;\r\n        let node = cc.find(nodeName, referenceNode);\r\n        if (node){\r\n            return node.getComponent(type);\r\n        }\r\n    }\r\n\r\n    static executeCommand(name:string|[string], ...args):Promise{\r\n        return new Promise(async (resolve, reject) => {\r\n            if (typeof name == \"string\"){\r\n                let arr = name.split(\",\");\r\n                let results = [];\r\n                for (let i in arr){\r\n                    let name = arr[i].trim();\r\n                    let interceptors = Interceptor.interceptorsOf(name);\r\n                    if (interceptors.length > 0){\r\n                        let flag = true;\r\n                        let tempArr = interceptors.slice(0);\r\n                        while (tempArr.length > 0){\r\n                            let commandInterceptor = tempArr.shift();\r\n                            if (CC_DEBUG){\r\n                                console.log(`execute preHandle===>commandName=${name} interceptorName=${commandInterceptor.constructor.name} args=${args}`);\r\n                            }\r\n                            flag = await commandInterceptor.preHandle(...args).catch(reason => {\r\n                                let err;\r\n                                if (typeof reason == \"string\"){\r\n                                    err = Error(reason);\r\n                                }else if(reason instanceof Error){\r\n                                    err = reason;\r\n                                }else{\r\n                                    err = Error(`commandName=${name} ${commandInterceptor.constructor.name}.preHandle()`);\r\n                                }\r\n                                reject(err);\r\n                            }) && flag;\r\n                            tempArr = tempArr.filter(value => Interceptor.interceptorsOf(name).some(value2 => value2 == value));\r\n                        }\r\n                        if (!flag){\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (CC_DEBUG){\r\n                        console.log(`execute command===>${name} args=${args}`);\r\n                    }\r\n                    let command = <ICommand>(ext.createObj(name));\r\n                    if(!command){\r\n                        reject(Error(`createObj(${name})===>${name} not found`));\r\n                        return;\r\n                    }\r\n                    let res = await command.execute(...args).catch(reason => {\r\n                        let err;\r\n                        if (typeof reason == \"string\"){\r\n                            err = Error(reason);\r\n                        }else if(reason instanceof Error){\r\n                            err = reason;\r\n                        }else{\r\n                            err = Error(`command.execute()===>commandName=${name}`);\r\n                        }\r\n                        reject(err);\r\n                    });\r\n                    results.push(res);\r\n\r\n                    interceptors = Interceptor.interceptorsOf(name);\r\n                    if (interceptors.length > 0){\r\n                        let tempArr = interceptors.slice(0);\r\n                        while (tempArr.length > 0){\r\n                            let commandInterceptor = tempArr.shift();\r\n                            if (CC_DEBUG){\r\n                                console.log(`execute postHandle===>commandName=${name} interceptorName=${commandInterceptor.constructor.name} res=${res} args=${args}`);\r\n                            }\r\n                            await commandInterceptor.postHandle(res, ...args).catch(reason => {\r\n                                let err;\r\n                                if (typeof reason == \"string\"){\r\n                                    err = Error(reason);\r\n                                }else if(reason instanceof Error){\r\n                                    err = reason;\r\n                                }else{\r\n                                    err = Error(`commandName=${name} ${commandInterceptor.constructor.name}.postHandle`);\r\n                                }\r\n                                reject(err);\r\n                            });\r\n                            tempArr = tempArr.filter(value => Interceptor.interceptorsOf(name).some(value2 => value2 == value));\r\n                        }\r\n                    }\r\n                    resolve(results);\r\n                }\r\n            }else if (name instanceof Array){\r\n                let results = [];\r\n                for (let i in name){\r\n                    let res = await Facade.executeCommand(name[i], ...args).catch(reason => reject(reason));\r\n                    results.push(res);\r\n                }\r\n                resolve(results);\r\n            }else {\r\n                reject(Error(\"executeCommand typeof(name)===>\"+typeof name));\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    static releasePrefab(prefab:string, excludePrefab?:string|[string]){\r\n        let excludes = [];\r\n        if (excludePrefab){\r\n            if (typeof excludePrefab == \"string\"){\r\n                excludes.push(excludePrefab);\r\n            } else {\r\n                excludes = excludePrefab;\r\n            }\r\n        }\r\n\r\n        if (excludes.indexOf(prefab) >= 0){\r\n            console.log(\"release fail,this prefab in retainPrefab or excludes===>\"+prefab);\r\n            return\r\n        }\r\n\r\n        let deps = cc.loader.getDependsRecursively(prefab);\r\n        let arr = deps.filter(value => {\r\n            for (let i in excludes){\r\n                let retainPrefab = excludes[i];\r\n                if(cc.loader.getDependsRecursively(retainPrefab).indexOf(value) >= 0){\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        arr.forEach(value => {\r\n            cc.loader.release(value);\r\n            console.log(value, \"release====>\");\r\n        });\r\n    }\r\n\r\n    /** 当前canvas节点 */\r\n    static canvasNode:cc.Node = null;\r\n\r\n\r\n    private static _separationPrefab:cc.Prefab = null;\r\n\r\n    static async initSeparationLayer(separationPrefabName:string){\r\n        this._separationPrefab = await cc.loader.loadResAwait(separationPrefabName, cc.Prefab);\r\n    }\r\n\r\n    /** 加入隔断层 */\r\n    static addSeparationLayer(groupIdx:number = null, opacity:Number = 115, zOrder:Number = 0):cc.Node{\r\n        if (this._separationPrefab == null){\r\n            console.error(\"please call Facade.initSeparationLayer before call Facade.addSeparationLayer\");\r\n            return;\r\n        }\r\n        let node = cc.instantiate(this._separationPrefab);\r\n        node.setParent(this.canvasNode);\r\n        node.position = cc.v2(0, 0);\r\n        if (typeof opacity == \"number\"){\r\n            node.opacity = opacity;\r\n        }\r\n        node.zIndex = zOrder;\r\n\r\n        if (groupIdx){\r\n            node.groupIndex = groupIdx;\r\n        }\r\n        return node;\r\n    }\r\n\r\n    private static _textTipsPrefab:cc.Prefab = null;\r\n\r\n    static async initTextTips(textTipsPrefabName:string){\r\n        this._textTipsPrefab = await cc.loader.loadResAwait(textTipsPrefabName, cc.Prefab);\r\n    }\r\n\r\n    /** 文字提示 */\r\n    static async textTips(text:string, position?:cc.Vec2, fontSize?:number){\r\n        if (this._separationPrefab == null){\r\n            console.error(\"please call Facade.initTextTips before call Facade.textTips\");\r\n            return;\r\n        }\r\n        let node = cc.instantiate(this._textTipsPrefab);\r\n        node.setParent(Facade.canvasNode);\r\n        node.zIndex = cc.macro.MAX_ZINDEX;\r\n        if (position){\r\n            node.position = position;\r\n        } else {\r\n            node.position = cc.v2(0, 0);\r\n        }\r\n        let richText = node.getComponent(cc.RichText);\r\n        if (fontSize){\r\n            richText.fontSize = fontSize;\r\n        }\r\n        richText.string = text;\r\n        ext.showRichText(richText);\r\n        await node.runActionAwait(Actions.flutterAction());\r\n        node.destroy();\r\n    }\r\n\r\n}\r\n\r\n"]}