{"version":3,"sources":["assets/framework/interceptor/PreCommandInterceptor.ts"],"names":[],"mappings":";;;;;;AAWA;IAAA;IAOA,CAAC;IAHS,0CAAU,GAAhB,UAAiB,GAAO;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;uCAAE,OAAO;;gBACtC,sBAAO,IAAI,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC,EAAC;;;KAC5C;IACL,4BAAC;AAAD,CAPA,AAOC,IAAA;AAPqB,sDAAqB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport {ICommandInterceptor} from \"./CommandInterceptor\";\r\n\r\nexport abstract class PreCommandInterceptor implements ICommandInterceptor {\r\n\r\n    abstract async preHandle(...args):Promise<boolean>;\r\n\r\n    async postHandle(res:any, ...args):Promise{\r\n        return new Promise(resolve => resolve());\r\n    }\r\n}"]}