{"version":3,"sources":["assets/framework/interceptor/Interceptor.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;;;AAOnG,IAAI,GAAG,GAAG,IAAI,GAAG,EAAsC,CAAC;AAExD;IAAA;IA2CA,CAAC;IAvCU,oBAAQ,GAAf,UAAgB,OAAc,EAAE,WAAgC;QAC5D,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,OAAO,WAAW,IAAI,UAAU,EAAC;YACjC,WAAW,GAAG,WAAW,CAAA;SAC5B;aAAI;YACD,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;SACzC;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,GAAG,CAAC,KAAK,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,WAAW,IAAI,WAAW,EAAhC,CAAgC,CAAC,EAAC;YACrD,IAAI,OAAO,WAAW,IAAI,UAAU,EAAC;gBACjC,GAAG,CAAC,IAAI,CAAC,IAAI,WAAW,EAAE,CAAC,CAAC;aAC/B;iBAAK;gBACF,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACzB;SACJ;IACL,CAAC;IAIM,sBAAU,GAAjB,UAAkB,OAAc,EAAE,WAA+B;QAC7D,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,OAAO,WAAW,IAAI,UAAU,EAAC;YACjC,WAAW,GAAG,WAAW,CAAA;SAC5B;aAAI;YACD,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;SACzC;QACD,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,WAAW,IAAI,WAAW,EAAhC,CAAgC,CAAC,CAAC;QACnE,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC7B,CAAC;IAEM,0BAAc,GAArB,UAAsB,OAAc;QAChC,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC3B,IAAI,OAAO,GAAG,IAAI,WAAW,EAAC;YAC1B,GAAG,GAAG,EAAE,CAAC;YACT,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SACzB;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IACL,kBAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,kCAAW","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\n/// <reference path=\"CommandInterceptor.ts\" />\r\n\r\nimport {ICommandInterceptor} from \"./CommandInterceptor\";\r\n\r\nlet map = new Map<string, Array<ICommandInterceptor>>();\r\n\r\nexport class Interceptor{\r\n\r\n    static register<T extends ICommandInterceptor>(command:string, interceptor: {prototype: T});\r\n\r\n    static register(command:string, interceptor: ICommandInterceptor){\r\n        let constructor = null;\r\n        if (typeof interceptor == \"function\"){\r\n            constructor = interceptor\r\n        }else{\r\n            constructor = interceptor.constructor;\r\n        }\r\n        let arr = this.interceptorsOf(command);\r\n        if (arr.every(value => value.constructor != constructor)){\r\n            if (typeof interceptor == \"function\"){\r\n                arr.push(new interceptor());\r\n            }else {\r\n                arr.push(interceptor);\r\n            }\r\n        }\r\n    }\r\n\r\n    static unregister<T extends ICommandInterceptor>(command:string, interceptor: {prototype: T});\r\n\r\n    static unregister(command:string, interceptor:ICommandInterceptor){\r\n        let arr = this.interceptorsOf(command);\r\n        let constructor = null;\r\n        if (typeof interceptor == \"function\"){\r\n            constructor = interceptor\r\n        }else{\r\n            constructor = interceptor.constructor;\r\n        }\r\n        let newArr = arr.filter(value => value.constructor != constructor);\r\n        map.set(command, newArr);\r\n    }\r\n\r\n    static interceptorsOf(command:string):[ICommandInterceptor]{\r\n        let arr = map.get(command);\r\n        if (typeof arr == \"undefined\"){\r\n            arr = [];\r\n            map.set(command, arr);\r\n        }\r\n        return arr;\r\n    }\r\n}\r\n"]}