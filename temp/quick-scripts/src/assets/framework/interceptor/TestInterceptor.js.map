{"version":3,"sources":["assets/framework/interceptor/TestInterceptor.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;;AAInG,mEAAgE;AAChE,6CAA0C;AAEpC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAE1C;IAA6C,mCAAsB;IAAnE;;IAsBA,CAAC;IApBS,oCAAU,GAAhB,UAAiB,GAAO;QAAE,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,6BAAO;;uCAAE,OAAO;;gBACtC,sBAAO,IAAI,OAAO,CAAC,UAAA,OAAO;wBACtB,UAAU,CAAC;4BACP,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;4BAC1B,OAAO,CAAC,IAAI,CAAC,CAAC;wBAClB,CAAC,EAAE,IAAI,CAAC,CAAC;oBACb,CAAC,CAAC,EAAC;;;KACN;IAEK,mCAAS,GAAf;QAAgB,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;uCAAE,OAAO;;gBAC5B,sBAAO,IAAI,OAAO,CAAC,UAAA,OAAO;wBACtB,UAAU,CAAC;4BACP,OAAO,CAAC,GAAG,CAAC,yBAAW,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE,MAAM,CAAC,CAAC;4BACpE,yBAAW,CAAC,UAAU,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;4BAC5D,uEAAuE;4BACvE,OAAO,CAAC,GAAG,CAAC,yBAAW,CAAC,cAAc,CAAC,kBAAkB,CAAC,EAAE,QAAQ,CAAC,CAAC;4BACtE,OAAO,CAAC,IAAI,CAAC,CAAC;wBAClB,CAAC,EAAE,IAAI,CAAC,CAAC;oBACb,CAAC,CAAC,EAAC;;;KACN;IACL,sBAAC;AAAD,CAtBA,AAsBC,CAtB4C,+CAAsB,GAsBlE","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\n\r\nimport {PostCommandInterceptor} from \"./PostCommandInterceptor\";\r\nimport {Interceptor} from \"./Interceptor\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nexport default class TestInterceptor extends PostCommandInterceptor {\r\n\r\n    async postHandle(res:any, ...args):Promise{\r\n        return new Promise(resolve => {\r\n            setTimeout(function () {\r\n                console.log(\"postHandle\");\r\n                resolve(true);\r\n            }, 3000);\r\n        });\r\n    }\r\n\r\n    async preHandle(...args):Promise{\r\n        return new Promise(resolve => {\r\n            setTimeout(function () {\r\n                console.log(Interceptor.interceptorsOf(\"test.TestCommand\"), \"====\");\r\n                Interceptor.unregister(\"test.TestCommand\", TestInterceptor);\r\n                // InterceptorManager.unregister(\"test.TestCommand\", TestInterceptor2);\r\n                console.log(Interceptor.interceptorsOf(\"test.TestCommand\"), \"====22\");\r\n                resolve(true);\r\n            }, 3000);\r\n        });\r\n    }\r\n}\r\n"]}