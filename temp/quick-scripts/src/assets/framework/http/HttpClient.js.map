{"version":3,"sources":["assets/framework/http/HttpClient.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\n\r\nimport {HttpOption} from \"./HttpOption\";\r\nimport HttpProtocol from \"./HttpProtocol\";\r\nimport {NetworkConfig} from \"../../script/app/config/NetworkConfig\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nlet cookieMap = new Map<string, any>();\r\n\r\n\r\n/** http默认配置 */\r\nlet httpOption = new HttpOption();\r\nhttpOption.host = NetworkConfig.host;\r\nhttpOption.port = 443;\r\n// httpOption.timeout = 3*6000;\r\nhttpOption.timeout = 1;\r\nhttpOption.cookieKey = \"vertx-cookie\";\r\n// 不支持FormData的浏览器的处理\r\nif(typeof FormData == \"undefined\") {\r\n    httpOption.headers.set(\"content-type\", \"application/x-www-form-urlencoded\");\r\n}\r\n\r\n/**\r\n * 错误处理:\r\n * error.status 0表示网络异常，1表示网络超时  >=200表示http请求状态码\r\n * */\r\nexport class HttpClient{\r\n\r\n    static defaultHttpOption:HttpOption = httpOption;\r\n\r\n    static deleteCookie(cookieKey:string){\r\n        cookieMap.delete(cookieKey);\r\n    }\r\n\r\n    static async get(protocol:HttpProtocol, httpOption?:HttpOption){\r\n        return this.send(\"GET\", protocol, httpOption);\r\n    }\r\n\r\n    static async post(protocol:HttpProtocol, httpOption?:HttpOption){\r\n        return this.send(\"POST\", protocol, httpOption);\r\n    }\r\n\r\n\r\n    static async send(method:string, protocol:HttpProtocol, httpOption?:HttpOption){\r\n        return new Promise(async(resolve, reject) => {\r\n            let option = httpOption || HttpClient.defaultHttpOption;\r\n            let xmlrequest = new XMLHttpRequest();\r\n            xmlrequest.timeout = option.timeout;\r\n            xmlrequest.ontimeout = function (e) {\r\n                console.log(e, \"ontimeout...\");\r\n                reject({\r\n                    message:\"网络超时\",\r\n                    status:1,\r\n                    protocol:protocol\r\n                });\r\n            };\r\n\r\n            xmlrequest.onerror = function(err){\r\n                console.log(err, \"onerror...\");\r\n                if (typeof wx != \"undefined\" && (<string>err).indexOf('timeout') !== -1) {\r\n                    reject({\r\n                        message:\"网络超时\",\r\n                        status:1,\r\n                        protocol:protocol\r\n                    });\r\n                }else {\r\n                    reject({\r\n                        message:\"网络错误\",\r\n                        status:1,\r\n                        protocol:protocol\r\n                    });\r\n                }\r\n            };\r\n\r\n            xmlrequest.onloadend = function (e) {\r\n                if (xmlrequest.readyState == 4){\r\n                    if (option.cookieKey && !cookieMap.get(option.cookieKey)){\r\n                        cookieMap.set(option.cookieKey, xmlrequest.getResponseHeader(option.cookieKey))\r\n                    }\r\n                    if (xmlrequest.status === 200) {\r\n                        try {\r\n                            protocol.decode(xmlrequest.responseText);\r\n                            resolve(protocol.getResponseData());\r\n                        }catch (e) {\r\n                            reject({\r\n                                message:\"服务器状态出错==>\"+protocol.getResponseMessage(),\r\n                                status:200,\r\n                                protocol:protocol\r\n                            });\r\n                        }\r\n                    }else {\r\n                        if (xmlrequest.status == 0 && e.timeStamp && e.timeStamp > xmlrequest.timeout){\r\n                            /** 超时在超时回调里处理 */\r\n                            return;\r\n                        }\r\n                        let msg;\r\n                        if (xmlrequest.status === 0){\r\n                            msg = \"网络异常\";\r\n                        } else {\r\n                            msg = \"服务器异常\";\r\n                        }\r\n                        reject({\r\n                            message:msg,\r\n                            status:xmlrequest.status,\r\n                            protocol:protocol\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n\r\n            let url = option.host;\r\n            if (option.port != 80 && option.port != 443){\r\n                url += `:${option.port}`;\r\n            }\r\n            url += protocol.uri;\r\n            xmlrequest.open(method,url);\r\n\r\n            if (option.cookieKey){\r\n                let val = cookieMap.get(option.cookieKey);\r\n                if (val != null){\r\n                    xmlrequest.setRequestHeader(option.cookieKey, val);\r\n                }\r\n            }\r\n\r\n            option.headers.forEach((value, key) => xmlrequest.setRequestHeader(key, value));\r\n            let res = protocol.encode();\r\n            xmlrequest.send(res);\r\n        });\r\n    }\r\n}\r\n\r\n\r\n"]}