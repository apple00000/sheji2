{"version":3,"sources":["assets/framework/audio/Music.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\n\r\nimport {LocalStorage} from \"../persistence/LocalStorage\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst musicCloseKey = \"musicOpen\";\r\nconst sfxCloseKey = \"sfxOpen\";\r\n\r\nexport class Music{\r\n\r\n    /** 读取本地持久化－－初始化 */\r\n    static init(){\r\n        Music.setMusicOpen(!LocalStorage.getBoolean(musicCloseKey));\r\n        Music.sfxOpen = !LocalStorage.getBoolean(sfxCloseKey);\r\n        // cc.audioEngine.setMusicVolume(0.1);\r\n        // cc.audioEngine.setEffectsVolume(0.1);\r\n    }\r\n\r\n    /** 本地持久化 */\r\n    static persistence(){\r\n        LocalStorage.setBoolean(musicCloseKey, !this._musicOpen);\r\n        LocalStorage.setBoolean(sfxCloseKey, !this.sfxOpen);\r\n    }\r\n\r\n    /** 设置背景音乐音量 */\r\n    private static _bgmVolume:number = 0.7;\r\n\r\n    static setBgmVolume(val:number) {\r\n        this._bgmVolume = val;\r\n        this.updateVolue();\r\n    }\r\n\r\n    static getBgmVolume() {\r\n        return this._bgmVolume;\r\n    }\r\n\r\n    private static updateVolue() {\r\n        if (this.bgmAudioID > 0){\r\n            cc.audioEngine.setVolume(this.bgmAudioID, this._bgmVolume);\r\n        }\r\n    }\r\n\r\n    /** 设置音效音量 */\r\n    static sfxVolume:number = 1;\r\n\r\n    /** 背景音乐开关 */\r\n    private static _musicOpen = true;\r\n    static setMusicOpen(val:boolean){\r\n        this._musicOpen = val;\r\n        if (val){\r\n            this.playBGM();\r\n            this.updateVolue();\r\n        } else {\r\n            this.stopBGM();\r\n        }\r\n    }\r\n    static getMusicOpen() {\r\n        return this._musicOpen;\r\n    }\r\n\r\n    /** 音效开关 */\r\n    static sfxOpen:boolean = true;\r\n\r\n    /** 播放背景音乐 */\r\n    private static _bgmPath = null;\r\n    static async setBgm(val:string) {\r\n        this._bgmPath = val;\r\n        this.playBGM();\r\n    }\r\n    private static bgmAudioID:number = -1;\r\n\r\n\r\n    static async playBGM(){\r\n        // console.log(\"playBGM\");\r\n        if(this._musicOpen == true && this._bgmPath){\r\n            let audioClip = await cc.loader.loadResAwait(this._bgmPath, cc.AudioClip);\r\n            if(this.bgmAudioID >= 0){\r\n                cc.audioEngine.stop(this.bgmAudioID);\r\n            }\r\n            this.bgmAudioID = cc.audioEngine.play(audioClip,true,this._bgmVolume);\r\n        }\r\n    }\r\n\r\n    static stopBGM(){\r\n        if(this.bgmAudioID >= 0){\r\n            cc.audioEngine.stop(this.bgmAudioID);\r\n        }\r\n    }\r\n\r\n    /** 播放音效 */\r\n    static async playSFX(name:string|cc.AudioClip, sfxVolume?:number){\r\n        // console.log(\"playSFX===>\", name);\r\n        if(this.sfxOpen == true){\r\n            let audioClip = null;\r\n            if (typeof name == \"string\"){\r\n                audioClip = await cc.loader.loadResAwait(name, cc.AudioClip);\r\n            }else {\r\n                audioClip = name;\r\n            }\r\n            return cc.audioEngine.play(audioClip,false,sfxVolume || this.sfxVolume);\r\n        }\r\n    }\r\n\r\n\r\n    static pauseAll(){\r\n        cc.audioEngine.pauseAll();\r\n    }\r\n\r\n    static resumeAll(){\r\n        cc.audioEngine.resumeAll();\r\n    }\r\n\r\n    static stopAll(){\r\n        cc.audioEngine.stopAll();\r\n    }\r\n\r\n\r\n}"]}