{"version":3,"sources":["assets/framework/component/DragonBoneMediator.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n\r\n\r\n\r\nconst {ccclass, property, menu, requireComponent} = cc._decorator;\r\n\r\nenum DragonBonesEventType{\r\n    START,\r\n    LOOP_COMPLETE,\r\n    COMPLETE,\r\n    FADE_IN,\r\n    FADE_IN_COMPLETE,\r\n    FADE_OUT,\r\n    FADE_OUT_COMPLETE,\r\n    FRAME_EVENT,\r\n    SOUND_EVENT,\r\n}\r\n\r\n\r\nlet map = new Map<DragonBonesEventType, string>();\r\nmap.set(DragonBonesEventType.START, dragonBones.EventObject.START);\r\nmap.set(DragonBonesEventType.LOOP_COMPLETE, dragonBones.EventObject.LOOP_COMPLETE);\r\nmap.set(DragonBonesEventType.COMPLETE, dragonBones.EventObject.COMPLETE);\r\nmap.set(DragonBonesEventType.FADE_IN, dragonBones.EventObject.FADE_IN);\r\nmap.set(DragonBonesEventType.FADE_IN_COMPLETE, dragonBones.EventObject.FADE_IN_COMPLETE);\r\nmap.set(DragonBonesEventType.FADE_OUT, dragonBones.EventObject.FADE_OUT);\r\nmap.set(DragonBonesEventType.FADE_OUT_COMPLETE, dragonBones.EventObject.FADE_OUT_COMPLETE);\r\nmap.set(DragonBonesEventType.FRAME_EVENT, dragonBones.EventObject.FRAME_EVENT);\r\nmap.set(DragonBonesEventType.SOUND_EVENT, dragonBones.EventObject.SOUND_EVENT);\r\n\r\n@ccclass\r\n@menu(\"自定义/DragonBoneMediator\")\r\n@requireComponent(dragonBones.ArmatureDisplay)\r\nexport default class DragonBoneMediator extends cc.Component {\r\n\r\n    private armatureDisplay:dragonBones.ArmatureDisplay = null;\r\n\r\n    animationState:dragonBones.AnimationState = null;\r\n\r\n    @property\r\n    armatureName:string = \"Armature\";\r\n\r\n    @property({type:cc.Enum(DragonBonesEventType)})\r\n    eventType:DragonBonesEventType = DragonBonesEventType.COMPLETE;\r\n\r\n    @property({type:cc.Component.EventHandler, displayName:\"触发事件\"})\r\n    eventHandlers:[cc.Component.EventHandler] = [];\r\n\r\n    onLoad(){\r\n        this.armatureDisplay = this.getComponent(dragonBones.ArmatureDisplay);\r\n    }\r\n\r\n    private _playAnim(name:string, playTimes=0, timeScale=1){\r\n        this.armatureDisplay.timeScale = timeScale;\r\n        this.armatureDisplay.armatureName = this.armatureName;\r\n        this.animationState = this.armatureDisplay.playAnimation(name, playTimes);\r\n        console.log(`playAnim===>name=${this.animationState.name} playTimes=${playTimes} timeScale=${timeScale}`);\r\n    }\r\n\r\n    playAnim(name:string, timeScale?){\r\n        this._playAnim(name, 0, timeScale);\r\n    }\r\n\r\n    playAnimOnce(name:string, timeScale?){\r\n        this._playAnim(name, 1, timeScale);\r\n    }\r\n\r\n    isAnim(name:string){\r\n        if (this.animationState == null) return false;\r\n        return this.animationState.name === name;\r\n    }\r\n\r\n    /** 更换slot.display */\r\n    replaceSlotDisplay(slotName:string, spriteFrame:cc.SpriteFrame | number){\r\n        // this.armatureDisplay.armature().getSlot(slotName).display = new cc.Scale9Sprite(spriteFrame);\r\n        // this.armatureDisplay.armature().getSlot(slotName).display = spriteFrame;\r\n        if (typeof spriteFrame == \"number\"){\r\n            this.armatureDisplay.armature().getSlot(slotName).displayIndex = spriteFrame;\r\n        }\r\n    }\r\n\r\n    /**获取骨骼bone的坐标*/\r\n    getBoneWorldPosition(boneName:string):cc.Vec2{\r\n        let bone = this.armatureDisplay.armature().getBone(boneName);\r\n        return this.node.convertToWorldSpaceAR(cc.v2(bone.global.x, -bone.global.y));\r\n    }\r\n\r\n    initDragonBone(dragonAsset:dragonBones.DragonBonesAsset, dragonAtlasAsset:dragonBones.DragonBonesAtlasAsset, armatureName?:string){\r\n        if (!dragonAsset || !dragonAtlasAsset) {\r\n            throw Error(`dragonAsset=${dragonAsset} dragonAtlasAsset=${dragonAtlasAsset}`);\r\n        }\r\n        this.node.removeComponent(dragonBones.ArmatureDisplay);\r\n        let armatureDisplay = this.node.addComponent(dragonBones.ArmatureDisplay);\r\n        armatureDisplay.dragonAsset = dragonAsset;\r\n        armatureDisplay.dragonAtlasAsset = dragonAtlasAsset;\r\n        armatureDisplay.armatureName = armatureName || this.armatureName;\r\n        this.animationState = null;\r\n        this.armatureDisplay = armatureDisplay;\r\n    }\r\n\r\n\r\n    async handleEvent(event){\r\n        cc.Component.EventHandler.emitEvents(this.eventHandlers, event);\r\n    }\r\n\r\n    onLoad () {\r\n        this.armatureDisplay.addEventListener(map.get(this.eventType), this.handleEvent, this);\r\n    }\r\n\r\n    onDestroy(){\r\n        this.armatureDisplay.removeEventListener(map.get(this.eventType), this.handleEvent, this);\r\n    }\r\n\r\n}\r\n"]}