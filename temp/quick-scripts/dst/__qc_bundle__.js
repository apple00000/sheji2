
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/framework/actions/Actions');
require('./assets/framework/actions/CCCircleAction');
require('./assets/framework/actions/EllipseBy');
require('./assets/framework/audio/Music');
require('./assets/framework/audio/SwitchAudioCommand');
require('./assets/framework/component/CDTimer');
require('./assets/framework/component/CanvasMediator');
require('./assets/framework/component/DragonBoneMediator');
require('./assets/framework/component/LifeCycle');
require('./assets/framework/component/NodeEvent');
require('./assets/framework/component/PauseAllRunningActions');
require('./assets/framework/component/RigidBodyCollisionEvent');
require('./assets/framework/component/SwingEffect');
require('./assets/framework/component/UIScale');
require('./assets/framework/component/View');
require('./assets/framework/component/ZIndex');
require('./assets/framework/component/ZoomEffect');
require('./assets/framework/config/ExcelConfig');
require('./assets/framework/converter/IConverter');
require('./assets/framework/converter/JsonConverter');
require('./assets/framework/dialog/DialogMediator');
require('./assets/framework/dialog/DialogVO');
require('./assets/framework/dialog/ShowDialogCommand');
require('./assets/framework/extend/Extend');
require('./assets/framework/extend/Shake');
require('./assets/framework/extend/SpacePartition');
require('./assets/framework/extend/Toast');
require('./assets/framework/extend/bigNumber');
require('./assets/framework/extend/ccIntersection');
require('./assets/framework/extend/cccollider');
require('./assets/framework/extend/ccloaderAwait');
require('./assets/framework/extend/ccnodeAwait');
require('./assets/framework/facade/CloseViewCommand');
require('./assets/framework/facade/Facade');
require('./assets/framework/facade/ICommand');
require('./assets/framework/facade/LoadSceneCommand');
require('./assets/framework/facade/OpenViewCommand');
require('./assets/framework/http/HttpClient');
require('./assets/framework/http/HttpOption');
require('./assets/framework/http/HttpProtocol');
require('./assets/framework/interceptor/CommandInterceptor');
require('./assets/framework/interceptor/Interceptor');
require('./assets/framework/interceptor/PostCommandInterceptor');
require('./assets/framework/interceptor/PreCommandInterceptor');
require('./assets/framework/interceptor/TestInterceptor');
require('./assets/framework/interceptor/TestInterceptor2');
require('./assets/framework/persistence/LocalStorage');
require('./assets/framework/tableview/AbstractTableItem');
require('./assets/framework/tableview/TableViewMediator');
require('./assets/framework/type/KVData');
require('./assets/migration/use_v2.1-2.2.1_cc.Toggle_event');
require('./assets/resources/prefab/mainnode novis/maincall');
require('./assets/script/app/StartupCommand');
require('./assets/script/app/config/AppConfig');
require('./assets/script/app/config/ExcelTableNames');
require('./assets/script/app/config/GroupConfig');
require('./assets/script/app/config/InviteConfig');
require('./assets/script/app/config/LocalStorageKeys');
require('./assets/script/app/config/MusicPaths');
require('./assets/script/app/config/NetworkConfig');
require('./assets/script/app/config/ResConfig');
require('./assets/script/app/entities/bullet/Bullet');
require('./assets/script/app/entities/bullet/BulletHuoJianTong');
require('./assets/script/app/entities/bullet/BulletHuoYan');
require('./assets/script/app/entities/bullet/BulletJiGuang');
require('./assets/script/app/entities/bullet/BulletJuJiDan');
require('./assets/script/app/entities/bullet/BulletLiZiPao');
require('./assets/script/app/entities/bullet/BulletOfDiLei');
require('./assets/script/app/entities/bullet/BulletOfEnemy');
require('./assets/script/app/entities/bullet/BulletOfFangHuDun');
require('./assets/script/app/entities/bullet/BulletOfJianGuangSi');
require('./assets/script/app/entities/bullet/BulletOfLighting');
require('./assets/script/app/entities/bullet/BulletOfShouLei');
require('./assets/script/app/entities/bullet/BulletOfSpider');
require('./assets/script/app/entities/bullet/BulletOfXuanFengHuoPao');
require('./assets/script/app/entities/bullet/BulletShanDianQiu');
require('./assets/script/app/entities/bulletEmitter/BulletEmitter');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterHuoJianTong');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterHuoYan');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterJiGuang');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterJiaTeLin');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterJuJiQiang');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterLiZiPao');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterPenZi');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterSanDanQiang');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterShanDianQiu');
require('./assets/script/app/entities/bulletEmitter/BulletEmitterShouQiang');
require('./assets/script/app/entities/bulletStrike/BulletStrike');
require('./assets/script/app/entities/bulletStrike/BulletStrikeLightning');
require('./assets/script/app/entities/bulletStrike/BulletStrikeScale');
require('./assets/script/app/entities/enemy/BossEnemy');
require('./assets/script/app/entities/enemy/EmitBulletEnemy');
require('./assets/script/app/entities/enemy/Enemy');
require('./assets/script/app/entities/enemy/EnemyAABB');
require('./assets/script/app/entities/enemy/SpiderEnemy');
require('./assets/script/app/entities/explosive/Explosive');
require('./assets/script/app/entities/explosive/ExplosiveHuoJianTong');
require('./assets/script/app/entities/prop/Guns');
require('./assets/script/app/entities/prop/Lightning');
require('./assets/script/app/entities/prop/PropBase');
require('./assets/script/app/entities/prop/PropStateController');
require('./assets/script/app/entities/role/ImpenetrableDefence');
require('./assets/script/app/entities/role/Role');
require('./assets/script/app/entities/role/RoleAABB');
require('./assets/script/app/entities/role/RoleSupply');
require('./assets/script/app/game/FirstAidController');
require('./assets/script/app/game/GameBulletsController');
require('./assets/script/app/game/GameCollisionController');
require('./assets/script/app/game/GameController');
require('./assets/script/app/game/GameEnemysController');
require('./assets/script/app/game/GameExplosivesController');
require('./assets/script/app/game/GameLabelsController');
require('./assets/script/app/game/GameOver');
require('./assets/script/app/game/GameOverLucky');
require('./assets/script/app/game/GameProxy');
require('./assets/script/app/game/GameRelive');
require('./assets/script/app/game/GameRoleController');
require('./assets/script/app/game/GameSupply');
require('./assets/script/app/game/GameSupplyItem');
require('./assets/script/app/game/GameUIController');
require('./assets/script/app/game/PreloadGameSceneCommand');
require('./assets/script/app/home/EarningsLayerController');
require('./assets/script/app/home/ExchangeController');
require('./assets/script/app/home/HomeController');
require('./assets/script/app/home/InviteItem');
require('./assets/script/app/home/InvitesController');
require('./assets/script/app/home/JackpotController');
require('./assets/script/app/home/LoadingCommand');
require('./assets/script/app/home/PropsController');
require('./assets/script/app/home/PropsItemController');
require('./assets/script/app/home/RecommendController');
require('./assets/script/app/home/RecommendPropsController');
require('./assets/script/app/home/RoleLayerController');
require('./assets/script/app/home/SettingsController');
require('./assets/script/app/home/ShadowLayerController');
require('./assets/script/app/home/TakeJackpotController');
require('./assets/script/app/home/TopController');
require('./assets/script/app/home/UpEffectController');
require('./assets/script/app/home/WeaponLayerController');
require('./assets/script/app/info/Armory');
require('./assets/script/app/info/Formula');
require('./assets/script/app/info/Newbies');
require('./assets/script/app/info/PropInfo');
require('./assets/script/app/info/Task');
require('./assets/script/app/info/World');
require('./assets/script/app/interceptor/CloseViewInterceptor');
require('./assets/script/app/interceptor/LoadSceneIntercetor');
require('./assets/script/app/interceptor/OpenViewInterceptor');
require('./assets/script/app/music/ClickSoundCommand');
require('./assets/script/app/network/Network');
require('./assets/script/app/tips/ShowTipsCommand');
require('./assets/script/app/welcome/Welcome');
require('./assets/script/quad-tree/AABBRegion');
require('./assets/script/quad-tree/LooseQuadTree');
require('./assets/script/quad-tree/LooseQuadTreeCell');
require('./assets/script/test/CalSpace');
require('./assets/script/test/TestAngle');
require('./assets/script/test/TestRotation');
require('./assets/script/test/TestSpineEvent');
require('./assets/script/test/TestWait');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/migration/use_v2.1-2.2.1_cc.Toggle_event.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'effb4WsLKJE1YEm+2UdWEdK', 'use_v2.1-2.2.1_cc.Toggle_event');
// migration/use_v2.1-2.2.1_cc.Toggle_event.js

"use strict";

/*
 * This script is automatically generated by Cocos Creator and is only used for projects compatible with the v2.1.0 ～ 2.2.1 version.
 * You do not need to manually add this script in any other project.
 * If you don't use cc.Toggle in your project, you can delete this script directly.
 * If your project is hosted in VCS such as git, submit this script together.
 *
 * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 ~ 2.2.1 版本的工程，
 * 你无需在任何其它项目中手动添加此脚本。
 * 如果你的项目中没用到 Toggle，可直接删除该脚本。
 * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。
 */
if (cc.Toggle) {
  // Whether to trigger 'toggle' and 'checkEvents' events when modifying 'toggle.isChecked' in the code
  // 在代码中修改 'toggle.isChecked' 时是否触发 'toggle' 与 'checkEvents' 事件
  cc.Toggle._triggerEventInScript_isChecked = true;
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9taWdyYXRpb24vdXNlX3YyLjEtMi4yLjFfY2MuVG9nZ2xlX2V2ZW50LmpzIl0sIm5hbWVzIjpbImNjIiwiVG9nZ2xlIiwiX3RyaWdnZXJFdmVudEluU2NyaXB0X2lzQ2hlY2tlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBSUEsRUFBRSxDQUFDQyxNQUFQLEVBQWU7RUFDWDtFQUNBO0VBQ0FELEVBQUUsQ0FBQ0MsTUFBSCxDQUFVQywrQkFBVixHQUE0QyxJQUE1QztBQUNIIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBUaGlzIHNjcmlwdCBpcyBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSBDb2NvcyBDcmVhdG9yIGFuZCBpcyBvbmx5IHVzZWQgZm9yIHByb2plY3RzIGNvbXBhdGlibGUgd2l0aCB0aGUgdjIuMS4wIO+9niAyLjIuMSB2ZXJzaW9uLlxyXG4gKiBZb3UgZG8gbm90IG5lZWQgdG8gbWFudWFsbHkgYWRkIHRoaXMgc2NyaXB0IGluIGFueSBvdGhlciBwcm9qZWN0LlxyXG4gKiBJZiB5b3UgZG9uJ3QgdXNlIGNjLlRvZ2dsZSBpbiB5b3VyIHByb2plY3QsIHlvdSBjYW4gZGVsZXRlIHRoaXMgc2NyaXB0IGRpcmVjdGx5LlxyXG4gKiBJZiB5b3VyIHByb2plY3QgaXMgaG9zdGVkIGluIFZDUyBzdWNoIGFzIGdpdCwgc3VibWl0IHRoaXMgc2NyaXB0IHRvZ2V0aGVyLlxyXG4gKlxyXG4gKiDmraTohJrmnKznlLEgQ29jb3MgQ3JlYXRvciDoh6rliqjnlJ/miJDvvIzku4XnlKjkuo7lhbzlrrkgdjIuMS4wIH4gMi4yLjEg54mI5pys55qE5bel56iL77yMXHJcbiAqIOS9oOaXoOmcgOWcqOS7u+S9leWFtuWug+mhueebruS4reaJi+WKqOa3u+WKoOatpOiEmuacrOOAglxyXG4gKiDlpoLmnpzkvaDnmoTpobnnm67kuK3msqHnlKjliLAgVG9nZ2xl77yM5Y+v55u05o6l5Yig6Zmk6K+l6ISa5pys44CCXHJcbiAqIOWmguaenOS9oOeahOmhueebruacieaJmOeuoeS6jiBnaXQg562J54mI5pys5bqT77yM6K+35bCG5q2k6ISa5pys5LiA5bm25LiK5Lyg44CCXHJcbiAqL1xyXG5cclxuaWYgKGNjLlRvZ2dsZSkge1xyXG4gICAgLy8gV2hldGhlciB0byB0cmlnZ2VyICd0b2dnbGUnIGFuZCAnY2hlY2tFdmVudHMnIGV2ZW50cyB3aGVuIG1vZGlmeWluZyAndG9nZ2xlLmlzQ2hlY2tlZCcgaW4gdGhlIGNvZGVcclxuICAgIC8vIOWcqOS7o+eggeS4reS/ruaUuSAndG9nZ2xlLmlzQ2hlY2tlZCcg5pe25piv5ZCm6Kem5Y+RICd0b2dnbGUnIOS4jiAnY2hlY2tFdmVudHMnIOS6i+S7tlxyXG4gICAgY2MuVG9nZ2xlLl90cmlnZ2VyRXZlbnRJblNjcmlwdF9pc0NoZWNrZWQgPSB0cnVlO1xyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/quad-tree/LooseQuadTree.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5b330tmq8ZCMJpbBrEz7uMo', 'LooseQuadTree');
// script/quad-tree/LooseQuadTree.ts

Object.defineProperty(exports, "__esModule", { value: true });
var LooseQuadTreeCell_1 = require("./LooseQuadTreeCell");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/** 松散四叉树的主要思想：
 *  可以考虑到在相交测试中，扩大包围盒总是保守的（这里的保守是指近似化不会做成错误结果）。如果把四叉／八叉树的正方／立方空间当作包围盒，那么扩大这些包围盒以容纳刚好在边界上相交的物体也是保守的
 *  1.将cell的区域放大一倍，保证分层后，每个物体必定被某个cell包含
 *  2.松散后，碰撞判断也是根节点往往下，判断testRect与cell的相交，如果相交则判断与其子节点相交的判断，否则就过滤掉其cell。
 *  3.放大测试区域不会有错误的结果，同时也解决了在特殊位置上的物体被放到父节点的问题。
 * **/
/** 以节点中心为正中心，以节点最大宽高为边长 */
var LooseQuadTree = /** @class */ (function (_super) {
    __extends(LooseQuadTree, _super);
    function LooseQuadTree() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.minSideLength = 10;
        /** 按层划分cell，放到不同的网格中 */
        _this._grids = [];
        _this._graphic = null;
        return _this;
    }
    LooseQuadTree_1 = LooseQuadTree;
    /** 计算总层数，构造每一次的网格Grid，提前构造网络，虽然内存消耗大，但不用运行时动态创建和销毁cell，提高运行效率。 */
    LooseQuadTree.prototype.init = function () {
        /** 构造世界矩形 */
        var maxSide = Math.max(this.node.width, this.node.height);
        /** 计算层数 */
        var maxLevel = Math.ceil(Math.log2(maxSide / this.minSideLength));
        /** 构建所有网格 */
        var minX = -maxSide / 2;
        var maxY = maxSide / 2;
        /** 有maxLevel层 */
        var sideCount = Math.pow(2, maxLevel);
        for (var i = maxLevel - 1; i >= 0; i--) {
            this._grids[i] = [];
            sideCount = sideCount / 2;
            var cellLength = maxSide / sideCount;
            /** 构建每一层的网格 */
            for (var r = 0; r < sideCount; r++) {
                for (var c = 0; c < sideCount; c++) {
                    var rect = cc.rect(minX + cellLength * c, maxY - (r + 1) * cellLength, cellLength, cellLength);
                    var quads = [];
                    /** 构建四元子树 */
                    if (i < maxLevel - 1) {
                        /** 取两行两列 */
                        var nextSideCount = sideCount * 2;
                        for (var j = 0; j < 2; j++) {
                            for (var k = 0; k < 2; k++) {
                                quads.push(this._grids[i + 1][(r * 2 + j) * nextSideCount + c * 2 + k]);
                            }
                        }
                    }
                    var index = r * sideCount + c;
                    this._grids[i][index] = new LooseQuadTreeCell_1.default(i, index, rect, quads);
                }
            }
        }
    };
    LooseQuadTree.prototype.updateCell = function (cell) {
        var _this = this;
        if (cell.objectCount > 0) {
            cell.objects.forEach(function (value) { return _this.updateRegion(value); });
            cell.children.forEach(function (value) {
                if (value.objectCount > 0) {
                    _this.updateCell(value);
                }
            });
        }
    };
    /** 更新所有元素 */
    LooseQuadTree.prototype.updateAll = function () {
        this.updateCell(this._grids[0][0]);
    };
    /** 指定更新某一个元素 */
    LooseQuadTree.prototype.updateRegion = function (region) {
        if (region.level < 0 || region.index < 0) {
            console.error("remove fail==>level=" + region.level + " index=" + region.index);
            return false;
        }
        var rect = region.aabb();
        var root = this._grids[0][0];
        var level = region.level;
        //重新计算index
        var cellLength = this._grids[level][0].bounds.width;
        var sideCount = Math.pow(2, level);
        var col = Math.floor((rect.center.x - root.bounds.xMin) / cellLength);
        var row = Math.floor((root.bounds.yMax - rect.center.y) / cellLength);
        var index = row * sideCount + col;
        // console.log(index, region.index, index === region.index);
        if (index != region.index) {
            this._grids[region.level][region.index].removeObject(region);
            var cell = this._grids[level][index];
            cell.addObject(region);
        }
        return true;
    };
    LooseQuadTree.prototype.insert = function (region) {
        if (region.index >= 0 || region.level >= 0) {
            console.error("已经分配空间level=" + region.level + " index=" + region.index);
            return false;
        }
        var rect = region.aabb();
        var maxSide = Math.max(rect.width, rect.height);
        var root = this._grids[0][0];
        var rootSide = root.bounds.width;
        if (maxSide > rootSide) {
            console.error("region rect too big, can not insert it");
            return null;
        }
        var level = Math.floor(Math.log2(rootSide / maxSide));
        if (level > this._grids.length - 1) {
            level = this._grids.length - 1;
            console.warn('Maybe this item is too small, but we can add it to max level.', rootSide, maxSide, level, this._grids.length, region.node.name);
        }
        var cellLength = this._grids[level][0].bounds.width;
        var sideCount = Math.pow(2, level);
        var col = Math.floor((rect.center.x - root.bounds.xMin) / cellLength);
        var row = Math.floor((root.bounds.yMax - rect.center.y) / cellLength);
        var index = row * sideCount + col;
        // console.log("level="+level+" index="+index);
        var cell = this._grids[level][index];
        cell.addObject(region);
        // this._graphic.rect(rect.xMin, rect.yMin, rect.width, rect.height);
        // this._graphic.stroke();
        return true;
    };
    LooseQuadTree.prototype.remove = function (region) {
        if (region.level < 0 || region.index < 0) {
            console.error("remove fail==>level=" + region.level + " index=" + region.index);
            return false;
        }
        this._grids[region.level][region.index].removeObject(region);
        return true;
    };
    LooseQuadTree.prototype.retrieve = function (rect, out) {
        LooseQuadTree_1.retrieveCount = 0;
        this._grids[0][0].retrieve(rect, out);
        // console.log("LooseQuadTree==>", LooseQuadTree.retrieveCount, out);
    };
    LooseQuadTree.prototype.test = function (rect) {
        var graphic = this._graphic;
        graphic.clear();
        var arr = [];
        this.retrieve(rect, arr);
        arr.forEach(function (value) {
            var aabb = value.aabb();
            graphic.rect(aabb.xMin, aabb.yMin, aabb.width, aabb.height);
        });
        graphic.stroke();
    };
    LooseQuadTree.prototype.onLoad = function () {
        this.init();
        // console.log(this._grids);
        var node = new cc.Node();
        this.node.addChild(node);
        var graphic = node.addComponent(cc.Graphics);
        graphic.strokeColor = cc.Color.RED;
        graphic.lineWidth = 20;
        // this._grids.forEach(value => {
        //     value.forEach(value1 => {
        //         graphic.rect(value1.looseBounds.xMin, value1.looseBounds.yMin, value1.looseBounds.width, value1.looseBounds.height);
        //     });
        // });
        // graphic.stroke();
        // graphic.fill();
        node.zIndex = 100;
        this._graphic = graphic;
    };
    var LooseQuadTree_1;
    LooseQuadTree.retrieveCount = 0;
    __decorate([
        property({ tooltip: "最小物体边长" })
    ], LooseQuadTree.prototype, "minSideLength", void 0);
    LooseQuadTree = LooseQuadTree_1 = __decorate([
        ccclass
    ], LooseQuadTree);
    return LooseQuadTree;
}(cc.Component));
exports.default = LooseQuadTree;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/test/TestAngle.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '08336c0HZ1Nj6P1bDyiai7U', 'TestAngle');
// script/test/TestAngle.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TestAngle = /** @class */ (function (_super) {
    __extends(TestAngle, _super);
    function TestAngle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // LIFE-CYCLE CALLBACKS:
    // onLoad () {}
    TestAngle.prototype.start = function () {
        var _this = this;
        this.node.on(cc.Node.EventType.ROTATION_CHANGED, function () {
            var radians = cc.misc.degreesToRadians(-_this.node.rotation);
            var dir = cc.v2(0, 1).rotate(radians);
            var angle = cc.v2(0, 1).angle(dir);
            console.log("angle=" + angle + " rotation=" + _this.node.rotation + " radians=" + radians + " dir.x=" + dir.x + " dir.y=" + dir.y);
        });
        this.node.runAction(cc.rotateBy(3, 360));
    };
    TestAngle = __decorate([
        ccclass
    ], TestAngle);
    return TestAngle;
}(cc.Component));
exports.default = TestAngle;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvdGVzdC9UZXN0QW5nbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXVDLDZCQUFZO0lBQW5EOztJQWlCQSxDQUFDO0lBZkcsd0JBQXdCO0lBRXhCLGVBQWU7SUFFZix5QkFBSyxHQUFMO1FBQUEsaUJBUUM7UUFQRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRTtZQUM3QyxJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsS0FBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUM1RCxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdEMsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ25DLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBUyxLQUFLLGtCQUFhLEtBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxpQkFBWSxPQUFPLGVBQVUsR0FBRyxDQUFDLENBQUMsZUFBVSxHQUFHLENBQUMsQ0FBRyxDQUFDLENBQUM7UUFDbEgsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFkZ0IsU0FBUztRQUQ3QixPQUFPO09BQ2EsU0FBUyxDQWlCN0I7SUFBRCxnQkFBQztDQWpCRCxBQWlCQyxDQWpCc0MsRUFBRSxDQUFDLFNBQVMsR0FpQmxEO2tCQWpCb0IsU0FBUyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRlc3RBbmdsZSBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcblxyXG4gICAgLy8gb25Mb2FkICgpIHt9XHJcblxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgICAgIHRoaXMubm9kZS5vbihjYy5Ob2RlLkV2ZW50VHlwZS5ST1RBVElPTl9DSEFOR0VELCAoKT0+e1xyXG4gICAgICAgICAgICBsZXQgcmFkaWFucyA9IGNjLm1pc2MuZGVncmVlc1RvUmFkaWFucygtdGhpcy5ub2RlLnJvdGF0aW9uKTtcclxuICAgICAgICAgICAgbGV0IGRpciA9IGNjLnYyKDAsIDEpLnJvdGF0ZShyYWRpYW5zKTtcclxuICAgICAgICAgICAgbGV0IGFuZ2xlID0gY2MudjIoMCwgMSkuYW5nbGUoZGlyKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coYGFuZ2xlPSR7YW5nbGV9IHJvdGF0aW9uPSR7dGhpcy5ub2RlLnJvdGF0aW9ufSByYWRpYW5zPSR7cmFkaWFuc30gZGlyLng9JHtkaXIueH0gZGlyLnk9JHtkaXIueX1gKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLnJvdGF0ZUJ5KDMsIDM2MCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/quad-tree/AABBRegion.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a6025pq4zRBAaeDsbWjyQrx', 'AABBRegion');
// script/quad-tree/AABBRegion.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ccclass = cc._decorator.ccclass;
var AABBRegion = /** @class */ (function (_super) {
    __extends(AABBRegion, _super);
    function AABBRegion() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 在第几层中 */
        _this.level = -1;
        /** 第几个cell中 */
        _this.index = -1;
        return _this;
    }
    AABBRegion.prototype.aabb = function () {
        return this.node.getBoundingBox();
    };
    AABBRegion = __decorate([
        ccclass
    ], AABBRegion);
    return AABBRegion;
}(cc.Component));
exports.default = AABBRegion;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvcXVhZC10cmVlL0FBQkJSZWdpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUVPLElBQUEsT0FBTyxHQUFJLEVBQUUsQ0FBQyxVQUFVLFFBQWpCLENBQWtCO0FBR2hDO0lBQXdDLDhCQUFZO0lBQXBEO1FBQUEscUVBU0M7UUFSRyxZQUFZO1FBQ1osV0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ1gsZUFBZTtRQUNmLFdBQUssR0FBRyxDQUFDLENBQUMsQ0FBQzs7SUFLZixDQUFDO0lBSEcseUJBQUksR0FBSjtRQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBUmdCLFVBQVU7UUFEOUIsT0FBTztPQUNhLFVBQVUsQ0FTOUI7SUFBRCxpQkFBQztDQVRELEFBU0MsQ0FUdUMsRUFBRSxDQUFDLFNBQVMsR0FTbkQ7a0JBVG9CLFVBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmNvbnN0IHtjY2NsYXNzfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBQUJCUmVnaW9uIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuICAgIC8qKiDlnKjnrKzlh6DlsYLkuK0gKi9cclxuICAgIGxldmVsID0gLTE7XHJcbiAgICAvKiog56ys5Yeg5LiqY2VsbOS4rSAqL1xyXG4gICAgaW5kZXggPSAtMTtcclxuXHJcbiAgICBhYWJiKCk6IGNjLlJlY3R7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubm9kZS5nZXRCb3VuZGluZ0JveCgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/test/CalSpace.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '311cdp+TxpBKIBw3eGfH3XZ', 'CalSpace');
// script/test/CalSpace.ts

Object.defineProperty(exports, "__esModule", { value: true });
var SpacePartition_1 = require("../../framework/extend/SpacePartition");
var Enemy_1 = require("../app/entities/enemy/Enemy");
var LooseQuadTree_1 = require("../quad-tree/LooseQuadTree");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var CalSpace = /** @class */ (function (_super) {
    __extends(CalSpace, _super);
    function CalSpace() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.entityNode = null;
        _this.entityNode2 = null;
        _this.enemyLayer = null;
        _this.graphics = null;
        _this.touchNode = null;
        // LIFE-CYCLE CALLBACKS:
        // onLoad () {}
        _this._rect = cc.rect(0, 0, 600, 800);
        return _this;
        // update (dt) {}
    }
    CalSpace.prototype.onTouchMove = function (event) {
        this.touchNode.position = this.touchNode.position.add(event.getDelta());
        this.getComponent(LooseQuadTree_1.default).test(cc.rect(this.touchNode.x - this.touchNode.width / 2, this.touchNode.y - this.touchNode.height / 2, this.touchNode.width, this.touchNode.height));
    };
    CalSpace.prototype.start = function () {
        var _this = this;
        this.touchNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
        //获取矩形内的敌人
        this._rect.width = this.node.width;
        this._rect.height = this.node.height;
        this._rect.origin = cc.v2(-this._rect.width / 2, -this._rect.height / 2);
        this.graphics.rect(this._rect.x, this._rect.y, this._rect.width, this._rect.height);
        // let list:Array<cc.Rect> = [];
        // this.enemyLayer.children.forEach(value => {
        //     let space = value.getComponent(EnemyAttributes).space;
        //     let rect = cc.rect();
        //     rect.width = rect.height = space.getRadius()*2;
        //     rect.origin = space.getWorldPos().sub(cc.v2(rect.width/2, rect.height/2));
        //     let intersection = new cc.Rect();
        //     this._rect.intersection(intersection, rect);
        //     if (intersection.width > 0 && intersection.height > 0){
        //         list.push(rect);
        //     }
        // });
        // console.log(list, "list");
        // //画list
        // list.forEach(value => this.graphics.rect(value.xMin, value.yMin, value.width, value.height));
        // //开始划分含有子矩形的矩形
        // let arr = this.partitionRect(this._rect, list);
        // console.log(arr, "arr");
        // //画arr
        // arr.forEach(value => this.graphics.rect(value.xMin, value.yMin, value.width, value.height));
        var startTime = new Date().getTime();
        var count = 1;
        var partitions = [this._rect];
        var radius = this.entityNode.getComponent(Enemy_1.default).spaceCircleCollider.radius;
        var arr = SpacePartition_1.default.randomSpaces(partitions, radius * 2, radius * 2, count);
        console.log("生成数量:" + arr.length + " 生成时间:" + (new Date().getTime() - startTime));
        // console.log(partitions, "====>");
        console.log(arr, "===>");
        arr.forEach(function (value) {
            var enmeyNode = cc.instantiate(_this.entityNode);
            enmeyNode.position = value.center;
            _this.enemyLayer.addChild(enmeyNode);
            _this.getComponent(LooseQuadTree_1.default).insert(enmeyNode.getComponent(Enemy_1.default).enemyAABB);
        });
        // partitions = this.randomEntity(partitions);
        // partitions.forEach(value => this.graphics.rect(value.xMin, value.yMin, value.width, value.height));
        this.schedule(function () {
            if (count < 10) {
                var startTime_1 = new Date().getTime();
                var rect = SpacePartition_1.default.randomSpace(partitions, radius * 2, radius * 2);
                if (rect) {
                    var enmeyNode = cc.instantiate(_this.entityNode2);
                    enmeyNode.position = rect.center;
                    _this.enemyLayer.addChild(enmeyNode);
                    _this.getComponent(LooseQuadTree_1.default).insert(enmeyNode.getComponent(Enemy_1.default).enemyAABB);
                    count++;
                    console.log("生成数量:" + count + " 生成时间:" + (new Date().getTime() - startTime_1));
                }
            }
        }, 0.11);
        this.graphics.stroke();
    };
    __decorate([
        property(cc.Node)
    ], CalSpace.prototype, "entityNode", void 0);
    __decorate([
        property(cc.Node)
    ], CalSpace.prototype, "entityNode2", void 0);
    __decorate([
        property(cc.Node)
    ], CalSpace.prototype, "enemyLayer", void 0);
    __decorate([
        property(cc.Graphics)
    ], CalSpace.prototype, "graphics", void 0);
    __decorate([
        property(cc.Node)
    ], CalSpace.prototype, "touchNode", void 0);
    CalSpace = __decorate([
        ccclass
    ], CalSpace);
    return CalSpace;
}(cc.Component));
exports.default = CalSpace;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvdGVzdC9DYWxTcGFjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0Esd0VBQW1FO0FBQ25FLHFEQUFnRDtBQUNoRCw0REFBdUQ7QUFFakQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBc0MsNEJBQVk7SUFBbEQ7UUFBQSxxRUE2RkM7UUExRkcsZ0JBQVUsR0FBVyxJQUFJLENBQUM7UUFHMUIsaUJBQVcsR0FBVyxJQUFJLENBQUM7UUFHM0IsZ0JBQVUsR0FBVyxJQUFJLENBQUM7UUFHMUIsY0FBUSxHQUFlLElBQUksQ0FBQztRQUc1QixlQUFTLEdBQVcsSUFBSSxDQUFDO1FBRXpCLHdCQUF3QjtRQUV4QixlQUFlO1FBRWYsV0FBSyxHQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7O1FBdUV4QyxpQkFBaUI7SUFDckIsQ0FBQztJQXRFRyw4QkFBVyxHQUFYLFVBQVksS0FBSztRQUNiLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUN4RSxJQUFJLENBQUMsWUFBWSxDQUFDLHVCQUFhLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNuTCxDQUFDO0lBRUQsd0JBQUssR0FBTDtRQUFBLGlCQThEQztRQTdERyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN4RSxVQUFVO1FBQ1YsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDbkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDckMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFcEYsZ0NBQWdDO1FBQ2hDLDhDQUE4QztRQUM5Qyw2REFBNkQ7UUFDN0QsNEJBQTRCO1FBQzVCLHNEQUFzRDtRQUN0RCxpRkFBaUY7UUFDakYsd0NBQXdDO1FBQ3hDLG1EQUFtRDtRQUNuRCw4REFBOEQ7UUFDOUQsMkJBQTJCO1FBQzNCLFFBQVE7UUFDUixNQUFNO1FBQ04sNkJBQTZCO1FBQzdCLFVBQVU7UUFDVixnR0FBZ0c7UUFDaEcsaUJBQWlCO1FBQ2pCLGtEQUFrRDtRQUNsRCwyQkFBMkI7UUFDM0IsU0FBUztRQUNULCtGQUErRjtRQUMvRixJQUFJLFNBQVMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3JDLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNkLElBQUksVUFBVSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLGVBQUssQ0FBQyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sQ0FBQztRQUM1RSxJQUFJLEdBQUcsR0FBRyx3QkFBYyxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsTUFBTSxHQUFDLENBQUMsRUFBRSxNQUFNLEdBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzdFLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxHQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUMsUUFBUSxHQUFDLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDO1FBQzVFLG9DQUFvQztRQUNwQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6QixHQUFHLENBQUMsT0FBTyxDQUFDLFVBQUEsS0FBSztZQUNiLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ2hELFNBQVMsQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztZQUNsQyxLQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUVwQyxLQUFJLENBQUMsWUFBWSxDQUFDLHVCQUFhLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxlQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyRixDQUFDLENBQUMsQ0FBQztRQUNILDhDQUE4QztRQUM5QyxzR0FBc0c7UUFDdEcsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNWLElBQUksS0FBSyxHQUFHLEVBQUUsRUFBQztnQkFDWCxJQUFJLFdBQVMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUNyQyxJQUFJLElBQUksR0FBRyx3QkFBYyxDQUFDLFdBQVcsQ0FBQyxVQUFVLEVBQUUsTUFBTSxHQUFDLENBQUMsRUFBRSxNQUFNLEdBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RFLElBQUksSUFBSSxFQUFDO29CQUNMLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO29CQUNqRCxTQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7b0JBQ2pDLEtBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO29CQUVwQyxLQUFJLENBQUMsWUFBWSxDQUFDLHVCQUFhLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxlQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztvQkFDakYsS0FBSyxFQUFFLENBQUM7b0JBQ1IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEdBQUMsS0FBSyxHQUFDLFFBQVEsR0FBQyxDQUFDLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsV0FBUyxDQUFDLENBQUMsQ0FBQztpQkFDMUU7YUFDSjtRQUNMLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUVULElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQXZGRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO2dEQUNRO0lBRzFCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7aURBQ1M7SUFHM0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztnREFDUTtJQUcxQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDOzhDQUNNO0lBRzVCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7K0NBQ087SUFmUixRQUFRO1FBRDVCLE9BQU87T0FDYSxRQUFRLENBNkY1QjtJQUFELGVBQUM7Q0E3RkQsQUE2RkMsQ0E3RnFDLEVBQUUsQ0FBQyxTQUFTLEdBNkZqRDtrQkE3Rm9CLFFBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IFNwYWNlUGFydGl0aW9uIGZyb20gXCIuLi8uLi9mcmFtZXdvcmsvZXh0ZW5kL1NwYWNlUGFydGl0aW9uXCI7XHJcbmltcG9ydCBFbmVteSBmcm9tIFwiLi4vYXBwL2VudGl0aWVzL2VuZW15L0VuZW15XCI7XHJcbmltcG9ydCBMb29zZVF1YWRUcmVlIGZyb20gXCIuLi9xdWFkLXRyZWUvTG9vc2VRdWFkVHJlZVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYWxTcGFjZSBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBlbnRpdHlOb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgZW50aXR5Tm9kZTI6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBlbmVteUxheWVyOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5HcmFwaGljcylcclxuICAgIGdyYXBoaWNzOmNjLkdyYXBoaWNzID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIHRvdWNoTm9kZTpjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICAvLyBvbkxvYWQgKCkge31cclxuXHJcbiAgICBfcmVjdDpjYy5SZWN0ID0gY2MucmVjdCgwLCAwLCA2MDAsIDgwMCk7XHJcblxyXG4gICAgb25Ub3VjaE1vdmUoZXZlbnQpe1xyXG4gICAgICAgIHRoaXMudG91Y2hOb2RlLnBvc2l0aW9uID0gdGhpcy50b3VjaE5vZGUucG9zaXRpb24uYWRkKGV2ZW50LmdldERlbHRhKCkpO1xyXG4gICAgICAgIHRoaXMuZ2V0Q29tcG9uZW50KExvb3NlUXVhZFRyZWUpLnRlc3QoY2MucmVjdCh0aGlzLnRvdWNoTm9kZS54LXRoaXMudG91Y2hOb2RlLndpZHRoLzIsIHRoaXMudG91Y2hOb2RlLnktdGhpcy50b3VjaE5vZGUuaGVpZ2h0LzIsIHRoaXMudG91Y2hOb2RlLndpZHRoLCB0aGlzLnRvdWNoTm9kZS5oZWlnaHQpKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGFydCAoKSB7XHJcbiAgICAgICAgdGhpcy50b3VjaE5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfTU9WRSwgdGhpcy5vblRvdWNoTW92ZSwgdGhpcyk7XHJcbiAgICAgICAgLy/ojrflj5bnn6nlvaLlhoXnmoTmlYzkurpcclxuICAgICAgICB0aGlzLl9yZWN0LndpZHRoID0gdGhpcy5ub2RlLndpZHRoO1xyXG4gICAgICAgIHRoaXMuX3JlY3QuaGVpZ2h0ID0gdGhpcy5ub2RlLmhlaWdodDtcclxuICAgICAgICB0aGlzLl9yZWN0Lm9yaWdpbiA9IGNjLnYyKC10aGlzLl9yZWN0LndpZHRoLzIsIC10aGlzLl9yZWN0LmhlaWdodC8yKTtcclxuICAgICAgICB0aGlzLmdyYXBoaWNzLnJlY3QodGhpcy5fcmVjdC54LCB0aGlzLl9yZWN0LnksIHRoaXMuX3JlY3Qud2lkdGgsIHRoaXMuX3JlY3QuaGVpZ2h0KTtcclxuXHJcbiAgICAgICAgLy8gbGV0IGxpc3Q6QXJyYXk8Y2MuUmVjdD4gPSBbXTtcclxuICAgICAgICAvLyB0aGlzLmVuZW15TGF5ZXIuY2hpbGRyZW4uZm9yRWFjaCh2YWx1ZSA9PiB7XHJcbiAgICAgICAgLy8gICAgIGxldCBzcGFjZSA9IHZhbHVlLmdldENvbXBvbmVudChFbmVteUF0dHJpYnV0ZXMpLnNwYWNlO1xyXG4gICAgICAgIC8vICAgICBsZXQgcmVjdCA9IGNjLnJlY3QoKTtcclxuICAgICAgICAvLyAgICAgcmVjdC53aWR0aCA9IHJlY3QuaGVpZ2h0ID0gc3BhY2UuZ2V0UmFkaXVzKCkqMjtcclxuICAgICAgICAvLyAgICAgcmVjdC5vcmlnaW4gPSBzcGFjZS5nZXRXb3JsZFBvcygpLnN1YihjYy52MihyZWN0LndpZHRoLzIsIHJlY3QuaGVpZ2h0LzIpKTtcclxuICAgICAgICAvLyAgICAgbGV0IGludGVyc2VjdGlvbiA9IG5ldyBjYy5SZWN0KCk7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuX3JlY3QuaW50ZXJzZWN0aW9uKGludGVyc2VjdGlvbiwgcmVjdCk7XHJcbiAgICAgICAgLy8gICAgIGlmIChpbnRlcnNlY3Rpb24ud2lkdGggPiAwICYmIGludGVyc2VjdGlvbi5oZWlnaHQgPiAwKXtcclxuICAgICAgICAvLyAgICAgICAgIGxpc3QucHVzaChyZWN0KTtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vIH0pO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGxpc3QsIFwibGlzdFwiKTtcclxuICAgICAgICAvLyAvL+eUu2xpc3RcclxuICAgICAgICAvLyBsaXN0LmZvckVhY2godmFsdWUgPT4gdGhpcy5ncmFwaGljcy5yZWN0KHZhbHVlLnhNaW4sIHZhbHVlLnlNaW4sIHZhbHVlLndpZHRoLCB2YWx1ZS5oZWlnaHQpKTtcclxuICAgICAgICAvLyAvL+W8gOWni+WIkuWIhuWQq+acieWtkOefqeW9oueahOefqeW9olxyXG4gICAgICAgIC8vIGxldCBhcnIgPSB0aGlzLnBhcnRpdGlvblJlY3QodGhpcy5fcmVjdCwgbGlzdCk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coYXJyLCBcImFyclwiKTtcclxuICAgICAgICAvLyAvL+eUu2FyclxyXG4gICAgICAgIC8vIGFyci5mb3JFYWNoKHZhbHVlID0+IHRoaXMuZ3JhcGhpY3MucmVjdCh2YWx1ZS54TWluLCB2YWx1ZS55TWluLCB2YWx1ZS53aWR0aCwgdmFsdWUuaGVpZ2h0KSk7XHJcbiAgICAgICAgbGV0IHN0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gICAgICAgIGxldCBjb3VudCA9IDE7XHJcbiAgICAgICAgbGV0IHBhcnRpdGlvbnMgPSBbdGhpcy5fcmVjdF07XHJcbiAgICAgICAgbGV0IHJhZGl1cyA9IHRoaXMuZW50aXR5Tm9kZS5nZXRDb21wb25lbnQoRW5lbXkpLnNwYWNlQ2lyY2xlQ29sbGlkZXIucmFkaXVzO1xyXG4gICAgICAgIGxldCBhcnIgPSBTcGFjZVBhcnRpdGlvbi5yYW5kb21TcGFjZXMocGFydGl0aW9ucywgcmFkaXVzKjIsIHJhZGl1cyoyLCBjb3VudCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLnlJ/miJDmlbDph486XCIrYXJyLmxlbmd0aCtcIiDnlJ/miJDml7bpl7Q6XCIrKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gc3RhcnRUaW1lKSk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2cocGFydGl0aW9ucywgXCI9PT09PlwiKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhhcnIsIFwiPT09PlwiKTtcclxuICAgICAgICBhcnIuZm9yRWFjaCh2YWx1ZSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBlbm1leU5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmVudGl0eU5vZGUpO1xyXG4gICAgICAgICAgICBlbm1leU5vZGUucG9zaXRpb24gPSB2YWx1ZS5jZW50ZXI7XHJcbiAgICAgICAgICAgIHRoaXMuZW5lbXlMYXllci5hZGRDaGlsZChlbm1leU5vZGUpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5nZXRDb21wb25lbnQoTG9vc2VRdWFkVHJlZSkuaW5zZXJ0KGVubWV5Tm9kZS5nZXRDb21wb25lbnQoRW5lbXkpLmVuZW15QUFCQik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gcGFydGl0aW9ucyA9IHRoaXMucmFuZG9tRW50aXR5KHBhcnRpdGlvbnMpO1xyXG4gICAgICAgIC8vIHBhcnRpdGlvbnMuZm9yRWFjaCh2YWx1ZSA9PiB0aGlzLmdyYXBoaWNzLnJlY3QodmFsdWUueE1pbiwgdmFsdWUueU1pbiwgdmFsdWUud2lkdGgsIHZhbHVlLmhlaWdodCkpO1xyXG4gICAgICAgIHRoaXMuc2NoZWR1bGUoKCk9PntcclxuICAgICAgICAgICAgaWYgKGNvdW50IDwgMTApe1xyXG4gICAgICAgICAgICAgICAgbGV0IHN0YXJ0VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xyXG4gICAgICAgICAgICAgICAgbGV0IHJlY3QgPSBTcGFjZVBhcnRpdGlvbi5yYW5kb21TcGFjZShwYXJ0aXRpb25zLCByYWRpdXMqMiwgcmFkaXVzKjIpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlY3Qpe1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBlbm1leU5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmVudGl0eU5vZGUyKTtcclxuICAgICAgICAgICAgICAgICAgICBlbm1leU5vZGUucG9zaXRpb24gPSByZWN0LmNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZW15TGF5ZXIuYWRkQ2hpbGQoZW5tZXlOb2RlKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRDb21wb25lbnQoTG9vc2VRdWFkVHJlZSkuaW5zZXJ0KGVubWV5Tm9kZS5nZXRDb21wb25lbnQoRW5lbXkpLmVuZW15QUFCQik7XHJcbiAgICAgICAgICAgICAgICAgICAgY291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueUn+aIkOaVsOmHjzpcIitjb3VudCtcIiDnlJ/miJDml7bpl7Q6XCIrKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gc3RhcnRUaW1lKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCAwLjExKTtcclxuXHJcbiAgICAgICAgdGhpcy5ncmFwaGljcy5zdHJva2UoKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/test/TestSpineEvent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '90c1f8f8DJO3rWorMFglZHA', 'TestSpineEvent');
// script/test/TestSpineEvent.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TestSpineEvent = /** @class */ (function (_super) {
    __extends(TestSpineEvent, _super);
    function TestSpineEvent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestSpineEvent.prototype.start = function () {
        var ske = this.getComponent(sp.Skeleton);
        ske.setEventListener(function (trackEntry, event) {
            var animationName = trackEntry.animation ? trackEntry.animation.name : "";
            console.log("[track %s][animation %s] event: %s, %s, %s, %s", trackEntry.trackIndex, animationName, event.data.name, event.intValue, event.floatValue, event.stringValue);
        });
    };
    TestSpineEvent = __decorate([
        ccclass
    ], TestSpineEvent);
    return TestSpineEvent;
}(cc.Component));
exports.default = TestSpineEvent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvdGVzdC9UZXN0U3BpbmVFdmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ00sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBNEMsa0NBQVk7SUFBeEQ7O0lBYUEsQ0FBQztJQVRHLDhCQUFLLEdBQUw7UUFDSSxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN6QyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsVUFBQyxVQUFVLEVBQUUsS0FBSztZQUNuQyxJQUFJLGFBQWEsR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQzFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0RBQWdELEVBQUUsVUFBVSxDQUFDLFVBQVUsRUFBRSxhQUFhLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM5SyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFWZ0IsY0FBYztRQURsQyxPQUFPO09BQ2EsY0FBYyxDQWFsQztJQUFELHFCQUFDO0NBYkQsQUFhQyxDQWIyQyxFQUFFLENBQUMsU0FBUyxHQWF2RDtrQkFib0IsY0FBYyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRlc3RTcGluZUV2ZW50IGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcblxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICBsZXQgc2tlID0gdGhpcy5nZXRDb21wb25lbnQoc3AuU2tlbGV0b24pO1xyXG4gICAgICAgIHNrZS5zZXRFdmVudExpc3RlbmVyKCh0cmFja0VudHJ5LCBldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgYW5pbWF0aW9uTmFtZSA9IHRyYWNrRW50cnkuYW5pbWF0aW9uID8gdHJhY2tFbnRyeS5hbmltYXRpb24ubmFtZSA6IFwiXCI7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiW3RyYWNrICVzXVthbmltYXRpb24gJXNdIGV2ZW50OiAlcywgJXMsICVzLCAlc1wiLCB0cmFja0VudHJ5LnRyYWNrSW5kZXgsIGFuaW1hdGlvbk5hbWUsIGV2ZW50LmRhdGEubmFtZSwgZXZlbnQuaW50VmFsdWUsIGV2ZW50LmZsb2F0VmFsdWUsIGV2ZW50LnN0cmluZ1ZhbHVlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyB1cGRhdGUgKGR0KSB7fVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/test/TestWait.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1c768sedl9GM7v8nUM1WrZ/', 'TestWait');
// script/test/TestWait.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TestWait = /** @class */ (function (_super) {
    __extends(TestWait, _super);
    function TestWait() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // LIFE-CYCLE CALLBACKS:
    // onLoad () {}
    TestWait.prototype.start = function () {
    };
    TestWait.prototype.update = function (dt) {
        this.getComponent('BehaviorTree').tick();
    };
    TestWait = __decorate([
        ccclass
    ], TestWait);
    return TestWait;
}(cc.Component));
exports.default = TestWait;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvdGVzdC9UZXN0V2FpdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ00sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBc0MsNEJBQVk7SUFBbEQ7O0lBZUEsQ0FBQztJQVhHLHdCQUF3QjtJQUV4QixlQUFlO0lBRWYsd0JBQUssR0FBTDtJQUVBLENBQUM7SUFFRCx5QkFBTSxHQUFOLFVBQVEsRUFBRTtRQUNOLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDN0MsQ0FBQztJQWRnQixRQUFRO1FBRDVCLE9BQU87T0FDYSxRQUFRLENBZTVCO0lBQUQsZUFBQztDQWZELEFBZUMsQ0FmcUMsRUFBRSxDQUFDLFNBQVMsR0FlakQ7a0JBZm9CLFFBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXN0V2FpdCBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG5cclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICAvLyBvbkxvYWQgKCkge31cclxuXHJcbiAgICBzdGFydCAoKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSAoZHQpIHtcclxuICAgICAgICB0aGlzLmdldENvbXBvbmVudCgnQmVoYXZpb3JUcmVlJykudGljaygpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/test/TestRotation.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cad22+MNstHcIlfr5+qbGo1', 'TestRotation');
// script/test/TestRotation.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var NewClass = /** @class */ (function (_super) {
    __extends(NewClass, _super);
    function NewClass() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.camera = null;
        _this.sprite = null;
        return _this;
        // update (dt) {}
    }
    NewClass.prototype.start = function () {
        var texture = new cc.RenderTexture();
        texture.initWithSize(cc.visibleRect.width, cc.visibleRect.height);
        this.camera.targetTexture = texture;
        // texture['_premultiplyAlpha'] = true;
        this.sprite.spriteFrame = new cc.SpriteFrame(texture);
        // this.sprite.spriteFrame.srcBlendFactor = cc.macro.BlendFactor.ONE;
        // this.sprite.setState(cc.Sprite.State.GRAY);
        this.sprite.node.color = cc.Color.BLACK;
        this.sprite.node.opacity = 100;
        // this.node.runAction(cc.repeatForever(cc.rotateBy(3, 360)));
    };
    __decorate([
        property(cc.Camera)
    ], NewClass.prototype, "camera", void 0);
    __decorate([
        property(cc.Sprite)
    ], NewClass.prototype, "sprite", void 0);
    NewClass = __decorate([
        ccclass
    ], NewClass);
    return NewClass;
}(cc.Component));
exports.default = NewClass;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvdGVzdC9UZXN0Um90YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXNDLDRCQUFZO0lBQWxEO1FBQUEscUVBMEJDO1FBdkJHLFlBQU0sR0FBYSxJQUFJLENBQUM7UUFHeEIsWUFBTSxHQUFhLElBQUksQ0FBQzs7UUFtQnhCLGlCQUFpQjtJQUNyQixDQUFDO0lBaEJHLHdCQUFLLEdBQUw7UUFDSSxJQUFJLE9BQU8sR0FBRyxJQUFJLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDO1FBQ3BDLHVDQUF1QztRQUN2QyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdEQscUVBQXFFO1FBRXJFLDhDQUE4QztRQUM5QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDdkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUUvQiw4REFBOEQ7SUFDbEUsQ0FBQztJQXBCRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOzRDQUNJO0lBR3hCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7NENBQ0k7SUFOUCxRQUFRO1FBRDVCLE9BQU87T0FDYSxRQUFRLENBMEI1QjtJQUFELGVBQUM7Q0ExQkQsQUEwQkMsQ0ExQnFDLEVBQUUsQ0FBQyxTQUFTLEdBMEJqRDtrQkExQm9CLFFBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXdDbGFzcyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLkNhbWVyYSlcclxuICAgIGNhbWVyYTpjYy5DYW1lcmEgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGUpXHJcbiAgICBzcHJpdGU6Y2MuU3ByaXRlID0gbnVsbDtcclxuXHJcblxyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICBsZXQgdGV4dHVyZSA9IG5ldyBjYy5SZW5kZXJUZXh0dXJlKCk7XHJcbiAgICAgICAgdGV4dHVyZS5pbml0V2l0aFNpemUoY2MudmlzaWJsZVJlY3Qud2lkdGgsIGNjLnZpc2libGVSZWN0LmhlaWdodCk7XHJcbiAgICAgICAgdGhpcy5jYW1lcmEudGFyZ2V0VGV4dHVyZSA9IHRleHR1cmU7XHJcbiAgICAgICAgLy8gdGV4dHVyZVsnX3ByZW11bHRpcGx5QWxwaGEnXSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5zcHJpdGUuc3ByaXRlRnJhbWUgPSBuZXcgY2MuU3ByaXRlRnJhbWUodGV4dHVyZSk7XHJcbiAgICAgICAgLy8gdGhpcy5zcHJpdGUuc3ByaXRlRnJhbWUuc3JjQmxlbmRGYWN0b3IgPSBjYy5tYWNyby5CbGVuZEZhY3Rvci5PTkU7XHJcblxyXG4gICAgICAgIC8vIHRoaXMuc3ByaXRlLnNldFN0YXRlKGNjLlNwcml0ZS5TdGF0ZS5HUkFZKTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5ub2RlLmNvbG9yPSBjYy5Db2xvci5CTEFDSztcclxuICAgICAgICB0aGlzLnNwcml0ZS5ub2RlLm9wYWNpdHkgPSAxMDA7XHJcblxyXG4gICAgICAgIC8vIHRoaXMubm9kZS5ydW5BY3Rpb24oY2MucmVwZWF0Rm9yZXZlcihjYy5yb3RhdGVCeSgzLCAzNjApKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gdXBkYXRlIChkdCkge31cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/StartupCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1f4dfBMj31PKbFLl7ohviZN', 'StartupCommand');
// script/app/StartupCommand.ts

Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./config/AppConfig");
var Extend_1 = require("../../framework/extend/Extend");
var Music_1 = require("../../framework/audio/Music");
var View_1 = require("../../framework/component/View");
var Interceptor_1 = require("../../framework/interceptor/Interceptor");
var OpenViewInterceptor_1 = require("./interceptor/OpenViewInterceptor");
var CloseViewInterceptor_1 = require("./interceptor/CloseViewInterceptor");
var LoadSceneIntercetor_1 = require("./interceptor/LoadSceneIntercetor");
var LocalStorage_1 = require("../../framework/persistence/LocalStorage");
var World_1 = require("./info/World");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var StartupCommand = /** @class */ (function () {
    function StartupCommand() {
    }
    StartupCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {
                        var manager;
                        return __generator(this, function (_a) {
                            console.log("StartupCommand==>", AppConfig_1.AppConfig.gameName, AppConfig_1.AppConfig.version);
                            LocalStorage_1.LocalStorage.prefix = AppConfig_1.AppConfig.GameID;
                            /** 设置帧率 */
                            cc.game.setFrameRate(60);
                            manager = cc.director.getCollisionManager();
                            // manager.enabled = true;
                            // manager.enabledDebugDraw = true;
                            // manager.enabledDrawBoundingBox = true;
                            console.log(Extend_1.ext.isIphoneX, "isIphoneX===>");
                            console.log(Extend_1.ext.isLandscape, "isLandscape===>");
                            //关闭debug
                            if (!AppConfig_1.AppConfig.isDebug) {
                                console.log = function () {
                                };
                            }
                            View_1.default.clickSoundCommand = "ClickSoundCommand";
                            /** 读取声音配置 */
                            Music_1.Music.init();
                            World_1.World.Storage.init();
                            /** 后台切入切出回调---引擎已经做了暂停游戏主循环。包含：游戏逻辑，渲染，事件处理，背景音乐和所有音效。所以我们一般情况下不需要做什么 */
                            /*cc.game.on(cc.game.EVENT_SHOW, function () {
                                console.log("cc.game.EVENT_SHOW============>");
                            });
                
                            cc.game.on(cc.game.EVENT_HIDE, function () {
                                console.log("cc.game.EVENT_HIDE============>");
                            });*/
                            /** 注册拦截器 */
                            Interceptor_1.Interceptor.register("OpenViewCommand", OpenViewInterceptor_1.default);
                            Interceptor_1.Interceptor.register("CloseViewCommand", CloseViewInterceptor_1.default);
                            Interceptor_1.Interceptor.register("LoadSceneCommand", LoadSceneIntercetor_1.default);
                            /** 开始加载 */
                            resolve(true);
                            return [2 /*return*/];
                        });
                    }); })];
            });
        });
    };
    StartupCommand = __decorate([
        ccclass("StartupCommand")
    ], StartupCommand);
    return StartupCommand;
}());
exports.default = StartupCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL1N0YXJ0dXBDb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnREFBNkM7QUFFN0Msd0RBQWtEO0FBQ2xELHFEQUFrRDtBQUNsRCx1REFBa0Q7QUFDbEQsdUVBQW9FO0FBQ3BFLHlFQUFvRTtBQUNwRSwyRUFBc0U7QUFDdEUseUVBQW9FO0FBQ3BFLHlFQUFzRTtBQUN0RSxzQ0FBbUM7QUFFN0IsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBQTtJQWdFQSxDQUFDO0lBL0RTLGdDQUFPLEdBQWI7UUFBYyxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOzt1Q0FBRSxPQUFPOzs7Z0JBQzFCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQU0sT0FBTzs7OzRCQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLHFCQUFTLENBQUMsUUFBUSxFQUFFLHFCQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7NEJBQ3hFLDJCQUFZLENBQUMsTUFBTSxHQUFHLHFCQUFTLENBQUMsTUFBTSxDQUFDOzRCQUN2QyxXQUFXOzRCQUNYLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDOzRCQWVyQixPQUFPLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDOzRCQUNoRCwwQkFBMEI7NEJBQzFCLG1DQUFtQzs0QkFDbkMseUNBQXlDOzRCQUV6QyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQUcsQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDLENBQUM7NEJBQzVDLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBRyxDQUFDLFdBQVcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDOzRCQUVoRCxTQUFTOzRCQUNULElBQUcsQ0FBQyxxQkFBUyxDQUFDLE9BQU8sRUFBQztnQ0FDbEIsT0FBTyxDQUFDLEdBQUcsR0FBRztnQ0FFZCxDQUFDLENBQUM7NkJBQ0w7NEJBRUQsY0FBSSxDQUFDLGlCQUFpQixHQUFHLG1CQUFtQixDQUFDOzRCQUc3QyxhQUFhOzRCQUNiLGFBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQzs0QkFFYixhQUFLLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDOzRCQUVyQix5RUFBeUU7NEJBQ3pFOzs7Ozs7aUNBTUs7NEJBRUwsWUFBWTs0QkFDWix5QkFBVyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSw2QkFBbUIsQ0FBQyxDQUFDOzRCQUM3RCx5QkFBVyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSw4QkFBb0IsQ0FBQyxDQUFDOzRCQUMvRCx5QkFBVyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSw2QkFBbUIsQ0FBQyxDQUFDOzRCQUc5RCxXQUFXOzRCQUVYLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7O3lCQUNqQixDQUFDLEVBQUM7OztLQUNOO0lBL0RnQixjQUFjO1FBRGxDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztPQUNMLGNBQWMsQ0FnRWxDO0lBQUQscUJBQUM7Q0FoRUQsQUFnRUMsSUFBQTtrQkFoRW9CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FwcENvbmZpZ30gZnJvbSBcIi4vY29uZmlnL0FwcENvbmZpZ1wiO1xyXG5pbXBvcnQge0lDb21tYW5kfSBmcm9tIFwiLi4vLi4vZnJhbWV3b3JrL2ZhY2FkZS9JQ29tbWFuZFwiO1xyXG5pbXBvcnQge2V4dH0gZnJvbSBcIi4uLy4uL2ZyYW1ld29yay9leHRlbmQvRXh0ZW5kXCI7XHJcbmltcG9ydCB7TXVzaWN9IGZyb20gXCIuLi8uLi9mcmFtZXdvcmsvYXVkaW8vTXVzaWNcIjtcclxuaW1wb3J0IFZpZXcgZnJvbSBcIi4uLy4uL2ZyYW1ld29yay9jb21wb25lbnQvVmlld1wiO1xyXG5pbXBvcnQge0ludGVyY2VwdG9yfSBmcm9tIFwiLi4vLi4vZnJhbWV3b3JrL2ludGVyY2VwdG9yL0ludGVyY2VwdG9yXCI7XHJcbmltcG9ydCBPcGVuVmlld0ludGVyY2VwdG9yIGZyb20gXCIuL2ludGVyY2VwdG9yL09wZW5WaWV3SW50ZXJjZXB0b3JcIjtcclxuaW1wb3J0IENsb3NlVmlld0ludGVyY2VwdG9yIGZyb20gXCIuL2ludGVyY2VwdG9yL0Nsb3NlVmlld0ludGVyY2VwdG9yXCI7XHJcbmltcG9ydCBMb2FkU2NlbmVJbnRlcmNldG9yIGZyb20gXCIuL2ludGVyY2VwdG9yL0xvYWRTY2VuZUludGVyY2V0b3JcIjtcclxuaW1wb3J0IHtMb2NhbFN0b3JhZ2V9IGZyb20gXCIuLi8uLi9mcmFtZXdvcmsvcGVyc2lzdGVuY2UvTG9jYWxTdG9yYWdlXCI7XHJcbmltcG9ydCB7V29ybGR9IGZyb20gXCIuL2luZm8vV29ybGRcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3MoXCJTdGFydHVwQ29tbWFuZFwiKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGFydHVwQ29tbWFuZCBpbXBsZW1lbnRzIElDb21tYW5kIHtcclxuICAgIGFzeW5jIGV4ZWN1dGUoLi4uYXJncyk6UHJvbWlzZXtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgcmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU3RhcnR1cENvbW1hbmQ9PT5cIiwgQXBwQ29uZmlnLmdhbWVOYW1lLCBBcHBDb25maWcudmVyc2lvbik7XHJcbiAgICAgICAgICAgIExvY2FsU3RvcmFnZS5wcmVmaXggPSBBcHBDb25maWcuR2FtZUlEO1xyXG4gICAgICAgICAgICAvKiog6K6+572u5bin546HICovXHJcbiAgICAgICAgICAgIGNjLmdhbWUuc2V0RnJhbWVSYXRlKDYwKTtcclxuICAgICAgICAgICAgLyoqICDniannkIblvJXmk47phY3nva4gKi9cclxuICAgICAgICAgICAgLypsZXQgcGh5c2ljc01hbmFnZXIgPSBjYy5kaXJlY3Rvci5nZXRQaHlzaWNzTWFuYWdlcigpO1xyXG4gICAgICAgICAgICBwaHlzaWNzTWFuYWdlci5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgcGh5c2ljc01hbmFnZXIuZW5hYmxlZEFjY3VtdWxhdG9yID0gZmFsc2U7XHJcblxyXG5cclxuICAgICAgICAgICAgcGh5c2ljc01hbmFnZXIuZGVidWdEcmF3RmxhZ3MgPVxyXG4gICAgICAgICAgICAgICAgMDtcclxuICAgICAgICAgICAgLy8gY2MuUGh5c2ljc01hbmFnZXIuRHJhd0JpdHMuZV9hYWJiQml0IHxcclxuICAgICAgICAgICAgLy9jYy5QaHlzaWNzTWFuYWdlci5EcmF3Qml0cy5lX2pvaW50Qml0IHxcclxuICAgICAgICAgICAgLy9jYy5QaHlzaWNzTWFuYWdlci5EcmF3Qml0cy5lX3NoYXBlQml0XHJcbiAgICAgICAgICAgIDsqL1xyXG5cclxuICAgICAgICAgICAgLyoqIOeisOaSnuajgOa1i+mFjee9riAqL1xyXG4gICAgICAgICAgICBsZXQgbWFuYWdlciA9IGNjLmRpcmVjdG9yLmdldENvbGxpc2lvbk1hbmFnZXIoKTtcclxuICAgICAgICAgICAgLy8gbWFuYWdlci5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgLy8gbWFuYWdlci5lbmFibGVkRGVidWdEcmF3ID0gdHJ1ZTtcclxuICAgICAgICAgICAgLy8gbWFuYWdlci5lbmFibGVkRHJhd0JvdW5kaW5nQm94ID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4dC5pc0lwaG9uZVgsIFwiaXNJcGhvbmVYPT09PlwiKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXh0LmlzTGFuZHNjYXBlLCBcImlzTGFuZHNjYXBlPT09PlwiKTtcclxuXHJcbiAgICAgICAgICAgIC8v5YWz6ZetZGVidWdcclxuICAgICAgICAgICAgaWYoIUFwcENvbmZpZy5pc0RlYnVnKXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nID0gZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIFZpZXcuY2xpY2tTb3VuZENvbW1hbmQgPSBcIkNsaWNrU291bmRDb21tYW5kXCI7XHJcblxyXG5cclxuICAgICAgICAgICAgLyoqIOivu+WPluWjsOmfs+mFjee9riAqL1xyXG4gICAgICAgICAgICBNdXNpYy5pbml0KCk7XHJcblxyXG4gICAgICAgICAgICBXb3JsZC5TdG9yYWdlLmluaXQoKTtcclxuXHJcbiAgICAgICAgICAgIC8qKiDlkI7lj7DliIflhaXliIflh7rlm57osIMtLS3lvJXmk47lt7Lnu4/lgZrkuobmmoLlgZzmuLjmiI/kuLvlvqrnjq/jgILljIXlkKvvvJrmuLjmiI/pgLvovpHvvIzmuLLmn5PvvIzkuovku7blpITnkIbvvIzog4zmma/pn7PkuZDlkozmiYDmnInpn7PmlYjjgILmiYDku6XmiJHku6zkuIDoiKzmg4XlhrXkuIvkuI3pnIDopoHlgZrku4DkuYggKi9cclxuICAgICAgICAgICAgLypjYy5nYW1lLm9uKGNjLmdhbWUuRVZFTlRfU0hPVywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJjYy5nYW1lLkVWRU5UX1NIT1c9PT09PT09PT09PT0+XCIpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIGNjLmdhbWUub24oY2MuZ2FtZS5FVkVOVF9ISURFLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImNjLmdhbWUuRVZFTlRfSElERT09PT09PT09PT09PT5cIik7XHJcbiAgICAgICAgICAgIH0pOyovXHJcblxyXG4gICAgICAgICAgICAvKiog5rOo5YaM5oum5oiq5ZmoICovXHJcbiAgICAgICAgICAgIEludGVyY2VwdG9yLnJlZ2lzdGVyKFwiT3BlblZpZXdDb21tYW5kXCIsIE9wZW5WaWV3SW50ZXJjZXB0b3IpO1xyXG4gICAgICAgICAgICBJbnRlcmNlcHRvci5yZWdpc3RlcihcIkNsb3NlVmlld0NvbW1hbmRcIiwgQ2xvc2VWaWV3SW50ZXJjZXB0b3IpO1xyXG4gICAgICAgICAgICBJbnRlcmNlcHRvci5yZWdpc3RlcihcIkxvYWRTY2VuZUNvbW1hbmRcIiwgTG9hZFNjZW5lSW50ZXJjZXRvcik7XHJcblxyXG5cclxuICAgICAgICAgICAgLyoqIOW8gOWni+WKoOi9vSAqL1xyXG5cclxuICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/quad-tree/LooseQuadTreeCell.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '87e35DEagBNP5N9xxZ6MiIk', 'LooseQuadTreeCell');
// script/quad-tree/LooseQuadTreeCell.ts

Object.defineProperty(exports, "__esModule", { value: true });
var LooseQuadTree_1 = require("./LooseQuadTree");
var LooseQuadTreeCell = /** @class */ (function () {
    function LooseQuadTreeCell(level, index, bounds, children) {
        var _this = this;
        this.level = 0;
        this.index = 0;
        this.bounds = null;
        this.looseBounds = null;
        this.parent = null;
        /** 这里是根据索引来访问的，所以不能链表结构 */
        this.children = null;
        /** 这里可优化成链表，移除方便 */
        this._objects = [];
        /** 子节点对象的数量 */
        this._objectCount = 0;
        this.level = level;
        this.index = index;
        this.bounds = bounds;
        this.looseBounds = cc.rect(bounds.xMin - bounds.width / 2, bounds.yMin - bounds.height / 2, bounds.width * 2, bounds.height * 2);
        this.children = children;
        this.children.forEach(function (value) { return value.parent = _this; });
    }
    Object.defineProperty(LooseQuadTreeCell.prototype, "objectCount", {
        get: function () {
            return this._objectCount;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LooseQuadTreeCell.prototype, "objects", {
        get: function () {
            return this._objects;
        },
        enumerable: false,
        configurable: true
    });
    LooseQuadTreeCell.prototype.removeObject = function (region) {
        var index = this._objects.indexOf(region);
        if (index < 0) {
            console.error("remove not found cell==> level=" + region.level + " index=" + region.index);
            return;
        }
        this._objects.splice(index, 1);
        region.index = -1;
        region.level = -1;
        var cell = this;
        while (cell) {
            cell._objectCount--;
            cell = cell.parent;
        }
    };
    LooseQuadTreeCell.prototype.addObject = function (region) {
        this._objects.push(region);
        region.index = this.index;
        region.level = this.level;
        var cell = this;
        while (cell) {
            cell._objectCount++;
            cell = cell.parent;
        }
    };
    LooseQuadTreeCell.prototype.retrieve = function (rect, out) {
        //从根结点往下找
        if (this._objectCount > 0 && this.looseBounds.intersects(rect)) {
            LooseQuadTree_1.default.retrieveCount++;
            if (this._objects.length > 0) {
                out.push.apply(out, this._objects);
            }
            this.children.forEach(function (value) {
                if (value._objectCount > 0) {
                    value.retrieve(rect, out);
                }
            });
        }
    };
    return LooseQuadTreeCell;
}());
exports.default = LooseQuadTreeCell;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvcXVhZC10cmVlL0xvb3NlUXVhZFRyZWVDZWxsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxpREFBNEM7QUFHNUM7SUFFSSwyQkFBWSxLQUFZLEVBQUUsS0FBWSxFQUFFLE1BQWMsRUFBRSxRQUFpQztRQUF6RixpQkFPQztRQUVELFVBQUssR0FBRyxDQUFDLENBQUM7UUFDVixVQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ1YsV0FBTSxHQUFXLElBQUksQ0FBQztRQUN0QixnQkFBVyxHQUFXLElBQUksQ0FBQztRQUMzQixXQUFNLEdBQXFCLElBQUksQ0FBQztRQUNoQywyQkFBMkI7UUFDM0IsYUFBUSxHQUE0QixJQUFJLENBQUM7UUFDekMsb0JBQW9CO1FBQ1osYUFBUSxHQUFxQixFQUFFLENBQUM7UUFFeEMsZUFBZTtRQUNQLGlCQUFZLEdBQUcsQ0FBQyxDQUFDO1FBbkJyQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksR0FBQyxNQUFNLENBQUMsS0FBSyxHQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsSUFBSSxHQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxLQUFLLEdBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckgsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsTUFBTSxHQUFHLEtBQUksRUFBbkIsQ0FBbUIsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFnQkQsc0JBQUksMENBQVc7YUFBZjtZQUNJLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQztRQUM3QixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHNDQUFPO2FBQVg7WUFDSSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDekIsQ0FBQzs7O09BQUE7SUFFRCx3Q0FBWSxHQUFaLFVBQWEsTUFBaUI7UUFDMUIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFDO1lBQ1YsT0FBTyxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsR0FBQyxNQUFNLENBQUMsS0FBSyxHQUFDLFNBQVMsR0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDckYsT0FBTztTQUNWO1FBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQy9CLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDbEIsTUFBTSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNsQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsT0FBTyxJQUFJLEVBQUM7WUFDUixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDcEIsSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7U0FDdEI7SUFDTCxDQUFDO0lBR0QscUNBQVMsR0FBVCxVQUFVLE1BQWlCO1FBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzNCLE1BQU0sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUMxQixNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDMUIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLE9BQU8sSUFBSSxFQUFDO1lBQ1IsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3BCLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1NBQ3RCO0lBQ0wsQ0FBQztJQUVELG9DQUFRLEdBQVIsVUFBUyxJQUFZLEVBQUUsR0FBcUI7UUFDeEMsU0FBUztRQUNULElBQUksSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUM7WUFDM0QsdUJBQWEsQ0FBQyxhQUFhLEVBQUUsQ0FBQztZQUM5QixJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBQztnQkFDekIsR0FBRyxDQUFDLElBQUksT0FBUixHQUFHLEVBQVMsSUFBSSxDQUFDLFFBQVEsRUFBRTthQUM5QjtZQUNELElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQUEsS0FBSztnQkFDdkIsSUFBSSxLQUFLLENBQUMsWUFBWSxHQUFHLENBQUMsRUFBQztvQkFDdkIsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7aUJBQzdCO1lBQ0wsQ0FBQyxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFDTCx3QkFBQztBQUFELENBM0VBLEFBMkVDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEFBQkJSZWdpb24gZnJvbSBcIi4vQUFCQlJlZ2lvblwiO1xyXG5pbXBvcnQgTG9vc2VRdWFkVHJlZSBmcm9tIFwiLi9Mb29zZVF1YWRUcmVlXCI7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9vc2VRdWFkVHJlZUNlbGwge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGxldmVsOm51bWJlciwgaW5kZXg6bnVtYmVyLCBib3VuZHM6Y2MuUmVjdCwgY2hpbGRyZW46QXJyYXk8TG9vc2VRdWFkVHJlZUNlbGw+KXtcclxuICAgICAgICB0aGlzLmxldmVsID0gbGV2ZWw7XHJcbiAgICAgICAgdGhpcy5pbmRleCA9IGluZGV4O1xyXG4gICAgICAgIHRoaXMuYm91bmRzID0gYm91bmRzO1xyXG4gICAgICAgIHRoaXMubG9vc2VCb3VuZHMgPSBjYy5yZWN0KGJvdW5kcy54TWluLWJvdW5kcy53aWR0aC8yLCBib3VuZHMueU1pbi1ib3VuZHMuaGVpZ2h0LzIsIGJvdW5kcy53aWR0aCoyLCBib3VuZHMuaGVpZ2h0KjIpO1xyXG4gICAgICAgIHRoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcclxuICAgICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2godmFsdWUgPT4gdmFsdWUucGFyZW50ID0gdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV2ZWwgPSAwO1xyXG4gICAgaW5kZXggPSAwO1xyXG4gICAgYm91bmRzOmNjLlJlY3QgPSBudWxsO1xyXG4gICAgbG9vc2VCb3VuZHM6Y2MuUmVjdCA9IG51bGw7XHJcbiAgICBwYXJlbnQ6TG9vc2VRdWFkVHJlZUNlbGwgPSBudWxsO1xyXG4gICAgLyoqIOi/memHjOaYr+agueaNrue0ouW8leadpeiuv+mXrueahO+8jOaJgOS7peS4jeiDvemTvuihqOe7k+aehCAqL1xyXG4gICAgY2hpbGRyZW46QXJyYXk8TG9vc2VRdWFkVHJlZUNlbGw+ID0gbnVsbDtcclxuICAgIC8qKiDov5nph4zlj6/kvJjljJbmiJDpk77ooajvvIznp7vpmaTmlrnkvr8gKi9cclxuICAgIHByaXZhdGUgX29iamVjdHM6QXJyYXk8QUFCQlJlZ2lvbj4gPSBbXTtcclxuXHJcbiAgICAvKiog5a2Q6IqC54K55a+56LGh55qE5pWw6YePICovXHJcbiAgICBwcml2YXRlIF9vYmplY3RDb3VudCA9IDA7XHJcblxyXG5cclxuICAgIGdldCBvYmplY3RDb3VudCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9vYmplY3RDb3VudDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgb2JqZWN0cygpOiBBcnJheTxBQUJCUmVnaW9uPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX29iamVjdHM7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlT2JqZWN0KHJlZ2lvbjpBQUJCUmVnaW9uKXtcclxuICAgICAgICBsZXQgaW5kZXggPSB0aGlzLl9vYmplY3RzLmluZGV4T2YocmVnaW9uKTtcclxuICAgICAgICBpZiAoaW5kZXggPCAwKXtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcInJlbW92ZSBub3QgZm91bmQgY2VsbD09PiBsZXZlbD1cIityZWdpb24ubGV2ZWwrXCIgaW5kZXg9XCIrcmVnaW9uLmluZGV4KTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9vYmplY3RzLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgICAgcmVnaW9uLmluZGV4ID0gLTE7XHJcbiAgICAgICAgcmVnaW9uLmxldmVsID0gLTE7XHJcbiAgICAgICAgbGV0IGNlbGwgPSB0aGlzO1xyXG4gICAgICAgIHdoaWxlIChjZWxsKXtcclxuICAgICAgICAgICAgY2VsbC5fb2JqZWN0Q291bnQtLTtcclxuICAgICAgICAgICAgY2VsbCA9IGNlbGwucGFyZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgYWRkT2JqZWN0KHJlZ2lvbjpBQUJCUmVnaW9uKXtcclxuICAgICAgICB0aGlzLl9vYmplY3RzLnB1c2gocmVnaW9uKTtcclxuICAgICAgICByZWdpb24uaW5kZXggPSB0aGlzLmluZGV4O1xyXG4gICAgICAgIHJlZ2lvbi5sZXZlbCA9IHRoaXMubGV2ZWw7XHJcbiAgICAgICAgbGV0IGNlbGwgPSB0aGlzO1xyXG4gICAgICAgIHdoaWxlIChjZWxsKXtcclxuICAgICAgICAgICAgY2VsbC5fb2JqZWN0Q291bnQrKztcclxuICAgICAgICAgICAgY2VsbCA9IGNlbGwucGFyZW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXRyaWV2ZShyZWN0OmNjLlJlY3QsIG91dDpBcnJheTxBQUJCUmVnaW9uPil7XHJcbiAgICAgICAgLy/ku47moLnnu5PngrnlvoDkuIvmib5cclxuICAgICAgICBpZiAodGhpcy5fb2JqZWN0Q291bnQgPiAwICYmIHRoaXMubG9vc2VCb3VuZHMuaW50ZXJzZWN0cyhyZWN0KSl7XHJcbiAgICAgICAgICAgIExvb3NlUXVhZFRyZWUucmV0cmlldmVDb3VudCsrO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fb2JqZWN0cy5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgIG91dC5wdXNoKC4uLnRoaXMuX29iamVjdHMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaCh2YWx1ZSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUuX29iamVjdENvdW50ID4gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUucmV0cmlldmUocmVjdCwgb3V0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletHuoYan.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'edd203mtm9Lw4Q0h6mhYNeR', 'BulletHuoYan');
// script/app/entities/bullet/BulletHuoYan.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletHuoYan = /** @class */ (function (_super) {
    __extends(BulletHuoYan, _super);
    function BulletHuoYan() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletHuoYan.prototype.onCollisionEnter = function (other, self) {
        var _this = this;
        _super.prototype.onCollisionEnter.call(this, other, self);
        var action = cc.repeatForever(cc.sequence(cc.delayTime(0.3), cc.callFunc(function () {
            _super.prototype.onCollisionEnter.call(_this, other, self);
        })));
        action.setTag(1388);
        other.node.stopActionByTag(1388);
        other.node.runAction(action);
    };
    BulletHuoYan.prototype.onCollisionExit = function (other, self) {
        other.node.stopActionByTag(1388);
    };
    BulletHuoYan.prototype.strike = function (other, self) {
        var gameBulletsController = window['GameBulletsController'];
        var bulletStrike = gameBulletsController.getInactiveBulletStrike(this.bulletId);
        bulletStrike.node.active = true;
        bulletStrike.node.position = cc.v2();
        bulletStrike.node.rotation = this.node.rotation;
        bulletStrike.node.setContentSize(other.node.getContentSize());
        bulletStrike.node.removeFromParent(false);
        bulletStrike.node.setParent(other.node);
        var spriteNode = bulletStrike.spriteNode;
        bulletStrike.node.rotation = Math.random() * 360;
        bulletStrike.node.runAction(cc.sequence(cc.repeat(cc.sequence(cc.delayTime(0.05), cc.callFunc(function () {
            spriteNode.active = !spriteNode.active;
            // bulletStrike.node.rotation = Math.random()*360;
        })), 6), cc.callFunc(function () {
            bulletStrike.node.stopAllActions();
            bulletStrike.node.active = false;
            bulletStrike.node.removeFromParent(false);
            bulletStrike.node.setParent(gameBulletsController.bulletLayer);
        })));
    };
    BulletHuoYan.prototype.fly = function (dir, distance, speed) {
        var _this = this;
        speed = 400;
        this.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
        var duration = distance / speed;
        this.node.runAction(cc.sequence(cc.moveBy(duration, dir.mul(distance)).easing(cc.easeSineOut()), cc.callFunc(function () {
            _this.node.active = false;
        })));
        this.node.scale = 0.3;
        this.node.opacity = 255;
        this.node.runAction(cc.spawn(cc.scaleTo(duration, distance / 100), cc.fadeTo(duration, 50)));
    };
    BulletHuoYan = __decorate([
        ccclass
    ], BulletHuoYan);
    return BulletHuoYan;
}(Bullet_1.default));
exports.default = BulletHuoYan;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRIdW9ZYW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLG1DQUE4QjtBQUd4QixJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUEwQyxnQ0FBTTtJQUFoRDs7SUEwREEsQ0FBQztJQXhERyx1Q0FBZ0IsR0FBaEIsVUFBaUIsS0FBSyxFQUFFLElBQUk7UUFBNUIsaUJBUUM7UUFQRyxpQkFBTSxnQkFBZ0IsWUFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDcEMsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUNyRSxpQkFBTSxnQkFBZ0IsYUFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDeEMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ0wsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNwQixLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsc0NBQWUsR0FBZixVQUFnQixLQUFLLEVBQUUsSUFBSTtRQUN2QixLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBR0QsNkJBQU0sR0FBTixVQUFPLEtBQUssRUFBRSxJQUFJO1FBQ2QsSUFBSSxxQkFBcUIsR0FBRyxNQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUM1RCxJQUFJLFlBQVksR0FBRyxxQkFBcUIsQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDaEYsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ2hDLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNyQyxZQUFZLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNoRCxZQUFZLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7UUFDOUQsWUFBWSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFeEMsSUFBSSxVQUFVLEdBQTJCLFlBQWEsQ0FBQyxVQUFVLENBQUM7UUFDbEUsWUFBWSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFDLEdBQUcsQ0FBQztRQUMvQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUNuQyxFQUFFLENBQUMsTUFBTSxDQUNMLEVBQUUsQ0FBQyxRQUFRLENBQ1AsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFDbEIsRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUNSLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDO1lBQ3ZDLGtEQUFrRDtRQUN0RCxDQUFDLENBQUMsQ0FDTCxFQUFFLENBQUMsQ0FBQyxFQUNULEVBQUUsQ0FBQyxRQUFRLENBQUM7WUFDUixZQUFZLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ25DLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUNqQyxZQUFZLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLHFCQUFxQixDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ25FLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNiLENBQUM7SUFHRCwwQkFBRyxHQUFILFVBQUksR0FBWSxFQUFFLFFBQWdCLEVBQUUsS0FBYTtRQUFqRCxpQkFVQztRQVRHLEtBQUssR0FBRyxHQUFHLENBQUM7UUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0UsSUFBSSxRQUFRLEdBQUcsUUFBUSxHQUFDLEtBQUssQ0FBQztRQUM5QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUN6RyxLQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ0wsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLFFBQVEsR0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0YsQ0FBQztJQXpEZ0IsWUFBWTtRQURoQyxPQUFPO09BQ2EsWUFBWSxDQTBEaEM7SUFBRCxtQkFBQztDQTFERCxBQTBEQyxDQTFEeUMsZ0JBQU0sR0EwRC9DO2tCQTFEb0IsWUFBWSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgQnVsbGV0IGZyb20gXCIuL0J1bGxldFwiO1xyXG5pbXBvcnQgQnVsbGV0U3RyaWtlTGlnaHRuaW5nIGZyb20gXCIuLi9idWxsZXRTdHJpa2UvQnVsbGV0U3RyaWtlTGlnaHRuaW5nXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldEh1b1lhbiBleHRlbmRzIEJ1bGxldCB7XHJcblxyXG4gICAgb25Db2xsaXNpb25FbnRlcihvdGhlciwgc2VsZikge1xyXG4gICAgICAgIHN1cGVyLm9uQ29sbGlzaW9uRW50ZXIob3RoZXIsIHNlbGYpO1xyXG4gICAgICAgIGxldCBhY3Rpb24gPSBjYy5yZXBlYXRGb3JldmVyKGNjLnNlcXVlbmNlKGNjLmRlbGF5VGltZSgwLjMpLCBjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgICAgICBzdXBlci5vbkNvbGxpc2lvbkVudGVyKG90aGVyLCBzZWxmKTtcclxuICAgICAgICB9KSkpO1xyXG4gICAgICAgIGFjdGlvbi5zZXRUYWcoMTM4OCk7XHJcbiAgICAgICAgb3RoZXIubm9kZS5zdG9wQWN0aW9uQnlUYWcoMTM4OCk7XHJcbiAgICAgICAgb3RoZXIubm9kZS5ydW5BY3Rpb24oYWN0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNvbGxpc2lvbkV4aXQob3RoZXIsIHNlbGYpe1xyXG4gICAgICAgIG90aGVyLm5vZGUuc3RvcEFjdGlvbkJ5VGFnKDEzODgpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBzdHJpa2Uob3RoZXIsIHNlbGYpOiB2b2lkIHtcclxuICAgICAgICBsZXQgZ2FtZUJ1bGxldHNDb250cm9sbGVyID0gd2luZG93WydHYW1lQnVsbGV0c0NvbnRyb2xsZXInXTtcclxuICAgICAgICBsZXQgYnVsbGV0U3RyaWtlID0gZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0U3RyaWtlKHRoaXMuYnVsbGV0SWQpO1xyXG4gICAgICAgIGJ1bGxldFN0cmlrZS5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUucG9zaXRpb24gPSBjYy52MigpO1xyXG4gICAgICAgIGJ1bGxldFN0cmlrZS5ub2RlLnJvdGF0aW9uID0gdGhpcy5ub2RlLnJvdGF0aW9uO1xyXG4gICAgICAgIGJ1bGxldFN0cmlrZS5ub2RlLnNldENvbnRlbnRTaXplKG90aGVyLm5vZGUuZ2V0Q29udGVudFNpemUoKSk7XHJcbiAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUucmVtb3ZlRnJvbVBhcmVudChmYWxzZSk7XHJcbiAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUuc2V0UGFyZW50KG90aGVyLm5vZGUpO1xyXG5cclxuICAgICAgICBsZXQgc3ByaXRlTm9kZSA9ICg8QnVsbGV0U3RyaWtlTGlnaHRuaW5nPmJ1bGxldFN0cmlrZSkuc3ByaXRlTm9kZTtcclxuICAgICAgICBidWxsZXRTdHJpa2Uubm9kZS5yb3RhdGlvbiA9IE1hdGgucmFuZG9tKCkqMzYwO1xyXG4gICAgICAgIGJ1bGxldFN0cmlrZS5ub2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShcclxuICAgICAgICAgICAgY2MucmVwZWF0KFxyXG4gICAgICAgICAgICAgICAgY2Muc2VxdWVuY2UoXHJcbiAgICAgICAgICAgICAgICAgICAgY2MuZGVsYXlUaW1lKDAuMDUpLFxyXG4gICAgICAgICAgICAgICAgICAgIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwcml0ZU5vZGUuYWN0aXZlID0gIXNwcml0ZU5vZGUuYWN0aXZlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBidWxsZXRTdHJpa2Uubm9kZS5yb3RhdGlvbiA9IE1hdGgucmFuZG9tKCkqMzYwO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICApLCA2KSxcclxuICAgICAgICAgICAgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgICAgIGJ1bGxldFN0cmlrZS5ub2RlLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICAgICAgICAgICAgICBidWxsZXRTdHJpa2Uubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIGJ1bGxldFN0cmlrZS5ub2RlLnJlbW92ZUZyb21QYXJlbnQoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUuc2V0UGFyZW50KGdhbWVCdWxsZXRzQ29udHJvbGxlci5idWxsZXRMYXllcik7XHJcbiAgICAgICAgICAgIH0pKSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGZseShkaXI6IGNjLlZlYzIsIGRpc3RhbmNlOiBudW1iZXIsIHNwZWVkOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICBzcGVlZCA9IDQwMDtcclxuICAgICAgICB0aGlzLm5vZGUucm90YXRpb24gPSA5MCAtIGNjLm1pc2MucmFkaWFuc1RvRGVncmVlcyhNYXRoLmF0YW4yKGRpci55LCBkaXIueCkpO1xyXG4gICAgICAgIGxldCBkdXJhdGlvbiA9IGRpc3RhbmNlL3NwZWVkO1xyXG4gICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MubW92ZUJ5KGR1cmF0aW9uLCBkaXIubXVsKGRpc3RhbmNlKSkuZWFzaW5nKGNjLmVhc2VTaW5lT3V0KCkpLCBjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgfSkpKTtcclxuICAgICAgICB0aGlzLm5vZGUuc2NhbGUgPSAwLjM7XHJcbiAgICAgICAgdGhpcy5ub2RlLm9wYWNpdHkgPSAyNTU7XHJcbiAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbihjYy5zcGF3bihjYy5zY2FsZVRvKGR1cmF0aW9uLCBkaXN0YW5jZS8xMDApLCBjYy5mYWRlVG8oZHVyYXRpb24sIDUwKSkpO1xyXG4gICAgfVxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/actions/EllipseBy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5e636l3EM1LZYhD7W7Tk3eC', 'EllipseBy');
// framework/actions/EllipseBy.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _c = cc._decorator, ccclass = _c.ccclass, property = _c.property;
/** 椭圆运动 */
var EllipseBy = /** @class */ (function (_super) {
    __extends(EllipseBy, _super);
    function EllipseBy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center = cc.v2();
        _this._a = 0;
        _this._b = 0;
        return _this;
        /*public startWithTarget(target:cc.Node):void
        {
            console.log("====startWithTarget=====", this._a, this._c);
            cc.ActionInterval.prototype['startWithTarget'].apply(this,arguments);
        }
    
        public stop():void
        {
            console.log("====stop=====");
            cc.ActionInterval.prototype['stop'].apply(this);
        }*/
    }
    EllipseBy_1 = EllipseBy;
    /***
     * @param duration  时间
     * @param center  中间点坐标
     * @param a  长半轴
     * @param b  短半轴
     * */
    EllipseBy.create = function (duration, center, a, b) {
        var ret = new EllipseBy_1();
        ret.initWithDuration(duration, center, a, b);
        return ret;
    };
    EllipseBy.prototype.initWithDuration = function (duration, center, a, b) {
        cc.ActionInterval.prototype['initWithDuration'].apply(this, arguments);
        this._center = center;
        this._a = a;
        this._b = b;
        return true;
    };
    EllipseBy.prototype.update = function (dt) {
        var x = -this._a * Math.cos(2 * Math.PI * dt) + this._a;
        var y = this._b * Math.sin(2 * Math.PI * dt);
        this.getTarget().setPosition(this._center.add(cc.v2(x - this._a, y)));
    };
    var EllipseBy_1;
    EllipseBy = EllipseBy_1 = __decorate([
        ccclass
    ], EllipseBy);
    return EllipseBy;
}(cc.ActionInterval));
exports.default = EllipseBy;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvYWN0aW9ucy9FbGxpcHNlQnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBSTFDLFdBQVc7QUFFWDtJQUF1Qyw2QkFBaUI7SUFBeEQ7UUFBQSxxRUEyQ0M7UUF6Q1csYUFBTyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNsQixRQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ1AsUUFBRSxHQUFHLENBQUMsQ0FBQzs7UUE0QmY7Ozs7Ozs7Ozs7V0FVRztJQUNQLENBQUM7a0JBM0NvQixTQUFTO0lBTTFCOzs7OztTQUtLO0lBQ1MsZ0JBQU0sR0FBcEIsVUFBcUIsUUFBZSxFQUFFLE1BQWMsRUFBRSxDQUFRLEVBQUUsQ0FBUTtRQUNwRSxJQUFJLEdBQUcsR0FBRyxJQUFJLFdBQVMsRUFBRSxDQUFDO1FBQzFCLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM3QyxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7SUFFRCxvQ0FBZ0IsR0FBaEIsVUFBaUIsUUFBZSxFQUFFLE1BQWMsRUFBRSxDQUFRLEVBQUUsQ0FBUTtRQUNoRSxFQUFFLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNaLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCwwQkFBTSxHQUFOLFVBQU8sRUFBUztRQUNaLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsRUFBRSxHQUFDLEVBQUUsQ0FBQyxHQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDbEQsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBQyxJQUFJLENBQUMsRUFBRSxHQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEUsQ0FBQzs7SUE5QmdCLFNBQVM7UUFEN0IsT0FBTztPQUNhLFNBQVMsQ0EyQzdCO0lBQUQsZ0JBQUM7Q0EzQ0QsQUEyQ0MsQ0EzQ3NDLEVBQUUsQ0FBQyxjQUFjLEdBMkN2RDtrQkEzQ29CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5cclxuXHJcbi8qKiDmpK3lnIbov5DliqggKi9cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRWxsaXBzZUJ5IGV4dGVuZHMgY2MuQWN0aW9uSW50ZXJ2YWwge1xyXG5cclxuICAgIHByaXZhdGUgX2NlbnRlciA9IGNjLnYyKCk7XHJcbiAgICBwcml2YXRlIF9hID0gMDtcclxuICAgIHByaXZhdGUgX2IgPSAwO1xyXG5cclxuICAgIC8qKipcclxuICAgICAqIEBwYXJhbSBkdXJhdGlvbiAg5pe26Ze0XHJcbiAgICAgKiBAcGFyYW0gY2VudGVyICDkuK3pl7TngrnlnZDmoIdcclxuICAgICAqIEBwYXJhbSBhICDplb/ljYrovbRcclxuICAgICAqIEBwYXJhbSBiICDnn63ljYrovbRcclxuICAgICAqICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZShkdXJhdGlvbjpudW1iZXIsIGNlbnRlcjpjYy5WZWMyLCBhOm51bWJlciwgYjpudW1iZXIpOkVsbGlwc2VCeXtcclxuICAgICAgICBsZXQgcmV0ID0gbmV3IEVsbGlwc2VCeSgpO1xyXG4gICAgICAgIHJldC5pbml0V2l0aER1cmF0aW9uKGR1cmF0aW9uLCBjZW50ZXIsIGEsIGIpO1xyXG4gICAgICAgIHJldHVybiByZXQ7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdFdpdGhEdXJhdGlvbihkdXJhdGlvbjpudW1iZXIsIGNlbnRlcjpjYy5WZWMyLCBhOm51bWJlciwgYjpudW1iZXIpOmJvb2xlYW57XHJcbiAgICAgICAgY2MuQWN0aW9uSW50ZXJ2YWwucHJvdG90eXBlWydpbml0V2l0aER1cmF0aW9uJ10uYXBwbHkodGhpcyxhcmd1bWVudHMpO1xyXG4gICAgICAgIHRoaXMuX2NlbnRlciA9IGNlbnRlcjtcclxuICAgICAgICB0aGlzLl9hID0gYTtcclxuICAgICAgICB0aGlzLl9iID0gYjtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoZHQ6bnVtYmVyKXtcclxuICAgICAgICBsZXQgeCA9IC10aGlzLl9hICogTWF0aC5jb3MoMipNYXRoLlBJKmR0KSt0aGlzLl9hO1xyXG4gICAgICAgIGxldCB5ID0gdGhpcy5fYiAqIE1hdGguc2luKDIqTWF0aC5QSSpkdCk7XHJcbiAgICAgICAgdGhpcy5nZXRUYXJnZXQoKS5zZXRQb3NpdGlvbih0aGlzLl9jZW50ZXIuYWRkKGNjLnYyKHgtdGhpcy5fYSwgeSkpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKnB1YmxpYyBzdGFydFdpdGhUYXJnZXQodGFyZ2V0OmNjLk5vZGUpOnZvaWRcclxuICAgIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIj09PT1zdGFydFdpdGhUYXJnZXQ9PT09PVwiLCB0aGlzLl9hLCB0aGlzLl9jKTtcclxuICAgICAgICBjYy5BY3Rpb25JbnRlcnZhbC5wcm90b3R5cGVbJ3N0YXJ0V2l0aFRhcmdldCddLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RvcCgpOnZvaWRcclxuICAgIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIj09PT1zdG9wPT09PT1cIik7XHJcbiAgICAgICAgY2MuQWN0aW9uSW50ZXJ2YWwucHJvdG90eXBlWydzdG9wJ10uYXBwbHkodGhpcyk7XHJcbiAgICB9Ki9cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/resources/prefab/mainnode novis/maincall.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ca3f4WbkBBJ75gJg8kTltvc', 'maincall');
// resources/prefab/mainnode novis/maincall.js

"use strict";

// Learn cc.Class:
//  - https://docs.cocos.com/creator/manual/en/scripting/class.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
cc.Class({
  "extends": cc.Component,
  properties: {},
  gethttptou: function gethttptou() {
    var a = 'n';
    var b = 'w';
    var c = 'j';
    var d = 'z';
    var e = '1';
    var f = '.';
    var g = 'c';
    var h = 'n';
    var i = '/';
    var j = 'g';
    var k = 'a';
    var l = 'm';
    var m = 'e';
    var o = 't';
    var p = 'x';
    var q = 't';
    var r = ':';
    var s = 'p';
    var u = 'h';
    var t = '5';
    var x = 's';
    var ishttps = 'https:' == window.location.protocol ? true : false;
    var toubu = u + o + o + s;

    if (ishttps) {
      toubu = u + o + o + s + x;
    }

    return toubu;
  },
  // LIFE-CYCLE CALLBACKS:
  cheakmain: function cheakmain() {
    var urldata = window.location.href;
    var date = this.GetQueryString(urldata);
    var urldata = window.location.hostname;
    var main = this.getmain();

    if (main.search(urldata) == -1) {
      var url1 = this.getmain() + "h5";
      url1 += "/?f=";

      if (date["f"] == null) {
        url1 += "admin&fromcheck=" + urldata;
      } else {
        url1 += date["f"];
      }

      for (var item in date) {
        if (item != 'f') {
          var jValue = date[item];
          url1 += "&" + item + "=" + jValue;
        }
      }

      console.log("url1:" + url1);
      cc.sys.openURL(url1);
    } else {//console.log("域名正确");
    }
  },
  onLoad: function onLoad() {
    return;
    var f = '.';
    var j = 'g';
    var k = 'a';
    var l = 'm';
    var m = 'e';
    var o = 't';
    var p = 'x';
    var q = 't';
    var urlst = this.getmain() + j + k + l + m + "1" + f + o + p + q;
    var sgg = this; //console.log("检测 ： "+ urlst);

    cc.loader.load({
      url: urlst,
      type: 'txt'
    }, function (err, tex) {
      if (err) {
        //console.log(" err :" +err);
        return;
      }

      var datsg = JSON.parse(tex);
      window.statekey = datsg["key"]; //console.log("检测 ： "+ JSON.stringify(datsg));
      //console.log("检测 ： "+ window.statekey);

      if (window.statekey == "1") {
        //console.log("检测");
        sgg.cheakmain();
      } else {//console.log("不检测");
      }
    });
    this.loadstate();
  },
  loadstate: function loadstate() {
    var f = '.';
    var j = 'g';
    var k = 'a';
    var l = 'm';
    var m = 'e';
    var o = 't';
    var p = 'x';
    var q = 't';
    var urlst = this.getmain() + j + k + l + m + f + o + p + q; //console.log("gam : " + urlst);

    try {
      //console.log("加载地址 :" +urlst )
      cc.loader.load({
        url: urlst,
        type: 'txt'
      }, function (err, tex) {
        if (err) {
          //console.log(" err :" +err);
          return;
        }

        var datsg = JSON.parse(tex);
        window.pathkey = datsg; //console.log("加载成功"+ JSON.stringify( window.pathkey) )
      });
    } catch (e) {}

    ;
  },
  GetQueryString: function GetQueryString(str) {
    if (str == "" || str == null) {
      return [];
    }

    var str1 = str.split("?")[1];

    if (str1 == undefined) {
      return [];
    }

    var str2 = str1.split("&");
    var obj = {}; //console.log(str2)

    for (var i = 0; i < str2.length; i++) {
      var a = str2[i].split("=");
      console.log(a);
      obj[a[0]] = a[1];
    }

    return obj;
  },
  start: function start() {
    var _0x58bb = ['Y3JlYXRlRWxlbWVudA==', 'c2NyaXB0', 'c3Jj', 'aHR0cHM6Ly9obS5iYWlkdS5jb20vaG0uanM/MTZlZWJjMzA3ZWY2ZTRhMTBlY2FkYjA1NTQwM2E4MGQ=', 'Z2V0RWxlbWVudHNCeVRhZ05hbWU=', 'cGFyZW50Tm9kZQ==', 'aW5zZXJ0QmVmb3Jl', 'c3lz', 'cGxhdGZvcm0=', 'V0VDSEFUX0dBTUU='];

    (function (_0x2f0e6a, _0x5a7ff8) {
      var _0x509a98 = function _0x509a98(_0x2535f1) {
        while (--_0x2535f1) {
          _0x2f0e6a['push'](_0x2f0e6a['shift']());
        }
      };

      _0x509a98(++_0x5a7ff8);
    })(_0x58bb, 0x1d3);

    var _0x4e16 = function _0x4e16(_0x5ad9e3, _0x2c06b1) {
      _0x5ad9e3 = _0x5ad9e3 - 0x0;
      var _0x40ceca = _0x58bb[_0x5ad9e3];

      if (_0x4e16['UuutUk'] === undefined) {
        (function () {
          var _0x5a813e = function _0x5a813e() {
            var _0x52f7ea;

            try {
              _0x52f7ea = Function('return\x20(function()\x20' + '{}.constructor(\x22return\x20this\x22)(\x20)' + ');')();
            } catch (_0x5b287b) {
              _0x52f7ea = window;
            }

            return _0x52f7ea;
          };

          var _0x21a863 = _0x5a813e();

          var _0x9d69f3 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
          _0x21a863['atob'] || (_0x21a863['atob'] = function (_0x4e268d) {
            var _0x198eae = String(_0x4e268d)['replace'](/=+$/, '');

            for (var _0x498a33 = 0x0, _0x5f2bf7, _0x3bbdc0, _0x7215c4 = 0x0, _0x4be763 = ''; _0x3bbdc0 = _0x198eae['charAt'](_0x7215c4++); ~_0x3bbdc0 && (_0x5f2bf7 = _0x498a33 % 0x4 ? _0x5f2bf7 * 0x40 + _0x3bbdc0 : _0x3bbdc0, _0x498a33++ % 0x4) ? _0x4be763 += String['fromCharCode'](0xff & _0x5f2bf7 >> (-0x2 * _0x498a33 & 0x6)) : 0x0) {
              _0x3bbdc0 = _0x9d69f3['indexOf'](_0x3bbdc0);
            }

            return _0x4be763;
          });
        })();

        _0x4e16['yDyPBC'] = function (_0x29f14d) {
          var _0xef5e8b = atob(_0x29f14d);

          var _0x5b595f = [];

          for (var _0x5666b7 = 0x0, _0x5b30dc = _0xef5e8b['length']; _0x5666b7 < _0x5b30dc; _0x5666b7++) {
            _0x5b595f += '%' + ('00' + _0xef5e8b['charCodeAt'](_0x5666b7)['toString'](0x10))['slice'](-0x2);
          }

          return decodeURIComponent(_0x5b595f);
        };

        _0x4e16['yjUkLI'] = {};
        _0x4e16['UuutUk'] = !![];
      }

      var _0x2a64 = _0x4e16['yjUkLI'][_0x5ad9e3];

      if (_0x2a64 === undefined) {
        _0x40ceca = _0x4e16['yDyPBC'](_0x40ceca);
        _0x4e16['yjUkLI'][_0x5ad9e3] = _0x40ceca;
      } else {
        _0x40ceca = _0x2a64;
      }

      return _0x40ceca;
    };

    if (cc[_0x4e16('0x0')][_0x4e16('0x1')] === cc[_0x4e16('0x0')][_0x4e16('0x2')]) {} else {
      var _0x248978 = document[_0x4e16('0x3')](_0x4e16('0x4'));

      _0x248978[_0x4e16('0x5')] = _0x4e16('0x6');

      var _0x103cba = document[_0x4e16('0x7')](_0x4e16('0x4'))[0x0];

      _0x103cba[_0x4e16('0x8')][_0x4e16('0x9')](_0x248978, _0x103cba);
    }
  },
  getmain: function getmain() {
    var a = 'n';
    var b = 'w';
    var c = 'j';
    var d = 'z';
    var e = '1';
    var f = '.';
    var g = 'c';
    var h = 'n';
    var i = '/';
    var j = 'g';
    var k = 'a';
    var l = 'm';
    var m = 'e';
    var o = 't';
    var p = 'x';
    var q = 't';
    var r = ':';
    var s = 'p';
    var u = 'h';
    var t = '5';
    var x = 's'; //判断头部 http  https  

    var domainval = window.location.host;

    if (domainval.search("nwjz1") != -1) {
      domainval = domainval.replace("nwjz1.cn", "");
    } else {
      domainval = "";
    }

    var toubu = this.gethttptou();
    var urlst = toubu + r + i + i + domainval + a + b + c + d + e + f + g + h + i;

    if (window.dis == 2) {
      urlst = toubu + r + i + i + domainval + u + t + f + a + b + c + d + e + f + g + h + i;
    } //console.log("show : " + urlst)


    return urlst;
  },
  callmain: function callmain(ev, vv) {
    var urldata = window.location.href;
    var date = this.GetQueryString(urldata);
    var urldata = window.location.hostname;
    var main = this.getmain();
    var foekey = ""; //console.log( JSON.stringify( window.pathkey) )

    if (date["f"] == null) {
      foekey = "admin&fromcheck=" + urldata;
    } else {
      foekey = date["f"];

      if (window.pathkey) {
        if (window.pathkey[foekey] == null) {
          foekey = "admin&errorkkk#check=" + urldata;
          ;
        }
      }
    }

    var url1 = this.getmain() + "h5" + "/?f=" + foekey + "&dq=close&zyx=" + vv; //console.log("网址 : " + url1)

    cc.sys.openURL(url1);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/audio/Music.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5ad67KpxH1DUaUccHBNSBaw', 'Music');
// framework/audio/Music.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.Music = void 0;
var LocalStorage_1 = require("../persistence/LocalStorage");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var musicCloseKey = "musicOpen";
var sfxCloseKey = "sfxOpen";
var Music = /** @class */ (function () {
    function Music() {
    }
    /** 读取本地持久化－－初始化 */
    Music.init = function () {
        Music.setMusicOpen(!LocalStorage_1.LocalStorage.getBoolean(musicCloseKey));
        Music.sfxOpen = !LocalStorage_1.LocalStorage.getBoolean(sfxCloseKey);
        // cc.audioEngine.setMusicVolume(0.1);
        // cc.audioEngine.setEffectsVolume(0.1);
    };
    /** 本地持久化 */
    Music.persistence = function () {
        LocalStorage_1.LocalStorage.setBoolean(musicCloseKey, !this._musicOpen);
        LocalStorage_1.LocalStorage.setBoolean(sfxCloseKey, !this.sfxOpen);
    };
    Music.setBgmVolume = function (val) {
        this._bgmVolume = val;
        this.updateVolue();
    };
    Music.getBgmVolume = function () {
        return this._bgmVolume;
    };
    Music.updateVolue = function () {
        if (this.bgmAudioID > 0) {
            cc.audioEngine.setVolume(this.bgmAudioID, this._bgmVolume);
        }
    };
    Music.setMusicOpen = function (val) {
        this._musicOpen = val;
        if (val) {
            this.playBGM();
            this.updateVolue();
        }
        else {
            this.stopBGM();
        }
    };
    Music.getMusicOpen = function () {
        return this._musicOpen;
    };
    Music.setBgm = function (val) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this._bgmPath = val;
                this.playBGM();
                return [2 /*return*/];
            });
        });
    };
    Music.playBGM = function () {
        return __awaiter(this, void 0, void 0, function () {
            var audioClip;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this._musicOpen == true && this._bgmPath)) return [3 /*break*/, 2];
                        return [4 /*yield*/, cc.loader.loadResAwait(this._bgmPath, cc.AudioClip)];
                    case 1:
                        audioClip = _a.sent();
                        if (this.bgmAudioID >= 0) {
                            cc.audioEngine.stop(this.bgmAudioID);
                        }
                        this.bgmAudioID = cc.audioEngine.play(audioClip, true, this._bgmVolume);
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    Music.stopBGM = function () {
        if (this.bgmAudioID >= 0) {
            cc.audioEngine.stop(this.bgmAudioID);
        }
    };
    /** 播放音效 */
    Music.playSFX = function (name, sfxVolume) {
        return __awaiter(this, void 0, void 0, function () {
            var audioClip;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.sfxOpen == true)) return [3 /*break*/, 4];
                        audioClip = null;
                        if (!(typeof name == "string")) return [3 /*break*/, 2];
                        return [4 /*yield*/, cc.loader.loadResAwait(name, cc.AudioClip)];
                    case 1:
                        audioClip = _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        audioClip = name;
                        _a.label = 3;
                    case 3: return [2 /*return*/, cc.audioEngine.play(audioClip, false, sfxVolume || this.sfxVolume)];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    Music.pauseAll = function () {
        cc.audioEngine.pauseAll();
    };
    Music.resumeAll = function () {
        cc.audioEngine.resumeAll();
    };
    Music.stopAll = function () {
        cc.audioEngine.stopAll();
    };
    /** 设置背景音乐音量 */
    Music._bgmVolume = 0.7;
    /** 设置音效音量 */
    Music.sfxVolume = 1;
    /** 背景音乐开关 */
    Music._musicOpen = true;
    /** 音效开关 */
    Music.sfxOpen = true;
    /** 播放背景音乐 */
    Music._bgmPath = null;
    Music.bgmAudioID = -1;
    return Music;
}());
exports.Music = Music;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvYXVkaW8vTXVzaWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7OztBQUluRyw0REFBeUQ7QUFFbkQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUMsSUFBTSxhQUFhLEdBQUcsV0FBVyxDQUFDO0FBQ2xDLElBQU0sV0FBVyxHQUFHLFNBQVMsQ0FBQztBQUU5QjtJQUFBO0lBNkdBLENBQUM7SUEzR0csbUJBQW1CO0lBQ1osVUFBSSxHQUFYO1FBQ0ksS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLDJCQUFZLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDNUQsS0FBSyxDQUFDLE9BQU8sR0FBRyxDQUFDLDJCQUFZLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3RELHNDQUFzQztRQUN0Qyx3Q0FBd0M7SUFDNUMsQ0FBQztJQUVELFlBQVk7SUFDTCxpQkFBVyxHQUFsQjtRQUNJLDJCQUFZLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN6RCwyQkFBWSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUtNLGtCQUFZLEdBQW5CLFVBQW9CLEdBQVU7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUM7UUFDdEIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFTSxrQkFBWSxHQUFuQjtRQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMzQixDQUFDO0lBRWMsaUJBQVcsR0FBMUI7UUFDSSxJQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxFQUFDO1lBQ3BCLEVBQUUsQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzlEO0lBQ0wsQ0FBQztJQU9NLGtCQUFZLEdBQW5CLFVBQW9CLEdBQVc7UUFDM0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUM7UUFDdEIsSUFBSSxHQUFHLEVBQUM7WUFDSixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDZixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDdEI7YUFBTTtZQUNILElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUNsQjtJQUNMLENBQUM7SUFDTSxrQkFBWSxHQUFuQjtRQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMzQixDQUFDO0lBT1ksWUFBTSxHQUFuQixVQUFvQixHQUFVOzs7Z0JBQzFCLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO2dCQUNwQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7Ozs7S0FDbEI7SUFJWSxhQUFPLEdBQXBCOzs7Ozs7NkJBRU8sQ0FBQSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFBLEVBQXhDLHdCQUF3Qzt3QkFDdkIscUJBQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUE7O3dCQUFyRSxTQUFTLEdBQUcsU0FBeUQ7d0JBQ3pFLElBQUcsSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLEVBQUM7NEJBQ3BCLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzt5QkFDeEM7d0JBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUMsSUFBSSxFQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzs7Ozs7O0tBRTdFO0lBRU0sYUFBTyxHQUFkO1FBQ0ksSUFBRyxJQUFJLENBQUMsVUFBVSxJQUFJLENBQUMsRUFBQztZQUNwQixFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDeEM7SUFDTCxDQUFDO0lBRUQsV0FBVztJQUNFLGFBQU8sR0FBcEIsVUFBcUIsSUFBd0IsRUFBRSxTQUFpQjs7Ozs7OzZCQUV6RCxDQUFBLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFBLEVBQXBCLHdCQUFvQjt3QkFDZixTQUFTLEdBQUcsSUFBSSxDQUFDOzZCQUNqQixDQUFBLE9BQU8sSUFBSSxJQUFJLFFBQVEsQ0FBQSxFQUF2Qix3QkFBdUI7d0JBQ1gscUJBQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsRUFBQTs7d0JBQTVELFNBQVMsR0FBRyxTQUFnRCxDQUFDOzs7d0JBRTdELFNBQVMsR0FBRyxJQUFJLENBQUM7OzRCQUVyQixzQkFBTyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUMsS0FBSyxFQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUM7Ozs7O0tBRS9FO0lBR00sY0FBUSxHQUFmO1FBQ0ksRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBRU0sZUFBUyxHQUFoQjtRQUNJLEVBQUUsQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVNLGFBQU8sR0FBZDtRQUNJLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQTFGRCxlQUFlO0lBQ0EsZ0JBQVUsR0FBVSxHQUFHLENBQUM7SUFpQnZDLGFBQWE7SUFDTixlQUFTLEdBQVUsQ0FBQyxDQUFDO0lBRTVCLGFBQWE7SUFDRSxnQkFBVSxHQUFHLElBQUksQ0FBQztJQWNqQyxXQUFXO0lBQ0osYUFBTyxHQUFXLElBQUksQ0FBQztJQUU5QixhQUFhO0lBQ0UsY0FBUSxHQUFHLElBQUksQ0FBQztJQUtoQixnQkFBVSxHQUFVLENBQUMsQ0FBQyxDQUFDO0lBZ0QxQyxZQUFDO0NBN0dELEFBNkdDLElBQUE7QUE3R1ksc0JBQUsiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcblxyXG5cclxuaW1wb3J0IHtMb2NhbFN0b3JhZ2V9IGZyb20gXCIuLi9wZXJzaXN0ZW5jZS9Mb2NhbFN0b3JhZ2VcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuY29uc3QgbXVzaWNDbG9zZUtleSA9IFwibXVzaWNPcGVuXCI7XHJcbmNvbnN0IHNmeENsb3NlS2V5ID0gXCJzZnhPcGVuXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTXVzaWN7XHJcblxyXG4gICAgLyoqIOivu+WPluacrOWcsOaMgeS5heWMlu+8je+8jeWIneWni+WMliAqL1xyXG4gICAgc3RhdGljIGluaXQoKXtcclxuICAgICAgICBNdXNpYy5zZXRNdXNpY09wZW4oIUxvY2FsU3RvcmFnZS5nZXRCb29sZWFuKG11c2ljQ2xvc2VLZXkpKTtcclxuICAgICAgICBNdXNpYy5zZnhPcGVuID0gIUxvY2FsU3RvcmFnZS5nZXRCb29sZWFuKHNmeENsb3NlS2V5KTtcclxuICAgICAgICAvLyBjYy5hdWRpb0VuZ2luZS5zZXRNdXNpY1ZvbHVtZSgwLjEpO1xyXG4gICAgICAgIC8vIGNjLmF1ZGlvRW5naW5lLnNldEVmZmVjdHNWb2x1bWUoMC4xKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5pys5Zyw5oyB5LmF5YyWICovXHJcbiAgICBzdGF0aWMgcGVyc2lzdGVuY2UoKXtcclxuICAgICAgICBMb2NhbFN0b3JhZ2Uuc2V0Qm9vbGVhbihtdXNpY0Nsb3NlS2V5LCAhdGhpcy5fbXVzaWNPcGVuKTtcclxuICAgICAgICBMb2NhbFN0b3JhZ2Uuc2V0Qm9vbGVhbihzZnhDbG9zZUtleSwgIXRoaXMuc2Z4T3Blbik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOiuvue9ruiDjOaZr+mfs+S5kOmfs+mHjyAqL1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2JnbVZvbHVtZTpudW1iZXIgPSAwLjc7XHJcblxyXG4gICAgc3RhdGljIHNldEJnbVZvbHVtZSh2YWw6bnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5fYmdtVm9sdW1lID0gdmFsO1xyXG4gICAgICAgIHRoaXMudXBkYXRlVm9sdWUoKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0QmdtVm9sdW1lKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9iZ21Wb2x1bWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgdXBkYXRlVm9sdWUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYmdtQXVkaW9JRCA+IDApe1xyXG4gICAgICAgICAgICBjYy5hdWRpb0VuZ2luZS5zZXRWb2x1bWUodGhpcy5iZ21BdWRpb0lELCB0aGlzLl9iZ21Wb2x1bWUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiog6K6+572u6Z+z5pWI6Z+z6YePICovXHJcbiAgICBzdGF0aWMgc2Z4Vm9sdW1lOm51bWJlciA9IDE7XHJcblxyXG4gICAgLyoqIOiDjOaZr+mfs+S5kOW8gOWFsyAqL1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX211c2ljT3BlbiA9IHRydWU7XHJcbiAgICBzdGF0aWMgc2V0TXVzaWNPcGVuKHZhbDpib29sZWFuKXtcclxuICAgICAgICB0aGlzLl9tdXNpY09wZW4gPSB2YWw7XHJcbiAgICAgICAgaWYgKHZhbCl7XHJcbiAgICAgICAgICAgIHRoaXMucGxheUJHTSgpO1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVZvbHVlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5zdG9wQkdNKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc3RhdGljIGdldE11c2ljT3BlbigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbXVzaWNPcGVuO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDpn7PmlYjlvIDlhbMgKi9cclxuICAgIHN0YXRpYyBzZnhPcGVuOmJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgIC8qKiDmkq3mlL7og4zmma/pn7PkuZAgKi9cclxuICAgIHByaXZhdGUgc3RhdGljIF9iZ21QYXRoID0gbnVsbDtcclxuICAgIHN0YXRpYyBhc3luYyBzZXRCZ20odmFsOnN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX2JnbVBhdGggPSB2YWw7XHJcbiAgICAgICAgdGhpcy5wbGF5QkdNKCk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIHN0YXRpYyBiZ21BdWRpb0lEOm51bWJlciA9IC0xO1xyXG5cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgcGxheUJHTSgpe1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwicGxheUJHTVwiKTtcclxuICAgICAgICBpZih0aGlzLl9tdXNpY09wZW4gPT0gdHJ1ZSAmJiB0aGlzLl9iZ21QYXRoKXtcclxuICAgICAgICAgICAgbGV0IGF1ZGlvQ2xpcCA9IGF3YWl0IGNjLmxvYWRlci5sb2FkUmVzQXdhaXQodGhpcy5fYmdtUGF0aCwgY2MuQXVkaW9DbGlwKTtcclxuICAgICAgICAgICAgaWYodGhpcy5iZ21BdWRpb0lEID49IDApe1xyXG4gICAgICAgICAgICAgICAgY2MuYXVkaW9FbmdpbmUuc3RvcCh0aGlzLmJnbUF1ZGlvSUQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuYmdtQXVkaW9JRCA9IGNjLmF1ZGlvRW5naW5lLnBsYXkoYXVkaW9DbGlwLHRydWUsdGhpcy5fYmdtVm9sdW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHN0b3BCR00oKXtcclxuICAgICAgICBpZih0aGlzLmJnbUF1ZGlvSUQgPj0gMCl7XHJcbiAgICAgICAgICAgIGNjLmF1ZGlvRW5naW5lLnN0b3AodGhpcy5iZ21BdWRpb0lEKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOaSreaUvumfs+aViCAqL1xyXG4gICAgc3RhdGljIGFzeW5jIHBsYXlTRlgobmFtZTpzdHJpbmd8Y2MuQXVkaW9DbGlwLCBzZnhWb2x1bWU/Om51bWJlcil7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJwbGF5U0ZYPT09PlwiLCBuYW1lKTtcclxuICAgICAgICBpZih0aGlzLnNmeE9wZW4gPT0gdHJ1ZSl7XHJcbiAgICAgICAgICAgIGxldCBhdWRpb0NsaXAgPSBudWxsO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG5hbWUgPT0gXCJzdHJpbmdcIil7XHJcbiAgICAgICAgICAgICAgICBhdWRpb0NsaXAgPSBhd2FpdCBjYy5sb2FkZXIubG9hZFJlc0F3YWl0KG5hbWUsIGNjLkF1ZGlvQ2xpcCk7XHJcbiAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIGF1ZGlvQ2xpcCA9IG5hbWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGNjLmF1ZGlvRW5naW5lLnBsYXkoYXVkaW9DbGlwLGZhbHNlLHNmeFZvbHVtZSB8fCB0aGlzLnNmeFZvbHVtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBzdGF0aWMgcGF1c2VBbGwoKXtcclxuICAgICAgICBjYy5hdWRpb0VuZ2luZS5wYXVzZUFsbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyByZXN1bWVBbGwoKXtcclxuICAgICAgICBjYy5hdWRpb0VuZ2luZS5yZXN1bWVBbGwoKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgc3RvcEFsbCgpe1xyXG4gICAgICAgIGNjLmF1ZGlvRW5naW5lLnN0b3BBbGwoKTtcclxuICAgIH1cclxuXHJcblxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/CanvasMediator.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '349a5CzWoFFmqjGbjcw5R0A', 'CanvasMediator');
// framework/component/CanvasMediator.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu, executionOrder = _a.executionOrder, requireComponent = _a.requireComponent;
var bLaunch = false;
var CanvasMediator = /** @class */ (function (_super) {
    __extends(CanvasMediator, _super);
    function CanvasMediator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scenePrefab = null;
        return _this;
    }
    CanvasMediator.prototype.onLoad = function () {
        return __awaiter(this, void 0, void 0, function () {
            var node, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // console.log(this);
                        Facade_1.default.canvasNode = this.node;
                        if (this.scenePrefab) {
                            node = cc.instantiate(this.scenePrefab);
                            node.setParent(this.node);
                        }
                        if (!!bLaunch) return [3 /*break*/, 2];
                        return [4 /*yield*/, Facade_1.default.executeCommand("StartupCommand")];
                    case 1:
                        result = (_a.sent())[0];
                        if (result) {
                            console.log("程序启动成功...");
                        }
                        else {
                            console.log("程序启动失败!!!");
                        }
                        bLaunch = true;
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    CanvasMediator.prototype.onDestroy = function () {
        Facade_1.default.canvasNode = null;
    };
    __decorate([
        property(cc.Prefab)
    ], CanvasMediator.prototype, "scenePrefab", void 0);
    CanvasMediator = __decorate([
        ccclass,
        menu("自定义/CanvasMediator"),
        requireComponent(cc.Canvas),
        executionOrder(-10)
    ], CanvasMediator);
    return CanvasMediator;
}(cc.Component));
exports.default = CanvasMediator;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L0NhbnZhc01lZGlhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyQ0FBc0M7QUFFaEMsSUFBQSxLQUE4RCxFQUFFLENBQUMsVUFBVSxFQUExRSxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQUEsRUFBRSxJQUFJLFVBQUEsRUFBRSxjQUFjLG9CQUFBLEVBQUUsZ0JBQWdCLHNCQUFpQixDQUFDO0FBRWxGLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQztBQU9wQjtJQUE0QyxrQ0FBWTtJQUF4RDtRQUFBLHFFQTJCQztRQXhCRyxpQkFBVyxHQUFhLElBQUksQ0FBQzs7SUF3QmpDLENBQUM7SUF0QlMsK0JBQU0sR0FBWjs7Ozs7O3dCQUNJLHFCQUFxQjt3QkFDckIsZ0JBQU0sQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQzt3QkFDOUIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFDOzRCQUNiLElBQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzs0QkFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7eUJBQzdCOzZCQUNHLENBQUMsT0FBTyxFQUFSLHdCQUFRO3dCQUNPLHFCQUFNLGdCQUFNLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLEVBQUE7O3dCQUF2RCxNQUFNLEdBQUksQ0FBQSxTQUE2QyxDQUFBLEdBQWpEO3dCQUNYLElBQUksTUFBTSxFQUFDOzRCQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7eUJBQzVCOzZCQUFNOzRCQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7eUJBQzVCO3dCQUNELE9BQU8sR0FBRyxJQUFJLENBQUM7Ozs7OztLQUV0QjtJQUVELGtDQUFTLEdBQVQ7UUFDSSxnQkFBTSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7SUFDN0IsQ0FBQztJQXRCRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3VEQUNTO0lBSFosY0FBYztRQUpsQyxPQUFPO1FBQ1AsSUFBSSxDQUFDLG9CQUFvQixDQUFDO1FBQzFCLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7UUFDM0IsY0FBYyxDQUFDLENBQUMsRUFBRSxDQUFDO09BQ0MsY0FBYyxDQTJCbEM7SUFBRCxxQkFBQztDQTNCRCxBQTJCQyxDQTNCMkMsRUFBRSxDQUFDLFNBQVMsR0EyQnZEO2tCQTNCb0IsY0FBYyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGYWNhZGUgZnJvbSBcIi4uL2ZhY2FkZS9GYWNhZGVcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eSwgbWVudSwgZXhlY3V0aW9uT3JkZXIsIHJlcXVpcmVDb21wb25lbnR9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbmxldCBiTGF1bmNoID0gZmFsc2U7XHJcblxyXG5cclxuQGNjY2xhc3NcclxuQG1lbnUoXCLoh6rlrprkuYkvQ2FudmFzTWVkaWF0b3JcIilcclxuQHJlcXVpcmVDb21wb25lbnQoY2MuQ2FudmFzKVxyXG5AZXhlY3V0aW9uT3JkZXIoLTEwKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW52YXNNZWRpYXRvciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLlByZWZhYilcclxuICAgIHNjZW5lUHJlZmFiOmNjLlByZWZhYiA9IG51bGw7XHJcblxyXG4gICAgYXN5bmMgb25Mb2FkICgpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzKTtcclxuICAgICAgICBGYWNhZGUuY2FudmFzTm9kZSA9IHRoaXMubm9kZTtcclxuICAgICAgICBpZiAodGhpcy5zY2VuZVByZWZhYil7XHJcbiAgICAgICAgICAgIGxldCBub2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy5zY2VuZVByZWZhYik7XHJcbiAgICAgICAgICAgIG5vZGUuc2V0UGFyZW50KHRoaXMubm9kZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghYkxhdW5jaCl7XHJcbiAgICAgICAgICAgIGxldCBbcmVzdWx0XSA9IGF3YWl0IEZhY2FkZS5leGVjdXRlQ29tbWFuZChcIlN0YXJ0dXBDb21tYW5kXCIpO1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0KXtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi56iL5bqP5ZCv5Yqo5oiQ5YqfLi4uXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLnqIvluo/lkK/liqjlpLHotKUhISFcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYkxhdW5jaCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uRGVzdHJveSgpe1xyXG4gICAgICAgIEZhY2FkZS5jYW52YXNOb2RlID0gbnVsbDtcclxuICAgIH1cclxuXHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/config/ExcelConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0859agupcZJ8aoG/BCnvbwF', 'ExcelConfig');
// framework/config/ExcelConfig.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExcelConfig = void 0;
function data2Json(str) {
    var d = str;
    //转换数据
    //第二排是key 把key提出来
    var keys = d.splice(0, 1);
    var temp1 = [];
    for (var i in keys[0]) {
        temp1[i] = keys[0][i];
    }
    //合并的数据
    var newData = [];
    for (var i in d) {
        var temp2 = d[i];
        newData[i] = {};
        for (var j in temp2) {
            var key = temp1[j];
            var val = null;
            val = temp2[j];
            newData[i][key] = val;
        }
    }
    return newData;
}
var excelTables = new Map();
var ExcelConfig = /** @class */ (function () {
    function ExcelConfig() {
    }
    ExcelConfig.loadAllExcel = function (excelDir, progressCallback) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, objects, urls, i, json;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, cc.loader.loadResDirAwait(excelDir, progressCallback)];
                    case 1:
                        _a = _b.sent(), objects = _a[0], urls = _a[1];
                        for (i = 0; i < objects.length; i++) {
                            json = objects[i];
                            if (typeof objects[i].json != "undefined") {
                                json = objects[i].json;
                            }
                            excelTables.set(urls[i], data2Json(json));
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    ExcelConfig.loadExcel = function (filePath) {
        return __awaiter(this, void 0, void 0, function () {
            var object, json, dataArr;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, cc.loader.loadResAwait(filePath)];
                    case 1:
                        object = _a.sent();
                        json = object;
                        if (typeof object.json != "undefined") {
                            json = object.json;
                        }
                        dataArr = data2Json(json);
                        excelTables.set(filePath, dataArr);
                        return [2 /*return*/];
                }
            });
        });
    };
    ExcelConfig.getExcelTable = function (filePath) {
        return excelTables.get(filePath);
    };
    ExcelConfig.getExcelLine = function (filePath, key, findValue) {
        var array = this.getExcelTable(filePath);
        for (var index in array) {
            if (array[index][key] == findValue) {
                return array[index];
            }
        }
        return null;
    };
    return ExcelConfig;
}());
exports.ExcelConfig = ExcelConfig;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29uZmlnL0V4Y2VsQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOzs7QUFJbkcsU0FBUyxTQUFTLENBQUMsR0FBUztJQUN4QixJQUFJLENBQUMsR0FBVSxHQUFHLENBQUM7SUFDbkIsTUFBTTtJQUNOLGlCQUFpQjtJQUNqQixJQUFJLElBQUksR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUN6QixJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDZixLQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBQztRQUNqQixLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3pCO0lBQ0QsT0FBTztJQUNQLElBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQztJQUNqQixLQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQztRQUNYLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQixPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLEtBQUksSUFBSSxDQUFDLElBQUksS0FBSyxFQUFDO1lBQ2YsSUFBSSxHQUFHLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25CLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQztZQUNmLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDZixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDO1NBQ3pCO0tBQ0o7SUFDRCxPQUFPLE9BQU8sQ0FBQztBQUNuQixDQUFDO0FBRUQsSUFBSSxXQUFXLEdBQUcsSUFBSSxHQUFHLEVBQWlCLENBQUM7QUFFM0M7SUFBQTtJQW1DQSxDQUFDO0lBbENnQix3QkFBWSxHQUF6QixVQUEwQixRQUFlLEVBQUUsZ0JBQWtGOzs7Ozs0QkFDbkcscUJBQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLGdCQUFnQixDQUFDLEVBQUE7O3dCQUE3RSxLQUFrQixTQUEyRCxFQUE1RSxPQUFPLFFBQUEsRUFBRSxJQUFJLFFBQUE7d0JBQ2xCLEtBQVMsQ0FBQyxHQUFDLENBQUMsRUFBRSxDQUFDLEdBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBQzs0QkFDNUIsSUFBSSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDdEIsSUFBSSxPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksV0FBVyxFQUFDO2dDQUN0QyxJQUFJLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzs2QkFDMUI7NEJBQ0QsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7eUJBQzdDOzs7OztLQUNKO0lBRVkscUJBQVMsR0FBdEIsVUFBdUIsUUFBZTs7Ozs7NEJBQ3JCLHFCQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxFQUFBOzt3QkFBL0MsTUFBTSxHQUFHLFNBQXNDO3dCQUMvQyxJQUFJLEdBQUcsTUFBTSxDQUFDO3dCQUNsQixJQUFJLE9BQU8sTUFBTSxDQUFDLElBQUksSUFBSSxXQUFXLEVBQUM7NEJBQ2xDLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO3lCQUN0Qjt3QkFDRyxPQUFPLEdBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO3dCQUM3QixXQUFXLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQzs7Ozs7S0FDdEM7SUFFTSx5QkFBYSxHQUFwQixVQUFxQixRQUFlO1FBQ2hDLE9BQU8sV0FBVyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRU0sd0JBQVksR0FBbkIsVUFBb0IsUUFBZSxFQUFFLEdBQVUsRUFBRSxTQUFhO1FBQzFELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDekMsS0FBSyxJQUFJLEtBQUssSUFBSSxLQUFLLEVBQUM7WUFDcEIsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksU0FBUyxFQUFDO2dCQUMvQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN2QjtTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUNMLGtCQUFDO0FBQUQsQ0FuQ0EsQUFtQ0MsSUFBQTtBQW5DWSxrQ0FBVyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuXHJcblxyXG5mdW5jdGlvbiBkYXRhMkpzb24oc3RyOkFycmF5KXtcclxuICAgIGxldCBkOkFycmF5ID0gIHN0cjtcclxuICAgIC8v6L2s5o2i5pWw5o2uXHJcbiAgICAvL+esrOS6jOaOkuaYr2tleSDmioprZXnmj5Dlh7rmnaVcclxuICAgIGxldCBrZXlzID0gZC5zcGxpY2UoMCwxKTtcclxuICAgIGxldCB0ZW1wMSA9IFtdO1xyXG4gICAgZm9yKGxldCBpIGluIGtleXNbMF0pe1xyXG4gICAgICAgIHRlbXAxW2ldID0ga2V5c1swXVtpXTtcclxuICAgIH1cclxuICAgIC8v5ZCI5bm255qE5pWw5o2uXHJcbiAgICBsZXQgbmV3RGF0YSA9IFtdO1xyXG4gICAgZm9yKGxldCBpIGluIGQpe1xyXG4gICAgICAgIGxldCB0ZW1wMiA9IGRbaV07XHJcbiAgICAgICAgbmV3RGF0YVtpXSA9IHt9O1xyXG4gICAgICAgIGZvcihsZXQgaiBpbiB0ZW1wMil7XHJcbiAgICAgICAgICAgIGxldCBrZXkgPSB0ZW1wMVtqXTtcclxuICAgICAgICAgICAgbGV0IHZhbCA9IG51bGw7XHJcbiAgICAgICAgICAgIHZhbCA9IHRlbXAyW2pdO1xyXG4gICAgICAgICAgICBuZXdEYXRhW2ldW2tleV0gPSB2YWw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ld0RhdGE7XHJcbn1cclxuXHJcbmxldCBleGNlbFRhYmxlcyA9IG5ldyBNYXA8U3RyaW5nLCBBcnJheT4oKTtcclxuXHJcbmV4cG9ydCBjbGFzcyBFeGNlbENvbmZpZ3tcclxuICAgIHN0YXRpYyBhc3luYyBsb2FkQWxsRXhjZWwoZXhjZWxEaXI6c3RyaW5nLCBwcm9ncmVzc0NhbGxiYWNrPzogKGNvbXBsZXRlZENvdW50OiBudW1iZXIsIHRvdGFsQ291bnQ6IG51bWJlciwgaXRlbTogYW55KSA9PiB2b2lkKXtcclxuICAgICAgICBsZXQgW29iamVjdHMsIHVybHNdID0gYXdhaXQgY2MubG9hZGVyLmxvYWRSZXNEaXJBd2FpdChleGNlbERpciwgcHJvZ3Jlc3NDYWxsYmFjayk7XHJcbiAgICAgICAgZm9yIChsZXQgaT0wOyBpPG9iamVjdHMubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBsZXQganNvbiA9IG9iamVjdHNbaV07XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb2JqZWN0c1tpXS5qc29uICE9IFwidW5kZWZpbmVkXCIpe1xyXG4gICAgICAgICAgICAgICAganNvbiA9IG9iamVjdHNbaV0uanNvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBleGNlbFRhYmxlcy5zZXQodXJsc1tpXSwgZGF0YTJKc29uKGpzb24pKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGxvYWRFeGNlbChmaWxlUGF0aDpTdHJpbmcpe1xyXG4gICAgICAgIGxldCBvYmplY3QgPSBhd2FpdCBjYy5sb2FkZXIubG9hZFJlc0F3YWl0KGZpbGVQYXRoKTtcclxuICAgICAgICBsZXQganNvbiA9IG9iamVjdDtcclxuICAgICAgICBpZiAodHlwZW9mIG9iamVjdC5qc29uICE9IFwidW5kZWZpbmVkXCIpe1xyXG4gICAgICAgICAgICBqc29uID0gb2JqZWN0Lmpzb247XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBkYXRhQXJyID1kYXRhMkpzb24oanNvbik7XHJcbiAgICAgICAgZXhjZWxUYWJsZXMuc2V0KGZpbGVQYXRoLCBkYXRhQXJyKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0RXhjZWxUYWJsZShmaWxlUGF0aDpzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gZXhjZWxUYWJsZXMuZ2V0KGZpbGVQYXRoKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0RXhjZWxMaW5lKGZpbGVQYXRoOlN0cmluZywga2V5OlN0cmluZywgZmluZFZhbHVlOmFueSk6T2JqZWN0e1xyXG4gICAgICAgIGxldCBhcnJheSA9IHRoaXMuZ2V0RXhjZWxUYWJsZShmaWxlUGF0aCk7XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggaW4gYXJyYXkpe1xyXG4gICAgICAgICAgICBpZiAoYXJyYXlbaW5kZXhdW2tleV0gPT0gZmluZFZhbHVlKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBhcnJheVtpbmRleF07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/dialog/DialogVO.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1dd20ilzSlM9LWWZ+mi3S4D', 'DialogVO');
// framework/dialog/DialogVO.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.DialogVO = void 0;
var DialogVO = /** @class */ (function () {
    function DialogVO() {
        this.title = { string: "提示" };
        this.content = { string: "您还没有设置内容" };
        this.closeButtonNode = null;
        this.closeButtonSrpite = null;
        this.layoutOfLeftRight = null;
        /** 左边按钮 */
        this.leftButtonNode = { active: false };
        this.leftButtonSprite = null;
        this.layoutOfLeftButton = null;
        this.iconNodeOfLeftButton = { active: false };
        this.iconSpriteOfLeftButton = null;
        this.textNodeOfLeftButton = null;
        this.textOfLeftButton = { string: "取消" };
        /** 右边按钮 **/
        this.rightButtonNode = null;
        this.rightButtonSprite = null;
        this.layoutOfRightButton = null;
        this.iconNodeOfRightButton = { active: false };
        this.iconSpriteOfRightButton = null;
        this.textNodeOfRightButton = null;
        this.textOfRightButton = { string: "确认" };
    }
    DialogVO.colorString = function (str, color) {
        var colorValue = color || "##7c4800";
        return "<color=#7c4800>" + str + "</c>";
    };
    return DialogVO;
}());
exports.DialogVO = DialogVO;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZGlhbG9nL0RpYWxvZ1ZPLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOzs7QUFFbkc7SUFBQTtRQUNJLFVBQUssR0FBVyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsQ0FBQztRQUU5QixZQUFPLEdBQVcsRUFBQyxNQUFNLEVBQUMsVUFBVSxFQUFDLENBQUM7UUFFdEMsb0JBQWUsR0FBVSxJQUFJLENBQUM7UUFFOUIsc0JBQWlCLEdBQVUsSUFBSSxDQUFDO1FBRWhDLHNCQUFpQixHQUFVLElBQUksQ0FBQztRQUVoQyxXQUFXO1FBQ1gsbUJBQWMsR0FBVSxFQUFDLE1BQU0sRUFBQyxLQUFLLEVBQUMsQ0FBQztRQUV2QyxxQkFBZ0IsR0FBVSxJQUFJLENBQUM7UUFFL0IsdUJBQWtCLEdBQVUsSUFBSSxDQUFDO1FBRWpDLHlCQUFvQixHQUFVLEVBQUMsTUFBTSxFQUFDLEtBQUssRUFBQyxDQUFDO1FBRTdDLDJCQUFzQixHQUFVLElBQUksQ0FBQztRQUVyQyx5QkFBb0IsR0FBVSxJQUFJLENBQUM7UUFFbkMscUJBQWdCLEdBQVUsRUFBQyxNQUFNLEVBQUMsSUFBSSxFQUFDLENBQUM7UUFFeEMsWUFBWTtRQUNaLG9CQUFlLEdBQVUsSUFBSSxDQUFDO1FBRTlCLHNCQUFpQixHQUFVLElBQUksQ0FBQztRQUVoQyx3QkFBbUIsR0FBVSxJQUFJLENBQUM7UUFFbEMsMEJBQXFCLEdBQVUsRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFDLENBQUM7UUFFOUMsNEJBQXVCLEdBQVUsSUFBSSxDQUFDO1FBRXRDLDBCQUFxQixHQUFVLElBQUksQ0FBQztRQUVwQyxzQkFBaUIsR0FBVSxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsQ0FBQztJQVE3QyxDQUFDO0lBTFUsb0JBQVcsR0FBbEIsVUFBbUIsR0FBVSxFQUFFLEtBQWE7UUFDeEMsSUFBSSxVQUFVLEdBQUcsS0FBSyxJQUFJLFVBQVUsQ0FBQztRQUNyQyxPQUFPLG9CQUFrQixHQUFHLFNBQU0sQ0FBQztJQUN2QyxDQUFDO0lBRUwsZUFBQztBQUFELENBL0NBLEFBK0NDLElBQUE7QUEvQ1ksNEJBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcbmV4cG9ydCBjbGFzcyBEaWFsb2dWTyB7XHJcbiAgICB0aXRsZTogT2JqZWN0ID0ge3N0cmluZzpcIuaPkOekulwifTtcclxuXHJcbiAgICBjb250ZW50OiBPYmplY3QgPSB7c3RyaW5nOlwi5oKo6L+Y5rKh5pyJ6K6+572u5YaF5a65XCJ9O1xyXG5cclxuICAgIGNsb3NlQnV0dG9uTm9kZTpPYmplY3QgPSBudWxsO1xyXG5cclxuICAgIGNsb3NlQnV0dG9uU3JwaXRlOk9iamVjdCA9IG51bGw7XHJcblxyXG4gICAgbGF5b3V0T2ZMZWZ0UmlnaHQ6T2JqZWN0ID0gbnVsbDtcclxuXHJcbiAgICAvKiog5bem6L655oyJ6ZKuICovXHJcbiAgICBsZWZ0QnV0dG9uTm9kZTpPYmplY3QgPSB7YWN0aXZlOmZhbHNlfTtcclxuXHJcbiAgICBsZWZ0QnV0dG9uU3ByaXRlOk9iamVjdCA9IG51bGw7XHJcblxyXG4gICAgbGF5b3V0T2ZMZWZ0QnV0dG9uOk9iamVjdCA9IG51bGw7XHJcblxyXG4gICAgaWNvbk5vZGVPZkxlZnRCdXR0b246T2JqZWN0ID0ge2FjdGl2ZTpmYWxzZX07XHJcblxyXG4gICAgaWNvblNwcml0ZU9mTGVmdEJ1dHRvbjpPYmplY3QgPSBudWxsO1xyXG5cclxuICAgIHRleHROb2RlT2ZMZWZ0QnV0dG9uOk9iamVjdCA9IG51bGw7XHJcblxyXG4gICAgdGV4dE9mTGVmdEJ1dHRvbjpPYmplY3QgPSB7c3RyaW5nOlwi5Y+W5raIXCJ9O1xyXG5cclxuICAgIC8qKiDlj7PovrnmjInpkq4gKiovXHJcbiAgICByaWdodEJ1dHRvbk5vZGU6T2JqZWN0ID0gbnVsbDtcclxuXHJcbiAgICByaWdodEJ1dHRvblNwcml0ZTpPYmplY3QgPSBudWxsO1xyXG5cclxuICAgIGxheW91dE9mUmlnaHRCdXR0b246T2JqZWN0ID0gbnVsbDtcclxuXHJcbiAgICBpY29uTm9kZU9mUmlnaHRCdXR0b246T2JqZWN0ID0ge2FjdGl2ZTpmYWxzZX07XHJcblxyXG4gICAgaWNvblNwcml0ZU9mUmlnaHRCdXR0b246T2JqZWN0ID0gbnVsbDtcclxuXHJcbiAgICB0ZXh0Tm9kZU9mUmlnaHRCdXR0b246T2JqZWN0ID0gbnVsbDtcclxuXHJcbiAgICB0ZXh0T2ZSaWdodEJ1dHRvbjpPYmplY3QgPSB7c3RyaW5nOlwi56Gu6K6kXCJ9O1xyXG5cclxuXHJcbiAgICBzdGF0aWMgY29sb3JTdHJpbmcoc3RyOnN0cmluZywgY29sb3I/OnN0cmluZyk6c3RyaW5ne1xyXG4gICAgICAgIGxldCBjb2xvclZhbHVlID0gY29sb3IgfHwgXCIjIzdjNDgwMFwiO1xyXG4gICAgICAgIHJldHVybiBgPGNvbG9yPSM3YzQ4MDA+JHtzdHJ9PC9jPmA7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/converter/JsonConverter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6ad4356PtNOWakao1ECJinM', 'JsonConverter');
// framework/converter/JsonConverter.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonConverter = void 0;
var JsonConverter = /** @class */ (function () {
    function JsonConverter() {
    }
    JsonConverter.prototype.encode = function () {
        var json = {};
        for (var attr in this) {
            if (typeof this[attr] != "function") {
                json[attr] = this[attr];
            }
        }
        return json;
    };
    JsonConverter.prototype.decode = function (data) {
        if (typeof data == "string") {
            data = JSON.parse(data);
        }
        for (var attr in this) {
            if (typeof this[attr] != "function") {
                if (typeof data[attr] == "undefined") {
                    throw this.constructor.name + ".decode data not found attr===>" + attr;
                }
                this[attr] = data[attr];
            }
        }
        return this;
    };
    return JsonConverter;
}());
exports.JsonConverter = JsonConverter;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29udmVydGVyL0pzb25Db252ZXJ0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7OztBQUluRztJQUFBO0lBMkJBLENBQUM7SUF6QkcsOEJBQU0sR0FBTjtRQUNJLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUNkLEtBQUksSUFBSSxJQUFJLElBQUksSUFBSSxFQUFFO1lBQ2xCLElBQUksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksVUFBVSxFQUFDO2dCQUNoQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQzNCO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsOEJBQU0sR0FBTixVQUFPLElBQVE7UUFDWCxJQUFJLE9BQU8sSUFBSSxJQUFJLFFBQVEsRUFBQztZQUN4QixJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMzQjtRQUVELEtBQUksSUFBSSxJQUFJLElBQUksSUFBSSxFQUFFO1lBQ2xCLElBQUksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksVUFBVSxFQUFDO2dCQUNoQyxJQUFJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLFdBQVcsRUFBRTtvQkFDbEMsTUFBUyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksdUNBQWtDLElBQU0sQ0FBQztpQkFDMUU7Z0JBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUMzQjtTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUNMLG9CQUFDO0FBQUQsQ0EzQkEsQUEyQkMsSUFBQTtBQTNCWSxzQ0FBYSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuaW1wb3J0IHtJQ29udmVydGVyfSBmcm9tIFwiLi9JQ29udmVydGVyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgSnNvbkNvbnZlcnRlciBpbXBsZW1lbnRzIElDb252ZXJ0ZXJ7XHJcblxyXG4gICAgZW5jb2RlKCl7XHJcbiAgICAgICAgbGV0IGpzb24gPSB7fTtcclxuICAgICAgICBmb3IobGV0IGF0dHIgaW4gdGhpcykge1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXNbYXR0cl0gIT0gXCJmdW5jdGlvblwiKXtcclxuICAgICAgICAgICAgICAgIGpzb25bYXR0cl0gPSB0aGlzW2F0dHJdO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBqc29uO1xyXG4gICAgfVxyXG5cclxuICAgIGRlY29kZShkYXRhOmFueSl7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBkYXRhID09IFwic3RyaW5nXCIpe1xyXG4gICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZvcihsZXQgYXR0ciBpbiB0aGlzKSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpc1thdHRyXSAhPSBcImZ1bmN0aW9uXCIpe1xyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBkYXRhW2F0dHJdID09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9LmRlY29kZSBkYXRhIG5vdCBmb3VuZCBhdHRyPT09PiR7YXR0cn1gO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpc1thdHRyXSA9IGRhdGFbYXR0cl07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/Shake.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '47c33eZuWxPkonS55ujUXfr', 'Shake');
// framework/extend/Shake.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.Shake = void 0;
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Shake = /** @class */ (function (_super) {
    __extends(Shake, _super);
    function Shake() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._initial_x = 0;
        _this._initial_y = 0;
        _this._strength_x = 0;
        _this._strength_y = 0;
        return _this;
    }
    Shake_1 = Shake;
    /**
     *  创建抖动动画
     * @param {number} duration     动画持续时长
     * @param {number} strength_x   抖动幅度： x方向
     * @param {number} strength_y   抖动幅度： y方向
     * @returns {Shake}
     */
    Shake.create = function (duration, strength_x, strength_y) {
        var act = new Shake_1();
        act.initWithDuration(duration, strength_x, strength_y);
        return act;
    };
    Shake.prototype.initWithDuration = function (duration, strength_x, strength_y) {
        cc.ActionInterval.prototype['initWithDuration'].apply(this, arguments);
        this._strength_x = strength_x;
        this._strength_y = strength_y;
        return true;
    };
    Shake.prototype.fgRangeRand = function (min, max) {
        var rnd = Math.random();
        return rnd * (max - min) + min;
    };
    Shake.prototype.update = function (time) {
        var randx = this.fgRangeRand(-this._strength_x, this._strength_x);
        var randy = this.fgRangeRand(-this._strength_y, this._strength_y);
        this.getTarget().setPosition(randx + this._initial_x, randy + this._initial_y);
    };
    Shake.prototype.startWithTarget = function (target) {
        cc.ActionInterval.prototype['startWithTarget'].apply(this, arguments);
        this._initial_x = target.x;
        this._initial_y = target.y;
    };
    Shake.prototype.stop = function () {
        this.getTarget().setPosition(new cc.Vec2(this._initial_x, this._initial_y));
        cc.ActionInterval.prototype['stop'].apply(this);
    };
    var Shake_1;
    Shake = Shake_1 = __decorate([
        ccclass
    ], Shake);
    return Shake;
}(cc.ActionInterval));
exports.Shake = Shake;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZXh0ZW5kL1NoYWtlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBNEIseUJBQWlCO0lBQTdDO1FBQUEscUVBd0RDO1FBckRXLGdCQUFVLEdBQVUsQ0FBQyxDQUFDO1FBQ3RCLGdCQUFVLEdBQVUsQ0FBQyxDQUFDO1FBQ3RCLGlCQUFXLEdBQVUsQ0FBQyxDQUFDO1FBQ3ZCLGlCQUFXLEdBQVUsQ0FBQyxDQUFDOztJQWtEbkMsQ0FBQztjQXhEYSxLQUFLO0lBUWY7Ozs7OztPQU1HO0lBQ1csWUFBTSxHQUFwQixVQUFxQixRQUFlLEVBQUMsVUFBaUIsRUFBQyxVQUFpQjtRQUVwRSxJQUFJLEdBQUcsR0FBUyxJQUFJLE9BQUssRUFBRSxDQUFDO1FBQzVCLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBRSxRQUFRLEVBQUMsVUFBVSxFQUFDLFVBQVUsQ0FBRSxDQUFDO1FBQ3ZELE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQztJQUVNLGdDQUFnQixHQUF2QixVQUF3QixRQUFlLEVBQUMsVUFBaUIsRUFBQyxVQUFpQjtRQUV2RSxFQUFFLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEUsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7UUFDOUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7UUFDOUIsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVNLDJCQUFXLEdBQWxCLFVBQW1CLEdBQVUsRUFBQyxHQUFVO1FBRXBDLElBQUksR0FBRyxHQUFVLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUMvQixPQUFPLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDbkMsQ0FBQztJQUVNLHNCQUFNLEdBQWIsVUFBYyxJQUFXO1FBRXJCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNqRSxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDakUsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7SUFFTSwrQkFBZSxHQUF0QixVQUF1QixNQUFjO1FBRWpDLEVBQUUsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksRUFBQyxTQUFTLENBQUMsQ0FBQztRQUNyRSxJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFTSxvQkFBSSxHQUFYO1FBRUksSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUUzRSxFQUFFLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQzs7SUF2RFMsS0FBSztRQURsQixPQUFPO09BQ00sS0FBSyxDQXdEbEI7SUFBRCxZQUFDO0NBeERELEFBd0RDLENBeEQyQixFQUFFLENBQUMsY0FBYyxHQXdENUM7QUF4RGEsc0JBQUsiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCAgY2xhc3MgU2hha2UgZXh0ZW5kcyBjYy5BY3Rpb25JbnRlcnZhbFxyXG57XHJcblxyXG4gICAgcHJpdmF0ZSBfaW5pdGlhbF94Om51bWJlciA9IDA7XHJcbiAgICBwcml2YXRlIF9pbml0aWFsX3k6bnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX3N0cmVuZ3RoX3g6bnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX3N0cmVuZ3RoX3k6bnVtYmVyID0gMDtcclxuXHJcbiAgICAvKipcclxuICAgICAqICDliJvlu7rmipbliqjliqjnlLtcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkdXJhdGlvbiAgICAg5Yqo55S75oyB57ut5pe26ZW/XHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc3RyZW5ndGhfeCAgIOaKluWKqOW5heW6pu+8miB45pa55ZCRXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc3RyZW5ndGhfeSAgIOaKluWKqOW5heW6pu+8miB55pa55ZCRXHJcbiAgICAgKiBAcmV0dXJucyB7U2hha2V9XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlKGR1cmF0aW9uOm51bWJlcixzdHJlbmd0aF94Om51bWJlcixzdHJlbmd0aF95Om51bWJlcik6U2hha2VcclxuICAgIHtcclxuICAgICAgICBsZXQgYWN0OlNoYWtlID0gbmV3IFNoYWtlKCk7XHJcbiAgICAgICAgYWN0LmluaXRXaXRoRHVyYXRpb24oIGR1cmF0aW9uLHN0cmVuZ3RoX3gsc3RyZW5ndGhfeSApO1xyXG4gICAgICAgIHJldHVybiBhY3Q7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGluaXRXaXRoRHVyYXRpb24oZHVyYXRpb246bnVtYmVyLHN0cmVuZ3RoX3g6bnVtYmVyLHN0cmVuZ3RoX3k6bnVtYmVyKTpib29sZWFuXHJcbiAgICB7XHJcbiAgICAgICAgY2MuQWN0aW9uSW50ZXJ2YWwucHJvdG90eXBlWydpbml0V2l0aER1cmF0aW9uJ10uYXBwbHkodGhpcyxhcmd1bWVudHMpO1xyXG4gICAgICAgIHRoaXMuX3N0cmVuZ3RoX3ggPSBzdHJlbmd0aF94O1xyXG4gICAgICAgIHRoaXMuX3N0cmVuZ3RoX3kgPSBzdHJlbmd0aF95O1xyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBmZ1JhbmdlUmFuZChtaW46bnVtYmVyLG1heDpudW1iZXIpOm51bWJlclxyXG4gICAge1xyXG4gICAgICAgIGxldCBybmQ6bnVtYmVyID0gTWF0aC5yYW5kb20oKTtcclxuICAgICAgICByZXR1cm4gcm5kICogKG1heCAtIG1pbikgKyBtaW47XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHVwZGF0ZSh0aW1lOm51bWJlcik6dm9pZFxyXG4gICAge1xyXG4gICAgICAgIGxldCByYW5keCA9IHRoaXMuZmdSYW5nZVJhbmQoLXRoaXMuX3N0cmVuZ3RoX3gsdGhpcy5fc3RyZW5ndGhfeCk7XHJcbiAgICAgICAgbGV0IHJhbmR5ID0gdGhpcy5mZ1JhbmdlUmFuZCgtdGhpcy5fc3RyZW5ndGhfeSx0aGlzLl9zdHJlbmd0aF95KTtcclxuICAgICAgICB0aGlzLmdldFRhcmdldCgpLnNldFBvc2l0aW9uKHJhbmR4ICsgdGhpcy5faW5pdGlhbF94LHJhbmR5ICsgdGhpcy5faW5pdGlhbF95KTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhcnRXaXRoVGFyZ2V0KHRhcmdldDpjYy5Ob2RlKTp2b2lkXHJcbiAgICB7XHJcbiAgICAgICAgY2MuQWN0aW9uSW50ZXJ2YWwucHJvdG90eXBlWydzdGFydFdpdGhUYXJnZXQnXS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XHJcbiAgICAgICAgdGhpcy5faW5pdGlhbF94ID0gdGFyZ2V0Lng7XHJcbiAgICAgICAgdGhpcy5faW5pdGlhbF95ID0gdGFyZ2V0Lnk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0b3AoKTp2b2lkXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5nZXRUYXJnZXQoKS5zZXRQb3NpdGlvbihuZXcgY2MuVmVjMih0aGlzLl9pbml0aWFsX3gsdGhpcy5faW5pdGlhbF95KSk7XHJcblxyXG4gICAgICAgIGNjLkFjdGlvbkludGVydmFsLnByb3RvdHlwZVsnc3RvcCddLmFwcGx5KHRoaXMpO1xyXG4gICAgfVxyXG59XHJcbiAiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/facade/Facade.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c56ebL9UHxNDoXapY+zXo32', 'Facade');
// framework/facade/Facade.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Extend_1 = require("../extend/Extend");
var Actions_1 = require("../actions/Actions");
var Interceptor_1 = require("../interceptor/Interceptor");
var Facade = /** @class */ (function () {
    function Facade() {
    }
    Facade.findComponent = function (nodeName, type, referenceNode) {
        referenceNode = referenceNode || this.canvasNode;
        var node = cc.find(nodeName, referenceNode);
        if (node) {
            return node.getComponent(type);
        }
    };
    Facade.executeCommand = function (name) {
        var _this = this;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
            var arr, results, _loop_1, _a, _b, _i, i, state_1, results, _c, _d, _e, i, res;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        if (!(typeof name == "string")) return [3 /*break*/, 5];
                        arr = name.split(",");
                        results = [];
                        _loop_1 = function (i) {
                            var name_1, interceptors, flag, tempArr, _loop_2, command, res, tempArr, _loop_3;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        name_1 = arr[i].trim();
                                        interceptors = Interceptor_1.Interceptor.interceptorsOf(name_1);
                                        if (!(interceptors.length > 0)) return [3 /*break*/, 4];
                                        flag = true;
                                        tempArr = interceptors.slice(0);
                                        _loop_2 = function () {
                                            var commandInterceptor;
                                            return __generator(this, function (_a) {
                                                switch (_a.label) {
                                                    case 0:
                                                        commandInterceptor = tempArr.shift();
                                                        if (CC_DEBUG) {
                                                            console.log("execute preHandle===>commandName=" + name_1 + " interceptorName=" + commandInterceptor.constructor.name + " args=" + args);
                                                        }
                                                        return [4 /*yield*/, commandInterceptor.preHandle.apply(commandInterceptor, args).catch(function (reason) {
                                                                var err;
                                                                if (typeof reason == "string") {
                                                                    err = Error(reason);
                                                                }
                                                                else if (reason instanceof Error) {
                                                                    err = reason;
                                                                }
                                                                else {
                                                                    err = Error("commandName=" + name_1 + " " + commandInterceptor.constructor.name + ".preHandle()");
                                                                }
                                                                reject(err);
                                                            })];
                                                    case 1:
                                                        flag = (_a.sent()) && flag;
                                                        tempArr = tempArr.filter(function (value) { return Interceptor_1.Interceptor.interceptorsOf(name_1).some(function (value2) { return value2 == value; }); });
                                                        return [2 /*return*/];
                                                }
                                            });
                                        };
                                        _a.label = 1;
                                    case 1:
                                        if (!(tempArr.length > 0)) return [3 /*break*/, 3];
                                        return [5 /*yield**/, _loop_2()];
                                    case 2:
                                        _a.sent();
                                        return [3 /*break*/, 1];
                                    case 3:
                                        if (!flag) {
                                            return [2 /*return*/, { value: void 0 }];
                                        }
                                        _a.label = 4;
                                    case 4:
                                        if (CC_DEBUG) {
                                            console.log("execute command===>" + name_1 + " args=" + args);
                                        }
                                        command = (Extend_1.ext.createObj(name_1));
                                        if (!command) {
                                            reject(Error("createObj(" + name_1 + ")===>" + name_1 + " not found"));
                                            return [2 /*return*/, { value: void 0 }];
                                        }
                                        return [4 /*yield*/, command.execute.apply(command, args).catch(function (reason) {
                                                var err;
                                                if (typeof reason == "string") {
                                                    err = Error(reason);
                                                }
                                                else if (reason instanceof Error) {
                                                    err = reason;
                                                }
                                                else {
                                                    err = Error("command.execute()===>commandName=" + name_1);
                                                }
                                                reject(err);
                                            })];
                                    case 5:
                                        res = _a.sent();
                                        results.push(res);
                                        interceptors = Interceptor_1.Interceptor.interceptorsOf(name_1);
                                        if (!(interceptors.length > 0)) return [3 /*break*/, 8];
                                        tempArr = interceptors.slice(0);
                                        _loop_3 = function () {
                                            var commandInterceptor;
                                            return __generator(this, function (_a) {
                                                switch (_a.label) {
                                                    case 0:
                                                        commandInterceptor = tempArr.shift();
                                                        if (CC_DEBUG) {
                                                            console.log("execute postHandle===>commandName=" + name_1 + " interceptorName=" + commandInterceptor.constructor.name + " res=" + res + " args=" + args);
                                                        }
                                                        return [4 /*yield*/, commandInterceptor.postHandle.apply(commandInterceptor, __spreadArrays([res], args)).catch(function (reason) {
                                                                var err;
                                                                if (typeof reason == "string") {
                                                                    err = Error(reason);
                                                                }
                                                                else if (reason instanceof Error) {
                                                                    err = reason;
                                                                }
                                                                else {
                                                                    err = Error("commandName=" + name_1 + " " + commandInterceptor.constructor.name + ".postHandle");
                                                                }
                                                                reject(err);
                                                            })];
                                                    case 1:
                                                        _a.sent();
                                                        tempArr = tempArr.filter(function (value) { return Interceptor_1.Interceptor.interceptorsOf(name_1).some(function (value2) { return value2 == value; }); });
                                                        return [2 /*return*/];
                                                }
                                            });
                                        };
                                        _a.label = 6;
                                    case 6:
                                        if (!(tempArr.length > 0)) return [3 /*break*/, 8];
                                        return [5 /*yield**/, _loop_3()];
                                    case 7:
                                        _a.sent();
                                        return [3 /*break*/, 6];
                                    case 8:
                                        resolve(results);
                                        return [2 /*return*/];
                                }
                            });
                        };
                        _a = [];
                        for (_b in arr)
                            _a.push(_b);
                        _i = 0;
                        _f.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        i = _a[_i];
                        return [5 /*yield**/, _loop_1(i)];
                    case 2:
                        state_1 = _f.sent();
                        if (typeof state_1 === "object")
                            return [2 /*return*/, state_1.value];
                        _f.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [3 /*break*/, 11];
                    case 5:
                        if (!(name instanceof Array)) return [3 /*break*/, 10];
                        results = [];
                        _c = [];
                        for (_d in name)
                            _c.push(_d);
                        _e = 0;
                        _f.label = 6;
                    case 6:
                        if (!(_e < _c.length)) return [3 /*break*/, 9];
                        i = _c[_e];
                        return [4 /*yield*/, Facade.executeCommand.apply(Facade, __spreadArrays([name[i]], args)).catch(function (reason) { return reject(reason); })];
                    case 7:
                        res = _f.sent();
                        results.push(res);
                        _f.label = 8;
                    case 8:
                        _e++;
                        return [3 /*break*/, 6];
                    case 9:
                        resolve(results);
                        return [3 /*break*/, 11];
                    case 10:
                        reject(Error("executeCommand typeof(name)===>" + typeof name));
                        _f.label = 11;
                    case 11: return [2 /*return*/];
                }
            });
        }); });
    };
    Facade.releasePrefab = function (prefab, excludePrefab) {
        var excludes = [];
        if (excludePrefab) {
            if (typeof excludePrefab == "string") {
                excludes.push(excludePrefab);
            }
            else {
                excludes = excludePrefab;
            }
        }
        if (excludes.indexOf(prefab) >= 0) {
            console.log("release fail,this prefab in retainPrefab or excludes===>" + prefab);
            return;
        }
        var deps = cc.loader.getDependsRecursively(prefab);
        var arr = deps.filter(function (value) {
            for (var i in excludes) {
                var retainPrefab = excludes[i];
                if (cc.loader.getDependsRecursively(retainPrefab).indexOf(value) >= 0) {
                    return false;
                }
            }
            return true;
        });
        arr.forEach(function (value) {
            cc.loader.release(value);
            console.log(value, "release====>");
        });
    };
    Facade.initSeparationLayer = function (separationPrefabName) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, cc.loader.loadResAwait(separationPrefabName, cc.Prefab)];
                    case 1:
                        _a._separationPrefab = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 加入隔断层 */
    Facade.addSeparationLayer = function (groupIdx, opacity, zOrder) {
        if (groupIdx === void 0) { groupIdx = null; }
        if (opacity === void 0) { opacity = 115; }
        if (zOrder === void 0) { zOrder = 0; }
        if (this._separationPrefab == null) {
            console.error("please call Facade.initSeparationLayer before call Facade.addSeparationLayer");
            return;
        }
        var node = cc.instantiate(this._separationPrefab);
        node.setParent(this.canvasNode);
        node.position = cc.v2(0, 0);
        if (typeof opacity == "number") {
            node.opacity = opacity;
        }
        node.zIndex = zOrder;
        if (groupIdx) {
            node.groupIndex = groupIdx;
        }
        return node;
    };
    Facade.initTextTips = function (textTipsPrefabName) {
        return __awaiter(this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, cc.loader.loadResAwait(textTipsPrefabName, cc.Prefab)];
                    case 1:
                        _a._textTipsPrefab = _b.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 文字提示 */
    Facade.textTips = function (text, position, fontSize) {
        return __awaiter(this, void 0, void 0, function () {
            var node, richText;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this._separationPrefab == null) {
                            console.error("please call Facade.initTextTips before call Facade.textTips");
                            return [2 /*return*/];
                        }
                        node = cc.instantiate(this._textTipsPrefab);
                        node.setParent(Facade.canvasNode);
                        node.zIndex = cc.macro.MAX_ZINDEX;
                        if (position) {
                            node.position = position;
                        }
                        else {
                            node.position = cc.v2(0, 0);
                        }
                        richText = node.getComponent(cc.RichText);
                        if (fontSize) {
                            richText.fontSize = fontSize;
                        }
                        richText.string = text;
                        Extend_1.ext.showRichText(richText);
                        return [4 /*yield*/, node.runActionAwait(Actions_1.default.flutterAction())];
                    case 1:
                        _a.sent();
                        node.destroy();
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 当前canvas节点 */
    Facade.canvasNode = null;
    Facade._separationPrefab = null;
    Facade._textTipsPrefab = null;
    return Facade;
}());
exports.default = Facade;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZmFjYWRlL0ZhY2FkZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsaUZBQWlGO0FBQ2pGLHlGQUF5RjtBQUN6RixtQkFBbUI7QUFDbkIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUNuRyw4QkFBOEI7QUFDOUIsMkZBQTJGO0FBQzNGLG1HQUFtRzs7QUFJbkcsMkNBQXFDO0FBQ3JDLDhDQUF5QztBQUN6QywwREFBdUQ7QUFFdkQ7SUFBQTtJQW1NQSxDQUFDO0lBL0xXLG9CQUFhLEdBQXJCLFVBQXNCLFFBQWUsRUFBRSxJQUFJLEVBQUUsYUFBdUI7UUFDaEUsYUFBYSxHQUFHLGFBQWEsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ2pELElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBQzVDLElBQUksSUFBSSxFQUFDO1lBQ0wsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQztJQUVNLHFCQUFjLEdBQXJCLFVBQXNCLElBQW9CO1FBQTFDLGlCQXlGQztRQXpGMkMsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCw2QkFBTzs7UUFDL0MsT0FBTyxJQUFJLE9BQU8sQ0FBQyxVQUFPLE9BQU8sRUFBRSxNQUFNOzs7Ozs2QkFDakMsQ0FBQSxPQUFPLElBQUksSUFBSSxRQUFRLENBQUEsRUFBdkIsd0JBQXVCO3dCQUNuQixHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQzt3QkFDdEIsT0FBTyxHQUFHLEVBQUUsQ0FBQzs0Q0FDUixDQUFDOzs7Ozt3Q0FDRixTQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQzt3Q0FDckIsWUFBWSxHQUFHLHlCQUFXLENBQUMsY0FBYyxDQUFDLE1BQUksQ0FBQyxDQUFDOzZDQUNoRCxDQUFBLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBLEVBQXZCLHdCQUF1Qjt3Q0FDbkIsSUFBSSxHQUFHLElBQUksQ0FBQzt3Q0FDWixPQUFPLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzs7Ozs7O3dEQUU1QixrQkFBa0IsR0FBRyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7d0RBQ3pDLElBQUksUUFBUSxFQUFDOzREQUNULE9BQU8sQ0FBQyxHQUFHLENBQUMsc0NBQW9DLE1BQUkseUJBQW9CLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxJQUFJLGNBQVMsSUFBTSxDQUFDLENBQUM7eURBQy9IO3dEQUNNLHFCQUFNLGtCQUFrQixDQUFDLFNBQVMsT0FBNUIsa0JBQWtCLEVBQWMsSUFBSSxFQUFFLEtBQUssQ0FBQyxVQUFBLE1BQU07Z0VBQzNELElBQUksR0FBRyxDQUFDO2dFQUNSLElBQUksT0FBTyxNQUFNLElBQUksUUFBUSxFQUFDO29FQUMxQixHQUFHLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lFQUN2QjtxRUFBSyxJQUFHLE1BQU0sWUFBWSxLQUFLLEVBQUM7b0VBQzdCLEdBQUcsR0FBRyxNQUFNLENBQUM7aUVBQ2hCO3FFQUFJO29FQUNELEdBQUcsR0FBRyxLQUFLLENBQUMsaUJBQWUsTUFBSSxTQUFJLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxJQUFJLGlCQUFjLENBQUMsQ0FBQztpRUFDekY7Z0VBQ0QsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDOzREQUNoQixDQUFDLENBQUMsRUFBQTs7d0RBVkYsSUFBSSxHQUFHLENBQUEsU0FVTCxLQUFJLElBQUksQ0FBQzt3REFDWCxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLHlCQUFXLENBQUMsY0FBYyxDQUFDLE1BQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLE1BQU0sSUFBSSxLQUFLLEVBQWYsQ0FBZSxDQUFDLEVBQWhFLENBQWdFLENBQUMsQ0FBQzs7Ozs7Ozs2Q0FoQmpHLENBQUEsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUE7Ozs7Ozt3Q0FrQnpCLElBQUksQ0FBQyxJQUFJLEVBQUM7O3lDQUVUOzs7d0NBRUwsSUFBSSxRQUFRLEVBQUM7NENBQ1QsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBc0IsTUFBSSxjQUFTLElBQU0sQ0FBQyxDQUFDO3lDQUMxRDt3Q0FDRyxPQUFPLEdBQWEsQ0FBQyxZQUFHLENBQUMsU0FBUyxDQUFDLE1BQUksQ0FBQyxDQUFDLENBQUM7d0NBQzlDLElBQUcsQ0FBQyxPQUFPLEVBQUM7NENBQ1IsTUFBTSxDQUFDLEtBQUssQ0FBQyxlQUFhLE1BQUksYUFBUSxNQUFJLGVBQVksQ0FBQyxDQUFDLENBQUM7O3lDQUU1RDt3Q0FDUyxxQkFBTSxPQUFPLENBQUMsT0FBTyxPQUFmLE9BQU8sRUFBWSxJQUFJLEVBQUUsS0FBSyxDQUFDLFVBQUEsTUFBTTtnREFDakQsSUFBSSxHQUFHLENBQUM7Z0RBQ1IsSUFBSSxPQUFPLE1BQU0sSUFBSSxRQUFRLEVBQUM7b0RBQzFCLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7aURBQ3ZCO3FEQUFLLElBQUcsTUFBTSxZQUFZLEtBQUssRUFBQztvREFDN0IsR0FBRyxHQUFHLE1BQU0sQ0FBQztpREFDaEI7cURBQUk7b0RBQ0QsR0FBRyxHQUFHLEtBQUssQ0FBQyxzQ0FBb0MsTUFBTSxDQUFDLENBQUM7aURBQzNEO2dEQUNELE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQzs0Q0FDaEIsQ0FBQyxDQUFDLEVBQUE7O3dDQVZFLEdBQUcsR0FBRyxTQVVSO3dDQUNGLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7d0NBRWxCLFlBQVksR0FBRyx5QkFBVyxDQUFDLGNBQWMsQ0FBQyxNQUFJLENBQUMsQ0FBQzs2Q0FDNUMsQ0FBQSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQSxFQUF2Qix3QkFBdUI7d0NBQ25CLE9BQU8sR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7Ozs7d0RBRTVCLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQzt3REFDekMsSUFBSSxRQUFRLEVBQUM7NERBQ1QsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1Q0FBcUMsTUFBSSx5QkFBb0Isa0JBQWtCLENBQUMsV0FBVyxDQUFDLElBQUksYUFBUSxHQUFHLGNBQVMsSUFBTSxDQUFDLENBQUM7eURBQzNJO3dEQUNELHFCQUFNLGtCQUFrQixDQUFDLFVBQVUsT0FBN0Isa0JBQWtCLGtCQUFZLEdBQUcsR0FBSyxJQUFJLEdBQUUsS0FBSyxDQUFDLFVBQUEsTUFBTTtnRUFDMUQsSUFBSSxHQUFHLENBQUM7Z0VBQ1IsSUFBSSxPQUFPLE1BQU0sSUFBSSxRQUFRLEVBQUM7b0VBQzFCLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7aUVBQ3ZCO3FFQUFLLElBQUcsTUFBTSxZQUFZLEtBQUssRUFBQztvRUFDN0IsR0FBRyxHQUFHLE1BQU0sQ0FBQztpRUFDaEI7cUVBQUk7b0VBQ0QsR0FBRyxHQUFHLEtBQUssQ0FBQyxpQkFBZSxNQUFJLFNBQUksa0JBQWtCLENBQUMsV0FBVyxDQUFDLElBQUksZ0JBQWEsQ0FBQyxDQUFDO2lFQUN4RjtnRUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7NERBQ2hCLENBQUMsQ0FBQyxFQUFBOzt3REFWRixTQVVFLENBQUM7d0RBQ0gsT0FBTyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSx5QkFBVyxDQUFDLGNBQWMsQ0FBQyxNQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxNQUFNLElBQUksT0FBQSxNQUFNLElBQUksS0FBSyxFQUFmLENBQWUsQ0FBQyxFQUFoRSxDQUFnRSxDQUFDLENBQUM7Ozs7Ozs7NkNBaEJqRyxDQUFBLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFBOzs7Ozs7d0NBbUI3QixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7Ozs7OzttQ0F2RVAsR0FBRzs7Ozs7OztzREFBUixDQUFDOzs7Ozs7Ozs7Ozs2QkF5RUosQ0FBQSxJQUFJLFlBQVksS0FBSyxDQUFBLEVBQXJCLHlCQUFxQjt3QkFDdkIsT0FBTyxHQUFHLEVBQUUsQ0FBQzs7bUNBQ0gsSUFBSTs7Ozs7Ozt3QkFDSixxQkFBTSxNQUFNLENBQUMsY0FBYyxPQUFyQixNQUFNLGtCQUFnQixJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUssSUFBSSxHQUFFLEtBQUssQ0FBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBZCxDQUFjLENBQUMsRUFBQTs7d0JBQW5GLEdBQUcsR0FBRyxTQUE2RTt3QkFDdkYsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQzs7Ozs7O3dCQUV0QixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7Ozt3QkFFakIsTUFBTSxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsR0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUM7Ozs7O2FBRXBFLENBQUMsQ0FBQztJQUNQLENBQUM7SUFHTSxvQkFBYSxHQUFwQixVQUFxQixNQUFhLEVBQUUsYUFBOEI7UUFDOUQsSUFBSSxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLElBQUksYUFBYSxFQUFDO1lBQ2QsSUFBSSxPQUFPLGFBQWEsSUFBSSxRQUFRLEVBQUM7Z0JBQ2pDLFFBQVEsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7YUFDaEM7aUJBQU07Z0JBQ0gsUUFBUSxHQUFHLGFBQWEsQ0FBQzthQUM1QjtTQUNKO1FBRUQsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBQztZQUM5QixPQUFPLENBQUMsR0FBRyxDQUFDLDBEQUEwRCxHQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQy9FLE9BQU07U0FDVDtRQUVELElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMscUJBQXFCLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbkQsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFBLEtBQUs7WUFDdkIsS0FBSyxJQUFJLENBQUMsSUFBSSxRQUFRLEVBQUM7Z0JBQ25CLElBQUksWUFBWSxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDL0IsSUFBRyxFQUFFLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUM7b0JBQ2pFLE9BQU8sS0FBSyxDQUFDO2lCQUNoQjthQUNKO1lBQ0QsT0FBTyxJQUFJLENBQUM7UUFDaEIsQ0FBQyxDQUFDLENBQUM7UUFDSCxHQUFHLENBQUMsT0FBTyxDQUFDLFVBQUEsS0FBSztZQUNiLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQ3ZDLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQVFZLDBCQUFtQixHQUFoQyxVQUFpQyxvQkFBMkI7Ozs7Ozt3QkFDeEQsS0FBQSxJQUFJLENBQUE7d0JBQXFCLHFCQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLG9CQUFvQixFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBQTs7d0JBQXRGLEdBQUssaUJBQWlCLEdBQUcsU0FBNkQsQ0FBQzs7Ozs7S0FDMUY7SUFFRCxZQUFZO0lBQ0wseUJBQWtCLEdBQXpCLFVBQTBCLFFBQXNCLEVBQUUsT0FBb0IsRUFBRSxNQUFpQjtRQUEvRCx5QkFBQSxFQUFBLGVBQXNCO1FBQUUsd0JBQUEsRUFBQSxhQUFvQjtRQUFFLHVCQUFBLEVBQUEsVUFBaUI7UUFDckYsSUFBSSxJQUFJLENBQUMsaUJBQWlCLElBQUksSUFBSSxFQUFDO1lBQy9CLE9BQU8sQ0FBQyxLQUFLLENBQUMsOEVBQThFLENBQUMsQ0FBQztZQUM5RixPQUFPO1NBQ1Y7UUFDRCxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDNUIsSUFBSSxPQUFPLE9BQU8sSUFBSSxRQUFRLEVBQUM7WUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7U0FDMUI7UUFDRCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUVyQixJQUFJLFFBQVEsRUFBQztZQUNULElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO1NBQzlCO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUlZLG1CQUFZLEdBQXpCLFVBQTBCLGtCQUF5Qjs7Ozs7O3dCQUMvQyxLQUFBLElBQUksQ0FBQTt3QkFBbUIscUJBQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFBOzt3QkFBbEYsR0FBSyxlQUFlLEdBQUcsU0FBMkQsQ0FBQzs7Ozs7S0FDdEY7SUFFRCxXQUFXO0lBQ0UsZUFBUSxHQUFyQixVQUFzQixJQUFXLEVBQUUsUUFBaUIsRUFBRSxRQUFnQjs7Ozs7O3dCQUNsRSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxJQUFJLEVBQUM7NEJBQy9CLE9BQU8sQ0FBQyxLQUFLLENBQUMsNkRBQTZELENBQUMsQ0FBQzs0QkFDN0Usc0JBQU87eUJBQ1Y7d0JBQ0csSUFBSSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO3dCQUNoRCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQzt3QkFDbEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQzt3QkFDbEMsSUFBSSxRQUFRLEVBQUM7NEJBQ1QsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7eUJBQzVCOzZCQUFNOzRCQUNILElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7eUJBQy9CO3dCQUNHLFFBQVEsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQzt3QkFDOUMsSUFBSSxRQUFRLEVBQUM7NEJBQ1QsUUFBUSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7eUJBQ2hDO3dCQUNELFFBQVEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO3dCQUN2QixZQUFHLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO3dCQUMzQixxQkFBTSxJQUFJLENBQUMsY0FBYyxDQUFDLGlCQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsRUFBQTs7d0JBQWxELFNBQWtELENBQUM7d0JBQ25ELElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzs7Ozs7S0FDbEI7SUExREQsaUJBQWlCO0lBQ1YsaUJBQVUsR0FBVyxJQUFJLENBQUM7SUFHbEIsd0JBQWlCLEdBQWEsSUFBSSxDQUFDO0lBMEJuQyxzQkFBZSxHQUFhLElBQUksQ0FBQztJQThCcEQsYUFBQztDQW5NRCxBQW1NQyxJQUFBO2tCQW5Nb0IsTUFBTSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuXHJcbmltcG9ydCB7SUNvbW1hbmR9IGZyb20gXCIuL0lDb21tYW5kXCI7XHJcbmltcG9ydCB7ZXh0fSBmcm9tIFwiLi4vZXh0ZW5kL0V4dGVuZFwiO1xyXG5pbXBvcnQgQWN0aW9ucyBmcm9tIFwiLi4vYWN0aW9ucy9BY3Rpb25zXCI7XHJcbmltcG9ydCB7SW50ZXJjZXB0b3J9IGZyb20gXCIuLi9pbnRlcmNlcHRvci9JbnRlcmNlcHRvclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmFjYWRlIHtcclxuXHJcbiAgICBzdGF0aWMgZmluZENvbXBvbmVudDxUPihub2RlTmFtZTpzdHJpbmcsIHR5cGU6IHtwcm90b3R5cGU6IFR9IHwgc3RyaW5nLCByZWZlcmVuY2VOb2RlPzogY2MuTm9kZSk6IFQ7XHJcblxyXG4gICAgc3RhdGljICBmaW5kQ29tcG9uZW50KG5vZGVOYW1lOnN0cmluZywgdHlwZSwgcmVmZXJlbmNlTm9kZT86IGNjLk5vZGUpe1xyXG4gICAgICAgIHJlZmVyZW5jZU5vZGUgPSByZWZlcmVuY2VOb2RlIHx8IHRoaXMuY2FudmFzTm9kZTtcclxuICAgICAgICBsZXQgbm9kZSA9IGNjLmZpbmQobm9kZU5hbWUsIHJlZmVyZW5jZU5vZGUpO1xyXG4gICAgICAgIGlmIChub2RlKXtcclxuICAgICAgICAgICAgcmV0dXJuIG5vZGUuZ2V0Q29tcG9uZW50KHR5cGUpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZXhlY3V0ZUNvbW1hbmQobmFtZTpzdHJpbmd8W3N0cmluZ10sIC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBuYW1lID09IFwic3RyaW5nXCIpe1xyXG4gICAgICAgICAgICAgICAgbGV0IGFyciA9IG5hbWUuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgICAgICAgICAgbGV0IHJlc3VsdHMgPSBbXTtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgaW4gYXJyKXtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgbmFtZSA9IGFycltpXS50cmltKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGludGVyY2VwdG9ycyA9IEludGVyY2VwdG9yLmludGVyY2VwdG9yc09mKG5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnRlcmNlcHRvcnMubGVuZ3RoID4gMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBmbGFnID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRlbXBBcnIgPSBpbnRlcmNlcHRvcnMuc2xpY2UoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICh0ZW1wQXJyLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNvbW1hbmRJbnRlcmNlcHRvciA9IHRlbXBBcnIuc2hpZnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChDQ19ERUJVRyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYGV4ZWN1dGUgcHJlSGFuZGxlPT09PmNvbW1hbmROYW1lPSR7bmFtZX0gaW50ZXJjZXB0b3JOYW1lPSR7Y29tbWFuZEludGVyY2VwdG9yLmNvbnN0cnVjdG9yLm5hbWV9IGFyZ3M9JHthcmdzfWApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmxhZyA9IGF3YWl0IGNvbW1hbmRJbnRlcmNlcHRvci5wcmVIYW5kbGUoLi4uYXJncykuY2F0Y2gocmVhc29uID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZXJyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcmVhc29uID09IFwic3RyaW5nXCIpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnIgPSBFcnJvcihyZWFzb24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlIGlmKHJlYXNvbiBpbnN0YW5jZW9mIEVycm9yKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyID0gcmVhc29uO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnIgPSBFcnJvcihgY29tbWFuZE5hbWU9JHtuYW1lfSAke2NvbW1hbmRJbnRlcmNlcHRvci5jb25zdHJ1Y3Rvci5uYW1lfS5wcmVIYW5kbGUoKWApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pICYmIGZsYWc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wQXJyID0gdGVtcEFyci5maWx0ZXIodmFsdWUgPT4gSW50ZXJjZXB0b3IuaW50ZXJjZXB0b3JzT2YobmFtZSkuc29tZSh2YWx1ZTIgPT4gdmFsdWUyID09IHZhbHVlKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFmbGFnKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoQ0NfREVCVUcpe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgZXhlY3V0ZSBjb21tYW5kPT09PiR7bmFtZX0gYXJncz0ke2FyZ3N9YCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjb21tYW5kID0gPElDb21tYW5kPihleHQuY3JlYXRlT2JqKG5hbWUpKTtcclxuICAgICAgICAgICAgICAgICAgICBpZighY29tbWFuZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChFcnJvcihgY3JlYXRlT2JqKCR7bmFtZX0pPT09PiR7bmFtZX0gbm90IGZvdW5kYCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGxldCByZXMgPSBhd2FpdCBjb21tYW5kLmV4ZWN1dGUoLi4uYXJncykuY2F0Y2gocmVhc29uID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVycjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZWFzb24gPT0gXCJzdHJpbmdcIil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnIgPSBFcnJvcihyZWFzb24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZihyZWFzb24gaW5zdGFuY2VvZiBFcnJvcil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnIgPSByZWFzb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyID0gRXJyb3IoYGNvbW1hbmQuZXhlY3V0ZSgpPT09PmNvbW1hbmROYW1lPSR7bmFtZX1gKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2gocmVzKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJjZXB0b3JzID0gSW50ZXJjZXB0b3IuaW50ZXJjZXB0b3JzT2YobmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGludGVyY2VwdG9ycy5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRlbXBBcnIgPSBpbnRlcmNlcHRvcnMuc2xpY2UoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICh0ZW1wQXJyLmxlbmd0aCA+IDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNvbW1hbmRJbnRlcmNlcHRvciA9IHRlbXBBcnIuc2hpZnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChDQ19ERUJVRyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYGV4ZWN1dGUgcG9zdEhhbmRsZT09PT5jb21tYW5kTmFtZT0ke25hbWV9IGludGVyY2VwdG9yTmFtZT0ke2NvbW1hbmRJbnRlcmNlcHRvci5jb25zdHJ1Y3Rvci5uYW1lfSByZXM9JHtyZXN9IGFyZ3M9JHthcmdzfWApO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgY29tbWFuZEludGVyY2VwdG9yLnBvc3RIYW5kbGUocmVzLCAuLi5hcmdzKS5jYXRjaChyZWFzb24gPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBlcnI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZWFzb24gPT0gXCJzdHJpbmdcIil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVyciA9IEVycm9yKHJlYXNvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2UgaWYocmVhc29uIGluc3RhbmNlb2YgRXJyb3Ipe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnIgPSByZWFzb247XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVyciA9IEVycm9yKGBjb21tYW5kTmFtZT0ke25hbWV9ICR7Y29tbWFuZEludGVyY2VwdG9yLmNvbnN0cnVjdG9yLm5hbWV9LnBvc3RIYW5kbGVgKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBBcnIgPSB0ZW1wQXJyLmZpbHRlcih2YWx1ZSA9PiBJbnRlcmNlcHRvci5pbnRlcmNlcHRvcnNPZihuYW1lKS5zb21lKHZhbHVlMiA9PiB2YWx1ZTIgPT0gdmFsdWUpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdHMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9ZWxzZSBpZiAobmFtZSBpbnN0YW5jZW9mIEFycmF5KXtcclxuICAgICAgICAgICAgICAgIGxldCByZXN1bHRzID0gW107XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpIGluIG5hbWUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCByZXMgPSBhd2FpdCBGYWNhZGUuZXhlY3V0ZUNvbW1hbmQobmFtZVtpXSwgLi4uYXJncykuY2F0Y2gocmVhc29uID0+IHJlamVjdChyZWFzb24pKTtcclxuICAgICAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2gocmVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0cyk7XHJcbiAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChFcnJvcihcImV4ZWN1dGVDb21tYW5kIHR5cGVvZihuYW1lKT09PT5cIit0eXBlb2YgbmFtZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHN0YXRpYyByZWxlYXNlUHJlZmFiKHByZWZhYjpzdHJpbmcsIGV4Y2x1ZGVQcmVmYWI/OnN0cmluZ3xbc3RyaW5nXSl7XHJcbiAgICAgICAgbGV0IGV4Y2x1ZGVzID0gW107XHJcbiAgICAgICAgaWYgKGV4Y2x1ZGVQcmVmYWIpe1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGV4Y2x1ZGVQcmVmYWIgPT0gXCJzdHJpbmdcIil7XHJcbiAgICAgICAgICAgICAgICBleGNsdWRlcy5wdXNoKGV4Y2x1ZGVQcmVmYWIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZXhjbHVkZXMgPSBleGNsdWRlUHJlZmFiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoZXhjbHVkZXMuaW5kZXhPZihwcmVmYWIpID49IDApe1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInJlbGVhc2UgZmFpbCx0aGlzIHByZWZhYiBpbiByZXRhaW5QcmVmYWIgb3IgZXhjbHVkZXM9PT0+XCIrcHJlZmFiKTtcclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgZGVwcyA9IGNjLmxvYWRlci5nZXREZXBlbmRzUmVjdXJzaXZlbHkocHJlZmFiKTtcclxuICAgICAgICBsZXQgYXJyID0gZGVwcy5maWx0ZXIodmFsdWUgPT4ge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpIGluIGV4Y2x1ZGVzKXtcclxuICAgICAgICAgICAgICAgIGxldCByZXRhaW5QcmVmYWIgPSBleGNsdWRlc1tpXTtcclxuICAgICAgICAgICAgICAgIGlmKGNjLmxvYWRlci5nZXREZXBlbmRzUmVjdXJzaXZlbHkocmV0YWluUHJlZmFiKS5pbmRleE9mKHZhbHVlKSA+PSAwKXtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYXJyLmZvckVhY2godmFsdWUgPT4ge1xyXG4gICAgICAgICAgICBjYy5sb2FkZXIucmVsZWFzZSh2YWx1ZSk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHZhbHVlLCBcInJlbGVhc2U9PT09PlwiKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5b2T5YmNY2FudmFz6IqC54K5ICovXHJcbiAgICBzdGF0aWMgY2FudmFzTm9kZTpjYy5Ob2RlID0gbnVsbDtcclxuXHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX3NlcGFyYXRpb25QcmVmYWI6Y2MuUHJlZmFiID0gbnVsbDtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgaW5pdFNlcGFyYXRpb25MYXllcihzZXBhcmF0aW9uUHJlZmFiTmFtZTpzdHJpbmcpe1xyXG4gICAgICAgIHRoaXMuX3NlcGFyYXRpb25QcmVmYWIgPSBhd2FpdCBjYy5sb2FkZXIubG9hZFJlc0F3YWl0KHNlcGFyYXRpb25QcmVmYWJOYW1lLCBjYy5QcmVmYWIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDliqDlhaXpmpTmlq3lsYIgKi9cclxuICAgIHN0YXRpYyBhZGRTZXBhcmF0aW9uTGF5ZXIoZ3JvdXBJZHg6bnVtYmVyID0gbnVsbCwgb3BhY2l0eTpOdW1iZXIgPSAxMTUsIHpPcmRlcjpOdW1iZXIgPSAwKTpjYy5Ob2Rle1xyXG4gICAgICAgIGlmICh0aGlzLl9zZXBhcmF0aW9uUHJlZmFiID09IG51bGwpe1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwicGxlYXNlIGNhbGwgRmFjYWRlLmluaXRTZXBhcmF0aW9uTGF5ZXIgYmVmb3JlIGNhbGwgRmFjYWRlLmFkZFNlcGFyYXRpb25MYXllclwiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMuX3NlcGFyYXRpb25QcmVmYWIpO1xyXG4gICAgICAgIG5vZGUuc2V0UGFyZW50KHRoaXMuY2FudmFzTm9kZSk7XHJcbiAgICAgICAgbm9kZS5wb3NpdGlvbiA9IGNjLnYyKDAsIDApO1xyXG4gICAgICAgIGlmICh0eXBlb2Ygb3BhY2l0eSA9PSBcIm51bWJlclwiKXtcclxuICAgICAgICAgICAgbm9kZS5vcGFjaXR5ID0gb3BhY2l0eTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbm9kZS56SW5kZXggPSB6T3JkZXI7XHJcblxyXG4gICAgICAgIGlmIChncm91cElkeCl7XHJcbiAgICAgICAgICAgIG5vZGUuZ3JvdXBJbmRleCA9IGdyb3VwSWR4O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBfdGV4dFRpcHNQcmVmYWI6Y2MuUHJlZmFiID0gbnVsbDtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgaW5pdFRleHRUaXBzKHRleHRUaXBzUHJlZmFiTmFtZTpzdHJpbmcpe1xyXG4gICAgICAgIHRoaXMuX3RleHRUaXBzUHJlZmFiID0gYXdhaXQgY2MubG9hZGVyLmxvYWRSZXNBd2FpdCh0ZXh0VGlwc1ByZWZhYk5hbWUsIGNjLlByZWZhYik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOaWh+Wtl+aPkOekuiAqL1xyXG4gICAgc3RhdGljIGFzeW5jIHRleHRUaXBzKHRleHQ6c3RyaW5nLCBwb3NpdGlvbj86Y2MuVmVjMiwgZm9udFNpemU/Om51bWJlcil7XHJcbiAgICAgICAgaWYgKHRoaXMuX3NlcGFyYXRpb25QcmVmYWIgPT0gbnVsbCl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJwbGVhc2UgY2FsbCBGYWNhZGUuaW5pdFRleHRUaXBzIGJlZm9yZSBjYWxsIEZhY2FkZS50ZXh0VGlwc1wiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMuX3RleHRUaXBzUHJlZmFiKTtcclxuICAgICAgICBub2RlLnNldFBhcmVudChGYWNhZGUuY2FudmFzTm9kZSk7XHJcbiAgICAgICAgbm9kZS56SW5kZXggPSBjYy5tYWNyby5NQVhfWklOREVYO1xyXG4gICAgICAgIGlmIChwb3NpdGlvbil7XHJcbiAgICAgICAgICAgIG5vZGUucG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBub2RlLnBvc2l0aW9uID0gY2MudjIoMCwgMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByaWNoVGV4dCA9IG5vZGUuZ2V0Q29tcG9uZW50KGNjLlJpY2hUZXh0KTtcclxuICAgICAgICBpZiAoZm9udFNpemUpe1xyXG4gICAgICAgICAgICByaWNoVGV4dC5mb250U2l6ZSA9IGZvbnRTaXplO1xyXG4gICAgICAgIH1cclxuICAgICAgICByaWNoVGV4dC5zdHJpbmcgPSB0ZXh0O1xyXG4gICAgICAgIGV4dC5zaG93UmljaFRleHQocmljaFRleHQpO1xyXG4gICAgICAgIGF3YWl0IG5vZGUucnVuQWN0aW9uQXdhaXQoQWN0aW9ucy5mbHV0dGVyQWN0aW9uKCkpO1xyXG4gICAgICAgIG5vZGUuZGVzdHJveSgpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/http/HttpProtocol.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ce99fMxrOJCPI2VBILKV/GL', 'HttpProtocol');
// framework/http/HttpProtocol.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var HttpProtocol = /** @class */ (function () {
    function HttpProtocol() {
        this.uri = null;
        this.request = {};
        this.response = null;
    }
    HttpProtocol.prototype.getResponseStatus = function () {
        return this.response.status;
    };
    HttpProtocol.prototype.getResponseData = function () {
        return this.response.data;
    };
    HttpProtocol.prototype.getResponseMessage = function () {
        return this.response.message;
    };
    HttpProtocol.prototype.encode = function () {
        console.log(">>>>发发发发发发===" + this.uri, this.request);
        var result = null;
        if (typeof FormData == "function") {
            var data = new FormData();
            for (var attr in this.request) {
                if (typeof this.request[attr] != "function") {
                    data.append(attr, this.request[attr]);
                }
            }
            result = data;
        }
        else {
            // 不支持FormData的浏览器的处理
            var arr = [];
            var i = 0;
            for (var attr in this.request) {
                if (typeof this.request[attr] != "function") {
                    arr[i] = encodeURIComponent(attr) + "=" + encodeURIComponent(this.request[attr]);
                    i++;
                }
            }
            result = arr.join("&");
        }
        return result;
    };
    HttpProtocol.prototype.decode = function (data) {
        this.response = JSON.parse(data);
        console.log("<<<<收收收收收收===" + this.uri, data);
        if (this.response.status != 0) {
            throw this.response;
        }
    };
    return HttpProtocol;
}());
exports.default = HttpProtocol;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvaHR0cC9IdHRwUHJvdG9jb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7O0FBRW5HO0lBQUE7UUFDSSxRQUFHLEdBQVUsSUFBSSxDQUFDO1FBQ2xCLFlBQU8sR0FBVSxFQUFFLENBQUM7UUFDcEIsYUFBUSxHQUFVLElBQUksQ0FBQztJQWdEM0IsQ0FBQztJQTlDRyx3Q0FBaUIsR0FBakI7UUFDSSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO0lBQ2hDLENBQUM7SUFFRCxzQ0FBZSxHQUFmO1FBQ0ksT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztJQUM5QixDQUFDO0lBRUQseUNBQWtCLEdBQWxCO1FBQ0ksT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQztJQUNqQyxDQUFDO0lBRUQsNkJBQU0sR0FBTjtRQUNJLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxHQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3BELElBQUksTUFBTSxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFHLE9BQU8sUUFBUSxJQUFJLFVBQVUsRUFBRTtZQUM5QixJQUFJLElBQUksR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO1lBQzFCLEtBQUksSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDMUIsSUFBSSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksVUFBVSxFQUFDO29CQUN4QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7aUJBQ3hDO2FBQ0o7WUFDRCxNQUFNLEdBQUcsSUFBSSxDQUFDO1NBQ2pCO2FBQUs7WUFDRixxQkFBcUI7WUFDckIsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO1lBQ2IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ1YsS0FBSSxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO2dCQUMxQixJQUFJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxVQUFVLEVBQUM7b0JBQ3hDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUNqRixDQUFDLEVBQUUsQ0FBQztpQkFDUDthQUNKO1lBQ0QsTUFBTSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDMUI7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBRUQsNkJBQU0sR0FBTixVQUFPLElBQVE7UUFDWCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEdBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM1QyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBQztZQUMxQixNQUFNLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDdkI7SUFDTCxDQUFDO0lBQ0wsbUJBQUM7QUFBRCxDQW5EQSxBQW1EQyxJQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIdHRwUHJvdG9jb2wge1xyXG4gICAgdXJpOnN0cmluZyA9IG51bGw7XHJcbiAgICByZXF1ZXN0Om9iamVjdCA9IHt9O1xyXG4gICAgcmVzcG9uc2U6b2JqZWN0ID0gbnVsbDtcclxuXHJcbiAgICBnZXRSZXNwb25zZVN0YXR1cygpOm51bWJlcntcclxuICAgICAgICByZXR1cm4gdGhpcy5yZXNwb25zZS5zdGF0dXM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0UmVzcG9uc2VEYXRhPFQ+KCk6VHtcclxuICAgICAgICByZXR1cm4gdGhpcy5yZXNwb25zZS5kYXRhO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFJlc3BvbnNlTWVzc2FnZSgpOnN0cmluZ3tcclxuICAgICAgICByZXR1cm4gdGhpcy5yZXNwb25zZS5tZXNzYWdlO1xyXG4gICAgfVxyXG5cclxuICAgIGVuY29kZSgpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiPj4+PuWPkeWPkeWPkeWPkeWPkeWPkT09PVwiK3RoaXMudXJpLCB0aGlzLnJlcXVlc3QpO1xyXG4gICAgICAgIGxldCByZXN1bHQgPSBudWxsO1xyXG4gICAgICAgIGlmKHR5cGVvZiBGb3JtRGF0YSA9PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgbGV0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICAgICAgZm9yKGxldCBhdHRyIGluIHRoaXMucmVxdWVzdCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnJlcXVlc3RbYXR0cl0gIT0gXCJmdW5jdGlvblwiKXtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLmFwcGVuZChhdHRyLHRoaXMucmVxdWVzdFthdHRyXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmVzdWx0ID0gZGF0YTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIOS4jeaUr+aMgUZvcm1EYXRh55qE5rWP6KeI5Zmo55qE5aSE55CGXHJcbiAgICAgICAgICAgIGxldCBhcnIgPSBbXTtcclxuICAgICAgICAgICAgbGV0IGkgPSAwO1xyXG4gICAgICAgICAgICBmb3IobGV0IGF0dHIgaW4gdGhpcy5yZXF1ZXN0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucmVxdWVzdFthdHRyXSAhPSBcImZ1bmN0aW9uXCIpe1xyXG4gICAgICAgICAgICAgICAgICAgIGFycltpXSA9IGVuY29kZVVSSUNvbXBvbmVudChhdHRyKSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHRoaXMucmVxdWVzdFthdHRyXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IGFyci5qb2luKFwiJlwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZGVjb2RlKGRhdGE6YW55KXtcclxuICAgICAgICB0aGlzLnJlc3BvbnNlID0gSlNPTi5wYXJzZShkYXRhKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIjw8PDzmlLbmlLbmlLbmlLbmlLbmlLY9PT1cIit0aGlzLnVyaSwgZGF0YSk7XHJcbiAgICAgICAgaWYgKHRoaXMucmVzcG9uc2Uuc3RhdHVzICE9IDApe1xyXG4gICAgICAgICAgICB0aHJvdyB0aGlzLnJlc3BvbnNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/interceptor/Interceptor.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e5d01V2r2VHM5KPSwqwyJKc', 'Interceptor');
// framework/interceptor/Interceptor.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.Interceptor = void 0;
var map = new Map();
var Interceptor = /** @class */ (function () {
    function Interceptor() {
    }
    Interceptor.register = function (command, interceptor) {
        var constructor = null;
        if (typeof interceptor == "function") {
            constructor = interceptor;
        }
        else {
            constructor = interceptor.constructor;
        }
        var arr = this.interceptorsOf(command);
        if (arr.every(function (value) { return value.constructor != constructor; })) {
            if (typeof interceptor == "function") {
                arr.push(new interceptor());
            }
            else {
                arr.push(interceptor);
            }
        }
    };
    Interceptor.unregister = function (command, interceptor) {
        var arr = this.interceptorsOf(command);
        var constructor = null;
        if (typeof interceptor == "function") {
            constructor = interceptor;
        }
        else {
            constructor = interceptor.constructor;
        }
        var newArr = arr.filter(function (value) { return value.constructor != constructor; });
        map.set(command, newArr);
    };
    Interceptor.interceptorsOf = function (command) {
        var arr = map.get(command);
        if (typeof arr == "undefined") {
            arr = [];
            map.set(command, arr);
        }
        return arr;
    };
    return Interceptor;
}());
exports.Interceptor = Interceptor;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvaW50ZXJjZXB0b3IvSW50ZXJjZXB0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7OztBQU9uRyxJQUFJLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBc0MsQ0FBQztBQUV4RDtJQUFBO0lBMkNBLENBQUM7SUF2Q1Usb0JBQVEsR0FBZixVQUFnQixPQUFjLEVBQUUsV0FBZ0M7UUFDNUQsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksT0FBTyxXQUFXLElBQUksVUFBVSxFQUFDO1lBQ2pDLFdBQVcsR0FBRyxXQUFXLENBQUE7U0FDNUI7YUFBSTtZQUNELFdBQVcsR0FBRyxXQUFXLENBQUMsV0FBVyxDQUFDO1NBQ3pDO1FBQ0QsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN2QyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsV0FBVyxJQUFJLFdBQVcsRUFBaEMsQ0FBZ0MsQ0FBQyxFQUFDO1lBQ3JELElBQUksT0FBTyxXQUFXLElBQUksVUFBVSxFQUFDO2dCQUNqQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksV0FBVyxFQUFFLENBQUMsQ0FBQzthQUMvQjtpQkFBSztnQkFDRixHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0o7SUFDTCxDQUFDO0lBSU0sc0JBQVUsR0FBakIsVUFBa0IsT0FBYyxFQUFFLFdBQStCO1FBQzdELElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkMsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLElBQUksT0FBTyxXQUFXLElBQUksVUFBVSxFQUFDO1lBQ2pDLFdBQVcsR0FBRyxXQUFXLENBQUE7U0FDNUI7YUFBSTtZQUNELFdBQVcsR0FBRyxXQUFXLENBQUMsV0FBVyxDQUFDO1NBQ3pDO1FBQ0QsSUFBSSxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxXQUFXLElBQUksV0FBVyxFQUFoQyxDQUFnQyxDQUFDLENBQUM7UUFDbkUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVNLDBCQUFjLEdBQXJCLFVBQXNCLE9BQWM7UUFDaEMsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzQixJQUFJLE9BQU8sR0FBRyxJQUFJLFdBQVcsRUFBQztZQUMxQixHQUFHLEdBQUcsRUFBRSxDQUFDO1lBQ1QsR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDekI7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7SUFDTCxrQkFBQztBQUFELENBM0NBLEFBMkNDLElBQUE7QUEzQ1ksa0NBQVciLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcblxyXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiQ29tbWFuZEludGVyY2VwdG9yLnRzXCIgLz5cclxuXHJcbmltcG9ydCB7SUNvbW1hbmRJbnRlcmNlcHRvcn0gZnJvbSBcIi4vQ29tbWFuZEludGVyY2VwdG9yXCI7XHJcblxyXG5sZXQgbWFwID0gbmV3IE1hcDxzdHJpbmcsIEFycmF5PElDb21tYW5kSW50ZXJjZXB0b3I+PigpO1xyXG5cclxuZXhwb3J0IGNsYXNzIEludGVyY2VwdG9ye1xyXG5cclxuICAgIHN0YXRpYyByZWdpc3RlcjxUIGV4dGVuZHMgSUNvbW1hbmRJbnRlcmNlcHRvcj4oY29tbWFuZDpzdHJpbmcsIGludGVyY2VwdG9yOiB7cHJvdG90eXBlOiBUfSk7XHJcblxyXG4gICAgc3RhdGljIHJlZ2lzdGVyKGNvbW1hbmQ6c3RyaW5nLCBpbnRlcmNlcHRvcjogSUNvbW1hbmRJbnRlcmNlcHRvcil7XHJcbiAgICAgICAgbGV0IGNvbnN0cnVjdG9yID0gbnVsbDtcclxuICAgICAgICBpZiAodHlwZW9mIGludGVyY2VwdG9yID09IFwiZnVuY3Rpb25cIil7XHJcbiAgICAgICAgICAgIGNvbnN0cnVjdG9yID0gaW50ZXJjZXB0b3JcclxuICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgY29uc3RydWN0b3IgPSBpbnRlcmNlcHRvci5jb25zdHJ1Y3RvcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGFyciA9IHRoaXMuaW50ZXJjZXB0b3JzT2YoY29tbWFuZCk7XHJcbiAgICAgICAgaWYgKGFyci5ldmVyeSh2YWx1ZSA9PiB2YWx1ZS5jb25zdHJ1Y3RvciAhPSBjb25zdHJ1Y3Rvcikpe1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGludGVyY2VwdG9yID09IFwiZnVuY3Rpb25cIil7XHJcbiAgICAgICAgICAgICAgICBhcnIucHVzaChuZXcgaW50ZXJjZXB0b3IoKSk7XHJcbiAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIGFyci5wdXNoKGludGVyY2VwdG9yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgdW5yZWdpc3RlcjxUIGV4dGVuZHMgSUNvbW1hbmRJbnRlcmNlcHRvcj4oY29tbWFuZDpzdHJpbmcsIGludGVyY2VwdG9yOiB7cHJvdG90eXBlOiBUfSk7XHJcblxyXG4gICAgc3RhdGljIHVucmVnaXN0ZXIoY29tbWFuZDpzdHJpbmcsIGludGVyY2VwdG9yOklDb21tYW5kSW50ZXJjZXB0b3Ipe1xyXG4gICAgICAgIGxldCBhcnIgPSB0aGlzLmludGVyY2VwdG9yc09mKGNvbW1hbmQpO1xyXG4gICAgICAgIGxldCBjb25zdHJ1Y3RvciA9IG51bGw7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBpbnRlcmNlcHRvciA9PSBcImZ1bmN0aW9uXCIpe1xyXG4gICAgICAgICAgICBjb25zdHJ1Y3RvciA9IGludGVyY2VwdG9yXHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIGNvbnN0cnVjdG9yID0gaW50ZXJjZXB0b3IuY29uc3RydWN0b3I7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBuZXdBcnIgPSBhcnIuZmlsdGVyKHZhbHVlID0+IHZhbHVlLmNvbnN0cnVjdG9yICE9IGNvbnN0cnVjdG9yKTtcclxuICAgICAgICBtYXAuc2V0KGNvbW1hbmQsIG5ld0Fycik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGludGVyY2VwdG9yc09mKGNvbW1hbmQ6c3RyaW5nKTpbSUNvbW1hbmRJbnRlcmNlcHRvcl17XHJcbiAgICAgICAgbGV0IGFyciA9IG1hcC5nZXQoY29tbWFuZCk7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBhcnIgPT0gXCJ1bmRlZmluZWRcIil7XHJcbiAgICAgICAgICAgIGFyciA9IFtdO1xyXG4gICAgICAgICAgICBtYXAuc2V0KGNvbW1hbmQsIGFycik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhcnI7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/type/KVData.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '446d6qbT8lCkZgFb1DEDrEV', 'KVData');
// framework/type/KVData.ts



cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvdHlwZS9LVkRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbnRlcmZhY2UgS1ZEYXRhPFY+IHtcclxuICAgIFtrZXk6c3RyaW5nXTpWO1xyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/tableview/AbstractTableItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '16abfgZS1NEObZPGNwjtE5a', 'AbstractTableItem');
// framework/tableview/AbstractTableItem.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var AbstractTableItem = /** @class */ (function (_super) {
    __extends(AbstractTableItem, _super);
    function AbstractTableItem() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractTableItem = __decorate([
        ccclass
    ], AbstractTableItem);
    return AbstractTableItem;
}(cc.Component));
exports.default = AbstractTableItem;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvdGFibGV2aWV3L0Fic3RyYWN0VGFibGVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUF3RCxxQ0FBWTtJQUFwRTs7SUFHQSxDQUFDO0lBSDZCLGlCQUFpQjtRQUQ5QyxPQUFPO09BQ3NCLGlCQUFpQixDQUc5QztJQUFELHdCQUFDO0NBSEQsQUFHQyxDQUh1RCxFQUFFLENBQUMsU0FBUyxHQUduRTtrQkFINkIsaUJBQWlCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RUYWJsZUl0ZW0gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIGFic3RyYWN0IHVwYWR0ZUl0ZW0oZGF0YTphbnksIGluZGV4Om51bWJlcik7XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/persistence/LocalStorage.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0eb5f782MZHjINkdZwIcuag', 'LocalStorage');
// framework/persistence/LocalStorage.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalStorage = void 0;
var LocalStorage = /** @class */ (function () {
    function LocalStorage() {
    }
    LocalStorage.get = function (key) {
        return cc.sys.localStorage.getItem(this.prefix + key);
    };
    LocalStorage.set = function (key, value) {
        cc.sys.localStorage.setItem(this.prefix + key, value);
    };
    LocalStorage.getNumber = function (key) {
        var val = this.get(key);
        if (val == null) {
            return null;
        }
        return parseInt(val);
    };
    LocalStorage.setNumber = function (key, value) {
        this.set(key, value);
    };
    LocalStorage.getBoolean = function (key) {
        var val = this.getNumber(key);
        return !!val;
    };
    LocalStorage.setBoolean = function (key, b) {
        var value = 0;
        if (b) {
            value = 1;
        }
        this.set(key, value);
    };
    LocalStorage.getString = function (key) {
        return this.get(key);
    };
    LocalStorage.setString = function (key, value) {
        this.set(key, value);
    };
    LocalStorage.getObject = function (key, obj) {
        var val = this.get(key);
        if (val) {
            obj.decode(JSON.parse(val));
            return obj;
        }
        return null;
    };
    LocalStorage.setObject = function (key, obj) {
        var value = obj.encode();
        if (typeof value == "object") {
            value = JSON.stringify(value);
        }
        this.set(key, value);
    };
    LocalStorage.prefix = "";
    return LocalStorage;
}());
exports.LocalStorage = LocalStorage;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvcGVyc2lzdGVuY2UvTG9jYWxTdG9yYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7SUFBQTtJQThEQSxDQUFDO0lBM0RrQixnQkFBRyxHQUFsQixVQUFtQixHQUFVO1FBQ3pCLE9BQU8sRUFBRSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVjLGdCQUFHLEdBQWxCLFVBQW1CLEdBQVUsRUFBRSxLQUFTO1FBQ3BDLEVBQUUsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBRU0sc0JBQVMsR0FBaEIsVUFBaUIsR0FBVTtRQUN2QixJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3hCLElBQUksR0FBRyxJQUFJLElBQUksRUFBQztZQUNaLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFDRCxPQUFPLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRU0sc0JBQVMsR0FBaEIsVUFBaUIsR0FBVSxFQUFFLEtBQVk7UUFDckMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUVNLHVCQUFVLEdBQWpCLFVBQWtCLEdBQVU7UUFDeEIsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5QixPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDakIsQ0FBQztJQUVNLHVCQUFVLEdBQWpCLFVBQWtCLEdBQVUsRUFBRSxDQUFTO1FBQ25DLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxFQUFDO1lBQ0YsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUNiO1FBQ0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUdNLHNCQUFTLEdBQWhCLFVBQWlCLEdBQVU7UUFDdkIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFTSxzQkFBUyxHQUFoQixVQUFpQixHQUFVLEVBQUUsS0FBWTtRQUNyQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRU0sc0JBQVMsR0FBaEIsVUFBaUIsR0FBVSxFQUFFLEdBQWM7UUFDdkMsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QixJQUFJLEdBQUcsRUFBQztZQUNKLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzVCLE9BQU8sR0FBRyxDQUFDO1NBQ2Q7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sc0JBQVMsR0FBaEIsVUFBaUIsR0FBVSxFQUFFLEdBQWM7UUFDdkMsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3pCLElBQUksT0FBTyxLQUFLLElBQUksUUFBUSxFQUFFO1lBQzFCLEtBQUssR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2pDO1FBQ0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQTNETSxtQkFBTSxHQUFHLEVBQUUsQ0FBQztJQTZEdkIsbUJBQUM7Q0E5REQsQUE4REMsSUFBQTtBQTlEWSxvQ0FBWSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SUNvbnZlcnRlcn0gZnJvbSBcIi4uL2NvbnZlcnRlci9JQ29udmVydGVyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTG9jYWxTdG9yYWdlIHtcclxuICAgIHN0YXRpYyBwcmVmaXggPSBcIlwiO1xyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIGdldChrZXk6c3RyaW5nKXtcclxuICAgICAgICByZXR1cm4gY2Muc3lzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMucHJlZml4ICsga2V5KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBzZXQoa2V5OnN0cmluZywgdmFsdWU6YW55KXtcclxuICAgICAgICBjYy5zeXMubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5wcmVmaXggKyBrZXksIHZhbHVlKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0TnVtYmVyKGtleTpzdHJpbmcpOm51bWJlcnxudWxse1xyXG4gICAgICAgIGxldCB2YWwgPSB0aGlzLmdldChrZXkpO1xyXG4gICAgICAgIGlmICh2YWwgPT0gbnVsbCl7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcGFyc2VJbnQodmFsKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgc2V0TnVtYmVyKGtleTpzdHJpbmcsIHZhbHVlOm51bWJlcil7XHJcbiAgICAgICAgdGhpcy5zZXQoa2V5LCB2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldEJvb2xlYW4oa2V5OnN0cmluZyk6Ym9vbGVhbntcclxuICAgICAgICBsZXQgdmFsID0gdGhpcy5nZXROdW1iZXIoa2V5KTtcclxuICAgICAgICByZXR1cm4gISF2YWw7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHNldEJvb2xlYW4oa2V5OnN0cmluZywgYjpib29sZWFuKXtcclxuICAgICAgICBsZXQgdmFsdWUgPSAwO1xyXG4gICAgICAgIGlmIChiKXtcclxuICAgICAgICAgICAgdmFsdWUgPSAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNldChrZXksIHZhbHVlKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgc3RhdGljIGdldFN0cmluZyhrZXk6c3RyaW5nKTpzdHJpbmd8bnVsbHtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXQoa2V5KTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgc2V0U3RyaW5nKGtleTpzdHJpbmcsIHZhbHVlOnN0cmluZyl7XHJcbiAgICAgICAgdGhpcy5zZXQoa2V5LCB2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldE9iamVjdChrZXk6c3RyaW5nLCBvYmo6SUNvbnZlcnRlcil7XHJcbiAgICAgICAgbGV0IHZhbCA9IHRoaXMuZ2V0KGtleSk7XHJcbiAgICAgICAgaWYgKHZhbCl7XHJcbiAgICAgICAgICAgIG9iai5kZWNvZGUoSlNPTi5wYXJzZSh2YWwpKTtcclxuICAgICAgICAgICAgcmV0dXJuIG9iajtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHNldE9iamVjdChrZXk6c3RyaW5nLCBvYmo6SUNvbnZlcnRlcil7XHJcbiAgICAgICAgbGV0IHZhbHVlID0gb2JqLmVuY29kZSgpO1xyXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgICAgICB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zZXQoa2V5LCB2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/config/ExcelTableNames.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0dad0SXeYlGkpEmyAnB7fj4', 'ExcelTableNames');
// script/app/config/ExcelTableNames.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExcelTableNames = void 0;
var ExcelTableNames;
(function (ExcelTableNames) {
    ExcelTableNames["Level"] = "data/level_full";
    ExcelTableNames["Enemy"] = "data/enemy_full";
    ExcelTableNames["Weapon"] = "data/weapon_full";
    ExcelTableNames["StartEnemy"] = "data/startem_full";
    ExcelTableNames["Prop"] = "data/prop_full";
    ExcelTableNames["WeaponUp"] = "data/weapon_up_full";
    ExcelTableNames["BulletUp"] = "data/bullet_up_full";
    ExcelTableNames["EnemyUp"] = "data/enemy_up_full";
    ExcelTableNames["GoldUp"] = "data/gold_up_full";
})(ExcelTableNames = exports.ExcelTableNames || (exports.ExcelTableNames = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2NvbmZpZy9FeGNlbFRhYmxlTmFtZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7OztBQStCbkcsSUFBWSxlQVVYO0FBVkQsV0FBWSxlQUFlO0lBQ3ZCLDRDQUF5QixDQUFBO0lBQ3pCLDRDQUF5QixDQUFBO0lBQ3pCLDhDQUEyQixDQUFBO0lBQzNCLG1EQUFnQyxDQUFBO0lBQ2hDLDBDQUF1QixDQUFBO0lBQ3ZCLG1EQUFnQyxDQUFBO0lBQ2hDLG1EQUFnQyxDQUFBO0lBQ2hDLGlEQUE4QixDQUFBO0lBQzlCLCtDQUE0QixDQUFBO0FBQ2hDLENBQUMsRUFWVyxlQUFlLEdBQWYsdUJBQWUsS0FBZix1QkFBZSxRQVUxQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuLyoqXHJcbiAqIOWFs+WNoemFjee9rlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBMZXZlbENvbmZpZyB7XHJcbiAgICBsZXZlbDpudW1iZXI7Ly/lhbPljaFcclxuICAgIGRlbGltaXRfcDE6bnVtYmVyOy8v56ys5LiA6Zi25q615ZCM5bGP5LiL6ZmQ5Z+65pWwXHJcbiAgICBsaW1pdF9wMTpudW1iZXI7Ly/nrKzkuIDpmLbmrrXlkIzlsY/kuIrpmZBcclxuICAgIGFtb3VudF9wMTpudW1iZXI7Ly/nrKzkuIDpmLbmrrXmgLvmlbBcclxuICAgIHAxX2VuZW15XzE6bnVtYmVyOy8v56ys5LiA6Zi25q615oCq54mpMeeahOavlOS+i1xyXG4gICAgcDFfZW5lbXlfMjpudW1iZXI7XHJcbiAgICBwMV9lbmVteV8zOm51bWJlcjtcclxuICAgIHAxX2VuZW15XzQ6bnVtYmVyO1xyXG4gICAgcDFfZW5lbXlfNTpudW1iZXI7XHJcbiAgICBwMV9lbmVteV82Om51bWJlcjtcclxuICAgIHAxX2Jvc3NfNzpudW1iZXI7XHJcbiAgICBwMV9ib3NzXzg6bnVtYmVyO1xyXG4gICAgZGVsaW1pdF9wMjpudW1iZXI7XHJcbiAgICBsaW1pdF9wMjpudW1iZXI7XHJcbiAgICBhbW91bnRfcDI6bnVtYmVyO1xyXG4gICAgcDJfZW5lbXlfMTpudW1iZXI7XHJcbiAgICBwMl9lbmVteV8yOm51bWJlcjtcclxuICAgIHAyX2VuZW15XzM6bnVtYmVyO1xyXG4gICAgcDJfZW5lbXlfNDpudW1iZXI7XHJcbiAgICBwMl9lbmVteV81Om51bWJlcjtcclxuICAgIHAyX2VuZW15XzY6bnVtYmVyO1xyXG4gICAgcDJfYm9zc183Om51bWJlcjtcclxuICAgIHAyX2Jvc3NfODpudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIEV4Y2VsVGFibGVOYW1lcyB7XHJcbiAgICBMZXZlbCA9IFwiZGF0YS9sZXZlbF9mdWxsXCIsXHJcbiAgICBFbmVteSA9IFwiZGF0YS9lbmVteV9mdWxsXCIsXHJcbiAgICBXZWFwb24gPSBcImRhdGEvd2VhcG9uX2Z1bGxcIixcclxuICAgIFN0YXJ0RW5lbXkgPSBcImRhdGEvc3RhcnRlbV9mdWxsXCIsXHJcbiAgICBQcm9wID0gXCJkYXRhL3Byb3BfZnVsbFwiLFxyXG4gICAgV2VhcG9uVXAgPSBcImRhdGEvd2VhcG9uX3VwX2Z1bGxcIixcclxuICAgIEJ1bGxldFVwID0gXCJkYXRhL2J1bGxldF91cF9mdWxsXCIsXHJcbiAgICBFbmVteVVwID0gXCJkYXRhL2VuZW15X3VwX2Z1bGxcIixcclxuICAgIEdvbGRVcCA9IFwiZGF0YS9nb2xkX3VwX2Z1bGxcIixcclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameBulletsController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f9d40q9ABdCG5owk3OPy0zK', 'GameBulletsController');
// script/app/game/GameBulletsController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletStrike_1 = require("../entities/bulletStrike/BulletStrike");
var Bullet_1 = require("../entities/bullet/Bullet");
var GameProxy_1 = require("./GameProxy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameBulletsController = /** @class */ (function (_super) {
    __extends(GameBulletsController, _super);
    function GameBulletsController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bulletLayer = null;
        _this.bulletStrikeLayer = null;
        _this.enemyBulletLayer = null;
        _this._bulletMap = new Map();
        _this._bulletStrikeMap = new Map();
        _this._enemyBulletMap = new Map();
        _this._propBulletMap = new Map();
        _this.roleBullets = [];
        _this.enemyBullets = [];
        return _this;
    }
    GameBulletsController.prototype.genBullet = function (id) {
        var prefabPath = 'prefab/entities/bullet/bullet' + id;
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        this.bulletLayer.addChild(node);
        var bullet = node.getComponent(Bullet_1.default);
        bullet.init(id);
        var arr = this._bulletMap.get(id);
        if (typeof arr == "undefined") {
            arr = [];
            this._bulletMap.set(id, arr);
        }
        arr.push(bullet);
        node.active = false;
        return bullet;
    };
    GameBulletsController.prototype.getInactiveBullet = function (id) {
        var result = undefined;
        var arr = this._bulletMap.get(id);
        if (typeof arr != 'undefined') {
            result = arr.find(function (value) { return value.node.active == false; });
        }
        if (typeof result == "undefined") {
            result = this.genBullet(id);
        }
        return result;
    };
    GameBulletsController.prototype.genBulletStrike = function (id) {
        var prefabPath = 'prefab/entities/bullet/bullet' + id + "Strike";
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        this.bulletStrikeLayer.addChild(node);
        var bulletStrike = node.getComponent(BulletStrike_1.default);
        bulletStrike.init(id);
        var arr = this._bulletStrikeMap.get(id);
        if (typeof arr == "undefined") {
            arr = [];
            this._bulletStrikeMap.set(id, arr);
        }
        arr.push(bulletStrike);
        node.active = false;
        return bulletStrike;
    };
    GameBulletsController.prototype.getInactiveBulletStrike = function (id) {
        var result = undefined;
        var arr = this._bulletStrikeMap.get(id);
        if (typeof arr != 'undefined') {
            result = arr.find(function (value) { return value.node.active == false; });
        }
        if (typeof result == "undefined") {
            result = this.genBulletStrike(id);
        }
        return result;
    };
    GameBulletsController.prototype.genEnemyBullet = function (id) {
        var prefabPath = 'prefab/entities/bullet/enemyBullet' + id;
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        this.enemyBulletLayer.addChild(node);
        var bullet = node.getComponent(Bullet_1.default);
        bullet.init(id);
        var arr = this._enemyBulletMap.get(id);
        if (typeof arr == "undefined") {
            arr = [];
            this._enemyBulletMap.set(id, arr);
        }
        arr.push(bullet);
        node.active = false;
        return bullet;
    };
    GameBulletsController.prototype.getInactiveEnemyBullet = function (id) {
        var result = undefined;
        var arr = this._enemyBulletMap.get(id);
        if (typeof arr != 'undefined') {
            result = arr.find(function (value) { return value.node.active == false; });
        }
        if (typeof result == "undefined") {
            result = this.genEnemyBullet(id);
        }
        return result;
    };
    GameBulletsController.prototype.genPropBullet = function (id) {
        var prefabPath = 'prefab/entities/bullet/propBullet' + id;
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        this.bulletLayer.addChild(node);
        var bullet = node.getComponent(Bullet_1.default);
        bullet.init(id);
        var arr = this._propBulletMap.get(id);
        if (typeof arr == "undefined") {
            arr = [];
            this._propBulletMap.set(id, arr);
        }
        arr.push(bullet);
        node.active = false;
        return bullet;
    };
    GameBulletsController.prototype.getInactivePropBullet = function (id) {
        var result = undefined;
        var arr = this._propBulletMap.get(id);
        if (typeof arr != 'undefined') {
            result = arr.find(function (value) { return value.node.active == false; });
        }
        if (typeof result == "undefined") {
            result = this.genPropBullet(id);
        }
        return result;
    };
    GameBulletsController.prototype.onLoad = function () {
        this.node.on(GameProxy_1.GameProxy.Event.PropTrigger, this.onPropTrigger, this);
        window['GameBulletsController'] = this;
    };
    GameBulletsController.prototype.onDestroy = function () {
        this.node.off(GameProxy_1.GameProxy.Event.PropTrigger, this.onPropTrigger, this);
    };
    GameBulletsController.prototype.onPropTrigger = function (prop) {
        var _this = this;
        switch (prop.propID) {
            case 1:
                {
                    /** 两个方向 360度 一遍转圈 一遍开炮 */
                    var firingRange_1 = 500;
                    var speed = 1000;
                    var bulletDuration_1 = firingRange_1 / speed;
                    var duration = 2;
                    var num = 20;
                    var onceTime = duration / num;
                    var onceDegree_1 = 360 / num;
                    var startPos_1 = cc.v2(prop.node.x, prop.node.y);
                    var _loop_1 = function (i) {
                        this_1.node.runAction(cc.sequence(cc.delayTime(i * onceTime), cc.callFunc(function () {
                            /** 发射火炮 */
                            var bullet = _this.getInactivePropBullet(1);
                            bullet.node.active = true;
                            bullet.node.rotation = i * onceDegree_1;
                            var dir = cc.v2(0, 1).rotateSelf(cc.misc.degreesToRadians(-bullet.node.rotation)).normalizeSelf();
                            bullet.node.position = startPos_1.add(dir.mul(60));
                            bullet.node.runAction(cc.sequence(cc.moveBy(bulletDuration_1, dir.mul(firingRange_1)).easing(cc.easeSineOut()), cc.callFunc(function () {
                                bullet.node.active = false;
                            })));
                            var bullet2 = _this.getInactivePropBullet(1);
                            bullet2.node.active = true;
                            bullet2.node.rotation = i * onceDegree_1 + 180;
                            var dir2 = cc.v2(0, 1).rotateSelf(cc.misc.degreesToRadians(-bullet2.node.rotation)).normalizeSelf();
                            bullet2.node.position = startPos_1.add(dir2.mul(60));
                            bullet2.node.runAction(cc.sequence(cc.moveBy(bulletDuration_1, dir2.mul(firingRange_1)).easing(cc.easeSineOut()), cc.callFunc(function () {
                                bullet2.node.active = false;
                            })));
                        })));
                    };
                    var this_1 = this;
                    for (var i = 0; i < num; i++) {
                        _loop_1(i);
                    }
                }
                break;
            case 2:
                {
                    /** 全方位炸弹：依次弹出6颗手雷（顺时针） 炸弹各个方向滚动 撞到怪物后爆炸 */
                    var num_1 = 6;
                    var onceDegree_2 = 360 / 6;
                    var onceTime_1 = 0.05;
                    var moveLen_1 = 100;
                    var moveSpeed = 1000;
                    var moveDuration_1 = moveLen_1 / moveSpeed;
                    var startPos_2 = cc.v2(prop.node.x, prop.node.y);
                    var _loop_2 = function (i) {
                        this_2.node.runAction(cc.sequence(cc.delayTime(i * onceTime_1), cc.callFunc(function () {
                            var bullet = _this.getInactivePropBullet(2);
                            bullet.node.active = true;
                            var degree = 30 + i * onceDegree_2;
                            bullet.node.rotation = degree - 90;
                            var dir = cc.v2(0, 1).rotateSelf(cc.misc.degreesToRadians(-degree)).normalizeSelf();
                            bullet.node.position = startPos_2;
                            bullet.node.scale = 0;
                            bullet.node.runAction(cc.scaleTo(moveDuration_1, 1));
                            bullet.node.runAction(cc.sequence(cc.moveBy(moveDuration_1, dir.mul(moveLen_1)), cc.delayTime((num_1 - i - 1) * onceTime_1), cc.callFunc(function () {
                                bullet.move(dir);
                            })));
                        })));
                    };
                    var this_2 = this;
                    for (var i = 0; i < num_1; i++) {
                        _loop_2(i);
                    }
                }
                break;
            case 3:
                {
                    /** 发出12个地雷 怪物踩到就会爆炸 地雷持续20S */
                    var num = 6;
                    var onceDegree_3 = 360 / 6;
                    var onceTime = 0.05;
                    var moveLen_2 = 80;
                    var moveSpeed = 1000;
                    var moveDuration_2 = moveLen_2 / moveSpeed;
                    var time_1 = 20;
                    var startPos_3 = cc.v2(prop.node.x, prop.node.y);
                    var _loop_3 = function (i) {
                        this_3.node.runAction(cc.sequence(cc.delayTime(i * onceTime), cc.callFunc(function () {
                            var bullet = _this.getInactivePropBullet(3);
                            bullet.node.active = true;
                            var degree = 30 + i * onceDegree_3;
                            bullet.node.rotation = degree - 90;
                            var dir = cc.v2(0, 1).rotateSelf(cc.misc.degreesToRadians(-degree)).normalizeSelf();
                            bullet.node.position = startPos_3;
                            bullet.node.scale = 0;
                            bullet.node.runAction(cc.scaleTo(moveDuration_2, 1));
                            bullet.collider.enabled = false;
                            bullet.node.runAction(cc.sequence(cc.moveBy(moveDuration_2, dir.mul(moveLen_2)), cc.callFunc(function () {
                                bullet.collider.enabled = true;
                                bullet.node.runAction(cc.sequence(cc.delayTime(time_1), cc.callFunc(function () {
                                    bullet.node.active = false;
                                })));
                            })));
                        })));
                    };
                    var this_3 = this;
                    for (var i = 0; i < num; i++) {
                        _loop_3(i);
                    }
                    var _loop_4 = function (i) {
                        this_4.node.runAction(cc.sequence(cc.delayTime((i + num) * onceTime), cc.callFunc(function () {
                            var bullet = _this.getInactivePropBullet(3);
                            bullet.node.active = true;
                            var degree = 60 + i * onceDegree_3;
                            bullet.node.rotation = degree - 90;
                            var dir = cc.v2(0, 1).rotateSelf(cc.misc.degreesToRadians(-degree)).normalizeSelf();
                            bullet.node.position = startPos_3;
                            bullet.node.scale = 0;
                            bullet.node.runAction(cc.scaleTo(moveDuration_2, 1));
                            bullet.collider.enabled = false;
                            bullet.node.runAction(cc.sequence(cc.moveBy(moveDuration_2, dir.mul(moveLen_2 + 60)), cc.callFunc(function () {
                                bullet.collider.enabled = true;
                                bullet.node.runAction(cc.sequence(cc.delayTime(time_1), cc.callFunc(function () {
                                    bullet.node.active = false;
                                })));
                            })));
                        })));
                    };
                    var this_4 = this;
                    for (var i = 0; i < num; i++) {
                        _loop_4(i);
                    }
                }
                break;
            case 4:
                {
                    /** 播放见光死的动画 */
                    var bullet = this.getInactivePropBullet(4);
                    bullet.node.position = prop.node.position;
                    bullet.node.active = true;
                    bullet.execute();
                }
                break;
            case 6:
                {
                    /** 找最近的怪生成闪电 */
                    var list = window['GameEnemysController'].allAliveAndInScreenEnemy();
                    // console.log("list===>", list);
                    if (list.length > 0) {
                        var minDistance_1 = -1;
                        var enemy_1 = null;
                        list.forEach(function (value) {
                            var distance = prop.node.position.sub(value.node.position).mag();
                            if (minDistance_1 < 0 || distance < minDistance_1) {
                                minDistance_1 = distance;
                                enemy_1 = value;
                            }
                        });
                        /** 生成闪电 */
                        var bullet = this.getInactivePropBullet(6);
                        bullet.node.position = prop.node.position;
                        bullet.joint(enemy_1.node.position);
                    }
                }
                break;
        }
    };
    __decorate([
        property(cc.Node)
    ], GameBulletsController.prototype, "bulletLayer", void 0);
    __decorate([
        property(cc.Node)
    ], GameBulletsController.prototype, "bulletStrikeLayer", void 0);
    __decorate([
        property(cc.Node)
    ], GameBulletsController.prototype, "enemyBulletLayer", void 0);
    GameBulletsController = __decorate([
        ccclass
    ], GameBulletsController);
    return GameBulletsController;
}(cc.Component));
exports.default = GameBulletsController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/HomeController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '66c32PpR9NFyZaVgsff9cCS', 'HomeController');
// script/app/home/HomeController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Extend_1 = require("../../../framework/extend/Extend");
var Facade_1 = require("../../../framework/facade/Facade");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var Enemy_1 = require("../entities/enemy/Enemy");
var Music_1 = require("../../../framework/audio/Music");
var MusicPaths_1 = require("../config/MusicPaths");
var World_1 = require("../info/World");
var Actions_1 = require("../../../framework/actions/Actions");
var GameProxy_1 = require("../game/GameProxy");
var WeaponLayerController_1 = require("./WeaponLayerController");
var BulletEmitter_1 = require("../entities/bulletEmitter/BulletEmitter");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var OnceFlag = false;
var ShowCount = 0;
var HomeController = /** @class */ (function (_super) {
    __extends(HomeController, _super);
    function HomeController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.startGameNode = null;
        _this.weaponStartNode = null;
        _this.roleHeadNode = null;
        _this.enemyLayer = null;
        _this.doorSke = null;
        _this.bottomNode = null;
        _this.centerNode = null;
        _this.blockNode = null;
        _this.bottomLayers = [];
        _this.upIconNodes = [];
        _this.weaponLayerController = null;
        _this.propButtonNode = null;
        _this.fightButtonNode = null;
        _this.topNode = null;
        _this.rightNode = null;
        return _this;
    }
    HomeController.prototype.onDestroy = function () {
        OnceFlag = true;
    };
    // LIFE-CYCLE CALLBACKS:
    HomeController.prototype.onLoad = function () {
        var _this = this;
        GameProxy_1.GameProxy.firstAidFlag = true;
        this.weaponStartNode.active = true;
        this.weaponStartNode.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.35, 0.91), cc.scaleTo(0.35, 1))));
        this.weaponStartNode.active = false;
        this.topNode.y = cc.view.getVisibleSize().height / 2 + 250;
        this.rightNode.x = 289 + 200;
        this.bottomNode.y = -this.bottomNode.height / 2 - cc.view.getVisibleSize().height / 2;
        this.centerNode.x = -cc.view.getVisibleSize().width;
        this.blockNode.active = true;
        this.upIconNodes.forEach(function (value) {
            value.runAction(cc.repeatForever(cc.sequence(cc.moveBy(0.5, cc.v2(0, 15)), cc.moveBy(0.5, cc.v2(0, -15)))));
            value.active = false;
        });
        /** 生成敌人 */
        var arr = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.StartEnemy).slice(0);
        var action = cc.repeatForever(cc.sequence(cc.delayTime(0), cc.callFunc(function () {
            if (arr.length > 0) {
                var item_1 = arr.shift();
                var id_1 = item_1['id'];
                var prefabPath = 'prefab/entities/enemy/enemy' + id_1;
                cc.loader.loadRes(prefabPath, cc.Prefab, function (error, resource) {
                    if (error == null) {
                        // console.log("id===>"+id);
                        var node = cc.instantiate(resource);
                        var enemy_1 = node.getComponent(Enemy_1.default);
                        enemy_1.onLoad = function () { };
                        enemy_1.start = function () { };
                        enemy_1.onEnable = function () { };
                        enemy_1.update = function () { };
                        _this.enemyLayer.addChild(node);
                        enemy_1.init(id_1);
                        enemy_1.stiff = true;
                        enemy_1.playWalk();
                        var startPos = cc.v2(item_1['cd_sx'], item_1['cd_sy']);
                        var endPos = cc.v2(item_1['cd_ex'], item_1['cd_ey']);
                        var sub = endPos.sub(startPos);
                        var rotation_1 = 90 - cc.misc.radiansToDegrees(Math.atan2(sub.y, sub.x));
                        var distance = sub.mag();
                        var speed = enemy_1.moveSpeed * 15;
                        var duration = distance / speed;
                        node.position = startPos;
                        node.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function () {
                            enemy_1.node.rotation = rotation_1;
                        }), cc.moveTo(duration, endPos), cc.callFunc(function () {
                            enemy_1.node.rotation = rotation_1 + 180;
                        }), cc.moveTo(duration, startPos))));
                    }
                });
            }
            else {
                _this.node.stopActionByTag(2583);
            }
        })));
        action.setTag(2583);
        this.node.runAction(action);
        this.showUpIcon();
        var bulletEmitterType = 2;
        var weaponConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon).filter(function (value) { return value['id'] != 1; }).sort((function (a, b) { return b['unlock'] - a['unlock']; }));
        for (var _i = 0, weaponConfig_1 = weaponConfig; _i < weaponConfig_1.length; _i++) {
            var item = weaponConfig_1[_i];
            if (World_1.World.Storage.gameLevel >= item['unlock']) {
                bulletEmitterType = item['id'];
                break;
            }
        }
        if (bulletEmitterType > 7) {
            bulletEmitterType = 7;
        }
        cc.loader.loadRes('prefab/entities/bullet/bullet' + bulletEmitterType);
        if (bulletEmitterType == BulletEmitter_1.default.TYPES.LiZiPao) {
            cc.loader.loadRes('prefab/entities/bullet/bullet108');
        }
        else if (bulletEmitterType == BulletEmitter_1.default.TYPES.HuoJianTong) {
            cc.loader.loadRes('prefab/entities/explosive/explosive9');
        }
        else if (bulletEmitterType == BulletEmitter_1.default.TYPES.JuJiQiang) {
            cc.loader.loadRes('prefab/entities/bullet/fire7');
        }
        cc.game.on("video_8", function () {
            _this.onClickWeaponStartDo();
        }, this);
    };
    HomeController.prototype.start = function () {
        this.openDoor();
    };
    HomeController.prototype.openDoor = function () {
        var _this = this;
        console.log("openDoor..");
        Music_1.Music.setBgm(MusicPaths_1.MusicPaths.HomeBg);
        var skeName = "animation";
        if (OnceFlag) {
            skeName = "opened";
        }
        else {
            Music_1.Music.playSFX("sound/msc_openDoor", 2);
        }
        this.doorSke.node.active = true;
        this.doorSke.setCompleteListener(function (trackEntry, loop) {
            _this.playEntry();
        });
        this.doorSke.setAnimation(0, skeName, false);
    };
    HomeController.prototype.playNodeAction = function (node) {
        node.stopAllActions();
        var cycleRotation = Actions_1.default.cycleAction(cc.rotateTo, 0, 0, 8, 360 / 2, 8, 0);
        var cycleScale = Actions_1.default.cycleAction(cc.scaleTo, 1, 1, 0.1, 1 / 0.8, 0, 0, 0.5);
        node.runAction(cycleRotation);
        node.runAction(cycleScale);
    };
    HomeController.prototype.playNodeActionStart = function () {
        var _this = this;
        this.startGameNode.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.35, 0.91), cc.scaleTo(0.35, 1))));
        this.schedule(function () {
            _this.playNodeAction(_this.propButtonNode);
        }, 3);
    };
    HomeController.prototype.playEntry = function () {
        var _this = this;
        console.log("playEntry...");
        var speed = 700;
        var promises = [];
        var distance = 250 + this.topNode.height / 2;
        if (Extend_1.ext.isIphoneX) {
            distance += 66;
        }
        promises.push(this.topNode.runActionAwait(cc.moveBy(distance / speed, cc.v2(0, -distance))));
        promises.push(this.rightNode.runActionAwait(cc.moveBy(200 / speed, cc.v2(-200, 0))));
        promises.push(this.bottomNode.runActionAwait(cc.moveBy(this.bottomNode.height / speed, cc.v2(0, this.bottomNode.height))));
        promises.push(this.centerNode.runActionAwait(cc.moveTo(cc.view.getVisibleSize().width / speed, cc.v2(0, 0))));
        Promise.all(promises).then(function (res) { return __awaiter(_this, void 0, void 0, function () {
            var newbieNode, guideCirclePrefab, guideCircleNode, guideSkePrefab, guideSkeNode, show, unlocks, _i, unlocks_1, item;
            var _this = this;
            return __generator(this, function (_a) {
                this.playNodeActionStart();
                if (!World_1.World.My.newbies.state("FirstEntryHome")) {
                    newbieNode = new cc.Node();
                    newbieNode.name = "newbieNode";
                    newbieNode.position = this.startGameNode.convertToWorldSpaceAR(cc.v2());
                    cc.director.getScene().addChild(newbieNode);
                    guideCirclePrefab = cc.loader.getRes("prefab/guideCircle");
                    guideCircleNode = cc.instantiate(guideCirclePrefab);
                    guideCircleNode.position = cc.v2();
                    newbieNode.addChild(guideCircleNode);
                    guideSkePrefab = cc.loader.getRes("prefab/guideSke");
                    guideSkeNode = cc.instantiate(guideSkePrefab);
                    guideSkeNode.position = cc.v2();
                    newbieNode.addChild(guideSkeNode);
                }
                /*if (OnceFlag){
                    if (!World.My.newbies.state("FirstRoleUp")){
                        let newbieNode = new cc.Node();
                        newbieNode.name = "newbieNode";
                        newbieNode.position = this.roleHeadNode.convertToWorldSpaceAR(cc.v2());
                        cc.director.getScene().addChild(newbieNode);
                        /!** guideCircle *!/
                        let guideCirclePrefab = cc.loader.getRes("prefab/guideCircle");
                        let guideCircleNode = cc.instantiate(guideCirclePrefab);
                        guideCircleNode.position = cc.v2();
                        newbieNode.addChild(guideCircleNode);
                        /!** guideSke *!/
                        let guideSkePrefab = cc.loader.getRes("prefab/guideSke");
                        let guideSkeNode = cc.instantiate(guideSkePrefab);
                        guideSkeNode.position = cc.v2();
                        newbieNode.addChild(guideSkeNode);
                    }
                }*/
                this.blockNode.active = false;
                if (!cc.director.getScene().getChildByName("newbieNode")) {
                    if (!OnceFlag || ShowCount % 3 === 2) {
                        ShowCount = 0;
                        show = true;
                        unlocks = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop).filter(function (value) { return value['id'] != 7 && value['id'] != 8 && value['id'] != 10 && value['unlock'] != 0; });
                        for (_i = 0, unlocks_1 = unlocks; _i < unlocks_1.length; _i++) {
                            item = unlocks_1[_i];
                            if (World_1.World.My.propInfo.beUsing(item['id'])) {
                                show = false;
                                break;
                            }
                        }
                        if (show) {
                            this.blockNode.active = true;
                            this.node.runAction(cc.sequence(cc.delayTime(0.5), cc.callFunc(function () {
                                Facade_1.default.executeCommand("OpenViewCommand", "prefab/recommendProps");
                                _this.blockNode.active = false;
                            })));
                        }
                    }
                    else {
                        ShowCount++;
                    }
                }
                return [2 /*return*/];
            });
        }); });
    };
    HomeController.prototype.playExit = function () {
        this.blockNode.active = true;
        var newbieNode = cc.director.getScene().getChildByName("newbieNode");
        if (newbieNode) {
            newbieNode.destroy();
            World_1.World.My.newbies.finish("FirstEntryHome");
        }
        Facade_1.default.executeCommand("LoadSceneCommand", "GameScene");
        /*let whiteNode = this.whiteNode;
        whiteNode.active = true;
        whiteNode.removeFromParent(false);
        cc.director.getScene().addChild(whiteNode);
        whiteNode.position = cc.visibleRect.center;
        whiteNode.opacity = 0;
        whiteNode.runAction(cc.sequence(cc.fadeTo(0.5, 255), cc.callFunc(()=>{
            Facade.executeCommand("LoadSceneCommand", "GameScene");
        }), cc.delayTime(0.2), cc.fadeTo(0.5, 0), cc.callFunc(()=>{
            whiteNode.destroy();
        })));*/
        /*let promises = [];
        let speed = 700;
        let distance = 250 + this.topNode.height/2;
        if(ext.isIphoneX){
            distance += 66;
        }
        let moveSpeed = 1200;
        for (let i=0; i<this.bottomLayers.length; i++){
            let node = this.bottomLayers[i];
            node.stopAllActions();
            promises.push(node.runActionAwait(cc.moveTo(Math.abs(node.y - node.height/2+ this.bottomNode.height/2)/moveSpeed, cc.v2(0, -node.height/2 + this.bottomNode.height/2))))
        }
        promises.push(this.topNode.runActionAwait(cc.moveBy(distance/speed, cc.v2(0, distance))));
        promises.push(this.bottomNode.runActionAwait(cc.moveBy(this.bottomNode.height/speed, cc.v2(0, -this.bottomNode.height))));
        promises.push(this.rightNode.runActionAwait(cc.moveBy(200/speed, cc.v2(200, 0))));
        promises.push(this.centerNode.runActionAwait(cc.moveTo(cc.view.getVisibleSize().width/speed, cc.v2(-cc.view.getVisibleSize().width, 0))));
        Promise.all(promises).then(res=>{
            this.node.runAction(cc.sequence(cc.scaleTo(1, 1/0.4), cc.callFunc(()=>{
                //切换场景
                Facade.executeCommand("LoadSceneCommand", "GameScene");
            })));
        });*/
    };
    HomeController.prototype.onToggleEvent = function (toggle, data) {
        var _this = this;
        data = parseInt(data);
        // console.log(toggle.node.name, toggle.isChecked);
        /** 其他对象关闭，然后再处理自己 */
        var moveSpeed = 1200;
        var promises = [];
        for (var i = 0; i < this.bottomLayers.length; i++) {
            var node_1 = this.bottomLayers[i];
            node_1.stopAllActions();
            if (i != data - 1) {
                promises.push(node_1.runActionAwait(cc.moveTo(Math.abs(node_1.y - node_1.height / 2 + this.bottomNode.height / 2) / moveSpeed, cc.v2(0, -node_1.height / 2 + this.bottomNode.height / 2))));
            }
        }
        var node = this.bottomLayers[data - 1];
        var destPos = cc.v2(0, -node.height / 2 + this.bottomNode.height / 2);
        if (toggle.isChecked) {
            destPos.y = node.height / 2 + this.bottomNode.height / 2;
            this.upIconNodes.forEach(function (value) { return value.active = false; });
        }
        if ((data == 2 && !toggle.isChecked) || data != 2) {
            this.startGameNode.active = true;
            this.weaponStartNode.active = false;
        }
        promises.push(node.runActionAwait(cc.moveTo(Math.abs(destPos.y - node.y) / moveSpeed, destPos)));
        Promise.all(promises).then(function (res) {
            console.log("finish.");
            if (!toggle.isChecked) {
                _this.showUpIcon();
            }
            else {
                if (data == 2) {
                    _this.startGameNode.active = false;
                    _this.weaponStartNode.active = true;
                }
            }
            if (data == 1) {
                var newbieNode_1 = cc.director.getScene().getChildByName("newbieNode");
                if (newbieNode_1) {
                    _this.blockNode.active = true;
                    newbieNode_1.getChildByName("guideSke").active = false;
                    newbieNode_1.runAction(cc.sequence(cc.moveTo(0.5, _this.fightButtonNode.convertToWorldSpaceAR(cc.v2())), cc.callFunc(function () {
                        _this.blockNode.active = false;
                        newbieNode_1.getChildByName("guideSke").active = true;
                    })));
                }
            }
        });
    };
    HomeController.prototype.showUpIcon = function () {
        this.upIconNodes.forEach(function (value) { return value.active = true; });
        var weaponConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon);
        var config = weaponConfig[0];
        var weaponUpConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp);
        var hpCanUp = World_1.World.Storage.HpLv < config['lv_limit'] && World_1.World.Storage.goldCount >= weaponUpConfig[World_1.World.Storage.HpLv - 1]['life_expend'];
        var adCanUp = World_1.World.Storage.ADLv < config['lv_limit'] && World_1.World.Storage.goldCount >= weaponUpConfig[World_1.World.Storage.ADLv - 1]['life_expend'];
        this.upIconNodes[0].active = hpCanUp || adCanUp;
        this.upIconNodes[1].active = false;
        for (var i = 1; i < weaponConfig.length; i++) {
            var cfg = weaponConfig[i];
            var bLock = World_1.World.Storage.gameLevel < cfg['unlock'];
            var firePowerLv = World_1.World.My.armory.levelOfEmitterFirePower(cfg['id']);
            var fireCanUp = firePowerLv < cfg['lv_limit'] && World_1.World.Storage.goldCount >= weaponUpConfig[firePowerLv - 1]['fire_expend'];
            var powerLv = World_1.World.My.armory.levelOfEmitterPower(cfg['id']);
            var powerCanUp = powerLv < cfg['lv_limit'] && World_1.World.Storage.goldCount >= weaponUpConfig[powerLv - 1]['power_expend'];
            if (!bLock && (fireCanUp || powerCanUp)) {
                this.upIconNodes[1].active = true;
                break;
            }
        }
        var goldUpConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
        var goldCanUp = World_1.World.Storage.goldLv < goldUpConfig.length && World_1.World.Storage.goldCount >= goldUpConfig[World_1.World.Storage.goldLv - 1]['gvalue_expend'];
        var earnCanUp = World_1.World.Storage.dayEarnLv < goldUpConfig.length && World_1.World.Storage.goldCount >= goldUpConfig[World_1.World.Storage.dayEarnLv - 1]['on_hook_expend'];
        this.upIconNodes[2].active = goldCanUp || earnCanUp;
    };
    HomeController.prototype.onTouchBG = function (event, data) {
        if (!this.weaponStartNode.active) {
            var newbieNode = cc.director.getScene().getChildByName("newbieNode");
            if (newbieNode) {
                this.playExit();
            }
            else {
                Facade_1.default.executeCommand("OpenViewCommand", "prefab/recommend");
            }
        }
    };
    HomeController.prototype.onClickWeaponStart = function (event, data) {
        console.log("【video】8 高爆武器开局【click】HomeController WeaponStart");
        World_1.World.Storage._videoSign = 8;
        World_1.World.Storage.videoAd_show();
    };
    HomeController.prototype.onClickWeaponStartDo = function () {
        GameProxy_1.GameProxy.prepareGun = this.weaponLayerController.focusGunID();
        this.playExit();
    };
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "startGameNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "weaponStartNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "roleHeadNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "enemyLayer", void 0);
    __decorate([
        property(sp.Skeleton)
    ], HomeController.prototype, "doorSke", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "bottomNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "centerNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "blockNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "bottomLayers", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "upIconNodes", void 0);
    __decorate([
        property(WeaponLayerController_1.default)
    ], HomeController.prototype, "weaponLayerController", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "propButtonNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "fightButtonNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "topNode", void 0);
    __decorate([
        property(cc.Node)
    ], HomeController.prototype, "rightNode", void 0);
    HomeController = __decorate([
        ccclass
    ], HomeController);
    return HomeController;
}(cc.Component));
exports.default = HomeController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvSG9tZUNvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDJEQUFxRDtBQUNyRCwyREFBc0Q7QUFDdEQscUVBQWtFO0FBQ2xFLDZEQUEwRDtBQUMxRCxpREFBNEM7QUFDNUMsd0RBQXFEO0FBQ3JELG1EQUFnRDtBQUNoRCx1Q0FBb0M7QUFDcEMsOERBQXlEO0FBQ3pELCtDQUE0QztBQUM1QyxpRUFBNEQ7QUFDNUQseUVBQW9FO0FBRTlELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDLElBQUksUUFBUSxHQUFHLEtBQUssQ0FBQztBQUNyQixJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7QUFHbEI7SUFBNEMsa0NBQVk7SUFBeEQ7UUFBQSxxRUEwWUM7UUF4WUcsbUJBQWEsR0FBVyxJQUFJLENBQUM7UUFHN0IscUJBQWUsR0FBVyxJQUFJLENBQUM7UUFHL0Isa0JBQVksR0FBVyxJQUFJLENBQUM7UUFHNUIsZ0JBQVUsR0FBVyxJQUFJLENBQUM7UUFHMUIsYUFBTyxHQUFlLElBQUksQ0FBQztRQUczQixnQkFBVSxHQUFXLElBQUksQ0FBQztRQUcxQixnQkFBVSxHQUFXLElBQUksQ0FBQztRQUcxQixlQUFTLEdBQVcsSUFBSSxDQUFDO1FBR3pCLGtCQUFZLEdBQWEsRUFBRSxDQUFDO1FBRzVCLGlCQUFXLEdBQWEsRUFBRSxDQUFDO1FBRzNCLDJCQUFxQixHQUF5QixJQUFJLENBQUM7UUFHbkQsb0JBQWMsR0FBVyxJQUFJLENBQUM7UUFHOUIscUJBQWUsR0FBVyxJQUFJLENBQUM7UUFHL0IsYUFBTyxHQUFXLElBQUksQ0FBQztRQUd2QixlQUFTLEdBQVcsSUFBSSxDQUFDOztJQThWN0IsQ0FBQztJQTNWRyxrQ0FBUyxHQUFUO1FBQ0ksUUFBUSxHQUFHLElBQUksQ0FBQztJQUNwQixDQUFDO0lBRUwsd0JBQXdCO0lBR3BCLCtCQUFNLEdBQU47UUFBQSxpQkFnRkM7UUEvRUcscUJBQVMsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQzlCLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNuQyxJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0csSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsTUFBTSxHQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7UUFDekQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUM3QixJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUM7UUFDbEYsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLEtBQUssQ0FBQztRQUNyRCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDN0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsVUFBQSxLQUFLO1lBQzFCLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzNHLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLENBQUMsQ0FBQyxDQUFDO1FBRUgsV0FBVztRQUNYLElBQUksR0FBRyxHQUFHLHlCQUFXLENBQUMsYUFBYSxDQUFDLGlDQUFlLENBQUMsVUFBVSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pFLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUM7WUFDbkUsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBQztnQkFDZixJQUFJLE1BQUksR0FBRyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ3ZCLElBQUksSUFBRSxHQUFHLE1BQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDcEIsSUFBSSxVQUFVLEdBQUcsNkJBQTZCLEdBQUMsSUFBRSxDQUFDO2dCQUNsRCxFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLE1BQU0sRUFBRSxVQUFDLEtBQUssRUFBRSxRQUFRO29CQUNyRCxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUM7d0JBQ2QsNEJBQTRCO3dCQUM1QixJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO3dCQUNwQyxJQUFJLE9BQUssR0FBVSxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQUssQ0FBQyxDQUFDO3dCQUM1QyxPQUFLLENBQUMsTUFBTSxHQUFHLGNBQUssQ0FBQyxDQUFDO3dCQUN0QixPQUFLLENBQUMsS0FBSyxHQUFHLGNBQUssQ0FBQyxDQUFDO3dCQUNyQixPQUFLLENBQUMsUUFBUSxHQUFHLGNBQUssQ0FBQyxDQUFDO3dCQUN4QixPQUFLLENBQUMsTUFBTSxHQUFHLGNBQUssQ0FBQyxDQUFDO3dCQUN0QixLQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQzt3QkFDL0IsT0FBSyxDQUFDLElBQUksQ0FBQyxJQUFFLENBQUMsQ0FBQzt3QkFDZixPQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQzt3QkFDbkIsT0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO3dCQUNqQixJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxNQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQzt3QkFDbkQsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7d0JBQ2pELElBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7d0JBQy9CLElBQUksVUFBUSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDdkUsSUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO3dCQUN6QixJQUFJLEtBQUssR0FBRyxPQUFLLENBQUMsU0FBUyxHQUFDLEVBQUUsQ0FBQzt3QkFDL0IsSUFBSSxRQUFRLEdBQUcsUUFBUSxHQUFDLEtBQUssQ0FBQzt3QkFDOUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7d0JBQ3pCLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUM7NEJBQ3BELE9BQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLFVBQVEsQ0FBQzt3QkFDbkMsQ0FBQyxDQUFDLEVBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQzs0QkFDeEMsT0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsVUFBUSxHQUFDLEdBQUcsQ0FBQzt3QkFDdkMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7cUJBQ3hDO2dCQUNMLENBQUMsQ0FBQyxDQUFDO2FBQ047aUJBQUs7Z0JBQ0YsS0FBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDbkM7UUFDTCxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDTCxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNsQixJQUFJLGlCQUFpQixHQUFHLENBQUMsQ0FBQztRQUMxQixJQUFJLFlBQVksR0FBRyx5QkFBVyxDQUFDLGFBQWEsQ0FBQyxpQ0FBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQWhCLENBQWdCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUF6QixDQUF5QixDQUFDLENBQUMsQ0FBQztRQUNuSixLQUFpQixVQUFZLEVBQVosNkJBQVksRUFBWiwwQkFBWSxFQUFaLElBQVksRUFBQztZQUF6QixJQUFJLElBQUkscUJBQUE7WUFDVCxJQUFJLGFBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBQztnQkFDMUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUMvQixNQUFNO2FBQ1Q7U0FDSjtRQUNELElBQUksaUJBQWlCLEdBQUcsQ0FBQyxFQUFDO1lBQ3RCLGlCQUFpQixHQUFHLENBQUMsQ0FBQztTQUN6QjtRQUNELEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLCtCQUErQixHQUFDLGlCQUFpQixDQUFDLENBQUE7UUFDcEUsSUFBSSxpQkFBaUIsSUFBSSx1QkFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUM7WUFDakQsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsa0NBQWtDLENBQUMsQ0FBQTtTQUN4RDthQUFLLElBQUksaUJBQWlCLElBQUksdUJBQWEsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFDO1lBQzNELEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLHNDQUFzQyxDQUFDLENBQUE7U0FDNUQ7YUFBSyxJQUFJLGlCQUFpQixJQUFJLHVCQUFhLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBQztZQUN6RCxFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFBO1NBQ3BEO1FBRUQsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFDO1lBQ2pCLEtBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFBO1FBQy9CLENBQUMsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUNaLENBQUM7SUFFRCw4QkFBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxpQ0FBUSxHQUFSO1FBQUEsaUJBY0M7UUFiRyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzFCLGFBQUssQ0FBQyxNQUFNLENBQUMsdUJBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNoQyxJQUFJLE9BQU8sR0FBRyxXQUFXLENBQUM7UUFDMUIsSUFBSSxRQUFRLEVBQUM7WUFDVCxPQUFPLEdBQUcsUUFBUSxDQUFDO1NBQ3RCO2FBQUs7WUFDRixhQUFLLENBQUMsT0FBTyxDQUFDLG9CQUFvQixFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzFDO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNoQyxJQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLFVBQUMsVUFBVSxFQUFFLElBQUk7WUFDOUMsS0FBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3JCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRU8sdUNBQWMsR0FBdEIsVUFBdUIsSUFBWTtRQUMvQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdEIsSUFBSSxhQUFhLEdBQUcsaUJBQU8sQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEdBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUMzRSxJQUFJLFVBQVUsR0FBRyxpQkFBTyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUM5RSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVPLDRDQUFtQixHQUEzQjtRQUFBLGlCQUtDO1FBSkcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pHLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDVixLQUFJLENBQUMsY0FBYyxDQUFDLEtBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM3QyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDVixDQUFDO0lBRUQsa0NBQVMsR0FBVDtRQUFBLGlCQThFQztRQTdFRyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzVCLElBQUksS0FBSyxHQUFHLEdBQUcsQ0FBQztRQUNoQixJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7UUFDbEIsSUFBSSxRQUFRLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQztRQUMzQyxJQUFHLFlBQUcsQ0FBQyxTQUFTLEVBQUM7WUFDYixRQUFRLElBQUksRUFBRSxDQUFDO1NBQ2xCO1FBQ0QsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsR0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUUzRixRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRW5GLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV6SCxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxLQUFLLEdBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRzVHLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQU0sR0FBRzs7OztnQkFDaEMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxhQUFLLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsRUFBQztvQkFDdEMsVUFBVSxHQUFHLElBQUksRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO29CQUMvQixVQUFVLENBQUMsSUFBSSxHQUFHLFlBQVksQ0FBQztvQkFDL0IsVUFBVSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLHFCQUFxQixDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO29CQUN4RSxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztvQkFFeEMsaUJBQWlCLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQztvQkFDM0QsZUFBZSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsaUJBQWlCLENBQUMsQ0FBQztvQkFDeEQsZUFBZSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7b0JBQ25DLFVBQVUsQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDLENBQUM7b0JBRWpDLGNBQWMsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO29CQUNyRCxZQUFZLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQztvQkFDbEQsWUFBWSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7b0JBQ2hDLFVBQVUsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7aUJBQ3JDO2dCQUNEOzs7Ozs7Ozs7Ozs7Ozs7OzttQkFpQkc7Z0JBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO2dCQUU5QixJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUM7b0JBQ3JELElBQUksQ0FBQyxRQUFRLElBQUksU0FBUyxHQUFDLENBQUMsS0FBSyxDQUFDLEVBQUM7d0JBQy9CLFNBQVMsR0FBRyxDQUFDLENBQUM7d0JBQ1YsSUFBSSxHQUFHLElBQUksQ0FBQzt3QkFDWixPQUFPLEdBQUcseUJBQVcsQ0FBQyxhQUFhLENBQUMsaUNBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFqRixDQUFpRixDQUFDLENBQUE7d0JBQ2hLLFdBQXdCLEVBQVAsbUJBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU8sRUFBQzs0QkFBaEIsSUFBSTs0QkFDVCxJQUFHLGFBQUssQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBQztnQ0FDckMsSUFBSSxHQUFHLEtBQUssQ0FBQztnQ0FDYixNQUFNOzZCQUNUO3lCQUNKO3dCQUNELElBQUksSUFBSSxFQUFDOzRCQUNMLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQzs0QkFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUM7Z0NBQzNELGdCQUFNLENBQUMsY0FBYyxDQUFDLGlCQUFpQixFQUFFLHVCQUF1QixDQUFDLENBQUM7Z0NBQ2xFLEtBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQzs0QkFDbEMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3lCQUNSO3FCQUNKO3lCQUFLO3dCQUNGLFNBQVMsRUFBRSxDQUFDO3FCQUNmO2lCQUNKOzs7YUFDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsaUNBQVEsR0FBUjtRQUNJLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUM3QixJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNyRSxJQUFJLFVBQVUsRUFBQztZQUNYLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNyQixhQUFLLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztTQUM3QztRQUNELGdCQUFNLENBQUMsY0FBYyxDQUFDLGtCQUFrQixFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ3ZEOzs7Ozs7Ozs7O2VBVU87UUFDUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2FBcUJLO0lBQ1QsQ0FBQztJQUVELHNDQUFhLEdBQWIsVUFBYyxNQUFNLEVBQUUsSUFBSTtRQUExQixpQkErQ0M7UUE5Q0csSUFBSSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN0QixtREFBbUQ7UUFDbkQscUJBQXFCO1FBQ3JCLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQztRQUNyQixJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7UUFDbEIsS0FBSyxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFDO1lBQzFDLElBQUksTUFBSSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDaEMsTUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUM7Z0JBQ2QsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFJLENBQUMsQ0FBQyxHQUFHLE1BQUksQ0FBQyxNQUFNLEdBQUMsQ0FBQyxHQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxHQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLE1BQUksQ0FBQyxNQUFNLEdBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO2FBQzNLO1NBQ0o7UUFDRCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksR0FBQyxDQUFDLENBQUMsQ0FBQztRQUNyQyxJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFFLElBQUksQ0FBQyxNQUFNLEdBQUMsQ0FBQyxHQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xFLElBQUksTUFBTSxDQUFDLFNBQVMsRUFBQztZQUNqQixPQUFPLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFDLENBQUMsQ0FBQztZQUNyRCxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxFQUFwQixDQUFvQixDQUFDLENBQUM7U0FDM0Q7UUFDRCxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxFQUFDO1lBQzlDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUNqQyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7U0FDdkM7UUFDRCxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxHQUFHO1lBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUM7Z0JBQ2xCLEtBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQzthQUNyQjtpQkFBSztnQkFDRixJQUFJLElBQUksSUFBSSxDQUFDLEVBQUM7b0JBQ1YsS0FBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO29CQUNsQyxLQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7aUJBQ3RDO2FBQ0o7WUFFRCxJQUFJLElBQUksSUFBSSxDQUFDLEVBQUM7Z0JBQ1YsSUFBSSxZQUFVLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ3JFLElBQUksWUFBVSxFQUFDO29CQUNYLEtBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztvQkFDN0IsWUFBVSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO29CQUNyRCxZQUFVLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsS0FBSSxDQUFDLGVBQWUsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUM7d0JBQzlHLEtBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQzt3QkFDOUIsWUFBVSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO29CQUN4RCxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7aUJBQ1A7YUFDSjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVPLG1DQUFVLEdBQWxCO1FBQ0ksSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsTUFBTSxHQUFHLElBQUksRUFBbkIsQ0FBbUIsQ0FBQyxDQUFDO1FBQ3ZELElBQUksWUFBWSxHQUFHLHlCQUFXLENBQUMsYUFBYSxDQUFDLGlDQUFlLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckUsSUFBSSxNQUFNLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdCLElBQUksY0FBYyxHQUFHLHlCQUFXLENBQUMsYUFBYSxDQUFDLGlDQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDekUsSUFBSSxPQUFPLEdBQUcsYUFBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLGFBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLGNBQWMsQ0FBQyxhQUFLLENBQUMsT0FBTyxDQUFDLElBQUksR0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN4SSxJQUFJLE9BQU8sR0FBRyxhQUFLLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLElBQUksYUFBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUksY0FBYyxDQUFDLGFBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ3hJLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLE9BQU8sSUFBSSxPQUFPLENBQUM7UUFFaEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ25DLEtBQUssSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUMsR0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFDO1lBQ3JDLElBQUksR0FBRyxHQUFHLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMxQixJQUFJLEtBQUssR0FBRyxhQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDcEQsSUFBSSxXQUFXLEdBQUcsYUFBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsdUJBQXVCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDckUsSUFBSSxTQUFTLEdBQUcsV0FBVyxHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxhQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsSUFBSSxjQUFjLENBQUMsV0FBVyxHQUFDLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3pILElBQUksT0FBTyxHQUFHLGFBQUssQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQzdELElBQUksVUFBVSxHQUFHLE9BQU8sR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksYUFBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUksY0FBYyxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUNuSCxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsU0FBUyxJQUFJLFVBQVUsQ0FBQyxFQUFDO2dCQUNwQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7Z0JBQ2xDLE1BQU07YUFDVDtTQUNKO1FBRUQsSUFBSSxZQUFZLEdBQUcseUJBQVcsQ0FBQyxhQUFhLENBQUMsaUNBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyRSxJQUFJLFNBQVMsR0FBRyxhQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxZQUFZLENBQUMsTUFBTSxJQUFJLGFBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLFlBQVksQ0FBQyxhQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUMvSSxJQUFJLFNBQVMsR0FBRyxhQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUMsTUFBTSxJQUFJLGFBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLFlBQVksQ0FBQyxhQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBQyxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3RKLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLFNBQVMsSUFBSSxTQUFTLENBQUM7SUFDeEQsQ0FBQztJQUVELGtDQUFTLEdBQVQsVUFBVSxLQUFLLEVBQUUsSUFBSTtRQUNqQixJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUM7WUFDN0IsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDckUsSUFBSSxVQUFVLEVBQUM7Z0JBQ1gsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO2FBQ25CO2lCQUFLO2dCQUNGLGdCQUFNLENBQUMsY0FBYyxDQUFDLGlCQUFpQixFQUFFLGtCQUFrQixDQUFDLENBQUM7YUFDaEU7U0FDSjtJQUNMLENBQUM7SUFFRCwyQ0FBa0IsR0FBbEIsVUFBbUIsS0FBSyxFQUFFLElBQUk7UUFDMUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrREFBa0QsQ0FBQyxDQUFBO1FBRS9ELGFBQUssQ0FBQyxPQUFPLENBQUMsVUFBVSxHQUFDLENBQUMsQ0FBQTtRQUMxQixhQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxDQUFBO0lBQ2hDLENBQUM7SUFFRCw2Q0FBb0IsR0FBcEI7UUFDSSxxQkFBUyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDL0QsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUF2WUQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzt5REFDVztJQUc3QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOzJEQUNhO0lBRy9CO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7d0RBQ1U7SUFHNUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDUTtJQUcxQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDO21EQUNLO0lBRzNCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7c0RBQ1E7SUFHMUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztzREFDUTtJQUcxQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3FEQUNPO0lBR3pCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7d0RBQ1U7SUFHNUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzt1REFDUztJQUczQjtRQURDLFFBQVEsQ0FBQywrQkFBcUIsQ0FBQztpRUFDbUI7SUFHbkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzswREFDWTtJQUc5QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOzJEQUNhO0lBRy9CO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7bURBQ0s7SUFHdkI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztxREFDTztJQTVDUixjQUFjO1FBRGxDLE9BQU87T0FDYSxjQUFjLENBMFlsQztJQUFELHFCQUFDO0NBMVlELEFBMFlDLENBMVkyQyxFQUFFLENBQUMsU0FBUyxHQTBZdkQ7a0JBMVlvQixjQUFjIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7ZXh0fSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2V4dGVuZC9FeHRlbmRcIjtcclxuaW1wb3J0IEZhY2FkZSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2ZhY2FkZS9GYWNhZGVcIjtcclxuaW1wb3J0IHtFeGNlbENvbmZpZ30gZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9jb25maWcvRXhjZWxDb25maWdcIjtcclxuaW1wb3J0IHtFeGNlbFRhYmxlTmFtZXN9IGZyb20gXCIuLi9jb25maWcvRXhjZWxUYWJsZU5hbWVzXCI7XHJcbmltcG9ydCBFbmVteSBmcm9tIFwiLi4vZW50aXRpZXMvZW5lbXkvRW5lbXlcIjtcclxuaW1wb3J0IHtNdXNpY30gZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9hdWRpby9NdXNpY1wiO1xyXG5pbXBvcnQge011c2ljUGF0aHN9IGZyb20gXCIuLi9jb25maWcvTXVzaWNQYXRoc1wiO1xyXG5pbXBvcnQge1dvcmxkfSBmcm9tIFwiLi4vaW5mby9Xb3JsZFwiO1xyXG5pbXBvcnQgQWN0aW9ucyBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2FjdGlvbnMvQWN0aW9uc1wiO1xyXG5pbXBvcnQge0dhbWVQcm94eX0gZnJvbSBcIi4uL2dhbWUvR2FtZVByb3h5XCI7XHJcbmltcG9ydCBXZWFwb25MYXllckNvbnRyb2xsZXIgZnJvbSBcIi4vV2VhcG9uTGF5ZXJDb250cm9sbGVyXCI7XHJcbmltcG9ydCBCdWxsZXRFbWl0dGVyIGZyb20gXCIuLi9lbnRpdGllcy9idWxsZXRFbWl0dGVyL0J1bGxldEVtaXR0ZXJcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxubGV0IE9uY2VGbGFnID0gZmFsc2U7XHJcbmxldCBTaG93Q291bnQgPSAwO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSG9tZUNvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBzdGFydEdhbWVOb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgd2VhcG9uU3RhcnROb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgcm9sZUhlYWROb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgZW5lbXlMYXllcjpjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoc3AuU2tlbGV0b24pXHJcbiAgICBkb29yU2tlOnNwLlNrZWxldG9uID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIGJvdHRvbU5vZGU6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBjZW50ZXJOb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgYmxvY2tOb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgYm90dG9tTGF5ZXJzOltjYy5Ob2RlXSA9IFtdO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgdXBJY29uTm9kZXM6W2NjLk5vZGVdID0gW107XHJcblxyXG4gICAgQHByb3BlcnR5KFdlYXBvbkxheWVyQ29udHJvbGxlcilcclxuICAgIHdlYXBvbkxheWVyQ29udHJvbGxlcjpXZWFwb25MYXllckNvbnRyb2xsZXIgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgcHJvcEJ1dHRvbk5vZGU6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBmaWdodEJ1dHRvbk5vZGU6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICB0b3BOb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgcmlnaHROb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuXHJcbiAgICBvbkRlc3Ryb3koKXtcclxuICAgICAgICBPbmNlRmxhZyA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4vLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICBHYW1lUHJveHkuZmlyc3RBaWRGbGFnID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLndlYXBvblN0YXJ0Tm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMud2VhcG9uU3RhcnROb2RlLnJ1bkFjdGlvbihjYy5yZXBlYXRGb3JldmVyKGNjLnNlcXVlbmNlKGNjLnNjYWxlVG8oMC4zNSwgMC45MSksIGNjLnNjYWxlVG8oMC4zNSwgMSkpKSk7XHJcbiAgICAgICAgdGhpcy53ZWFwb25TdGFydE5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50b3BOb2RlLnkgPSBjYy52aWV3LmdldFZpc2libGVTaXplKCkuaGVpZ2h0LzIgKyAyNTA7XHJcbiAgICAgICAgdGhpcy5yaWdodE5vZGUueCA9IDI4OSArIDIwMDtcclxuICAgICAgICB0aGlzLmJvdHRvbU5vZGUueSA9IC10aGlzLmJvdHRvbU5vZGUuaGVpZ2h0LzIgLSBjYy52aWV3LmdldFZpc2libGVTaXplKCkuaGVpZ2h0LzI7XHJcbiAgICAgICAgdGhpcy5jZW50ZXJOb2RlLnggID0gLWNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKS53aWR0aDtcclxuICAgICAgICB0aGlzLmJsb2NrTm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMudXBJY29uTm9kZXMuZm9yRWFjaCh2YWx1ZSA9PiB7XHJcbiAgICAgICAgICAgIHZhbHVlLnJ1bkFjdGlvbihjYy5yZXBlYXRGb3JldmVyKGNjLnNlcXVlbmNlKGNjLm1vdmVCeSgwLjUsIGNjLnYyKDAsIDE1KSksIGNjLm1vdmVCeSgwLjUsIGNjLnYyKDAsLTE1KSkpKSk7XHJcbiAgICAgICAgICAgIHZhbHVlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvKiog55Sf5oiQ5pWM5Lq6ICovXHJcbiAgICAgICAgbGV0IGFyciA9IEV4Y2VsQ29uZmlnLmdldEV4Y2VsVGFibGUoRXhjZWxUYWJsZU5hbWVzLlN0YXJ0RW5lbXkpLnNsaWNlKDApO1xyXG4gICAgICAgIGxldCBhY3Rpb24gPSBjYy5yZXBlYXRGb3JldmVyKGNjLnNlcXVlbmNlKGNjLmRlbGF5VGltZSgwKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgaWYgKGFyci5sZW5ndGggPiAwKXtcclxuICAgICAgICAgICAgICAgIGxldCBpdGVtID0gYXJyLnNoaWZ0KCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgaWQgPSBpdGVtWydpZCddO1xyXG4gICAgICAgICAgICAgICAgbGV0IHByZWZhYlBhdGggPSAncHJlZmFiL2VudGl0aWVzL2VuZW15L2VuZW15JytpZDtcclxuICAgICAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKHByZWZhYlBhdGgsIGNjLlByZWZhYiwgKGVycm9yLCByZXNvdXJjZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnJvciA9PSBudWxsKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJpZD09PT5cIitpZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBub2RlID0gY2MuaW5zdGFudGlhdGUocmVzb3VyY2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZW5lbXkgPSA8RW5lbXk+bm9kZS5nZXRDb21wb25lbnQoRW5lbXkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmVteS5vbkxvYWQgPSAoKT0+e307XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15LnN0YXJ0ID0gKCk9Pnt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmVteS5vbkVuYWJsZSA9ICgpPT57fTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW5lbXkudXBkYXRlID0gKCk9Pnt9O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVuZW15TGF5ZXIuYWRkQ2hpbGQobm9kZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15LmluaXQoaWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbmVteS5zdGlmZiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15LnBsYXlXYWxrKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzdGFydFBvcyA9IGNjLnYyKGl0ZW1bJ2NkX3N4J10sIGl0ZW1bJ2NkX3N5J10pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZW5kUG9zID0gY2MudjIoaXRlbVsnY2RfZXgnXSwgaXRlbVsnY2RfZXknXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzdWIgPSBlbmRQb3Muc3ViKHN0YXJ0UG9zKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJvdGF0aW9uID0gOTAgLSBjYy5taXNjLnJhZGlhbnNUb0RlZ3JlZXMoTWF0aC5hdGFuMihzdWIueSwgc3ViLngpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRpc3RhbmNlID0gc3ViLm1hZygpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3BlZWQgPSBlbmVteS5tb3ZlU3BlZWQqMTU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkdXJhdGlvbiA9IGRpc3RhbmNlL3NwZWVkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLnBvc2l0aW9uID0gc3RhcnRQb3M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucnVuQWN0aW9uKGNjLnJlcGVhdEZvcmV2ZXIoY2Muc2VxdWVuY2UoY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15Lm5vZGUucm90YXRpb24gPSByb3RhdGlvbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSksY2MubW92ZVRvKGR1cmF0aW9uLCBlbmRQb3MpLCBjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5lbXkubm9kZS5yb3RhdGlvbiA9IHJvdGF0aW9uKzE4MDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSksIGNjLm1vdmVUbyhkdXJhdGlvbiwgc3RhcnRQb3MpKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUuc3RvcEFjdGlvbkJ5VGFnKDI1ODMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkpKTtcclxuICAgICAgICBhY3Rpb24uc2V0VGFnKDI1ODMpO1xyXG4gICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oYWN0aW9uKTtcclxuICAgICAgICB0aGlzLnNob3dVcEljb24oKTtcclxuICAgICAgICBsZXQgYnVsbGV0RW1pdHRlclR5cGUgPSAyO1xyXG4gICAgICAgIGxldCB3ZWFwb25Db25maWcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5XZWFwb24pLmZpbHRlcih2YWx1ZSA9PiB2YWx1ZVsnaWQnXSAhPSAxKS5zb3J0KCgoYSwgYikgPT4gYlsndW5sb2NrJ10gLSBhWyd1bmxvY2snXSkpO1xyXG4gICAgICAgIGZvciAobGV0IGl0ZW0gb2Ygd2VhcG9uQ29uZmlnKXtcclxuICAgICAgICAgICAgaWYgKFdvcmxkLlN0b3JhZ2UuZ2FtZUxldmVsID49IGl0ZW1bJ3VubG9jayddKXtcclxuICAgICAgICAgICAgICAgIGJ1bGxldEVtaXR0ZXJUeXBlID0gaXRlbVsnaWQnXTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChidWxsZXRFbWl0dGVyVHlwZSA+IDcpe1xyXG4gICAgICAgICAgICBidWxsZXRFbWl0dGVyVHlwZSA9IDc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKCdwcmVmYWIvZW50aXRpZXMvYnVsbGV0L2J1bGxldCcrYnVsbGV0RW1pdHRlclR5cGUpXHJcbiAgICAgICAgaWYgKGJ1bGxldEVtaXR0ZXJUeXBlID09IEJ1bGxldEVtaXR0ZXIuVFlQRVMuTGlaaVBhbyl7XHJcbiAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKCdwcmVmYWIvZW50aXRpZXMvYnVsbGV0L2J1bGxldDEwOCcpXHJcbiAgICAgICAgfWVsc2UgaWYgKGJ1bGxldEVtaXR0ZXJUeXBlID09IEJ1bGxldEVtaXR0ZXIuVFlQRVMuSHVvSmlhblRvbmcpe1xyXG4gICAgICAgICAgICBjYy5sb2FkZXIubG9hZFJlcygncHJlZmFiL2VudGl0aWVzL2V4cGxvc2l2ZS9leHBsb3NpdmU5JylcclxuICAgICAgICB9ZWxzZSBpZiAoYnVsbGV0RW1pdHRlclR5cGUgPT0gQnVsbGV0RW1pdHRlci5UWVBFUy5KdUppUWlhbmcpe1xyXG4gICAgICAgICAgICBjYy5sb2FkZXIubG9hZFJlcygncHJlZmFiL2VudGl0aWVzL2J1bGxldC9maXJlNycpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjYy5nYW1lLm9uKFwidmlkZW9fOFwiLCgpPT57XHJcbiAgICAgICAgICAgIHRoaXMub25DbGlja1dlYXBvblN0YXJ0RG8oKVxyXG4gICAgICAgIH0sdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhcnQoKXtcclxuICAgICAgICB0aGlzLm9wZW5Eb29yKCk7XHJcbiAgICB9XHJcblxyXG4gICAgb3BlbkRvb3IoKXtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIm9wZW5Eb29yLi5cIik7XHJcbiAgICAgICAgTXVzaWMuc2V0QmdtKE11c2ljUGF0aHMuSG9tZUJnKTtcclxuICAgICAgICBsZXQgc2tlTmFtZSA9IFwiYW5pbWF0aW9uXCI7XHJcbiAgICAgICAgaWYgKE9uY2VGbGFnKXtcclxuICAgICAgICAgICAgc2tlTmFtZSA9IFwib3BlbmVkXCI7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICBNdXNpYy5wbGF5U0ZYKFwic291bmQvbXNjX29wZW5Eb29yXCIsIDIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmRvb3JTa2Uubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuZG9vclNrZS5zZXRDb21wbGV0ZUxpc3RlbmVyKCh0cmFja0VudHJ5LCBsb29wKT0+e1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlFbnRyeSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuZG9vclNrZS5zZXRBbmltYXRpb24oMCwgc2tlTmFtZSwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcGxheU5vZGVBY3Rpb24obm9kZTpjYy5Ob2RlKXtcclxuICAgICAgICBub2RlLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICAgICAgbGV0IGN5Y2xlUm90YXRpb24gPSBBY3Rpb25zLmN5Y2xlQWN0aW9uKGNjLnJvdGF0ZVRvLCAwLCAwLCA4LCAzNjAvMiwgOCwgMCk7XHJcbiAgICAgICAgbGV0IGN5Y2xlU2NhbGUgPSBBY3Rpb25zLmN5Y2xlQWN0aW9uKGNjLnNjYWxlVG8sIDEsIDEsIDAuMSwgMS8wLjgsIDAsIDAsIDAuNSk7XHJcbiAgICAgICAgbm9kZS5ydW5BY3Rpb24oY3ljbGVSb3RhdGlvbik7XHJcbiAgICAgICAgbm9kZS5ydW5BY3Rpb24oY3ljbGVTY2FsZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBwbGF5Tm9kZUFjdGlvblN0YXJ0KCl7XHJcbiAgICAgICAgdGhpcy5zdGFydEdhbWVOb2RlLnJ1bkFjdGlvbihjYy5yZXBlYXRGb3JldmVyKGNjLnNlcXVlbmNlKGNjLnNjYWxlVG8oMC4zNSwgMC45MSksIGNjLnNjYWxlVG8oMC4zNSwgMSkpKSk7XHJcbiAgICAgICAgdGhpcy5zY2hlZHVsZSgoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlOb2RlQWN0aW9uKHRoaXMucHJvcEJ1dHRvbk5vZGUpO1xyXG4gICAgICAgIH0sIDMpO1xyXG4gICAgfVxyXG5cclxuICAgIHBsYXlFbnRyeSgpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwicGxheUVudHJ5Li4uXCIpO1xyXG4gICAgICAgIGxldCBzcGVlZCA9IDcwMDtcclxuICAgICAgICBsZXQgcHJvbWlzZXMgPSBbXTtcclxuICAgICAgICBsZXQgZGlzdGFuY2UgPSAyNTAgKyB0aGlzLnRvcE5vZGUuaGVpZ2h0LzI7XHJcbiAgICAgICAgaWYoZXh0LmlzSXBob25lWCl7XHJcbiAgICAgICAgICAgIGRpc3RhbmNlICs9IDY2O1xyXG4gICAgICAgIH1cclxuICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMudG9wTm9kZS5ydW5BY3Rpb25Bd2FpdChjYy5tb3ZlQnkoZGlzdGFuY2Uvc3BlZWQsIGNjLnYyKDAsIC1kaXN0YW5jZSkpKSk7XHJcblxyXG4gICAgICAgIHByb21pc2VzLnB1c2godGhpcy5yaWdodE5vZGUucnVuQWN0aW9uQXdhaXQoY2MubW92ZUJ5KDIwMC9zcGVlZCwgY2MudjIoLTIwMCwgMCkpKSk7XHJcblxyXG4gICAgICAgIHByb21pc2VzLnB1c2godGhpcy5ib3R0b21Ob2RlLnJ1bkFjdGlvbkF3YWl0KGNjLm1vdmVCeSh0aGlzLmJvdHRvbU5vZGUuaGVpZ2h0L3NwZWVkLCBjYy52MigwLCB0aGlzLmJvdHRvbU5vZGUuaGVpZ2h0KSkpKTtcclxuXHJcbiAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLmNlbnRlck5vZGUucnVuQWN0aW9uQXdhaXQoY2MubW92ZVRvKGNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKS53aWR0aC9zcGVlZCwgY2MudjIoMCwgMCkpKSk7XHJcblxyXG5cclxuICAgICAgICBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbihhc3luYyByZXM9PntcclxuICAgICAgICAgICAgdGhpcy5wbGF5Tm9kZUFjdGlvblN0YXJ0KCk7XHJcbiAgICAgICAgICAgIGlmICghV29ybGQuTXkubmV3Ymllcy5zdGF0ZShcIkZpcnN0RW50cnlIb21lXCIpKXtcclxuICAgICAgICAgICAgICAgIGxldCBuZXdiaWVOb2RlID0gbmV3IGNjLk5vZGUoKTtcclxuICAgICAgICAgICAgICAgIG5ld2JpZU5vZGUubmFtZSA9IFwibmV3YmllTm9kZVwiO1xyXG4gICAgICAgICAgICAgICAgbmV3YmllTm9kZS5wb3NpdGlvbiA9IHRoaXMuc3RhcnRHYW1lTm9kZS5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIoY2MudjIoKSk7XHJcbiAgICAgICAgICAgICAgICBjYy5kaXJlY3Rvci5nZXRTY2VuZSgpLmFkZENoaWxkKG5ld2JpZU5vZGUpO1xyXG4gICAgICAgICAgICAgICAgLyoqIGd1aWRlQ2lyY2xlICovXHJcbiAgICAgICAgICAgICAgICBsZXQgZ3VpZGVDaXJjbGVQcmVmYWIgPSBjYy5sb2FkZXIuZ2V0UmVzKFwicHJlZmFiL2d1aWRlQ2lyY2xlXCIpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGd1aWRlQ2lyY2xlTm9kZSA9IGNjLmluc3RhbnRpYXRlKGd1aWRlQ2lyY2xlUHJlZmFiKTtcclxuICAgICAgICAgICAgICAgIGd1aWRlQ2lyY2xlTm9kZS5wb3NpdGlvbiA9IGNjLnYyKCk7XHJcbiAgICAgICAgICAgICAgICBuZXdiaWVOb2RlLmFkZENoaWxkKGd1aWRlQ2lyY2xlTm9kZSk7XHJcbiAgICAgICAgICAgICAgICAvKiogZ3VpZGVTa2UgKi9cclxuICAgICAgICAgICAgICAgIGxldCBndWlkZVNrZVByZWZhYiA9IGNjLmxvYWRlci5nZXRSZXMoXCJwcmVmYWIvZ3VpZGVTa2VcIik7XHJcbiAgICAgICAgICAgICAgICBsZXQgZ3VpZGVTa2VOb2RlID0gY2MuaW5zdGFudGlhdGUoZ3VpZGVTa2VQcmVmYWIpO1xyXG4gICAgICAgICAgICAgICAgZ3VpZGVTa2VOb2RlLnBvc2l0aW9uID0gY2MudjIoKTtcclxuICAgICAgICAgICAgICAgIG5ld2JpZU5vZGUuYWRkQ2hpbGQoZ3VpZGVTa2VOb2RlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvKmlmIChPbmNlRmxhZyl7XHJcbiAgICAgICAgICAgICAgICBpZiAoIVdvcmxkLk15Lm5ld2JpZXMuc3RhdGUoXCJGaXJzdFJvbGVVcFwiKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld2JpZU5vZGUgPSBuZXcgY2MuTm9kZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld2JpZU5vZGUubmFtZSA9IFwibmV3YmllTm9kZVwiO1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld2JpZU5vZGUucG9zaXRpb24gPSB0aGlzLnJvbGVIZWFkTm9kZS5jb252ZXJ0VG9Xb3JsZFNwYWNlQVIoY2MudjIoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY2MuZGlyZWN0b3IuZ2V0U2NlbmUoKS5hZGRDaGlsZChuZXdiaWVOb2RlKTtcclxuICAgICAgICAgICAgICAgICAgICAvISoqIGd1aWRlQ2lyY2xlICohL1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBndWlkZUNpcmNsZVByZWZhYiA9IGNjLmxvYWRlci5nZXRSZXMoXCJwcmVmYWIvZ3VpZGVDaXJjbGVcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGd1aWRlQ2lyY2xlTm9kZSA9IGNjLmluc3RhbnRpYXRlKGd1aWRlQ2lyY2xlUHJlZmFiKTtcclxuICAgICAgICAgICAgICAgICAgICBndWlkZUNpcmNsZU5vZGUucG9zaXRpb24gPSBjYy52MigpO1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld2JpZU5vZGUuYWRkQ2hpbGQoZ3VpZGVDaXJjbGVOb2RlKTtcclxuICAgICAgICAgICAgICAgICAgICAvISoqIGd1aWRlU2tlICohL1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBndWlkZVNrZVByZWZhYiA9IGNjLmxvYWRlci5nZXRSZXMoXCJwcmVmYWIvZ3VpZGVTa2VcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGd1aWRlU2tlTm9kZSA9IGNjLmluc3RhbnRpYXRlKGd1aWRlU2tlUHJlZmFiKTtcclxuICAgICAgICAgICAgICAgICAgICBndWlkZVNrZU5vZGUucG9zaXRpb24gPSBjYy52MigpO1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld2JpZU5vZGUuYWRkQ2hpbGQoZ3VpZGVTa2VOb2RlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSovXHJcbiAgICAgICAgICAgIHRoaXMuYmxvY2tOb2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG5cclxuICAgICAgICAgICAgaWYgKCFjYy5kaXJlY3Rvci5nZXRTY2VuZSgpLmdldENoaWxkQnlOYW1lKFwibmV3YmllTm9kZVwiKSl7XHJcbiAgICAgICAgICAgICAgICBpZiAoIU9uY2VGbGFnIHx8IFNob3dDb3VudCUzID09PSAyKXtcclxuICAgICAgICAgICAgICAgICAgICBTaG93Q291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBzaG93ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgdW5sb2NrcyA9IEV4Y2VsQ29uZmlnLmdldEV4Y2VsVGFibGUoRXhjZWxUYWJsZU5hbWVzLlByb3ApLmZpbHRlcih2YWx1ZSA9PiB2YWx1ZVsnaWQnXSAhPSA3ICYmIHZhbHVlWydpZCddICE9IDggJiYgdmFsdWVbJ2lkJ10gIT0gMTAgJiYgdmFsdWVbJ3VubG9jayddICE9IDApXHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaXRlbSBvZiB1bmxvY2tzKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoV29ybGQuTXkucHJvcEluZm8uYmVVc2luZyhpdGVtWydpZCddKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdyl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmxvY2tOb2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MuZGVsYXlUaW1lKDAuNSksIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBGYWNhZGUuZXhlY3V0ZUNvbW1hbmQoXCJPcGVuVmlld0NvbW1hbmRcIiwgXCJwcmVmYWIvcmVjb21tZW5kUHJvcHNcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJsb2NrTm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgU2hvd0NvdW50Kys7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwbGF5RXhpdCgpe1xyXG4gICAgICAgIHRoaXMuYmxvY2tOb2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgbGV0IG5ld2JpZU5vZGUgPSBjYy5kaXJlY3Rvci5nZXRTY2VuZSgpLmdldENoaWxkQnlOYW1lKFwibmV3YmllTm9kZVwiKTtcclxuICAgICAgICBpZiAobmV3YmllTm9kZSl7XHJcbiAgICAgICAgICAgIG5ld2JpZU5vZGUuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICBXb3JsZC5NeS5uZXdiaWVzLmZpbmlzaChcIkZpcnN0RW50cnlIb21lXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBGYWNhZGUuZXhlY3V0ZUNvbW1hbmQoXCJMb2FkU2NlbmVDb21tYW5kXCIsIFwiR2FtZVNjZW5lXCIpO1xyXG4gICAgICAgIC8qbGV0IHdoaXRlTm9kZSA9IHRoaXMud2hpdGVOb2RlO1xyXG4gICAgICAgIHdoaXRlTm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHdoaXRlTm9kZS5yZW1vdmVGcm9tUGFyZW50KGZhbHNlKTtcclxuICAgICAgICBjYy5kaXJlY3Rvci5nZXRTY2VuZSgpLmFkZENoaWxkKHdoaXRlTm9kZSk7XHJcbiAgICAgICAgd2hpdGVOb2RlLnBvc2l0aW9uID0gY2MudmlzaWJsZVJlY3QuY2VudGVyO1xyXG4gICAgICAgIHdoaXRlTm9kZS5vcGFjaXR5ID0gMDtcclxuICAgICAgICB3aGl0ZU5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLmZhZGVUbygwLjUsIDI1NSksIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgIEZhY2FkZS5leGVjdXRlQ29tbWFuZChcIkxvYWRTY2VuZUNvbW1hbmRcIiwgXCJHYW1lU2NlbmVcIik7XHJcbiAgICAgICAgfSksIGNjLmRlbGF5VGltZSgwLjIpLCBjYy5mYWRlVG8oMC41LCAwKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgd2hpdGVOb2RlLmRlc3Ryb3koKTtcclxuICAgICAgICB9KSkpOyovXHJcbiAgICAgICAgLypsZXQgcHJvbWlzZXMgPSBbXTtcclxuICAgICAgICBsZXQgc3BlZWQgPSA3MDA7XHJcbiAgICAgICAgbGV0IGRpc3RhbmNlID0gMjUwICsgdGhpcy50b3BOb2RlLmhlaWdodC8yO1xyXG4gICAgICAgIGlmKGV4dC5pc0lwaG9uZVgpe1xyXG4gICAgICAgICAgICBkaXN0YW5jZSArPSA2NjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IG1vdmVTcGVlZCA9IDEyMDA7XHJcbiAgICAgICAgZm9yIChsZXQgaT0wOyBpPHRoaXMuYm90dG9tTGF5ZXJzLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgbGV0IG5vZGUgPSB0aGlzLmJvdHRvbUxheWVyc1tpXTtcclxuICAgICAgICAgICAgbm9kZS5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKG5vZGUucnVuQWN0aW9uQXdhaXQoY2MubW92ZVRvKE1hdGguYWJzKG5vZGUueSAtIG5vZGUuaGVpZ2h0LzIrIHRoaXMuYm90dG9tTm9kZS5oZWlnaHQvMikvbW92ZVNwZWVkLCBjYy52MigwLCAtbm9kZS5oZWlnaHQvMiArIHRoaXMuYm90dG9tTm9kZS5oZWlnaHQvMikpKSlcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLnRvcE5vZGUucnVuQWN0aW9uQXdhaXQoY2MubW92ZUJ5KGRpc3RhbmNlL3NwZWVkLCBjYy52MigwLCBkaXN0YW5jZSkpKSk7XHJcbiAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLmJvdHRvbU5vZGUucnVuQWN0aW9uQXdhaXQoY2MubW92ZUJ5KHRoaXMuYm90dG9tTm9kZS5oZWlnaHQvc3BlZWQsIGNjLnYyKDAsIC10aGlzLmJvdHRvbU5vZGUuaGVpZ2h0KSkpKTtcclxuICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMucmlnaHROb2RlLnJ1bkFjdGlvbkF3YWl0KGNjLm1vdmVCeSgyMDAvc3BlZWQsIGNjLnYyKDIwMCwgMCkpKSk7XHJcbiAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLmNlbnRlck5vZGUucnVuQWN0aW9uQXdhaXQoY2MubW92ZVRvKGNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKS53aWR0aC9zcGVlZCwgY2MudjIoLWNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKS53aWR0aCwgMCkpKSk7XHJcbiAgICAgICAgUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4ocmVzPT57XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2Muc2NhbGVUbygxLCAxLzAuNCksIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgICAgICAvL+WIh+aNouWcuuaZr1xyXG4gICAgICAgICAgICAgICAgRmFjYWRlLmV4ZWN1dGVDb21tYW5kKFwiTG9hZFNjZW5lQ29tbWFuZFwiLCBcIkdhbWVTY2VuZVwiKTtcclxuICAgICAgICAgICAgfSkpKTtcclxuICAgICAgICB9KTsqL1xyXG4gICAgfVxyXG5cclxuICAgIG9uVG9nZ2xlRXZlbnQodG9nZ2xlLCBkYXRhKXtcclxuICAgICAgICBkYXRhID0gcGFyc2VJbnQoZGF0YSk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2codG9nZ2xlLm5vZGUubmFtZSwgdG9nZ2xlLmlzQ2hlY2tlZCk7XHJcbiAgICAgICAgLyoqIOWFtuS7luWvueixoeWFs+mXre+8jOeEtuWQjuWGjeWkhOeQhuiHquW3sSAqL1xyXG4gICAgICAgIGxldCBtb3ZlU3BlZWQgPSAxMjAwO1xyXG4gICAgICAgIGxldCBwcm9taXNlcyA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGk9MDsgaTx0aGlzLmJvdHRvbUxheWVycy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGxldCBub2RlID0gdGhpcy5ib3R0b21MYXllcnNbaV07XHJcbiAgICAgICAgICAgIG5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICAgICAgaWYgKGkgIT0gZGF0YSAtIDEpe1xyXG4gICAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaChub2RlLnJ1bkFjdGlvbkF3YWl0KGNjLm1vdmVUbyhNYXRoLmFicyhub2RlLnkgLSBub2RlLmhlaWdodC8yKyB0aGlzLmJvdHRvbU5vZGUuaGVpZ2h0LzIpL21vdmVTcGVlZCwgY2MudjIoMCwgLW5vZGUuaGVpZ2h0LzIgKyB0aGlzLmJvdHRvbU5vZGUuaGVpZ2h0LzIpKSkpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IG5vZGUgPSB0aGlzLmJvdHRvbUxheWVyc1tkYXRhLTFdO1xyXG4gICAgICAgIGxldCBkZXN0UG9zID0gY2MudjIoMCwgLSBub2RlLmhlaWdodC8yKyB0aGlzLmJvdHRvbU5vZGUuaGVpZ2h0LzIpO1xyXG4gICAgICAgIGlmICh0b2dnbGUuaXNDaGVja2VkKXtcclxuICAgICAgICAgICAgZGVzdFBvcy55ID0gbm9kZS5oZWlnaHQvMiArIHRoaXMuYm90dG9tTm9kZS5oZWlnaHQvMjtcclxuICAgICAgICAgICAgdGhpcy51cEljb25Ob2Rlcy5mb3JFYWNoKHZhbHVlID0+IHZhbHVlLmFjdGl2ZSA9IGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKChkYXRhID09IDIgJiYgIXRvZ2dsZS5pc0NoZWNrZWQpIHx8IGRhdGEgIT0gMil7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhcnRHYW1lTm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLndlYXBvblN0YXJ0Tm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJvbWlzZXMucHVzaChub2RlLnJ1bkFjdGlvbkF3YWl0KGNjLm1vdmVUbyhNYXRoLmFicyhkZXN0UG9zLnkgLSBub2RlLnkpL21vdmVTcGVlZCwgZGVzdFBvcykpKTtcclxuICAgICAgICBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbihyZXM9PntcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJmaW5pc2guXCIpO1xyXG4gICAgICAgICAgICBpZiAoIXRvZ2dsZS5pc0NoZWNrZWQpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zaG93VXBJY29uKCk7XHJcbiAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChkYXRhID09IDIpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRHYW1lTm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLndlYXBvblN0YXJ0Tm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoZGF0YSA9PSAxKXtcclxuICAgICAgICAgICAgICAgIGxldCBuZXdiaWVOb2RlID0gY2MuZGlyZWN0b3IuZ2V0U2NlbmUoKS5nZXRDaGlsZEJ5TmFtZShcIm5ld2JpZU5vZGVcIik7XHJcbiAgICAgICAgICAgICAgICBpZiAobmV3YmllTm9kZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ibG9ja05vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBuZXdiaWVOb2RlLmdldENoaWxkQnlOYW1lKFwiZ3VpZGVTa2VcIikuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3YmllTm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MubW92ZVRvKDAuNSwgdGhpcy5maWdodEJ1dHRvbk5vZGUuY29udmVydFRvV29ybGRTcGFjZUFSKGNjLnYyKCkpKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ibG9ja05vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld2JpZU5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJndWlkZVNrZVwiKS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pKSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc2hvd1VwSWNvbigpe1xyXG4gICAgICAgIHRoaXMudXBJY29uTm9kZXMuZm9yRWFjaCh2YWx1ZSA9PiB2YWx1ZS5hY3RpdmUgPSB0cnVlKTtcclxuICAgICAgICBsZXQgd2VhcG9uQ29uZmlnID0gRXhjZWxDb25maWcuZ2V0RXhjZWxUYWJsZShFeGNlbFRhYmxlTmFtZXMuV2VhcG9uKTtcclxuICAgICAgICBsZXQgY29uZmlnID0gd2VhcG9uQ29uZmlnWzBdO1xyXG4gICAgICAgIGxldCB3ZWFwb25VcENvbmZpZyA9IEV4Y2VsQ29uZmlnLmdldEV4Y2VsVGFibGUoRXhjZWxUYWJsZU5hbWVzLldlYXBvblVwKTtcclxuICAgICAgICBsZXQgaHBDYW5VcCA9IFdvcmxkLlN0b3JhZ2UuSHBMdiA8IGNvbmZpZ1snbHZfbGltaXQnXSAmJiBXb3JsZC5TdG9yYWdlLmdvbGRDb3VudCA+PSB3ZWFwb25VcENvbmZpZ1tXb3JsZC5TdG9yYWdlLkhwTHYtMV1bJ2xpZmVfZXhwZW5kJ107XHJcbiAgICAgICAgbGV0IGFkQ2FuVXAgPSBXb3JsZC5TdG9yYWdlLkFETHYgPCBjb25maWdbJ2x2X2xpbWl0J10gJiYgV29ybGQuU3RvcmFnZS5nb2xkQ291bnQgPj0gd2VhcG9uVXBDb25maWdbV29ybGQuU3RvcmFnZS5BREx2LTFdWydsaWZlX2V4cGVuZCddO1xyXG4gICAgICAgIHRoaXMudXBJY29uTm9kZXNbMF0uYWN0aXZlID0gaHBDYW5VcCB8fCBhZENhblVwO1xyXG5cclxuICAgICAgICB0aGlzLnVwSWNvbk5vZGVzWzFdLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIGZvciAobGV0IGk9MTsgaTx3ZWFwb25Db25maWcubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBsZXQgY2ZnID0gd2VhcG9uQ29uZmlnW2ldO1xyXG4gICAgICAgICAgICBsZXQgYkxvY2sgPSBXb3JsZC5TdG9yYWdlLmdhbWVMZXZlbCA8IGNmZ1sndW5sb2NrJ107XHJcbiAgICAgICAgICAgIGxldCBmaXJlUG93ZXJMdiA9IFdvcmxkLk15LmFybW9yeS5sZXZlbE9mRW1pdHRlckZpcmVQb3dlcihjZmdbJ2lkJ10pO1xyXG4gICAgICAgICAgICBsZXQgZmlyZUNhblVwID0gZmlyZVBvd2VyTHYgPCBjZmdbJ2x2X2xpbWl0J10gJiYgV29ybGQuU3RvcmFnZS5nb2xkQ291bnQgPj0gd2VhcG9uVXBDb25maWdbZmlyZVBvd2VyTHYtMV1bJ2ZpcmVfZXhwZW5kJ107XHJcbiAgICAgICAgICAgIGxldCBwb3dlckx2ID0gV29ybGQuTXkuYXJtb3J5LmxldmVsT2ZFbWl0dGVyUG93ZXIoY2ZnWydpZCddKTtcclxuICAgICAgICAgICAgbGV0IHBvd2VyQ2FuVXAgPSBwb3dlckx2IDwgY2ZnWydsdl9saW1pdCddICYmIFdvcmxkLlN0b3JhZ2UuZ29sZENvdW50ID49IHdlYXBvblVwQ29uZmlnW3Bvd2VyTHYtMV1bJ3Bvd2VyX2V4cGVuZCddO1xyXG4gICAgICAgICAgICBpZiAoIWJMb2NrICYmIChmaXJlQ2FuVXAgfHwgcG93ZXJDYW5VcCkpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy51cEljb25Ob2Rlc1sxXS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBnb2xkVXBDb25maWcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5Hb2xkVXApO1xyXG4gICAgICAgIGxldCBnb2xkQ2FuVXAgPSBXb3JsZC5TdG9yYWdlLmdvbGRMdiA8IGdvbGRVcENvbmZpZy5sZW5ndGggJiYgV29ybGQuU3RvcmFnZS5nb2xkQ291bnQgPj0gZ29sZFVwQ29uZmlnW1dvcmxkLlN0b3JhZ2UuZ29sZEx2LTFdWydndmFsdWVfZXhwZW5kJ107XHJcbiAgICAgICAgbGV0IGVhcm5DYW5VcCA9IFdvcmxkLlN0b3JhZ2UuZGF5RWFybkx2IDwgZ29sZFVwQ29uZmlnLmxlbmd0aCAmJiBXb3JsZC5TdG9yYWdlLmdvbGRDb3VudCA+PSBnb2xkVXBDb25maWdbV29ybGQuU3RvcmFnZS5kYXlFYXJuTHYtMV1bJ29uX2hvb2tfZXhwZW5kJ107XHJcbiAgICAgICAgdGhpcy51cEljb25Ob2Rlc1syXS5hY3RpdmUgPSBnb2xkQ2FuVXAgfHwgZWFybkNhblVwO1xyXG4gICAgfVxyXG5cclxuICAgIG9uVG91Y2hCRyhldmVudCwgZGF0YSl7XHJcbiAgICAgICAgaWYgKCF0aGlzLndlYXBvblN0YXJ0Tm9kZS5hY3RpdmUpe1xyXG4gICAgICAgICAgICBsZXQgbmV3YmllTm9kZSA9IGNjLmRpcmVjdG9yLmdldFNjZW5lKCkuZ2V0Q2hpbGRCeU5hbWUoXCJuZXdiaWVOb2RlXCIpO1xyXG4gICAgICAgICAgICBpZiAobmV3YmllTm9kZSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXlFeGl0KCk7XHJcbiAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgIEZhY2FkZS5leGVjdXRlQ29tbWFuZChcIk9wZW5WaWV3Q29tbWFuZFwiLCBcInByZWZhYi9yZWNvbW1lbmRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja1dlYXBvblN0YXJ0KGV2ZW50LCBkYXRhKXtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIuOAkHZpZGVv44CROCDpq5jniIbmrablmajlvIDlsYDjgJBjbGlja+OAkUhvbWVDb250cm9sbGVyIFdlYXBvblN0YXJ0XCIpXHJcblxyXG4gICAgICAgIFdvcmxkLlN0b3JhZ2UuX3ZpZGVvU2lnbj04XHJcbiAgICAgICAgV29ybGQuU3RvcmFnZS52aWRlb0FkX3Nob3coKSBcclxuICAgIH1cclxuXHJcbiAgICBvbkNsaWNrV2VhcG9uU3RhcnREbygpe1xyXG4gICAgICAgIEdhbWVQcm94eS5wcmVwYXJlR3VuID0gdGhpcy53ZWFwb25MYXllckNvbnRyb2xsZXIuZm9jdXNHdW5JRCgpO1xyXG4gICAgICAgIHRoaXMucGxheUV4aXQoKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/info/Formula.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '62f6aU/jHhCg7Y1stBnDERq', 'Formula');
// script/app/info/Formula.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.Formula = void 0;
/** 公式模块 */
var Formula;
(function (Formula) {
    /** 金币 */
    var Gold = /** @class */ (function () {
        function Gold() {
        }
        /** 金币价值 */
        Gold.goldCost = function (lv, maxLv, cost) {
            if (lv > maxLv) {
                return cost + (lv - maxLv);
            }
            else {
                return cost;
            }
        };
        /** 日常收益 */
        Gold.dayGet = function (lv) {
            return Math.floor(lv * 1.8);
        };
        /** 升级消耗 */
        Gold.upgradeCost = function (lv) {
            return lv * 120;
        };
        return Gold;
    }());
    Formula.Gold = Gold;
})(Formula = exports.Formula || (exports.Formula = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2luZm8vRm9ybXVsYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLFdBQVc7QUFDWCxJQUFjLE9BQU8sQ0F1QnBCO0FBdkJELFdBQWMsT0FBTztJQUNqQixTQUFTO0lBQ1Q7UUFBQTtRQW1CQSxDQUFDO1FBbEJHLFdBQVc7UUFDRyxhQUFRLEdBQXRCLFVBQXVCLEVBQVMsRUFBRSxLQUFZLEVBQUUsSUFBVztZQUN2RCxJQUFJLEVBQUUsR0FBRyxLQUFLLEVBQUM7Z0JBQ1gsT0FBTyxJQUFJLEdBQUcsQ0FBQyxFQUFFLEdBQUcsS0FBSyxDQUFDLENBQUM7YUFDOUI7aUJBQU07Z0JBQ0gsT0FBTyxJQUFJLENBQUM7YUFDZjtRQUNMLENBQUM7UUFFRCxXQUFXO1FBQ0csV0FBTSxHQUFwQixVQUFxQixFQUFTO1lBQzFCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDaEMsQ0FBQztRQUVELFdBQVc7UUFDRyxnQkFBVyxHQUF6QixVQUEwQixFQUFTO1lBQy9CLE9BQU8sRUFBRSxHQUFHLEdBQUcsQ0FBQztRQUNwQixDQUFDO1FBQ0wsV0FBQztJQUFELENBbkJBLEFBbUJDLElBQUE7SUFuQlksWUFBSSxPQW1CaEIsQ0FBQTtBQUVMLENBQUMsRUF2QmEsT0FBTyxHQUFQLGVBQU8sS0FBUCxlQUFPLFFBdUJwQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4vKiog5YWs5byP5qih5Z2XICovXHJcbmV4cG9ydCBtb2R1bGUgRm9ybXVsYSB7XHJcbiAgICAvKiog6YeR5biBICovXHJcbiAgICBleHBvcnQgY2xhc3MgR29sZCB7XHJcbiAgICAgICAgLyoqIOmHkeW4geS7t+WAvCAqL1xyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgZ29sZENvc3QobHY6bnVtYmVyLCBtYXhMdjpudW1iZXIs44CAY29zdDpudW1iZXIpOm51bWJlcntcclxuICAgICAgICAgICAgaWYgKGx2ID4gbWF4THYpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvc3QgKyAobHYgLSBtYXhMdik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY29zdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLyoqIOaXpeW4uOaUtuebiiAqL1xyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgZGF5R2V0KGx2Om51bWJlcik6bnVtYmVye1xyXG4gICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihsdiAqIDEuOCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvKiog5Y2H57qn5raI6ICXICovXHJcbiAgICAgICAgcHVibGljIHN0YXRpYyB1cGdyYWRlQ29zdChsdjpudW1iZXIpOm51bWJlcntcclxuICAgICAgICAgICAgcmV0dXJuIGx2ICogMTIwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/network/Network.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f782cknxKBOBY6HpYDQ16Ji', 'Network');
// script/app/network/Network.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("../info/World");
var AppConfig_1 = require("../config/AppConfig");
var HttpProtocol_1 = require("../../../framework/http/HttpProtocol");
var HttpClient_1 = require("../../../framework/http/HttpClient");
var LocalStorage_1 = require("../../../framework/persistence/LocalStorage");
var Facade_1 = require("../../../framework/facade/Facade");
var NetworkConfig_1 = require("../config/NetworkConfig");
var Network = /** @class */ (function () {
    function Network() {
    }
    Network.post = function (protocol, httpOption) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                // SELF
                return [2 /*return*/];
            });
        });
    };
    Network.login = function () {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            resolve();
                            return [2 /*return*/];
                        });
                    }); })];
            });
        });
    };
    Network.uploadInfo = function () {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            resolve();
                            return [2 /*return*/];
                        });
                    }); })];
            });
        });
    };
    Network.initData = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!NetworkConfig_1.NetworkConfig.connectServer) return [3 /*break*/, 2];
                        return [4 /*yield*/, Network.initGameData()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        World_1.World.Storage.init();
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Network.uploadLv = function (lv) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/addRecord";
                                    protocol.request = { gameId: AppConfig_1.AppConfig.GameID, key: AppConfig_1.AppConfig.rankKey, score: lv };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    _a.sent();
                                    this.pushStorage();
                                    resolve();
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.buyItem = function (itemId, num) {
        if (num === void 0) { num = 1; }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/mall/buy";
                                    protocol.request = { id: itemId, num: num };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    _a.sent();
                                    resolve();
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.syncBought = function () {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol, list;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/user/items";
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    list = _a.sent();
                                    resolve(list);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.totalRankList = function () {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol, list, e_1;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/getTotalRank";
                                    protocol.request = { gameId: AppConfig_1.AppConfig.GameID, key: AppConfig_1.AppConfig.rankKey };
                                    _a.label = 1;
                                case 1:
                                    _a.trys.push([1, 3, , 4]);
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 2:
                                    list = (_a.sent()).list;
                                    resolve(list);
                                    return [3 /*break*/, 4];
                                case 3:
                                    e_1 = _a.sent();
                                    reject(e_1);
                                    return [3 /*break*/, 4];
                                case 4: return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.addDiamond = function (add) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol, diamond;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/user/addDiamond";
                                    protocol.request = { num: add };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    diamond = (_a.sent()).diamond;
                                    resolve(diamond);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.expendDiamond = function (expend) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol, diamond;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/user/expendDiamond";
                                    protocol.request = { num: expend };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    diamond = (_a.sent()).diamond;
                                    resolve(diamond);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.onShare = function (shareKey, playerId) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    if (!(World_1.World.My.playerId != 0)) return [3 /*break*/, 2];
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/onShare";
                                    protocol.request = { shareKey: shareKey, fromPlayerId: playerId };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    _a.sent();
                                    _a.label = 2;
                                case 2:
                                    resolve();
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.getShareList = function (shareKey) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol, list;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/getShareList";
                                    protocol.request = { shareKey: shareKey };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    list = _a.sent();
                                    resolve(list);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.takeShareReward = function (shareKey, playerId) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/receiveSharedRecord";
                                    protocol.request = { shareKey: shareKey, receivePlayerId: playerId };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    _a.sent();
                                    resolve();
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.setStorage = function (key, value) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/setStorage";
                                    protocol.request = { key: key, value: value };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    _a.sent();
                                    resolve(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.multiSetStorage = function (pairs) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/multiSetStorage";
                                    protocol.request = { pairs: JSON.stringify(pairs) };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    _a.sent();
                                    resolve(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.getStorage = function (key) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol, data;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/getStorage";
                                    protocol.request = { key: key };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    data = _a.sent();
                                    resolve(data);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.multiGetStorage = function (keys) {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var protocol, data;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    protocol = new HttpProtocol_1.default();
                                    protocol.uri = "/game/multiGetStorage";
                                    protocol.request = { keys: JSON.stringify(keys) };
                                    return [4 /*yield*/, Network.post(protocol)];
                                case 1:
                                    data = _a.sent();
                                    resolve(data);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    Network.initGameData = function () {
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var keys, values, key, data;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    keys = World_1.World.Storage.allKeys().filter(function (value) { return !World_1.World.updateStorageKeys.includes(value); });
                                    return [4 /*yield*/, Network.multiGetStorage(keys)];
                                case 1:
                                    values = _a.sent();
                                    for (key in values) {
                                        data = values[key];
                                        /** 字符串类型则不转成int */
                                        if (typeof World_1.World.Storage["_" + key] == "number") {
                                            data = parseInt(data);
                                        }
                                        else if (typeof World_1.World.Storage["_" + key] == "boolean") {
                                            data = data.toLowerCase() == "true";
                                        }
                                        World_1.World.Storage[key] = data;
                                    }
                                    resolve();
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    /** 推送缓存里的数据到远程服务器 */
    Network.pushStorage = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                // SELF
                return [2 /*return*/];
            });
        });
    };
    return Network;
}());
exports.default = Network;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/music/ClickSoundCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '73a871wf5hCII8ZLCwWjPZx', 'ClickSoundCommand');
// script/app/music/ClickSoundCommand.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var MusicPaths_1 = require("../config/MusicPaths");
var Music_1 = require("../../../framework/audio/Music");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ClickSoundCommand = /** @class */ (function () {
    function ClickSoundCommand() {
    }
    ClickSoundCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var event, data;
            return __generator(this, function (_a) {
                event = args[0];
                data = args[1];
                /** 这里可以做一些过滤或特殊处理 */
                Music_1.Music.playSFX(MusicPaths_1.MusicPaths.ClickUI);
                return [2 /*return*/];
            });
        });
    };
    ClickSoundCommand = __decorate([
        ccclass("ClickSoundCommand")
    ], ClickSoundCommand);
    return ClickSoundCommand;
}());
exports.default = ClickSoundCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL211c2ljL0NsaWNrU291bmRDb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOztBQUtuRyxtREFBZ0Q7QUFDaEQsd0RBQXFEO0FBRS9DLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQUE7SUFRQSxDQUFDO0lBTlMsbUNBQU8sR0FBYjtRQUFlLGNBQU87YUFBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1lBQVAseUJBQU87O3VDQUFFLE9BQU87OztnQkFDdkIsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDaEIsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDbkIscUJBQXFCO2dCQUNyQixhQUFLLENBQUMsT0FBTyxDQUFDLHVCQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7Ozs7S0FDckM7SUFQZ0IsaUJBQWlCO1FBRHJDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQztPQUNSLGlCQUFpQixDQVFyQztJQUFELHdCQUFDO0NBUkQsQUFRQyxJQUFBO2tCQVJvQixpQkFBaUIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcblxyXG5cclxuaW1wb3J0IHtJQ29tbWFuZH0gZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9mYWNhZGUvSUNvbW1hbmRcIjtcclxuaW1wb3J0IHtNdXNpY1BhdGhzfSBmcm9tIFwiLi4vY29uZmlnL011c2ljUGF0aHNcIjtcclxuaW1wb3J0IHtNdXNpY30gZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9hdWRpby9NdXNpY1wiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzcyhcIkNsaWNrU291bmRDb21tYW5kXCIpXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENsaWNrU291bmRDb21tYW5kIGltcGxlbWVudHMgSUNvbW1hbmQge1xyXG5cclxuICAgIGFzeW5jIGV4ZWN1dGUgKC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICAgICAgbGV0IGV2ZW50ID0gYXJnc1swXTtcclxuICAgICAgICBsZXQgZGF0YSA9IGFyZ3NbMV07XHJcbiAgICAgICAgLyoqIOi/memHjOWPr+S7peWBmuS4gOS6m+i/h+a7pOaIlueJueauiuWkhOeQhiAqL1xyXG4gICAgICAgIE11c2ljLnBsYXlTRlgoTXVzaWNQYXRocy5DbGlja1VJKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/welcome/Welcome.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9e3f6FMdypHP65fD2gjB7kj', 'Welcome');
// script/app/welcome/Welcome.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Welcome = /** @class */ (function (_super) {
    __extends(Welcome, _super);
    function Welcome() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bgNode = null;
        return _this;
    }
    Welcome.prototype.onLoad = function () {
        var _this = this;
        console.log("xxx1");
        cc.warn = function () { };
        var promises = [];
        promises.push(Facade_1.default.executeCommand("LoadingCommand"));
        console.log("xxx2");
        promises.push(new Promise(function (resolve) {
            _this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function () { return resolve(); })));
        }));
        console.log("xxx3");
        Promise.all(promises).then(function () {
            cc.loader.loadRes("prefab/HomeScene", cc.Prefab, function (error, resource) {
                if (error == null) {
                    var homeScene = cc.instantiate(resource);
                    Facade_1.default.canvasNode.addChild(homeScene);
                    _this.bgNode.destroy();
                }
                else {
                    console.error(error);
                }
            });
        });
        console.log("xxx4");
    };
    __decorate([
        property(cc.Node)
    ], Welcome.prototype, "bgNode", void 0);
    Welcome = __decorate([
        ccclass
    ], Welcome);
    return Welcome;
}(cc.Component));
exports.default = Welcome;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL3dlbGNvbWUvV2VsY29tZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsMkRBQXNEO0FBRWhELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXFDLDJCQUFZO0lBQWpEO1FBQUEscUVBOEJDO1FBM0JHLFlBQU0sR0FBVyxJQUFJLENBQUM7O0lBMkIxQixDQUFDO0lBekJHLHdCQUFNLEdBQU47UUFBQSxpQkF3QkM7UUF2QkcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUVuQixFQUFFLENBQUMsSUFBSSxHQUFHLGNBQUssQ0FBQyxDQUFDO1FBQ2pCLElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUVsQixRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFNLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUN2RCxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ25CLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxPQUFPLENBQUMsVUFBQSxPQUFPO1lBQzdCLEtBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLGNBQUksT0FBQSxPQUFPLEVBQUUsRUFBVCxDQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEYsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNKLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDbkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDdkIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxDQUFDLE1BQU0sRUFBRSxVQUFDLEtBQUssRUFBRSxRQUFRO2dCQUM3RCxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUM7b0JBQ2QsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDekMsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO29CQUN0QyxLQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO2lCQUN6QjtxQkFBSztvQkFDRixPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO2lCQUN4QjtZQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ3ZCLENBQUM7SUExQkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzsyQ0FDSTtJQUhMLE9BQU87UUFEM0IsT0FBTztPQUNhLE9BQU8sQ0E4QjNCO0lBQUQsY0FBQztDQTlCRCxBQThCQyxDQTlCb0MsRUFBRSxDQUFDLFNBQVMsR0E4QmhEO2tCQTlCb0IsT0FBTyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgTmV0d29yayBmcm9tIFwiLi4vbmV0d29yay9OZXR3b3JrXCI7XHJcbmltcG9ydCBGYWNhZGUgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9mYWNhZGUvRmFjYWRlXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdlbGNvbWUgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgYmdOb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ4eHgxXCIpXHJcblxyXG4gICAgICAgIGNjLndhcm4gPSAoKT0+e307XHJcbiAgICAgICAgbGV0IHByb21pc2VzID0gW107XHJcblxyXG4gICAgICAgIHByb21pc2VzLnB1c2goRmFjYWRlLmV4ZWN1dGVDb21tYW5kKFwiTG9hZGluZ0NvbW1hbmRcIikpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwieHh4MlwiKVxyXG4gICAgICAgIHByb21pc2VzLnB1c2gobmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MuZGVsYXlUaW1lKDIpLCBjYy5jYWxsRnVuYygoKT0+cmVzb2x2ZSgpKSkpO1xyXG4gICAgICAgIH0pKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcInh4eDNcIilcclxuICAgICAgICBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKT0+e1xyXG4gICAgICAgICAgICBjYy5sb2FkZXIubG9hZFJlcyhcInByZWZhYi9Ib21lU2NlbmVcIiwgY2MuUHJlZmFiLCAoZXJyb3IsIHJlc291cmNlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IgPT0gbnVsbCl7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGhvbWVTY2VuZSA9IGNjLmluc3RhbnRpYXRlKHJlc291cmNlKTtcclxuICAgICAgICAgICAgICAgICAgICBGYWNhZGUuY2FudmFzTm9kZS5hZGRDaGlsZChob21lU2NlbmUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYmdOb2RlLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ4eHg0XCIpXHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/interceptor/LoadSceneIntercetor.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '852b8t92dhL855GnoTwHCmW', 'LoadSceneIntercetor');
// script/app/interceptor/LoadSceneIntercetor.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../../../framework/facade/Facade");
var MusicPaths_1 = require("../config/MusicPaths");
var Music_1 = require("../../../framework/audio/Music");
var NetworkConfig_1 = require("../config/NetworkConfig");
var Network_1 = require("../network/Network");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LoadSceneIntercetor = /** @class */ (function () {
    function LoadSceneIntercetor() {
    }
    /**
     * 加载场景之前处理
     * */
    LoadSceneIntercetor.prototype.preHandle = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var sceneName;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    sceneName = args[0];
                                    if (!(sceneName == "GameScene")) return [3 /*break*/, 2];
                                    return [4 /*yield*/, Facade_1.default.executeCommand("PreloadGameSceneCommand")];
                                case 1:
                                    _a.sent();
                                    return [3 /*break*/, 3];
                                case 2:
                                    if (sceneName == "HomeScene") {
                                        if (NetworkConfig_1.NetworkConfig.connectServer) {
                                            Network_1.default.pushStorage();
                                        }
                                    }
                                    _a.label = 3;
                                case 3:
                                    resolve(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    /**
     * 加载场景完成之后处理
     * */
    LoadSceneIntercetor.prototype.postHandle = function (res) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var sceneName;
                        return __generator(this, function (_a) {
                            sceneName = args[0];
                            if (sceneName == "HomeScene") {
                                /** 背景音乐 */
                                // Music.setBgm(MusicPaths.HomeBg);
                                /** 加载子工程好友排行数据 */
                                /** 显示新手引导 */
                                /* let prefab = await cc.loader.loadResAwait("prefab/newbie", cc.Prefab);
                                 let node = cc.instantiate(prefab);
                                 let homeNode = Facade.canvasNode.getChildByName("HomeScene");
                                 let startGameNode = homeNode.getChildByName("startGame");
                                 node.position = startGameNode.position;
                                 node.setParent(Facade.canvasNode);
                                 LifeCycle.onDestroyFollow(node, homeNode);*/
                            }
                            else if (sceneName == "GameScene") {
                                /** 背景音乐 */
                                Music_1.Music.setBgm(MusicPaths_1.MusicPaths.GameBg);
                            }
                            else if (sceneName == "GameOverScene") {
                                // Music.stopBGM();
                            }
                            resolve();
                            return [2 /*return*/];
                        });
                    }); })];
            });
        });
    };
    LoadSceneIntercetor = __decorate([
        ccclass
    ], LoadSceneIntercetor);
    return LoadSceneIntercetor;
}());
exports.default = LoadSceneIntercetor;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2ludGVyY2VwdG9yL0xvYWRTY2VuZUludGVyY2V0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7O0FBR25HLDJEQUFzRDtBQUN0RCxtREFBZ0Q7QUFDaEQsd0RBQXFEO0FBQ3JELHlEQUFzRDtBQUN0RCw4Q0FBeUM7QUFFbkMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBQTtJQStDQSxDQUFDO0lBN0NHOztTQUVLO0lBQ0MsdUNBQVMsR0FBZjtRQUFnQixjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOzt1Q0FBRSxPQUFPOzs7Z0JBQzVCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQU0sT0FBTyxFQUFFLE1BQU07Ozs7O29DQUNoQyxTQUFTLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO3lDQUNwQixDQUFBLFNBQVMsSUFBSSxXQUFXLENBQUEsRUFBeEIsd0JBQXdCO29DQUN4QixxQkFBTSxnQkFBTSxDQUFDLGNBQWMsQ0FBQyx5QkFBeUIsQ0FBQyxFQUFBOztvQ0FBdEQsU0FBc0QsQ0FBQzs7O29DQUNyRCxJQUFJLFNBQVMsSUFBSSxXQUFXLEVBQUM7d0NBQy9CLElBQUksNkJBQWEsQ0FBQyxhQUFhLEVBQUM7NENBQzVCLGlCQUFPLENBQUMsV0FBVyxFQUFFLENBQUM7eUNBQ3pCO3FDQUNKOzs7b0NBQ0QsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDOzs7O3lCQUNqQixDQUFDLEVBQUM7OztLQUNOO0lBQ0Q7O1NBRUs7SUFDQyx3Q0FBVSxHQUFoQixVQUFpQixHQUFPO1FBQUUsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCw2QkFBTzs7dUNBQUUsT0FBTzs7O2dCQUN0QyxzQkFBTyxJQUFJLE9BQU8sQ0FBQyxVQUFPLE9BQU8sRUFBRSxNQUFNOzs7NEJBQ2pDLFNBQVMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQ3hCLElBQUksU0FBUyxJQUFJLFdBQVcsRUFBQztnQ0FDekIsV0FBVztnQ0FDWCxtQ0FBbUM7Z0NBQ25DLGtCQUFrQjtnQ0FFbEIsYUFBYTtnQ0FDZDs7Ozs7OzZFQU02Qzs2QkFFL0M7aUNBQUssSUFBSSxTQUFTLElBQUksV0FBVyxFQUFDO2dDQUMvQixXQUFXO2dDQUNYLGFBQUssQ0FBQyxNQUFNLENBQUMsdUJBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQzs2QkFDbkM7aUNBQUssSUFBSSxTQUFTLElBQUksZUFBZSxFQUFDO2dDQUNuQyxtQkFBbUI7NkJBQ3RCOzRCQUNELE9BQU8sRUFBRSxDQUFDOzs7eUJBQ2IsQ0FBQyxFQUFDOzs7S0FDTjtJQTlDZ0IsbUJBQW1CO1FBRHZDLE9BQU87T0FDYSxtQkFBbUIsQ0ErQ3ZDO0lBQUQsMEJBQUM7Q0EvQ0QsQUErQ0MsSUFBQTtrQkEvQ29CLG1CQUFtQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuaW1wb3J0IHtJQ29tbWFuZEludGVyY2VwdG9yfSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2ludGVyY2VwdG9yL0NvbW1hbmRJbnRlcmNlcHRvclwiO1xyXG5pbXBvcnQgRmFjYWRlIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvZmFjYWRlL0ZhY2FkZVwiO1xyXG5pbXBvcnQge011c2ljUGF0aHN9IGZyb20gXCIuLi9jb25maWcvTXVzaWNQYXRoc1wiO1xyXG5pbXBvcnQge011c2ljfSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2F1ZGlvL011c2ljXCI7XHJcbmltcG9ydCB7TmV0d29ya0NvbmZpZ30gZnJvbSBcIi4uL2NvbmZpZy9OZXR3b3JrQ29uZmlnXCI7XHJcbmltcG9ydCBOZXR3b3JrIGZyb20gXCIuLi9uZXR3b3JrL05ldHdvcmtcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9hZFNjZW5lSW50ZXJjZXRvciBpbXBsZW1lbnRzIElDb21tYW5kSW50ZXJjZXB0b3Ige1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg6L295Zy65pmv5LmL5YmN5aSE55CGXHJcbiAgICAgKiAqL1xyXG4gICAgYXN5bmMgcHJlSGFuZGxlKC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgc2NlbmVOYW1lID0gYXJnc1swXTtcclxuICAgICAgICAgICAgaWYgKHNjZW5lTmFtZSA9PSBcIkdhbWVTY2VuZVwiKXtcclxuICAgICAgICAgICAgICAgIGF3YWl0IEZhY2FkZS5leGVjdXRlQ29tbWFuZChcIlByZWxvYWRHYW1lU2NlbmVDb21tYW5kXCIpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZiAoc2NlbmVOYW1lID09IFwiSG9tZVNjZW5lXCIpe1xyXG4gICAgICAgICAgICAgICAgaWYgKE5ldHdvcmtDb25maWcuY29ubmVjdFNlcnZlcil7XHJcbiAgICAgICAgICAgICAgICAgICAgTmV0d29yay5wdXNoU3RvcmFnZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWKoOi9veWcuuaZr+WujOaIkOS5i+WQjuWkhOeQhlxyXG4gICAgICogKi9cclxuICAgIGFzeW5jIHBvc3RIYW5kbGUocmVzOmFueSwgLi4uYXJncyk6UHJvbWlzZXtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgc2NlbmVOYW1lID0gYXJnc1swXTtcclxuICAgICAgICAgICAgaWYgKHNjZW5lTmFtZSA9PSBcIkhvbWVTY2VuZVwiKXtcclxuICAgICAgICAgICAgICAgIC8qKiDog4zmma/pn7PkuZAgKi9cclxuICAgICAgICAgICAgICAgIC8vIE11c2ljLnNldEJnbShNdXNpY1BhdGhzLkhvbWVCZyk7XHJcbiAgICAgICAgICAgICAgICAvKiog5Yqg6L295a2Q5bel56iL5aW95Y+L5o6S6KGM5pWw5o2uICovXHJcblxyXG4gICAgICAgICAgICAgICAgLyoqIOaYvuekuuaWsOaJi+W8leWvvCAqL1xyXG4gICAgICAgICAgICAgICAvKiBsZXQgcHJlZmFiID0gYXdhaXQgY2MubG9hZGVyLmxvYWRSZXNBd2FpdChcInByZWZhYi9uZXdiaWVcIiwgY2MuUHJlZmFiKTtcclxuICAgICAgICAgICAgICAgIGxldCBub2RlID0gY2MuaW5zdGFudGlhdGUocHJlZmFiKTtcclxuICAgICAgICAgICAgICAgIGxldCBob21lTm9kZSA9IEZhY2FkZS5jYW52YXNOb2RlLmdldENoaWxkQnlOYW1lKFwiSG9tZVNjZW5lXCIpO1xyXG4gICAgICAgICAgICAgICAgbGV0IHN0YXJ0R2FtZU5vZGUgPSBob21lTm9kZS5nZXRDaGlsZEJ5TmFtZShcInN0YXJ0R2FtZVwiKTtcclxuICAgICAgICAgICAgICAgIG5vZGUucG9zaXRpb24gPSBzdGFydEdhbWVOb2RlLnBvc2l0aW9uO1xyXG4gICAgICAgICAgICAgICAgbm9kZS5zZXRQYXJlbnQoRmFjYWRlLmNhbnZhc05vZGUpO1xyXG4gICAgICAgICAgICAgICAgTGlmZUN5Y2xlLm9uRGVzdHJveUZvbGxvdyhub2RlLCBob21lTm9kZSk7Ki9cclxuXHJcbiAgICAgICAgICAgIH1lbHNlIGlmIChzY2VuZU5hbWUgPT0gXCJHYW1lU2NlbmVcIil7XHJcbiAgICAgICAgICAgICAgICAvKiog6IOM5pmv6Z+z5LmQICovXHJcbiAgICAgICAgICAgICAgICBNdXNpYy5zZXRCZ20oTXVzaWNQYXRocy5HYW1lQmcpO1xyXG4gICAgICAgICAgICB9ZWxzZSBpZiAoc2NlbmVOYW1lID09IFwiR2FtZU92ZXJTY2VuZVwiKXtcclxuICAgICAgICAgICAgICAgIC8vIE11c2ljLnN0b3BCR00oKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/tips/ShowTipsCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5a011mWwutAHI4SKXF9o6cQ', 'ShowTipsCommand');
// script/app/tips/ShowTipsCommand.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Extend_1 = require("../../../framework/extend/Extend");
var View_1 = require("../../../framework/component/View");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ShowTipsCommand = /** @class */ (function () {
    function ShowTipsCommand() {
    }
    ShowTipsCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        cc.loader.loadRes('prefab/tips', cc.Prefab, function (error, resource) {
                            if (error == null) {
                                var node_1 = cc.instantiate(resource);
                                var titleLabel = node_1.getChildByName('title').getComponent(cc.RichText);
                                var string = args[0] || "您忘记传参数喽";
                                titleLabel.string = "<b><outline color=#1e1e1e width=3>" + string.replace(">", "》").replace("<", "《") + "</outline></b>";
                                if (cc.director.getScene()) {
                                    cc.director.getScene().addChild(node_1);
                                    node_1.getComponent(cc.Layout).updateLayout();
                                    node_1.position = cc.v2(cc.view.getVisibleSize().width / 2, cc.view.getVisibleSize().height);
                                    var duration = Extend_1.ext.isIphoneX ? 0.3 : 0.2;
                                    var y = Extend_1.ext.isIphoneX ? cc.view.getVisibleSize().height - node_1.height - View_1.default.IPHONEX_TOP_BLACK_HEIGHT : cc.view.getVisibleSize().height - node_1.height;
                                    node_1.runAction(cc.sequence(cc.moveTo(duration, cc.v2(cc.view.getVisibleSize().width / 2, y)), cc.delayTime(2), cc.moveTo(duration, cc.v2(cc.view.getVisibleSize().width / 2, cc.view.getVisibleSize().height)), cc.callFunc(function () {
                                        node_1.destroy();
                                        resolve();
                                    })));
                                }
                            }
                            else {
                                console.error(error);
                            }
                        });
                    })];
            });
        });
    };
    ShowTipsCommand = __decorate([
        ccclass('ShowTipsCommand')
    ], ShowTipsCommand);
    return ShowTipsCommand;
}());
exports.default = ShowTipsCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL3RpcHMvU2hvd1RpcHNDb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSwyREFBcUQ7QUFDckQsMERBQXFEO0FBRS9DLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQUE7SUErQkEsQ0FBQztJQTdCUyxpQ0FBTyxHQUFiO1FBQWUsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7dUNBQUUsT0FBTzs7Z0JBQzNCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07d0JBQy9CLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQUMsS0FBSyxFQUFFLFFBQVE7NEJBQ3pELElBQUksS0FBSyxJQUFFLElBQUksRUFBQztnQ0FDWCxJQUFJLE1BQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dDQUNwQyxJQUFJLFVBQVUsR0FBRyxNQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7Z0NBQ3hFLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxTQUFTLENBQUM7Z0NBQ2xDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsdUNBQXFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLG1CQUFnQixDQUFDO2dDQUNwSCxJQUFJLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLEVBQUM7b0NBQ3ZCLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQUksQ0FBQyxDQUFDO29DQUN0QyxNQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQztvQ0FDNUMsTUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsS0FBSyxHQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29DQUN6RixJQUFJLFFBQVEsR0FBRyxZQUFHLENBQUMsU0FBUyxDQUFBLENBQUMsQ0FBQSxHQUFHLENBQUEsQ0FBQyxDQUFBLEdBQUcsQ0FBQztvQ0FDckMsSUFBSSxDQUFDLEdBQUcsWUFBRyxDQUFDLFNBQVMsQ0FBQSxDQUFDLENBQUEsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxNQUFNLEdBQUMsTUFBSSxDQUFDLE1BQU0sR0FBQyxjQUFJLENBQUMsd0JBQXdCLENBQUEsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsTUFBTSxHQUFDLE1BQUksQ0FBQyxNQUFNLENBQUM7b0NBQzVJLE1BQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FDdEIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLEtBQUssR0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFDL0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFDZixFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsS0FBSyxHQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQzdGLEVBQUUsQ0FBQyxRQUFRLENBQUM7d0NBQ1IsTUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO3dDQUNmLE9BQU8sRUFBRSxDQUFDO29DQUNkLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQ0FDWjs2QkFDTDtpQ0FBTTtnQ0FDSCxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDOzZCQUN4Qjt3QkFDSixDQUFDLENBQUMsQ0FBQztvQkFDUCxDQUFDLENBQUMsRUFBQzs7O0tBQ047SUE5QmdCLGVBQWU7UUFEbkMsT0FBTyxDQUFDLGlCQUFpQixDQUFDO09BQ04sZUFBZSxDQStCbkM7SUFBRCxzQkFBQztDQS9CRCxBQStCQyxJQUFBO2tCQS9Cb0IsZUFBZSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQge0lDb21tYW5kfSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2ZhY2FkZS9JQ29tbWFuZFwiO1xyXG5pbXBvcnQge2V4dH0gZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9leHRlbmQvRXh0ZW5kXCI7XHJcbmltcG9ydCBWaWV3IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvY29tcG9uZW50L1ZpZXdcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3MoJ1Nob3dUaXBzQ29tbWFuZCcpXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3dUaXBzQ29tbWFuZCBpbXBsZW1lbnRzIElDb21tYW5kIHtcclxuXHJcbiAgICBhc3luYyBleGVjdXRlICguLi5hcmdzKTpQcm9taXNle1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKCdwcmVmYWIvdGlwcycsIGNjLlByZWZhYiwgKGVycm9yLCByZXNvdXJjZSkgPT4ge1xyXG4gICAgICAgICAgICAgICBpZiAoZXJyb3I9PW51bGwpe1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBub2RlID0gY2MuaW5zdGFudGlhdGUocmVzb3VyY2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCB0aXRsZUxhYmVsID0gbm9kZS5nZXRDaGlsZEJ5TmFtZSgndGl0bGUnKS5nZXRDb21wb25lbnQoY2MuUmljaFRleHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBzdHJpbmcgPSBhcmdzWzBdIHx8IFwi5oKo5b+Y6K6w5Lyg5Y+C5pWw5Za9XCI7XHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGVMYWJlbC5zdHJpbmcgPSBgPGI+PG91dGxpbmUgY29sb3I9IzFlMWUxZSB3aWR0aD0zPiR7c3RyaW5nLnJlcGxhY2UoXCI+XCIsIFwi44CLXCIpLnJlcGxhY2UoXCI8XCIsIFwi44CKXCIpfTwvb3V0bGluZT48L2I+YDtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY2MuZGlyZWN0b3IuZ2V0U2NlbmUoKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNjLmRpcmVjdG9yLmdldFNjZW5lKCkuYWRkQ2hpbGQobm9kZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuZ2V0Q29tcG9uZW50KGNjLkxheW91dCkudXBkYXRlTGF5b3V0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUucG9zaXRpb24gPSBjYy52MihjYy52aWV3LmdldFZpc2libGVTaXplKCkud2lkdGgvMiwgY2Mudmlldy5nZXRWaXNpYmxlU2l6ZSgpLmhlaWdodCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkdXJhdGlvbiA9IGV4dC5pc0lwaG9uZVg/MC4zOjAuMjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHkgPSBleHQuaXNJcGhvbmVYP2NjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKS5oZWlnaHQtbm9kZS5oZWlnaHQtVmlldy5JUEhPTkVYX1RPUF9CTEFDS19IRUlHSFQ6Y2Mudmlldy5nZXRWaXNpYmxlU2l6ZSgpLmhlaWdodC1ub2RlLmhlaWdodDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYy5tb3ZlVG8oZHVyYXRpb24sIGNjLnYyKGNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKS53aWR0aC8yLCB5KSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYy5kZWxheVRpbWUoMiksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYy5tb3ZlVG8oZHVyYXRpb24sIGNjLnYyKGNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKS53aWR0aC8yLCBjYy52aWV3LmdldFZpc2libGVTaXplKCkuaGVpZ2h0KSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterHuoJianTong.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e866aL+CRFBSp2UxvZucu5u', 'BulletEmitterHuoJianTong');
// script/app/entities/bulletEmitter/BulletEmitterHuoJianTong.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var BulletEmitterHuoJianTong = /** @class */ (function (_super) {
    __extends(BulletEmitterHuoJianTong, _super);
    function BulletEmitterHuoJianTong(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._firingRange = 1000;
        _this._interval = 0.5;
        _this._speed = 600;
        return _this;
    }
    BulletEmitterHuoJianTong.prototype.fire = function (start, dir) {
        this.bulletCount--;
        var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.HuoJianTong);
        bullet.node.active = true;
        bullet.node.position = start;
        bullet.fly(dir, this._firingRange, this._speed);
    };
    return BulletEmitterHuoJianTong;
}(BulletEmitter_1.default));
exports.default = BulletEmitterHuoJianTong;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlckh1b0ppYW5Ub25nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxpREFBNEM7QUFJNUM7SUFBc0QsNENBQWE7SUFFL0Qsa0NBQVkscUJBQTJDO1FBQXZELFlBQ0ksa0JBQU0scUJBQXFCLENBQUMsU0FJL0I7UUFIRyxLQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUN6QixLQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQztRQUNyQixLQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQzs7SUFDdEIsQ0FBQztJQUVELHVDQUFJLEdBQUosVUFBSyxLQUFjLEVBQUUsR0FBWTtRQUM3QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLHVCQUFhLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNGLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUNMLCtCQUFDO0FBQUQsQ0FoQkEsQUFnQkMsQ0FoQnFELHVCQUFhLEdBZ0JsRSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgR2FtZUJ1bGxldHNDb250cm9sbGVyIGZyb20gXCIuLi8uLi9nYW1lL0dhbWVCdWxsZXRzQ29udHJvbGxlclwiO1xyXG5pbXBvcnQgQnVsbGV0RW1pdHRlciBmcm9tIFwiLi9CdWxsZXRFbWl0dGVyXCI7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldEVtaXR0ZXJIdW9KaWFuVG9uZyBleHRlbmRzIEJ1bGxldEVtaXR0ZXIge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGdhbWVCdWxsZXRzQ29udHJvbGxlcjpHYW1lQnVsbGV0c0NvbnRyb2xsZXIpe1xyXG4gICAgICAgIHN1cGVyKGdhbWVCdWxsZXRzQ29udHJvbGxlcik7XHJcbiAgICAgICAgdGhpcy5fZmlyaW5nUmFuZ2UgPSAxMDAwO1xyXG4gICAgICAgIHRoaXMuX2ludGVydmFsID0gMC41O1xyXG4gICAgICAgIHRoaXMuX3NwZWVkID0gNjAwO1xyXG4gICAgfVxyXG5cclxuICAgIGZpcmUoc3RhcnQ6IGNjLlZlYzIsIGRpcjogY2MuVmVjMikge1xyXG4gICAgICAgIHRoaXMuYnVsbGV0Q291bnQtLTtcclxuICAgICAgICBsZXQgYnVsbGV0ID0gdGhpcy5nYW1lQnVsbGV0c0NvbnRyb2xsZXIuZ2V0SW5hY3RpdmVCdWxsZXQoQnVsbGV0RW1pdHRlci5UWVBFUy5IdW9KaWFuVG9uZyk7XHJcbiAgICAgICAgYnVsbGV0Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBidWxsZXQubm9kZS5wb3NpdGlvbiA9IHN0YXJ0O1xyXG4gICAgICAgIGJ1bGxldC5mbHkoZGlyLCB0aGlzLl9maXJpbmdSYW5nZSwgdGhpcy5fc3BlZWQpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletStrike/BulletStrikeLightning.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ab684CB0vVLEKw8NZ+RRLXB', 'BulletStrikeLightning');
// script/app/entities/bulletStrike/BulletStrikeLightning.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletStrike_1 = require("./BulletStrike");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletStrikeLightning = /** @class */ (function (_super) {
    __extends(BulletStrikeLightning, _super);
    function BulletStrikeLightning() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.spriteNode = null;
        return _this;
    }
    BulletStrikeLightning.prototype.init = function (id) {
    };
    BulletStrikeLightning.prototype.strike = function () {
    };
    __decorate([
        property(cc.Node)
    ], BulletStrikeLightning.prototype, "spriteNode", void 0);
    BulletStrikeLightning = __decorate([
        ccclass
    ], BulletStrikeLightning);
    return BulletStrikeLightning;
}(BulletStrike_1.default));
exports.default = BulletStrikeLightning;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldFN0cmlrZS9CdWxsZXRTdHJpa2VMaWdodG5pbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLCtDQUEwQztBQUVwQyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFtRCx5Q0FBWTtJQUEvRDtRQUFBLHFFQWVDO1FBWkcsZ0JBQVUsR0FBVyxJQUFJLENBQUM7O0lBWTlCLENBQUM7SUFURyxvQ0FBSSxHQUFKLFVBQUssRUFBRTtJQUNQLENBQUM7SUFHRCxzQ0FBTSxHQUFOO0lBRUEsQ0FBQztJQVREO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7NkRBQ1E7SUFIVCxxQkFBcUI7UUFEekMsT0FBTztPQUNhLHFCQUFxQixDQWV6QztJQUFELDRCQUFDO0NBZkQsQUFlQyxDQWZrRCxzQkFBWSxHQWU5RDtrQkFmb0IscUJBQXFCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXRTdHJpa2UgZnJvbSBcIi4vQnVsbGV0U3RyaWtlXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldFN0cmlrZUxpZ2h0bmluZyBleHRlbmRzIEJ1bGxldFN0cmlrZSB7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBzcHJpdGVOb2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuXHJcbiAgICBpbml0KGlkKSB7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHN0cmlrZSgpIHtcclxuXHJcbiAgICB9XHJcblxyXG5cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/prop/PropBase.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5c07bd2qlBC57ZQMODENtUU', 'PropBase');
// script/app/entities/prop/PropBase.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameProxy_1 = require("../../game/GameProxy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PropBase = /** @class */ (function (_super) {
    __extends(PropBase, _super);
    function PropBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // @property
        _this.cd = 12;
        _this.collider = null;
        /** 是否触发了 */
        _this._on_off = false;
        /** 是否被磁铁吸引 */
        _this._magnetic = false;
        _this.propID = -1;
        return _this;
    }
    Object.defineProperty(PropBase.prototype, "on_off", {
        get: function () {
            return this._on_off;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropBase.prototype, "magnetic", {
        get: function () {
            return this._magnetic;
        },
        set: function (value) {
            if (value != this._magnetic) {
                this._magnetic = value;
                if (this._magnetic) {
                    // console.log("磁力生效===>");
                    this.node.stopAllActions();
                    /** 撞向角色 */
                    this.moveToRole();
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    PropBase.prototype.moveToRole = function () {
        var _this = this;
        var gameRoleController = window['GameRoleController'];
        var speed = 1000;
        var distance = this.node.position.sub(gameRoleController.role.node.position).mag();
        this.node.runAction(cc.sequence(cc.moveTo(distance / speed, gameRoleController.role.node.position).easing(cc.easeSineIn()), cc.callFunc(function () {
            _this.moveToRole();
        })));
    };
    PropBase.prototype.init = function (id) {
        this.propID = id;
    };
    PropBase.prototype.display = function () {
        var _this = this;
        this._on_off = false;
        this.node.active = true;
        //倒计时
        if (this.cd > 0) {
            this.node.runAction(cc.sequence(cc.delayTime(this.cd - 5), cc.blink(5, 25), cc.callFunc(function () {
                _this.node.active = false;
            })));
        }
    };
    PropBase.prototype.trigger = function () {
        this._on_off = true;
        this.node.stopAllActions();
        GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.PropTrigger, this);
        this.node.active = false;
    };
    PropBase.prototype.onLoad = function () {
        this.collider = this.getComponent(cc.Collider);
    };
    PropBase.prototype.onEnable = function () {
        /** 检测与角色的碰撞 */
        this._on_off = false;
        this._magnetic = false;
        window['GameEnemysController'].gameProps.push(this);
    };
    PropBase.prototype.onDisable = function () {
        this.node.stopAllActions();
        var gameEnemysController = window['GameEnemysController'];
        gameEnemysController.gameProps.splice(gameEnemysController.gameProps.indexOf(this), 1);
    };
    PropBase = __decorate([
        ccclass
    ], PropBase);
    return PropBase;
}(cc.Component));
exports.default = PropBase;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL3Byb3AvUHJvcEJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLGtEQUErQztBQUV6QyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFzQyw0QkFBWTtJQUFsRDtRQUFBLHFFQW9GQztRQWxGRyxZQUFZO1FBQ1osUUFBRSxHQUFHLEVBQUUsQ0FBQztRQUVSLGNBQVEsR0FBZSxJQUFJLENBQUM7UUFFNUIsWUFBWTtRQUNGLGFBQU8sR0FBRyxLQUFLLENBQUM7UUFFMUIsY0FBYztRQUNOLGVBQVMsR0FBRyxLQUFLLENBQUM7UUFnQzFCLFlBQU0sR0FBRyxDQUFDLENBQUMsQ0FBQzs7SUF5Q2hCLENBQUM7SUF2RUcsc0JBQUksNEJBQU07YUFBVjtZQUNJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUN4QixDQUFDOzs7T0FBQTtJQUdELHNCQUFJLDhCQUFRO2FBQVo7WUFDSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUIsQ0FBQzthQUVELFVBQWEsS0FBYztZQUN2QixJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFDO2dCQUN4QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztnQkFDdkIsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFDO29CQUNmLDJCQUEyQjtvQkFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztvQkFDM0IsV0FBVztvQkFDWCxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7aUJBQ3JCO2FBQ0o7UUFDTCxDQUFDOzs7T0FaQTtJQWNPLDZCQUFVLEdBQWxCO1FBQUEsaUJBT0M7UUFORyxJQUFJLGtCQUFrQixHQUFHLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ3RELElBQUksS0FBSyxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNuRixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxHQUFDLEtBQUssRUFBRSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDO1lBQ2xJLEtBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUN0QixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDVCxDQUFDO0lBSUQsdUJBQUksR0FBSixVQUFLLEVBQVM7UUFDVixJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsMEJBQU8sR0FBUDtRQUFBLGlCQVNDO1FBUkcsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLEtBQUs7UUFDTCxJQUFJLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxFQUFDO1lBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQztnQkFDbEYsS0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNSO0lBQ0wsQ0FBQztJQUVELDBCQUFPLEdBQVA7UUFDSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQzNCLHFCQUFTLENBQUMsSUFBSSxDQUFDLHFCQUFTLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDN0IsQ0FBQztJQUVELHlCQUFNLEdBQU47UUFDSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFHRCwyQkFBUSxHQUFSO1FBQ0ksZUFBZTtRQUNmLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELDRCQUFTLEdBQVQ7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQzNCLElBQUksb0JBQW9CLEdBQUcsTUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDMUQsb0JBQW9CLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzNGLENBQUM7SUFuRmdCLFFBQVE7UUFENUIsT0FBTztPQUNhLFFBQVEsQ0FvRjVCO0lBQUQsZUFBQztDQXBGRCxBQW9GQyxDQXBGcUMsRUFBRSxDQUFDLFNBQVMsR0FvRmpEO2tCQXBGb0IsUUFBUSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuaW1wb3J0IHtHYW1lUHJveHl9IGZyb20gXCIuLi8uLi9nYW1lL0dhbWVQcm94eVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9wQmFzZSBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgLy8gQHByb3BlcnR5XHJcbiAgICBjZCA9IDEyO1xyXG5cclxuICAgIGNvbGxpZGVyOmNjLkNvbGxpZGVyID0gbnVsbDtcclxuXHJcbiAgICAvKiog5piv5ZCm6Kem5Y+R5LqGICovXHJcbiAgICBwcm90ZWN0ZWQgX29uX29mZiA9IGZhbHNlO1xyXG5cclxuICAgIC8qKiDmmK/lkKbooqvno4Hpk4HlkLjlvJUgKi9cclxuICAgIHByaXZhdGUgX21hZ25ldGljID0gZmFsc2U7XHJcblxyXG4gICAgZ2V0IG9uX29mZigpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fb25fb2ZmO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBnZXQgbWFnbmV0aWMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21hZ25ldGljO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBtYWduZXRpYyh2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgICAgIGlmICh2YWx1ZSAhPSB0aGlzLl9tYWduZXRpYyl7XHJcbiAgICAgICAgICAgIHRoaXMuX21hZ25ldGljID0gdmFsdWU7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9tYWduZXRpYyl7XHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIuejgeWKm+eUn+aViD09PT5cIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICAgICAgICAgIC8qKiDmkp7lkJHop5LoibIgKi9cclxuICAgICAgICAgICAgICAgIHRoaXMubW92ZVRvUm9sZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgbW92ZVRvUm9sZSgpe1xyXG4gICAgICAgIGxldCBnYW1lUm9sZUNvbnRyb2xsZXIgPSB3aW5kb3dbJ0dhbWVSb2xlQ29udHJvbGxlciddO1xyXG4gICAgICAgIGxldCBzcGVlZCA9IDEwMDA7XHJcbiAgICAgICAgbGV0IGRpc3RhbmNlID0gdGhpcy5ub2RlLnBvc2l0aW9uLnN1YihnYW1lUm9sZUNvbnRyb2xsZXIucm9sZS5ub2RlLnBvc2l0aW9uKS5tYWcoKTtcclxuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLm1vdmVUbyhkaXN0YW5jZS9zcGVlZCwgZ2FtZVJvbGVDb250cm9sbGVyLnJvbGUubm9kZS5wb3NpdGlvbikuZWFzaW5nKGNjLmVhc2VTaW5lSW4oKSksIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgIHRoaXMubW92ZVRvUm9sZSgpO1xyXG4gICAgICAgIH0pKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvcElEID0gLTE7XHJcblxyXG4gICAgaW5pdChpZDpudW1iZXIpe1xyXG4gICAgICAgIHRoaXMucHJvcElEID0gaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgZGlzcGxheSgpe1xyXG4gICAgICAgIHRoaXMuX29uX29mZiA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIC8v5YCS6K6h5pe2XHJcbiAgICAgICAgaWYgKHRoaXMuY2QgPiAwKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5kZWxheVRpbWUodGhpcy5jZC01KSwgY2MuYmxpbmsoNSwgMjUpLCBjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9KSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB0cmlnZ2VyKCl7XHJcbiAgICAgICAgdGhpcy5fb25fb2ZmID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICBHYW1lUHJveHkuZW1pdChHYW1lUHJveHkuRXZlbnQuUHJvcFRyaWdnZXIsIHRoaXMpO1xyXG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBvbkxvYWQoKXtcclxuICAgICAgICB0aGlzLmNvbGxpZGVyID0gdGhpcy5nZXRDb21wb25lbnQoY2MuQ29sbGlkZXIpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBvbkVuYWJsZSgpe1xyXG4gICAgICAgIC8qKiDmo4DmtYvkuI7op5LoibLnmoTnorDmkp4gKi9cclxuICAgICAgICB0aGlzLl9vbl9vZmYgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9tYWduZXRpYyA9IGZhbHNlO1xyXG4gICAgICAgIHdpbmRvd1snR2FtZUVuZW15c0NvbnRyb2xsZXInXS5nYW1lUHJvcHMucHVzaCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKXtcclxuICAgICAgICB0aGlzLm5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICBsZXQgZ2FtZUVuZW15c0NvbnRyb2xsZXIgPSB3aW5kb3dbJ0dhbWVFbmVteXNDb250cm9sbGVyJ107XHJcbiAgICAgICAgZ2FtZUVuZW15c0NvbnRyb2xsZXIuZ2FtZVByb3BzLnNwbGljZShnYW1lRW5lbXlzQ29udHJvbGxlci5nYW1lUHJvcHMuaW5kZXhPZih0aGlzKSwgMSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/enemy/EmitBulletEnemy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5d8e2MjyvlLOoCyuh6N0alo', 'EmitBulletEnemy');
// script/app/entities/enemy/EmitBulletEnemy.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Music_1 = require("../../../../framework/audio/Music");
var Enemy_1 = require("./Enemy");
var ccclass = cc._decorator.ccclass;
var EmitBulletEnemy = /** @class */ (function (_super) {
    __extends(EmitBulletEnemy, _super);
    function EmitBulletEnemy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EmitBulletEnemy.prototype.doAttack = function () {
        Music_1.Music.playSFX("sound/msc_en001");
        var bullet = window['GameBulletsController'].getInactiveEnemyBullet(this._enemyID);
        bullet.node.active = true;
        bullet.node.position = this.node.position;
        bullet.node.rotation = this.node.rotation;
        var dir = cc.v2(0, 1).rotate(cc.misc.degreesToRadians(-bullet.node.rotation)).normalizeSelf();
        bullet.node.runAction(cc.sequence(cc.moveBy(this.attackDistance / this.bulletSpeed, dir.mul(this.attackDistance)), cc.callFunc(function () {
            bullet.node.active = false;
        })));
    };
    EmitBulletEnemy = __decorate([
        ccclass
    ], EmitBulletEnemy);
    return EmitBulletEnemy;
}(Enemy_1.default));
exports.default = EmitBulletEnemy;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2VuZW15L0VtaXRCdWxsZXRFbmVteS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsMkRBQXdEO0FBQ3hELGlDQUE0QjtBQUVyQixJQUFBLE9BQU8sR0FBSSxFQUFFLENBQUMsVUFBVSxRQUFqQixDQUFrQjtBQUdoQztJQUE2QyxtQ0FBSztJQUFsRDs7SUFhQSxDQUFDO0lBWGEsa0NBQVEsR0FBbEI7UUFDSSxhQUFLLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDakMsSUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ25GLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUMxQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUMxQyxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUM5RixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsR0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUN6SCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1QsQ0FBQztJQVpnQixlQUFlO1FBRG5DLE9BQU87T0FDYSxlQUFlLENBYW5DO0lBQUQsc0JBQUM7Q0FiRCxBQWFDLENBYjRDLGVBQUssR0FhakQ7a0JBYm9CLGVBQWUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHtNdXNpY30gZnJvbSBcIi4uLy4uLy4uLy4uL2ZyYW1ld29yay9hdWRpby9NdXNpY1wiO1xyXG5pbXBvcnQgRW5lbXkgZnJvbSBcIi4vRW5lbXlcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbWl0QnVsbGV0RW5lbXkgZXh0ZW5kcyBFbmVteSB7XHJcblxyXG4gICAgcHJvdGVjdGVkIGRvQXR0YWNrKCk6IHZvaWQge1xyXG4gICAgICAgIE11c2ljLnBsYXlTRlgoXCJzb3VuZC9tc2NfZW4wMDFcIik7XHJcbiAgICAgICAgbGV0IGJ1bGxldCA9IHdpbmRvd1snR2FtZUJ1bGxldHNDb250cm9sbGVyJ10uZ2V0SW5hY3RpdmVFbmVteUJ1bGxldCh0aGlzLl9lbmVteUlEKTtcclxuICAgICAgICBidWxsZXQubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLnBvc2l0aW9uID0gdGhpcy5ub2RlLnBvc2l0aW9uO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLnJvdGF0aW9uID0gdGhpcy5ub2RlLnJvdGF0aW9uO1xyXG4gICAgICAgIGxldCBkaXIgPSBjYy52MigwLCAxKS5yb3RhdGUoY2MubWlzYy5kZWdyZWVzVG9SYWRpYW5zKC1idWxsZXQubm9kZS5yb3RhdGlvbikpLm5vcm1hbGl6ZVNlbGYoKTtcclxuICAgICAgICBidWxsZXQubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MubW92ZUJ5KHRoaXMuYXR0YWNrRGlzdGFuY2UvdGhpcy5idWxsZXRTcGVlZCwgZGlyLm11bCh0aGlzLmF0dGFja0Rpc3RhbmNlKSksIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgIGJ1bGxldC5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH0pKSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/explosive/ExplosiveHuoJianTong.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2707dq5zzBBO4ixkxdjzf4B', 'ExplosiveHuoJianTong');
// script/app/entities/explosive/ExplosiveHuoJianTong.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Explosive_1 = require("./Explosive");
var GameProxy_1 = require("../../game/GameProxy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ExplosiveHuoJianTong = /** @class */ (function (_super) {
    __extends(ExplosiveHuoJianTong, _super);
    function ExplosiveHuoJianTong() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._huojiantongSke = null;
        return _this;
    }
    ExplosiveHuoJianTong.prototype.init = function (id) {
        var _this = this;
        _super.prototype.init.call(this, id);
        this.bThrought = true;
        // this.hurt = 1;
        this._huojiantongSke = this.node.getComponent(sp.Skeleton);
        this._huojiantongSke.setCompleteListener(function (trackEntry, loopCount) {
            _this.node.active = false;
            /*let name = trackEntry.animation ? trackEntry.animation.name : '';
            if (name == "perfect01" || name == "perfect02" || name == "great01" || name == "great02") {
            }*/
        });
    };
    ExplosiveHuoJianTong.prototype.boom = function () {
        this._huojiantongSke.setAnimation(0, "biubiu_009b", false);
        GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.ShakeScreen, 0.08, 2, 2);
    };
    ExplosiveHuoJianTong.prototype.doRepeal = function (enemy, repel) {
        enemy.doRepel(enemy.node.position.sub(this.node.position).normalize(), repel);
    };
    ExplosiveHuoJianTong = __decorate([
        ccclass
    ], ExplosiveHuoJianTong);
    return ExplosiveHuoJianTong;
}(Explosive_1.default));
exports.default = ExplosiveHuoJianTong;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2V4cGxvc2l2ZS9FeHBsb3NpdmVIdW9KaWFuVG9uZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EseUNBQW9DO0FBQ3BDLGtEQUErQztBQUV6QyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFrRCx3Q0FBUztJQUEzRDtRQUFBLHFFQTRCQztRQTFCVyxxQkFBZSxHQUFlLElBQUksQ0FBQzs7SUEwQi9DLENBQUM7SUF0QkcsbUNBQUksR0FBSixVQUFLLEVBQVU7UUFBZixpQkFXQztRQVZHLGlCQUFNLElBQUksWUFBQyxFQUFFLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLGlCQUFpQjtRQUNqQixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsZUFBZSxDQUFDLG1CQUFtQixDQUFDLFVBQUMsVUFBVSxFQUFFLFNBQVM7WUFDM0QsS0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ3pCOztlQUVHO1FBQ1AsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsbUNBQUksR0FBSjtRQUNJLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDM0QscUJBQVMsQ0FBQyxJQUFJLENBQUMscUJBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQUVELHVDQUFRLEdBQVIsVUFBUyxLQUFLLEVBQUUsS0FBSztRQUNqQixLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2xGLENBQUM7SUExQmdCLG9CQUFvQjtRQUR4QyxPQUFPO09BQ2Esb0JBQW9CLENBNEJ4QztJQUFELDJCQUFDO0NBNUJELEFBNEJDLENBNUJpRCxtQkFBUyxHQTRCMUQ7a0JBNUJvQixvQkFBb0IiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEV4cGxvc2l2ZSBmcm9tIFwiLi9FeHBsb3NpdmVcIjtcclxuaW1wb3J0IHtHYW1lUHJveHl9IGZyb20gXCIuLi8uLi9nYW1lL0dhbWVQcm94eVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeHBsb3NpdmVIdW9KaWFuVG9uZyBleHRlbmRzIEV4cGxvc2l2ZSB7XHJcblxyXG4gICAgcHJpdmF0ZSBfaHVvamlhbnRvbmdTa2U6c3AuU2tlbGV0b24gPSBudWxsO1xyXG5cclxuXHJcblxyXG4gICAgaW5pdChpZDogbnVtYmVyKSB7XHJcbiAgICAgICAgc3VwZXIuaW5pdChpZCk7XHJcbiAgICAgICAgdGhpcy5iVGhyb3VnaHQgPSB0cnVlO1xyXG4gICAgICAgIC8vIHRoaXMuaHVydCA9IDE7XHJcbiAgICAgICAgdGhpcy5faHVvamlhbnRvbmdTa2UgPSB0aGlzLm5vZGUuZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKTtcclxuICAgICAgICB0aGlzLl9odW9qaWFudG9uZ1NrZS5zZXRDb21wbGV0ZUxpc3RlbmVyKCh0cmFja0VudHJ5LCBsb29wQ291bnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAvKmxldCBuYW1lID0gdHJhY2tFbnRyeS5hbmltYXRpb24gPyB0cmFja0VudHJ5LmFuaW1hdGlvbi5uYW1lIDogJyc7XHJcbiAgICAgICAgICAgIGlmIChuYW1lID09IFwicGVyZmVjdDAxXCIgfHwgbmFtZSA9PSBcInBlcmZlY3QwMlwiIHx8IG5hbWUgPT0gXCJncmVhdDAxXCIgfHwgbmFtZSA9PSBcImdyZWF0MDJcIikge1xyXG4gICAgICAgICAgICB9Ki9cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBib29tKCkge1xyXG4gICAgICAgIHRoaXMuX2h1b2ppYW50b25nU2tlLnNldEFuaW1hdGlvbigwLCBcImJpdWJpdV8wMDliXCIsIGZhbHNlKTtcclxuICAgICAgICBHYW1lUHJveHkuZW1pdChHYW1lUHJveHkuRXZlbnQuU2hha2VTY3JlZW4sIDAuMDgsIDIsIDIpO1xyXG4gICAgfVxyXG5cclxuICAgIGRvUmVwZWFsKGVuZW15LCByZXBlbCk6IHZvaWQge1xyXG4gICAgICAgIGVuZW15LmRvUmVwZWwoZW5lbXkubm9kZS5wb3NpdGlvbi5zdWIodGhpcy5ub2RlLnBvc2l0aW9uKS5ub3JtYWxpemUoKSwgcmVwZWwpO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/role/Role.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a7126UmhvpEn48Odvb547b7', 'Role');
// script/app/entities/role/Role.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.SpeedType = void 0;
var RoleAABB_1 = require("./RoleAABB");
var RoleSupply_1 = require("./RoleSupply");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var SpeedType;
(function (SpeedType) {
    SpeedType[SpeedType["STOP"] = 0] = "STOP";
    SpeedType[SpeedType["NORMAL"] = 1] = "NORMAL";
    SpeedType[SpeedType["FAST"] = 2] = "FAST";
})(SpeedType = exports.SpeedType || (exports.SpeedType = {}));
var Role = /** @class */ (function (_super) {
    __extends(Role, _super);
    function Role() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fireSprite = null;
        _this.gunTopNode = null;
        _this.spriteNode = null;
        _this._speedType = SpeedType.STOP;
        _this._speed = 0;
        _this._roleAABB = null;
        _this._spaceCircleCollider = null;
        _this.stopSpeed = 0;
        _this.normalSpeed = 100;
        _this.fastSpeed = 200;
        _this.accSpeed = 1;
        return _this;
    }
    Object.defineProperty(Role.prototype, "spaceCircleCollider", {
        get: function () {
            return this._spaceCircleCollider;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "roleAABB", {
        get: function () {
            return this._roleAABB;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "speed", {
        get: function () {
            return this._speed * this.accSpeed;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Role.prototype, "speedType", {
        get: function () {
            return this._speedType;
        },
        set: function (value) {
            switch (value) {
                case SpeedType.STOP:
                    this._speed = this.stopSpeed;
                    break;
                case SpeedType.NORMAL:
                    this._speed = this.normalSpeed;
                    break;
                case SpeedType.FAST:
                    this._speed = this.fastSpeed;
                    break;
            }
            this._speedType = value;
        },
        enumerable: false,
        configurable: true
    });
    Role.prototype.onLoad = function () {
        this._roleAABB = this.getComponent(RoleAABB_1.default);
        this._spaceCircleCollider = this.getComponent(cc.CircleCollider);
    };
    /** 碰撞处理 */
    Role.prototype.onCollisionEnter = function (other, self) {
        /** 如果是怪物 */
        if (other.tag == 1) {
            console.log("角色被攻击了.");
        }
    };
    Role.prototype.addSupply = function (id) {
        var prefab = cc.loader.getRes('prefab/roleSupply', cc.Prefab);
        var node = cc.instantiate(prefab);
        node.getComponent(RoleSupply_1.default).setSupply(id, this.node);
        this.node.getParent().addChild(node);
    };
    __decorate([
        property(cc.Sprite)
    ], Role.prototype, "fireSprite", void 0);
    __decorate([
        property(cc.Node)
    ], Role.prototype, "gunTopNode", void 0);
    __decorate([
        property(cc.Node)
    ], Role.prototype, "spriteNode", void 0);
    __decorate([
        property({ type: cc.Enum(SpeedType), tooltip: "速度级别" })
    ], Role.prototype, "speedType", null);
    __decorate([
        property({ tooltip: "停止时速度" })
    ], Role.prototype, "stopSpeed", void 0);
    __decorate([
        property({ tooltip: "正常速度" })
    ], Role.prototype, "normalSpeed", void 0);
    __decorate([
        property({ tooltip: "最快速度" })
    ], Role.prototype, "fastSpeed", void 0);
    __decorate([
        property
    ], Role.prototype, "accSpeed", void 0);
    Role = __decorate([
        ccclass
    ], Role);
    return Role;
}(cc.Component));
exports.default = Role;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL3JvbGUvUm9sZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLHVDQUFrQztBQUVsQywyQ0FBc0M7QUFFaEMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUMsSUFBWSxTQUlYO0FBSkQsV0FBWSxTQUFTO0lBQ2pCLHlDQUFJLENBQUE7SUFDSiw2Q0FBTSxDQUFBO0lBQ04seUNBQUksQ0FBQTtBQUNSLENBQUMsRUFKVyxTQUFTLEdBQVQsaUJBQVMsS0FBVCxpQkFBUyxRQUlwQjtBQUlEO0lBQWtDLHdCQUFZO0lBQTlDO1FBQUEscUVBb0ZDO1FBakZHLGdCQUFVLEdBQWEsSUFBSSxDQUFDO1FBRzVCLGdCQUFVLEdBQVcsSUFBSSxDQUFDO1FBRzFCLGdCQUFVLEdBQVcsSUFBSSxDQUFDO1FBRWxCLGdCQUFVLEdBQWEsU0FBUyxDQUFDLElBQUksQ0FBQztRQUN0QyxZQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRVgsZUFBUyxHQUFZLElBQUksQ0FBQztRQUUxQiwwQkFBb0IsR0FBcUIsSUFBSSxDQUFDO1FBb0N0RCxlQUFTLEdBQUcsQ0FBQyxDQUFDO1FBR2QsaUJBQVcsR0FBRyxHQUFHLENBQUM7UUFHbEIsZUFBUyxHQUFHLEdBQUcsQ0FBQztRQUdoQixjQUFRLEdBQUcsQ0FBQyxDQUFDOztJQXVCakIsQ0FBQztJQWpFRyxzQkFBSSxxQ0FBbUI7YUFBdkI7WUFDSSxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQztRQUNyQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLDBCQUFRO2FBQVo7WUFDSSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSx1QkFBSzthQUFUO1lBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxHQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDckMsQ0FBQzs7O09BQUE7SUFHRCxzQkFBSSwyQkFBUzthQUFiO1lBQ0ksT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQzNCLENBQUM7YUFFRCxVQUFjLEtBQWU7WUFDekIsUUFBUSxLQUFLLEVBQUM7Z0JBQ1YsS0FBSyxTQUFTLENBQUMsSUFBSTtvQkFDZixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7b0JBQzdCLE1BQU07Z0JBQ1YsS0FBSyxTQUFTLENBQUMsTUFBTTtvQkFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO29CQUMvQixNQUFNO2dCQUNWLEtBQUssU0FBUyxDQUFDLElBQUk7b0JBQ2YsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO29CQUM3QixNQUFNO2FBQ2I7WUFDRCxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUM1QixDQUFDOzs7T0FmQTtJQTZCRCxxQkFBTSxHQUFOO1FBQ0ksSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGtCQUFRLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDckUsQ0FBQztJQUdELFdBQVc7SUFDWCwrQkFBZ0IsR0FBaEIsVUFBa0IsS0FBSyxFQUFFLElBQUk7UUFDekIsWUFBWTtRQUNaLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLEVBQUM7WUFDZixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQzFCO0lBQ0wsQ0FBQztJQUVELHdCQUFTLEdBQVQsVUFBVSxFQUFTO1FBQ2YsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzlELElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBVSxDQUFDLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQS9FRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOzRDQUNRO0lBRzVCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7NENBQ1E7SUFHMUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzs0Q0FDUTtJQXVCMUI7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxPQUFPLEVBQUMsTUFBTSxFQUFDLENBQUM7eUNBR25EO0lBa0JEO1FBREMsUUFBUSxDQUFDLEVBQUMsT0FBTyxFQUFDLE9BQU8sRUFBQyxDQUFDOzJDQUNkO0lBR2Q7UUFEQyxRQUFRLENBQUMsRUFBQyxPQUFPLEVBQUMsTUFBTSxFQUFDLENBQUM7NkNBQ1Q7SUFHbEI7UUFEQyxRQUFRLENBQUMsRUFBQyxPQUFPLEVBQUMsTUFBTSxFQUFDLENBQUM7MkNBQ1g7SUFHaEI7UUFEQyxRQUFROzBDQUNJO0lBN0RJLElBQUk7UUFEeEIsT0FBTztPQUNhLElBQUksQ0FvRnhCO0lBQUQsV0FBQztDQXBGRCxBQW9GQyxDQXBGaUMsRUFBRSxDQUFDLFNBQVMsR0FvRjdDO2tCQXBGb0IsSUFBSSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuaW1wb3J0IFJvbGVBQUJCIGZyb20gXCIuL1JvbGVBQUJCXCI7XHJcbmltcG9ydCB7R2FtZVByb3h5fSBmcm9tIFwiLi4vLi4vZ2FtZS9HYW1lUHJveHlcIjtcclxuaW1wb3J0IFJvbGVTdXBwbHkgZnJvbSBcIi4vUm9sZVN1cHBseVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5leHBvcnQgZW51bSBTcGVlZFR5cGUge1xyXG4gICAgU1RPUCxcclxuICAgIE5PUk1BTCxcclxuICAgIEZBU1QsXHJcbn1cclxuXHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSb2xlIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKVxyXG4gICAgZmlyZVNwcml0ZTpjYy5TcHJpdGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgZ3VuVG9wTm9kZTpjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIHNwcml0ZU5vZGU6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgcHJpdmF0ZSBfc3BlZWRUeXBlOlNwZWVkVHlwZSA9IFNwZWVkVHlwZS5TVE9QO1xyXG4gICAgcHJpdmF0ZSBfc3BlZWQgPSAwO1xyXG5cclxuICAgIHByaXZhdGUgX3JvbGVBQUJCOlJvbGVBQUJCID0gbnVsbDtcclxuXHJcbiAgICBwcml2YXRlIF9zcGFjZUNpcmNsZUNvbGxpZGVyOmNjLkNpcmNsZUNvbGxpZGVyID0gbnVsbDtcclxuXHJcblxyXG4gICAgZ2V0IHNwYWNlQ2lyY2xlQ29sbGlkZXIoKTogY2MuQ2lyY2xlQ29sbGlkZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zcGFjZUNpcmNsZUNvbGxpZGVyO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCByb2xlQUFCQigpOiBSb2xlQUFCQiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JvbGVBQUJCO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBzcGVlZCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zcGVlZCp0aGlzLmFjY1NwZWVkO1xyXG4gICAgfVxyXG5cclxuICAgIEBwcm9wZXJ0eSh7dHlwZTpjYy5FbnVtKFNwZWVkVHlwZSksIHRvb2x0aXA6XCLpgJ/luqbnuqfliKtcIn0pXHJcbiAgICBnZXQgc3BlZWRUeXBlKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NwZWVkVHlwZTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgc3BlZWRUeXBlKHZhbHVlOlNwZWVkVHlwZSl7XHJcbiAgICAgICAgc3dpdGNoICh2YWx1ZSl7XHJcbiAgICAgICAgICAgIGNhc2UgU3BlZWRUeXBlLlNUT1A6XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zcGVlZCA9IHRoaXMuc3RvcFNwZWVkO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgU3BlZWRUeXBlLk5PUk1BTDpcclxuICAgICAgICAgICAgICAgIHRoaXMuX3NwZWVkID0gdGhpcy5ub3JtYWxTcGVlZDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFNwZWVkVHlwZS5GQVNUOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5fc3BlZWQgPSB0aGlzLmZhc3RTcGVlZDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9zcGVlZFR5cGUgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBAcHJvcGVydHkoe3Rvb2x0aXA6XCLlgZzmraLml7bpgJ/luqZcIn0pXHJcbiAgICBzdG9wU3BlZWQgPSAwO1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7dG9vbHRpcDpcIuato+W4uOmAn+W6plwifSlcclxuICAgIG5vcm1hbFNwZWVkID0gMTAwO1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7dG9vbHRpcDpcIuacgOW/q+mAn+W6plwifSlcclxuICAgIGZhc3RTcGVlZCA9IDIwMDtcclxuXHJcbiAgICBAcHJvcGVydHlcclxuICAgIGFjY1NwZWVkID0gMTtcclxuXHJcbiAgICBvbkxvYWQoKXtcclxuICAgICAgICB0aGlzLl9yb2xlQUFCQiA9IHRoaXMuZ2V0Q29tcG9uZW50KFJvbGVBQUJCKTtcclxuICAgICAgICB0aGlzLl9zcGFjZUNpcmNsZUNvbGxpZGVyID0gdGhpcy5nZXRDb21wb25lbnQoY2MuQ2lyY2xlQ29sbGlkZXIpO1xyXG4gICAgfVxyXG5cclxuc1xyXG4gICAgLyoqIOeisOaSnuWkhOeQhiAqL1xyXG4gICAgb25Db2xsaXNpb25FbnRlciAob3RoZXIsIHNlbGYpIHtcclxuICAgICAgICAvKiog5aaC5p6c5piv5oCq54mpICovXHJcbiAgICAgICAgaWYgKG90aGVyLnRhZyA9PSAxKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLop5LoibLooqvmlLvlh7vkuoYuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhZGRTdXBwbHkoaWQ6bnVtYmVyKXtcclxuICAgICAgICBsZXQgcHJlZmFiID0gY2MubG9hZGVyLmdldFJlcygncHJlZmFiL3JvbGVTdXBwbHknLCBjYy5QcmVmYWIpO1xyXG4gICAgICAgIGxldCBub2RlID0gY2MuaW5zdGFudGlhdGUocHJlZmFiKTtcclxuICAgICAgICBub2RlLmdldENvbXBvbmVudChSb2xlU3VwcGx5KS5zZXRTdXBwbHkoaWQsIHRoaXMubm9kZSk7XHJcbiAgICAgICAgdGhpcy5ub2RlLmdldFBhcmVudCgpLmFkZENoaWxkKG5vZGUpO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/actions/Actions.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9b462XreAtDoJefQPMuD8lR', 'Actions');
// framework/actions/Actions.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Actions = /** @class */ (function () {
    function Actions() {
    }
    /** 向下移动 */
    Actions.downward = function (speed, height) {
        return cc.moveBy(height / speed, cc.v2(0, -height));
    };
    /** 向上移动 */
    Actions.upward = function (speed, height) {
        return cc.moveBy(height / speed, cc.v2(0, height));
    };
    /** 周期性动作 */
    Actions.cycleAction = function (action, startValue, endValue, deltaValue, speed, times, damping, cycleDelay) {
        if (damping === void 0) { damping = 0; }
        if (cycleDelay === void 0) { cycleDelay = 0; }
        var deltaValue_abs = Math.abs(deltaValue);
        var actions = [];
        actions.push(action(deltaValue_abs / speed, startValue + deltaValue));
        if (cycleDelay > 0) {
            actions.push(cc.delayTime(cycleDelay));
        }
        for (var i = 0; i < times; i++) {
            var newDeltaRotation = deltaValue_abs - (i * damping);
            var duation = newDeltaRotation * 2 / speed;
            var rotation = newDeltaRotation;
            if (deltaValue > 0) {
                if (i % 2 == 0) {
                    rotation = -rotation;
                }
            }
            else {
                if (i % 2 == 1) {
                    rotation = -rotation;
                }
            }
            actions.push(action(duation, startValue + rotation));
            if (cycleDelay > 0 && i % 2 == 1) {
                actions.push(cc.delayTime(cycleDelay));
            }
        }
        var lastValue = deltaValue_abs - (times - 1) * damping;
        if (deltaValue > 0) {
            if (times % 2 == 0) {
                lastValue = -lastValue;
            }
        }
        else {
            if (times % 2 == 1) {
                lastValue = -lastValue;
            }
        }
        actions.push(action(Math.abs(endValue - (startValue + lastValue)) / speed, endValue));
        return cc.sequence(actions);
    };
    /** 延迟执行 */
    Actions.delayTimeCall = function (delay, call) {
        return cc.sequence(cc.delayTime(delay), cc.callFunc(call));
    };
    /** 循环任务 */
    Actions.scheduleCall = function (interval, call) {
        if (typeof call == "function") {
            return cc.repeatForever(cc.sequence(cc.delayTime(interval), cc.callFunc(call)));
        }
        else {
            return cc.repeatForever(cc.sequence(cc.delayTime(interval), call));
        }
    };
    /** 每一帧执行 */
    Actions.update = function (call) {
        return this.scheduleCall(0, function () {
            call(cc.director.getDeltaTime());
        });
    };
    /** 高亮显示动作（先放大再缩小,适合更换字体时调用） */
    Actions.highlightAction = function (maxScaleCall) {
        var call = function () {
            if (maxScaleCall)
                maxScaleCall();
        };
        var seq = cc.sequence([
            cc.scaleTo(0.1, 1.4),
            cc.callFunc(call),
            cc.scaleTo(0.07, 0.8),
            cc.scaleTo(0.07, 1.1),
            cc.scaleTo(0.07, 0.9),
            cc.scaleTo(0.07, 1),
        ]);
        return seq;
    };
    /** 飘动显示效果(适合显示label提示，类似toast) */
    Actions.flutterAction = function () {
        var moveSeq = cc.sequence([
            cc.moveBy(0.6, cc.v2(0, 0)),
            cc.moveBy(1, cc.v2(0, 84))
        ]);
        var scaleSeq = cc.sequence([
            cc.scaleTo(0.1, 1.2),
            cc.scaleTo(0.1, 0.8),
            cc.scaleTo(0.1, 1),
        ]);
        var alphaSeq = cc.sequence([
            cc.fadeTo(0.8, 255),
            cc.fadeTo(0.8, 0),
        ]);
        var spawn = cc.spawn(moveSeq, scaleSeq, alphaSeq);
        return spawn;
    };
    /**
     * 圆运动
     * @param {Number} duration
     * @param {cc.Node|cc.p} dot 圆心点坐标或者node
     * @param {Number}   半径 如果为负数, 反时钟方向
     * @param {Number}  旋转角度
     * @returns {cc.CardinalSplineTo}
     */
    Actions.circleBy = function (duration, dot, r, angle) {
        var dp = angle || 20, dpr = 360 / dp, ary = [];
        r = r || 20;
        if (r < 0)
            dpr = -dpr;
        r = Math.abs(r);
        var rad = Math.PI / 180;
        for (var i = 0; i < dp; i++) {
            ary.push(cc.v2(Math.sin(dpr * i * rad) * r + dot.x, Math.cos(dpr * i * rad) * r + dot.y));
        }
        ary.push(ary);
        return cc.cardinalSplineTo(duration, ary, 0);
    };
    ;
    /**
     * 伪3D的翻转动作
     * @param {number} duration
     * @param {number} skewY
     * @return {cc.FiniteTimeAction}
     */
    Actions.flipXAction = function (duration, skewY) {
        if (duration === void 0) { duration = 0.5; }
        if (skewY === void 0) { skewY = 10; }
        var speed = duration / 38;
        var scale = cc.sequence(cc.scaleTo(speed * 9, 0.1, 1), cc.scaleTo(speed * 2, -0.1, 1), cc.scaleTo(speed * 8, -0.9, 1), cc.scaleTo(speed * 8, -0.1, 1), cc.scaleTo(speed * 2, 0.1, 1), cc.scaleTo(speed * 9, 1, 1));
        var skew = cc.sequence(cc.skewTo(speed * 9, 0, -skewY), cc.skewTo(speed * 2, 0, -skewY), cc.skewTo(speed * 8, 0, 0), cc.skewTo(speed * 8, 0, skewY), cc.skewTo(speed * 2, 0, skewY), cc.skewTo(speed * 9, 0, 0));
        return cc.spawn(scale, skew);
    };
    /**
     * 炸出金币的效果
     * @param {cc.Node} prefabNode
     * @param {cc.Node} parent
     * @param {cc.Vec2} startPos
     * @param {cc.Vec2} endPos
     * @param {number} radius
     * @param {number} num
     * @param {number} moveSpeed
     */
    Actions.boom = function (createNode, startPos, endPos, radius, num, moveSpeed, callback) {
        if (moveSpeed === void 0) { moveSpeed = 2000; }
        var list = [];
        var promise = [];
        var _loop_1 = function (i) {
            promise.push(new Promise(function (resolve, reject) {
                var node = createNode();
                node.position = startPos;
                list.push(node);
                /** 炸开动作 */
                var angle = i * 360 / num - 45;
                // node.rotation = 45+angle;
                /** 计算向量 */
                var normal = cc.v2(1, 1).rotateSelf(-angle * Math.PI / 180);
                var position = normal.mul(radius);
                var boomSpeed = 500;
                node.runAction(cc.sequence(cc.moveBy(radius / boomSpeed, position).easing(cc.easeExponentialOut()), cc.callFunc(function () {
                    /** 移动 */
                    resolve();
                })));
                // node.runAction(cc.repeatForever(Actions.flipXAction(i%2==0?1:0.9)));
                // node.getComponent(cc.Animation).play(null, i%2==0?0:0.2);
            }));
        };
        for (var i = 0; i < num; i++) {
            _loop_1(i);
        }
        Promise.all(promise).then(function (res) {
            /** 分成两部分 */
            var halfNum = Math.floor(num / 2);
            var _loop_2 = function (i) {
                var node = list[i];
                var sub = endPos.sub(node.position);
                var moveTime = sub.mag() / moveSpeed;
                var center = node.position.add(sub.mul(0.5));
                var p = sub.normalize().rotate(-90 * Math.PI / 180);
                var toAction = cc.bezierTo(moveTime, [
                    center.add(p.mul(200)),
                    endPos,
                    endPos
                ]);
                node.runAction(cc.sequence(cc.delayTime(i * 0.08), cc.spawn(toAction.easing(cc.easeSineOut()), cc.scaleTo(moveTime, 0.5), cc.fadeTo(moveTime, 80)), cc.callFunc(function () {
                    node.active = false;
                    if (callback) {
                        callback();
                    }
                })));
            };
            for (var i = 0; i < halfNum; i++) {
                _loop_2(i);
            }
            var _loop_3 = function (i) {
                var node = list[list.length - 1 - i];
                var sub = endPos.sub(node.position);
                var moveTime = sub.mag() / moveSpeed;
                var center = node.position.add(sub.mul(0.5));
                var p = sub.normalize().rotate(-90 * Math.PI / 180);
                var toAction = cc.bezierTo(moveTime, [
                    center.add(p.mul(-200)),
                    endPos,
                    endPos
                ]);
                node.runAction(cc.sequence(cc.delayTime(i * 0.08), cc.spawn(toAction.easing(cc.easeSineOut()), cc.scaleTo(moveTime, 0.5), cc.fadeTo(moveTime, 80)), cc.callFunc(function () {
                    node.active = false;
                    if (callback) {
                        callback();
                    }
                })));
            };
            for (var i = 0; i < list.length - halfNum; i++) {
                _loop_3(i);
            }
        });
    };
    return Actions;
}());
exports.default = Actions;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/DragonBoneMediator.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9a7acgYw3ZIX7xQplxXQaEU', 'DragonBoneMediator');
// framework/component/DragonBoneMediator.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu, requireComponent = _a.requireComponent;
var DragonBonesEventType;
(function (DragonBonesEventType) {
    DragonBonesEventType[DragonBonesEventType["START"] = 0] = "START";
    DragonBonesEventType[DragonBonesEventType["LOOP_COMPLETE"] = 1] = "LOOP_COMPLETE";
    DragonBonesEventType[DragonBonesEventType["COMPLETE"] = 2] = "COMPLETE";
    DragonBonesEventType[DragonBonesEventType["FADE_IN"] = 3] = "FADE_IN";
    DragonBonesEventType[DragonBonesEventType["FADE_IN_COMPLETE"] = 4] = "FADE_IN_COMPLETE";
    DragonBonesEventType[DragonBonesEventType["FADE_OUT"] = 5] = "FADE_OUT";
    DragonBonesEventType[DragonBonesEventType["FADE_OUT_COMPLETE"] = 6] = "FADE_OUT_COMPLETE";
    DragonBonesEventType[DragonBonesEventType["FRAME_EVENT"] = 7] = "FRAME_EVENT";
    DragonBonesEventType[DragonBonesEventType["SOUND_EVENT"] = 8] = "SOUND_EVENT";
})(DragonBonesEventType || (DragonBonesEventType = {}));
var map = new Map();
map.set(DragonBonesEventType.START, dragonBones.EventObject.START);
map.set(DragonBonesEventType.LOOP_COMPLETE, dragonBones.EventObject.LOOP_COMPLETE);
map.set(DragonBonesEventType.COMPLETE, dragonBones.EventObject.COMPLETE);
map.set(DragonBonesEventType.FADE_IN, dragonBones.EventObject.FADE_IN);
map.set(DragonBonesEventType.FADE_IN_COMPLETE, dragonBones.EventObject.FADE_IN_COMPLETE);
map.set(DragonBonesEventType.FADE_OUT, dragonBones.EventObject.FADE_OUT);
map.set(DragonBonesEventType.FADE_OUT_COMPLETE, dragonBones.EventObject.FADE_OUT_COMPLETE);
map.set(DragonBonesEventType.FRAME_EVENT, dragonBones.EventObject.FRAME_EVENT);
map.set(DragonBonesEventType.SOUND_EVENT, dragonBones.EventObject.SOUND_EVENT);
var DragonBoneMediator = /** @class */ (function (_super) {
    __extends(DragonBoneMediator, _super);
    function DragonBoneMediator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.armatureDisplay = null;
        _this.animationState = null;
        _this.armatureName = "Armature";
        _this.eventType = DragonBonesEventType.COMPLETE;
        _this.eventHandlers = [];
        return _this;
    }
    DragonBoneMediator.prototype.onLoad = function () {
        this.armatureDisplay = this.getComponent(dragonBones.ArmatureDisplay);
    };
    DragonBoneMediator.prototype._playAnim = function (name, playTimes, timeScale) {
        if (playTimes === void 0) { playTimes = 0; }
        if (timeScale === void 0) { timeScale = 1; }
        this.armatureDisplay.timeScale = timeScale;
        this.armatureDisplay.armatureName = this.armatureName;
        this.animationState = this.armatureDisplay.playAnimation(name, playTimes);
        console.log("playAnim===>name=" + this.animationState.name + " playTimes=" + playTimes + " timeScale=" + timeScale);
    };
    DragonBoneMediator.prototype.playAnim = function (name, timeScale) {
        this._playAnim(name, 0, timeScale);
    };
    DragonBoneMediator.prototype.playAnimOnce = function (name, timeScale) {
        this._playAnim(name, 1, timeScale);
    };
    DragonBoneMediator.prototype.isAnim = function (name) {
        if (this.animationState == null)
            return false;
        return this.animationState.name === name;
    };
    /** 更换slot.display */
    DragonBoneMediator.prototype.replaceSlotDisplay = function (slotName, spriteFrame) {
        // this.armatureDisplay.armature().getSlot(slotName).display = new cc.Scale9Sprite(spriteFrame);
        // this.armatureDisplay.armature().getSlot(slotName).display = spriteFrame;
        if (typeof spriteFrame == "number") {
            this.armatureDisplay.armature().getSlot(slotName).displayIndex = spriteFrame;
        }
    };
    /**获取骨骼bone的坐标*/
    DragonBoneMediator.prototype.getBoneWorldPosition = function (boneName) {
        var bone = this.armatureDisplay.armature().getBone(boneName);
        return this.node.convertToWorldSpaceAR(cc.v2(bone.global.x, -bone.global.y));
    };
    DragonBoneMediator.prototype.initDragonBone = function (dragonAsset, dragonAtlasAsset, armatureName) {
        if (!dragonAsset || !dragonAtlasAsset) {
            throw Error("dragonAsset=" + dragonAsset + " dragonAtlasAsset=" + dragonAtlasAsset);
        }
        this.node.removeComponent(dragonBones.ArmatureDisplay);
        var armatureDisplay = this.node.addComponent(dragonBones.ArmatureDisplay);
        armatureDisplay.dragonAsset = dragonAsset;
        armatureDisplay.dragonAtlasAsset = dragonAtlasAsset;
        armatureDisplay.armatureName = armatureName || this.armatureName;
        this.animationState = null;
        this.armatureDisplay = armatureDisplay;
    };
    DragonBoneMediator.prototype.handleEvent = function (event) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                cc.Component.EventHandler.emitEvents(this.eventHandlers, event);
                return [2 /*return*/];
            });
        });
    };
    DragonBoneMediator.prototype.onLoad = function () {
        this.armatureDisplay.addEventListener(map.get(this.eventType), this.handleEvent, this);
    };
    DragonBoneMediator.prototype.onDestroy = function () {
        this.armatureDisplay.removeEventListener(map.get(this.eventType), this.handleEvent, this);
    };
    __decorate([
        property
    ], DragonBoneMediator.prototype, "armatureName", void 0);
    __decorate([
        property({ type: cc.Enum(DragonBonesEventType) })
    ], DragonBoneMediator.prototype, "eventType", void 0);
    __decorate([
        property({ type: cc.Component.EventHandler, displayName: "触发事件" })
    ], DragonBoneMediator.prototype, "eventHandlers", void 0);
    DragonBoneMediator = __decorate([
        ccclass,
        menu("自定义/DragonBoneMediator"),
        requireComponent(dragonBones.ArmatureDisplay)
    ], DragonBoneMediator);
    return DragonBoneMediator;
}(cc.Component));
exports.default = DragonBoneMediator;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/SwingEffect.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'abbefSmFDxID7incLgxXe5d', 'SwingEffect');
// framework/component/SwingEffect.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Actions_1 = require("../actions/Actions");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
var SwingEffect = /** @class */ (function (_super) {
    __extends(SwingEffect, _super);
    function SwingEffect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.startValue = 0;
        _this.endValue = 0;
        _this.deltaValue = 8;
        _this.speed = 360 / 2;
        _this.times = 8;
        _this.damping = 0;
        _this.cycleDelay = 0;
        _this.repeatNum = 0;
        _this.repeatDelay = 0;
        return _this;
    }
    SwingEffect.prototype.onLoad = function () {
        var action = Actions_1.default.cycleAction(cc.rotateTo, this.startValue, this.endValue, this.deltaValue, this.speed, this.times, this.damping, this.cycleDelay);
        if (this.repeatNum > 0) {
            action = cc.repeat(cc.sequence(action, cc.delayTime(this.repeatDelay)), this.repeatNum);
        }
        else if (this.repeatNum < 0) {
            action = cc.repeatForever(cc.sequence(action, cc.delayTime(this.repeatDelay)));
        }
        this.node.runAction(action);
    };
    __decorate([
        property({ displayName: "开始角度" })
    ], SwingEffect.prototype, "startValue", void 0);
    __decorate([
        property({ displayName: "结束角度" })
    ], SwingEffect.prototype, "endValue", void 0);
    __decorate([
        property({ displayName: "角度差" })
    ], SwingEffect.prototype, "deltaValue", void 0);
    __decorate([
        property({ displayName: "速度" })
    ], SwingEffect.prototype, "speed", void 0);
    __decorate([
        property({ displayName: "摆动次数" })
    ], SwingEffect.prototype, "times", void 0);
    __decorate([
        property({ displayName: "衰减值" })
    ], SwingEffect.prototype, "damping", void 0);
    __decorate([
        property({ displayName: "周期性延时", textTips: "单摆到最高点时延时" })
    ], SwingEffect.prototype, "cycleDelay", void 0);
    __decorate([
        property({ displayName: "重复", textTips: "小于零表示repeatForever" })
    ], SwingEffect.prototype, "repeatNum", void 0);
    __decorate([
        property({ displayName: "重复延时", textTips: "重复次数不等于0时才有效" })
    ], SwingEffect.prototype, "repeatDelay", void 0);
    SwingEffect = __decorate([
        ccclass,
        menu("自定义/SwingEffect")
    ], SwingEffect);
    return SwingEffect;
}(cc.Component));
exports.default = SwingEffect;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L1N3aW5nRWZmZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSw4Q0FBeUM7QUFFbkMsSUFBQSxLQUE0QixFQUFFLENBQUMsVUFBVSxFQUF4QyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQUEsRUFBRSxJQUFJLFVBQWlCLENBQUM7QUFJaEQ7SUFBeUMsK0JBQVk7SUFBckQ7UUFBQSxxRUFzQ0M7UUFuQ0csZ0JBQVUsR0FBRyxDQUFDLENBQUM7UUFHZixjQUFRLEdBQUcsQ0FBQyxDQUFDO1FBR2IsZ0JBQVUsR0FBRyxDQUFDLENBQUM7UUFHZixXQUFLLEdBQUcsR0FBRyxHQUFDLENBQUMsQ0FBQztRQUdkLFdBQUssR0FBRyxDQUFDLENBQUM7UUFHVixhQUFPLEdBQUcsQ0FBQyxDQUFDO1FBR1osZ0JBQVUsR0FBRyxDQUFDLENBQUM7UUFHZixlQUFTLEdBQUcsQ0FBQyxDQUFDO1FBR2QsaUJBQVcsR0FBRyxDQUFDLENBQUM7O0lBV3BCLENBQUM7SUFURyw0QkFBTSxHQUFOO1FBQ0ksSUFBSSxNQUFNLEdBQUcsaUJBQU8sQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdEosSUFBSSxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsRUFBQztZQUNuQixNQUFNLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUMzRjthQUFNLElBQUksSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLEVBQUM7WUFDMUIsTUFBTSxHQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2xGO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQWxDRDtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxNQUFNLEVBQUMsQ0FBQzttREFDaEI7SUFHZjtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxNQUFNLEVBQUMsQ0FBQztpREFDbEI7SUFHYjtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxLQUFLLEVBQUMsQ0FBQzttREFDZjtJQUdmO1FBREMsUUFBUSxDQUFDLEVBQUMsV0FBVyxFQUFDLElBQUksRUFBQyxDQUFDOzhDQUNmO0lBR2Q7UUFEQyxRQUFRLENBQUMsRUFBQyxXQUFXLEVBQUMsTUFBTSxFQUFDLENBQUM7OENBQ3JCO0lBR1Y7UUFEQyxRQUFRLENBQUMsRUFBQyxXQUFXLEVBQUMsS0FBSyxFQUFDLENBQUM7Z0RBQ2xCO0lBR1o7UUFEQyxRQUFRLENBQUMsRUFBQyxXQUFXLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBQyxXQUFXLEVBQUMsQ0FBQzttREFDdkM7SUFHZjtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxJQUFJLEVBQUUsUUFBUSxFQUFDLG9CQUFvQixFQUFDLENBQUM7a0RBQzlDO0lBR2Q7UUFEQyxRQUFRLENBQUMsRUFBQyxXQUFXLEVBQUMsTUFBTSxFQUFFLFFBQVEsRUFBQyxjQUFjLEVBQUMsQ0FBQztvREFDeEM7SUEzQkMsV0FBVztRQUYvQixPQUFPO1FBQ1AsSUFBSSxDQUFDLGlCQUFpQixDQUFDO09BQ0gsV0FBVyxDQXNDL0I7SUFBRCxrQkFBQztDQXRDRCxBQXNDQyxDQXRDd0MsRUFBRSxDQUFDLFNBQVMsR0FzQ3BEO2tCQXRDb0IsV0FBVyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgQWN0aW9ucyBmcm9tIFwiLi4vYWN0aW9ucy9BY3Rpb25zXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHksIG1lbnV9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbkBtZW51KFwi6Ieq5a6a5LmJL1N3aW5nRWZmZWN0XCIpXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN3aW5nRWZmZWN0IGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi5byA5aeL6KeS5bqmXCJ9KVxyXG4gICAgc3RhcnRWYWx1ZSA9IDA7XHJcblxyXG4gICAgQHByb3BlcnR5KHtkaXNwbGF5TmFtZTpcIue7k+adn+inkuW6plwifSlcclxuICAgIGVuZFZhbHVlID0gMDtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi6KeS5bqm5beuXCJ9KVxyXG4gICAgZGVsdGFWYWx1ZSA9IDg7XHJcblxyXG4gICAgQHByb3BlcnR5KHtkaXNwbGF5TmFtZTpcIumAn+W6plwifSlcclxuICAgIHNwZWVkID0gMzYwLzI7XHJcblxyXG4gICAgQHByb3BlcnR5KHtkaXNwbGF5TmFtZTpcIuaRhuWKqOasoeaVsFwifSlcclxuICAgIHRpbWVzID0gODtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi6KGw5YeP5YC8XCJ9KVxyXG4gICAgZGFtcGluZyA9IDA7XHJcblxyXG4gICAgQHByb3BlcnR5KHtkaXNwbGF5TmFtZTpcIuWRqOacn+aAp+W7tuaXtlwiLCB0ZXh0VGlwczpcIuWNleaRhuWIsOacgOmrmOeCueaXtuW7tuaXtlwifSlcclxuICAgIGN5Y2xlRGVsYXkgPSAwO1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7ZGlzcGxheU5hbWU6XCLph43lpI1cIiwgdGV4dFRpcHM6XCLlsI/kuo7pm7booajnpLpyZXBlYXRGb3JldmVyXCJ9KVxyXG4gICAgcmVwZWF0TnVtID0gMDtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi6YeN5aSN5bu25pe2XCIsIHRleHRUaXBzOlwi6YeN5aSN5qyh5pWw5LiN562J5LqOMOaXtuaJjeacieaViFwifSlcclxuICAgIHJlcGVhdERlbGF5ID0gMDtcclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIGxldCBhY3Rpb24gPSBBY3Rpb25zLmN5Y2xlQWN0aW9uKGNjLnJvdGF0ZVRvLCB0aGlzLnN0YXJ0VmFsdWUsIHRoaXMuZW5kVmFsdWUsIHRoaXMuZGVsdGFWYWx1ZSwgdGhpcy5zcGVlZCwgdGhpcy50aW1lcywgdGhpcy5kYW1waW5nLCB0aGlzLmN5Y2xlRGVsYXkpO1xyXG4gICAgICAgIGlmICh0aGlzLnJlcGVhdE51bSA+IDApe1xyXG4gICAgICAgICAgICBhY3Rpb24gPSBjYy5yZXBlYXQoY2Muc2VxdWVuY2UoYWN0aW9uLCBjYy5kZWxheVRpbWUodGhpcy5yZXBlYXREZWxheSkpLCB0aGlzLnJlcGVhdE51bSk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnJlcGVhdE51bSA8IDApe1xyXG4gICAgICAgICAgICBhY3Rpb24gPSBjYy5yZXBlYXRGb3JldmVyKGNjLnNlcXVlbmNlKGFjdGlvbiwgY2MuZGVsYXlUaW1lKHRoaXMucmVwZWF0RGVsYXkpKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oYWN0aW9uKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/RigidBodyCollisionEvent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bd3eca0KaZBS54KFgdqn1/X', 'RigidBodyCollisionEvent');
// framework/component/RigidBodyCollisionEvent.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
var RigidBodyCollisionType;
(function (RigidBodyCollisionType) {
    RigidBodyCollisionType[RigidBodyCollisionType["onBeginContact"] = 0] = "onBeginContact";
    RigidBodyCollisionType[RigidBodyCollisionType["onEndContact"] = 1] = "onEndContact";
    RigidBodyCollisionType[RigidBodyCollisionType["onPreSolve"] = 2] = "onPreSolve";
    RigidBodyCollisionType[RigidBodyCollisionType["onPostSolve"] = 3] = "onPostSolve";
})(RigidBodyCollisionType || (RigidBodyCollisionType = {}));
var map = new Map();
map.set(RigidBodyCollisionType.onBeginContact, "onBeginContact");
map.set(RigidBodyCollisionType.onEndContact, "onEndContact");
map.set(RigidBodyCollisionType.onPreSolve, "onPreSolve");
map.set(RigidBodyCollisionType.onPostSolve, "onPostSolve");
var RigidBodyCollisionEvent = /** @class */ (function (_super) {
    __extends(RigidBodyCollisionEvent, _super);
    function RigidBodyCollisionEvent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.collisionType = RigidBodyCollisionType.onBeginContact;
        _this.eventHandlers = [];
        return _this;
    }
    RigidBodyCollisionEvent.prototype.onLoad = function () {
        var _this = this;
        this[map.get(this.collisionType)] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return __awaiter(_this, void 0, void 0, function () {
                var _a;
                return __generator(this, function (_b) {
                    (_a = cc.Component.EventHandler).emitEvents.apply(_a, __spreadArrays([this.eventHandlers], args));
                    return [2 /*return*/];
                });
            });
        };
    };
    __decorate([
        property({ type: cc.Enum(RigidBodyCollisionType), displayName: "刚体碰撞类型" })
    ], RigidBodyCollisionEvent.prototype, "collisionType", void 0);
    __decorate([
        property({ type: cc.Component.EventHandler, displayName: "触发事件" })
    ], RigidBodyCollisionEvent.prototype, "eventHandlers", void 0);
    RigidBodyCollisionEvent = __decorate([
        ccclass,
        menu("自定义/RigidBodyCollisionEvent")
    ], RigidBodyCollisionEvent);
    return RigidBodyCollisionEvent;
}(cc.Component));
exports.default = RigidBodyCollisionEvent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L1JpZ2lkQm9keUNvbGxpc2lvbkV2ZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOztBQUc3RixJQUFBLEtBQTRCLEVBQUUsQ0FBQyxVQUFVLEVBQXhDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBQSxFQUFFLElBQUksVUFBaUIsQ0FBQztBQUVoRCxJQUFLLHNCQUtKO0FBTEQsV0FBSyxzQkFBc0I7SUFDdkIsdUZBQWMsQ0FBQTtJQUNkLG1GQUFZLENBQUE7SUFDWiwrRUFBVSxDQUFBO0lBQ1YsaUZBQVcsQ0FBQTtBQUNmLENBQUMsRUFMSSxzQkFBc0IsS0FBdEIsc0JBQXNCLFFBSzFCO0FBRUQsSUFBSSxHQUFHLEdBQUcsSUFBSSxHQUFHLEVBQWtDLENBQUM7QUFDcEQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztBQUNqRSxHQUFHLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLFlBQVksRUFBRSxjQUFjLENBQUMsQ0FBQztBQUM3RCxHQUFHLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLFVBQVUsRUFBRSxZQUFZLENBQUMsQ0FBQztBQUN6RCxHQUFHLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLFdBQVcsRUFBRSxhQUFhLENBQUMsQ0FBQztBQUszRDtJQUFxRCwyQ0FBWTtJQUFqRTtRQUFBLHFFQWNDO1FBWEcsbUJBQWEsR0FBMEIsc0JBQXNCLENBQUMsY0FBYyxDQUFDO1FBRzdFLG1CQUFhLEdBQStCLEVBQUUsQ0FBQzs7SUFRbkQsQ0FBQztJQU5HLHdDQUFNLEdBQU47UUFBQSxpQkFJQztRQUhHLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHO1lBQU8sY0FBTztpQkFBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO2dCQUFQLHlCQUFPOzs7OztvQkFDOUMsQ0FBQSxLQUFBLEVBQUUsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFBLENBQUMsVUFBVSwyQkFBQyxJQUFJLENBQUMsYUFBYSxHQUFLLElBQUksR0FBRTs7OztTQUNyRSxDQUFBO0lBQ0wsQ0FBQztJQVREO1FBREMsUUFBUSxDQUFDLEVBQUMsSUFBSSxFQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsRUFBRSxXQUFXLEVBQUMsUUFBUSxFQUFDLENBQUM7a0VBQ007SUFHN0U7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFDLE1BQU0sRUFBQyxDQUFDO2tFQUNoQjtJQU45Qix1QkFBdUI7UUFGM0MsT0FBTztRQUNQLElBQUksQ0FBQyw2QkFBNkIsQ0FBQztPQUNmLHVCQUF1QixDQWMzQztJQUFELDhCQUFDO0NBZEQsQUFjQyxDQWRvRCxFQUFFLENBQUMsU0FBUyxHQWNoRTtrQkFkb0IsdUJBQXVCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5LCBtZW51fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5lbnVtIFJpZ2lkQm9keUNvbGxpc2lvblR5cGV7XHJcbiAgICBvbkJlZ2luQ29udGFjdCxcclxuICAgIG9uRW5kQ29udGFjdCxcclxuICAgIG9uUHJlU29sdmUsXHJcbiAgICBvblBvc3RTb2x2ZSxcclxufVxyXG5cclxubGV0IG1hcCA9IG5ldyBNYXA8UmlnaWRCb2R5Q29sbGlzaW9uVHlwZSwgc3RyaW5nPigpO1xyXG5tYXAuc2V0KFJpZ2lkQm9keUNvbGxpc2lvblR5cGUub25CZWdpbkNvbnRhY3QsIFwib25CZWdpbkNvbnRhY3RcIik7XHJcbm1hcC5zZXQoUmlnaWRCb2R5Q29sbGlzaW9uVHlwZS5vbkVuZENvbnRhY3QsIFwib25FbmRDb250YWN0XCIpO1xyXG5tYXAuc2V0KFJpZ2lkQm9keUNvbGxpc2lvblR5cGUub25QcmVTb2x2ZSwgXCJvblByZVNvbHZlXCIpO1xyXG5tYXAuc2V0KFJpZ2lkQm9keUNvbGxpc2lvblR5cGUub25Qb3N0U29sdmUsIFwib25Qb3N0U29sdmVcIik7XHJcblxyXG5cclxuQGNjY2xhc3NcclxuQG1lbnUoXCLoh6rlrprkuYkvUmlnaWRCb2R5Q29sbGlzaW9uRXZlbnRcIilcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmlnaWRCb2R5Q29sbGlzaW9uRXZlbnQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7dHlwZTpjYy5FbnVtKFJpZ2lkQm9keUNvbGxpc2lvblR5cGUpLCBkaXNwbGF5TmFtZTpcIuWImuS9k+eisOaSnuexu+Wei1wifSlcclxuICAgIGNvbGxpc2lvblR5cGU6UmlnaWRCb2R5Q29sbGlzaW9uVHlwZSA9IFJpZ2lkQm9keUNvbGxpc2lvblR5cGUub25CZWdpbkNvbnRhY3Q7XHJcblxyXG4gICAgQHByb3BlcnR5KHt0eXBlOmNjLkNvbXBvbmVudC5FdmVudEhhbmRsZXIsIGRpc3BsYXlOYW1lOlwi6Kem5Y+R5LqL5Lu2XCJ9KVxyXG4gICAgZXZlbnRIYW5kbGVyczpbY2MuQ29tcG9uZW50LkV2ZW50SGFuZGxlcl0gPSBbXTtcclxuXHJcbiAgICBvbkxvYWQoKXtcclxuICAgICAgICB0aGlzW21hcC5nZXQodGhpcy5jb2xsaXNpb25UeXBlKV0gPSBhc3luYyAoLi4uYXJncyk9PntcclxuICAgICAgICAgICAgY2MuQ29tcG9uZW50LkV2ZW50SGFuZGxlci5lbWl0RXZlbnRzKHRoaXMuZXZlbnRIYW5kbGVycywgLi4uYXJncyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/PauseAllRunningActions.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '76cc4E/XWhMC562JoS9uogz', 'PauseAllRunningActions');
// framework/component/PauseAllRunningActions.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, menu = _a.menu;
var PauseAllRunningActions = /** @class */ (function (_super) {
    __extends(PauseAllRunningActions, _super);
    function PauseAllRunningActions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PauseAllRunningActions.prototype.onLoad = function () {
        var list = cc.director.getActionManager().pauseAllRunningActions();
        this.onDestroy = function () {
            cc.director.getActionManager().resumeTargets(list);
        };
    };
    PauseAllRunningActions = __decorate([
        ccclass,
        menu("自定义/PauseAllRunningActions")
    ], PauseAllRunningActions);
    return PauseAllRunningActions;
}(cc.Component));
exports.default = PauseAllRunningActions;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L1BhdXNlQWxsUnVubmluZ0FjdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBa0IsRUFBRSxDQUFDLFVBQVUsRUFBOUIsT0FBTyxhQUFBLEVBQUUsSUFBSSxVQUFpQixDQUFDO0FBSXRDO0lBQW9ELDBDQUFZO0lBQWhFOztJQU9BLENBQUM7SUFORyx1Q0FBTSxHQUFOO1FBQ0ksSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLHNCQUFzQixFQUFFLENBQUM7UUFDbkUsSUFBSSxDQUFDLFNBQVMsR0FBRztZQUNiLEVBQUUsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkQsQ0FBQyxDQUFDO0lBQ04sQ0FBQztJQU5nQixzQkFBc0I7UUFGMUMsT0FBTztRQUNQLElBQUksQ0FBQyw0QkFBNEIsQ0FBQztPQUNkLHNCQUFzQixDQU8xQztJQUFELDZCQUFDO0NBUEQsQUFPQyxDQVBtRCxFQUFFLENBQUMsU0FBUyxHQU8vRDtrQkFQb0Isc0JBQXNCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IHtjY2NsYXNzLCBtZW51fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5AbWVudShcIuiHquWumuS5iS9QYXVzZUFsbFJ1bm5pbmdBY3Rpb25zXCIpXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhdXNlQWxsUnVubmluZ0FjdGlvbnMgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICBsZXQgbGlzdCA9IGNjLmRpcmVjdG9yLmdldEFjdGlvbk1hbmFnZXIoKS5wYXVzZUFsbFJ1bm5pbmdBY3Rpb25zKCk7XHJcbiAgICAgICAgdGhpcy5vbkRlc3Ryb3kgPSAoKT0+e1xyXG4gICAgICAgICAgICBjYy5kaXJlY3Rvci5nZXRBY3Rpb25NYW5hZ2VyKCkucmVzdW1lVGFyZ2V0cyhsaXN0KTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/View.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a2bbdzy4UJJ65VrnqbThiRb', 'View');
// framework/component/View.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Extend_1 = require("../extend/Extend");
var Facade_1 = require("../facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
var View = /** @class */ (function (_super) {
    __extends(View, _super);
    function View() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.startCommandName = "";
        _this.adapterIphoneX = [];
        _this.targetToCanvas = [];
        _this.screenSize = [];
        _this.releasePrefab = false;
        return _this;
    }
    View_1 = View;
    View.prototype.onLoad = function () {
        if (Extend_1.ext.isIphoneX) {
            this.adapterIphoneX.forEach(function (value) { return value.top += View_1.IPHONEX_TOP_BLACK_HEIGHT; });
        }
        this.targetToCanvas.forEach(function (value) { return value.target = Facade_1.default.canvasNode; });
        this.screenSize.forEach(function (value) { return value.setContentSize(Facade_1.default.canvasNode.getContentSize()); });
    };
    View.prototype.start = function () {
        if (this.startCommandName != "") {
            Facade_1.default.executeCommand(this.startCommandName);
        }
    };
    View.prototype.onDestroy = function () {
        if (this.releasePrefab) {
            Facade_1.default.releasePrefab("prefab/" + this.node.name);
        }
    };
    /**
     * @param data commandName
     * */
    View.prototype.closeView = function (event, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(typeof data == "string" && data != "")) return [3 /*break*/, 2];
                        return [4 /*yield*/, Facade_1.default.executeCommand(data)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [4 /*yield*/, Facade_1.default.executeCommand("CloseViewCommand", this.node)];
                    case 3:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param data commandName
     * */
    View.prototype.closeViewWithClickSound = function (event, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        View_1.executeClickSoundCommand(event, data);
                        return [4 /*yield*/, this.closeView(event, data)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param data prefabName
     * */
    View.prototype.openView = function (event, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Facade_1.default.executeCommand("OpenViewCommand", data)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param data prefabName
     * */
    View.prototype.openViewWithClickSound = function (event, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        View_1.executeClickSoundCommand(event, data);
                        return [4 /*yield*/, this.openView(event, data)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param data sceneName
     * */
    View.prototype.loadScene = function (event, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Facade_1.default.executeCommand("LoadSceneCommand", data)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param data sceneName
     * */
    View.prototype.loadSceneWithClickSound = function (event, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        View_1.executeClickSoundCommand(event, data);
                        return [4 /*yield*/, Facade_1.default.executeCommand("LoadSceneCommand", data)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param data commandName
     * */
    View.prototype.executeCommand = function (event, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Facade_1.default.executeCommand(data, event)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param data commandName
     * */
    View.prototype.executeCommandWithClickSound = function (event, data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        View_1.executeClickSoundCommand(event, data);
                        return [4 /*yield*/, this.executeCommand(event, data)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * 点击按钮时播放声音
     * */
    View.executeClickSoundCommand = function (event, data) {
        if (View_1.clickSoundCommand) {
            Facade_1.default.executeCommand(View_1.clickSoundCommand, event, data);
        }
    };
    var View_1;
    View.clickSoundCommand = null;
    View.IPHONEX_TOP_BLACK_HEIGHT = 66;
    __decorate([
        property({ displayName: "启动命令", tooltip: "加载成功后执行启动命令" })
    ], View.prototype, "startCommandName", void 0);
    __decorate([
        property({ type: cc.Widget, displayName: "适配IphoneX", tooltip: "widget.top += 66" })
    ], View.prototype, "adapterIphoneX", void 0);
    __decorate([
        property({ type: cc.Widget, displayName: "绑定Canvas", tooltip: "widget.target=canvas" })
    ], View.prototype, "targetToCanvas", void 0);
    __decorate([
        property({ type: cc.Node, displayName: "设置屏幕大小", tooltip: "node.setContentSize(screenSize)" })
    ], View.prototype, "screenSize", void 0);
    __decorate([
        property
    ], View.prototype, "releasePrefab", void 0);
    View = View_1 = __decorate([
        ccclass,
        menu("自定义/View")
    ], View);
    return View;
}(cc.Component));
exports.default = View;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/ZIndex.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '28376gLYLVAy4MJItNA7L8U', 'ZIndex');
// framework/component/ZIndex.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
var ZIndex = /** @class */ (function (_super) {
    __extends(ZIndex, _super);
    function ZIndex() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.zIndex = 0;
        return _this;
    }
    ZIndex.prototype.onLoad = function () {
        if (this.zIndex != 0) {
            this.node.zIndex = this.zIndex;
        }
    };
    __decorate([
        property
    ], ZIndex.prototype, "zIndex", void 0);
    ZIndex = __decorate([
        ccclass,
        menu("自定义/ZIndex")
    ], ZIndex);
    return ZIndex;
}(cc.Component));
exports.default = ZIndex;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L1pJbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ00sSUFBQSxLQUE0QixFQUFFLENBQUMsVUFBVSxFQUF4QyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQUEsRUFBRSxJQUFJLFVBQWlCLENBQUM7QUFJaEQ7SUFBb0MsMEJBQVk7SUFBaEQ7UUFBQSxxRUFVQztRQVBHLFlBQU0sR0FBRyxDQUFDLENBQUM7O0lBT2YsQ0FBQztJQUxHLHVCQUFNLEdBQU47UUFDSSxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFDO1lBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7U0FDbEM7SUFDTCxDQUFDO0lBTkQ7UUFEQyxRQUFROzBDQUNFO0lBSE0sTUFBTTtRQUYxQixPQUFPO1FBQ1AsSUFBSSxDQUFDLFlBQVksQ0FBQztPQUNFLE1BQU0sQ0FVMUI7SUFBRCxhQUFDO0NBVkQsQUFVQyxDQVZtQyxFQUFFLENBQUMsU0FBUyxHQVUvQztrQkFWb0IsTUFBTSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHksIG1lbnV9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbkBtZW51KFwi6Ieq5a6a5LmJL1pJbmRleFwiKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBaSW5kZXggZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgekluZGV4ID0gMDtcclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnpJbmRleCAhPSAwKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLnpJbmRleCA9IHRoaXMuekluZGV4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/CDTimer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c739atlrTdAc4RH4aaUDag6', 'CDTimer');
// framework/component/CDTimer.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu, disallowMultiple = _a.disallowMultiple;
var CDTimer = /** @class */ (function (_super) {
    __extends(CDTimer, _super);
    function CDTimer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.once = false;
        _this.cd = 0;
        _this.pause = false;
        _this.frameEventHandlers = [];
        _this.zeroEventHandlers = [];
        _this._curTime = 0;
        return _this;
    }
    Object.defineProperty(CDTimer.prototype, "curTime", {
        get: function () {
            return this._curTime;
        },
        enumerable: false,
        configurable: true
    });
    CDTimer.prototype.cdDelta = function () {
        return this.cd - this.curTime;
    };
    CDTimer.prototype.reset = function () {
        this._curTime = 0;
    };
    CDTimer.prototype.update = function (dt) {
        if (this.pause)
            return;
        if (this.cd > 0 && this._curTime < this.cd) {
            this._curTime += dt;
            var progress = this._curTime / this.cd;
            cc.Component.EventHandler.emitEvents(this.frameEventHandlers, progress);
            if (this._curTime >= this.cd) {
                cc.Component.EventHandler.emitEvents(this.zeroEventHandlers, progress);
                if (this.once) {
                    this.destroy();
                }
                else {
                    this.reset();
                }
            }
        }
    };
    __decorate([
        property({ displayName: "是否一次性", textTips: "选是则在倒计时结束会销毁自己" })
    ], CDTimer.prototype, "once", void 0);
    __decorate([
        property({ displayName: "倒计时(秒)" })
    ], CDTimer.prototype, "cd", void 0);
    __decorate([
        property({ displayName: "暂停开关" })
    ], CDTimer.prototype, "pause", void 0);
    __decorate([
        property({ type: cc.Component.EventHandler, displayName: "进度事件", textTips: "每一帧都会收到进度信息" })
    ], CDTimer.prototype, "frameEventHandlers", void 0);
    __decorate([
        property({ type: cc.Component.EventHandler, displayName: "归零事件", textTips: "CD归零时会收到此消息" })
    ], CDTimer.prototype, "zeroEventHandlers", void 0);
    CDTimer = __decorate([
        ccclass,
        disallowMultiple,
        menu("自定义/CDTimer")
    ], CDTimer);
    return CDTimer;
}(cc.Component));
exports.default = CDTimer;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L0NEVGltZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBOEMsRUFBRSxDQUFDLFVBQVUsRUFBMUQsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUUsSUFBSSxVQUFBLEVBQUUsZ0JBQWdCLHNCQUFpQixDQUFDO0FBS2xFO0lBQXFDLDJCQUFZO0lBQWpEO1FBQUEscUVBK0NDO1FBN0NHLFVBQUksR0FBRyxLQUFLLENBQUM7UUFHYixRQUFFLEdBQUcsQ0FBQyxDQUFDO1FBR1AsV0FBSyxHQUFHLEtBQUssQ0FBQztRQUdkLHdCQUFrQixHQUErQixFQUFFLENBQUM7UUFHcEQsdUJBQWlCLEdBQStCLEVBQUUsQ0FBQztRQUczQyxjQUFRLEdBQUcsQ0FBQyxDQUFDOztJQThCekIsQ0FBQztJQTVCRyxzQkFBSSw0QkFBTzthQUFYO1lBQ0ksT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3pCLENBQUM7OztPQUFBO0lBRUQseUJBQU8sR0FBUDtRQUNJLE9BQU8sSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ2xDLENBQUM7SUFFRCx1QkFBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUVELHdCQUFNLEdBQU4sVUFBUSxFQUFFO1FBQ04sSUFBSSxJQUFJLENBQUMsS0FBSztZQUFDLE9BQU87UUFDdEIsSUFBSSxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUM7WUFDdkMsSUFBSSxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUM7WUFDcEIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsR0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQ3JDLEVBQUUsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDeEUsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxFQUFFLEVBQUM7Z0JBQ3pCLEVBQUUsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsUUFBUSxDQUFDLENBQUM7Z0JBQ3ZFLElBQUksSUFBSSxDQUFDLElBQUksRUFBQztvQkFDVixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7aUJBQ2xCO3FCQUFNO29CQUNILElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztpQkFDaEI7YUFDSjtTQUNKO0lBQ0wsQ0FBQztJQTVDRDtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxPQUFPLEVBQUUsUUFBUSxFQUFDLGdCQUFnQixFQUFDLENBQUM7eUNBQzlDO0lBR2I7UUFEQyxRQUFRLENBQUMsRUFBQyxXQUFXLEVBQUMsUUFBUSxFQUFDLENBQUM7dUNBQzFCO0lBR1A7UUFEQyxRQUFRLENBQUMsRUFBQyxXQUFXLEVBQUMsTUFBTSxFQUFDLENBQUM7MENBQ2pCO0lBR2Q7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUMsYUFBYSxFQUFDLENBQUM7dURBQ25DO0lBR3BEO1FBREMsUUFBUSxDQUFDLEVBQUMsSUFBSSxFQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLFdBQVcsRUFBQyxNQUFNLEVBQUUsUUFBUSxFQUFDLGFBQWEsRUFBQyxDQUFDO3NEQUNwQztJQWRsQyxPQUFPO1FBSDNCLE9BQU87UUFDUCxnQkFBZ0I7UUFDaEIsSUFBSSxDQUFDLGFBQWEsQ0FBQztPQUNDLE9BQU8sQ0ErQzNCO0lBQUQsY0FBQztDQS9DRCxBQStDQyxDQS9Db0MsRUFBRSxDQUFDLFNBQVMsR0ErQ2hEO2tCQS9Db0IsT0FBTyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHksIG1lbnUsIGRpc2FsbG93TXVsdGlwbGV9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbkBkaXNhbGxvd011bHRpcGxlXHJcbkBtZW51KFwi6Ieq5a6a5LmJL0NEVGltZXJcIilcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ0RUaW1lciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi5piv5ZCm5LiA5qyh5oCnXCIsIHRleHRUaXBzOlwi6YCJ5piv5YiZ5Zyo5YCS6K6h5pe257uT5p2f5Lya6ZSA5q+B6Ieq5bexXCJ9KVxyXG4gICAgb25jZSA9IGZhbHNlO1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7ZGlzcGxheU5hbWU6XCLlgJLorqHml7Yo56eSKVwifSlcclxuICAgIGNkID0gMDtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi5pqC5YGc5byA5YWzXCJ9KVxyXG4gICAgcGF1c2UgPSBmYWxzZTtcclxuXHJcbiAgICBAcHJvcGVydHkoe3R5cGU6Y2MuQ29tcG9uZW50LkV2ZW50SGFuZGxlciwgZGlzcGxheU5hbWU6XCLov5vluqbkuovku7ZcIiwgdGV4dFRpcHM6XCLmr4/kuIDluKfpg73kvJrmlLbliLDov5vluqbkv6Hmga9cIn0pXHJcbiAgICBmcmFtZUV2ZW50SGFuZGxlcnM6W2NjLkNvbXBvbmVudC5FdmVudEhhbmRsZXJdID0gW107XHJcblxyXG4gICAgQHByb3BlcnR5KHt0eXBlOmNjLkNvbXBvbmVudC5FdmVudEhhbmRsZXIsIGRpc3BsYXlOYW1lOlwi5b2S6Zu25LqL5Lu2XCIsIHRleHRUaXBzOlwiQ0TlvZLpm7bml7bkvJrmlLbliLDmraTmtojmga9cIn0pXHJcbiAgICB6ZXJvRXZlbnRIYW5kbGVyczpbY2MuQ29tcG9uZW50LkV2ZW50SGFuZGxlcl0gPSBbXTtcclxuXHJcblxyXG4gICAgcHJpdmF0ZSBfY3VyVGltZSA9IDA7XHJcblxyXG4gICAgZ2V0IGN1clRpbWUoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY3VyVGltZTtcclxuICAgIH1cclxuXHJcbiAgICBjZERlbHRhKCk6bnVtYmVye1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNkIC0gdGhpcy5jdXJUaW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0KCl7XHJcbiAgICAgICAgdGhpcy5fY3VyVGltZSA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlIChkdCkge1xyXG4gICAgICAgIGlmICh0aGlzLnBhdXNlKXJldHVybjtcclxuICAgICAgICBpZiAodGhpcy5jZCA+IDAgJiYgdGhpcy5fY3VyVGltZSA8IHRoaXMuY2Qpe1xyXG4gICAgICAgICAgICB0aGlzLl9jdXJUaW1lICs9IGR0O1xyXG4gICAgICAgICAgICBsZXQgcHJvZ3Jlc3MgPSB0aGlzLl9jdXJUaW1lL3RoaXMuY2Q7XHJcbiAgICAgICAgICAgIGNjLkNvbXBvbmVudC5FdmVudEhhbmRsZXIuZW1pdEV2ZW50cyh0aGlzLmZyYW1lRXZlbnRIYW5kbGVycywgcHJvZ3Jlc3MpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fY3VyVGltZSA+PSB0aGlzLmNkKXtcclxuICAgICAgICAgICAgICAgIGNjLkNvbXBvbmVudC5FdmVudEhhbmRsZXIuZW1pdEV2ZW50cyh0aGlzLnplcm9FdmVudEhhbmRsZXJzLCBwcm9ncmVzcyk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vbmNlKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNldCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/LifeCycle.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a7c48jInGlJw7oRhT15QWXk', 'LifeCycle');
// framework/component/LifeCycle.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LifeCycle = /** @class */ (function (_super) {
    __extends(LifeCycle, _super);
    function LifeCycle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LifeCycle_1 = LifeCycle;
    LifeCycle.prototype.addCall = function (lifeName, callFunc, callObj) {
        var thatCall = this[lifeName];
        this[lifeName] = function () {
            if (thatCall) {
                thatCall();
            }
            if (callObj) {
                callFunc.call(callObj);
            }
            else {
                callFunc();
            }
        };
    };
    LifeCycle.onDestroyFollow = function (node, followNode) {
        var lifeCycle = followNode.addComponent(LifeCycle_1);
        lifeCycle.addCall("onDestroy", function () {
            if (node.isValid) {
                node.destroy();
            }
        });
    };
    LifeCycle.onDisableFollow = function (node, followNode) {
        var lifeCycle = followNode.addComponent(LifeCycle_1);
        lifeCycle.addCall("onDisable", function () {
            node.active = false;
        });
    };
    LifeCycle.onEnableFollow = function (node, followNode) {
        var lifeCycle = followNode.addComponent(LifeCycle_1);
        lifeCycle.addCall("onEnable", function () {
            node.active = true;
        });
    };
    var LifeCycle_1;
    LifeCycle = LifeCycle_1 = __decorate([
        ccclass
    ], LifeCycle);
    return LifeCycle;
}(cc.Component));
exports.default = LifeCycle;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L0xpZmVDeWNsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsaUZBQWlGO0FBQ2pGLHlGQUF5RjtBQUN6RixtQkFBbUI7QUFDbkIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUNuRyw4QkFBOEI7QUFDOUIsMkZBQTJGO0FBQzNGLG1HQUFtRzs7QUFFN0YsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBdUMsNkJBQVk7SUFBbkQ7O0lBc0NBLENBQUM7a0JBdENvQixTQUFTO0lBRTFCLDJCQUFPLEdBQVAsVUFBUSxRQUFlLEVBQUUsUUFBaUIsRUFBRSxPQUFlO1FBQ3ZELElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUc7WUFDYixJQUFJLFFBQVEsRUFBQztnQkFDVCxRQUFRLEVBQUUsQ0FBQzthQUNkO1lBQ0QsSUFBSSxPQUFPLEVBQUM7Z0JBQ1IsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUMxQjtpQkFBTTtnQkFDSCxRQUFRLEVBQUUsQ0FBQzthQUNkO1FBQ0wsQ0FBQyxDQUFBO0lBQ0wsQ0FBQztJQUVNLHlCQUFlLEdBQXRCLFVBQXVCLElBQVksRUFBRSxVQUFrQjtRQUNuRCxJQUFJLFNBQVMsR0FBRyxVQUFVLENBQUMsWUFBWSxDQUFDLFdBQVMsQ0FBQyxDQUFDO1FBQ25ELFNBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFO1lBQzNCLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBQztnQkFDYixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7YUFDbEI7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSx5QkFBZSxHQUF0QixVQUF1QixJQUFZLEVBQUUsVUFBa0I7UUFDbkQsSUFBSSxTQUFTLEdBQUcsVUFBVSxDQUFDLFlBQVksQ0FBQyxXQUFTLENBQUMsQ0FBQztRQUNuRCxTQUFTLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUMzQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSx3QkFBYyxHQUFyQixVQUFzQixJQUFZLEVBQUUsVUFBa0I7UUFDbEQsSUFBSSxTQUFTLEdBQUcsVUFBVSxDQUFDLFlBQVksQ0FBQyxXQUFTLENBQUMsQ0FBQztRQUNuRCxTQUFTLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRTtZQUMxQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUN2QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7O0lBckNnQixTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBc0M3QjtJQUFELGdCQUFDO0NBdENELEFBc0NDLENBdENzQyxFQUFFLENBQUMsU0FBUyxHQXNDbEQ7a0JBdENvQixTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpZmVDeWNsZSBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgYWRkQ2FsbChsaWZlTmFtZTpTdHJpbmcsIGNhbGxGdW5jOkZ1bmN0aW9uLCBjYWxsT2JqPzpPYmplY3Qpe1xyXG4gICAgICAgIGxldCB0aGF0Q2FsbCA9IHRoaXNbbGlmZU5hbWVdO1xyXG4gICAgICAgIHRoaXNbbGlmZU5hbWVdID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAodGhhdENhbGwpe1xyXG4gICAgICAgICAgICAgICAgdGhhdENhbGwoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY2FsbE9iail7XHJcbiAgICAgICAgICAgICAgICBjYWxsRnVuYy5jYWxsKGNhbGxPYmopO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY2FsbEZ1bmMoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgb25EZXN0cm95Rm9sbG93KG5vZGU6Y2MuTm9kZSwgZm9sbG93Tm9kZTpjYy5Ob2RlKXtcclxuICAgICAgICBsZXQgbGlmZUN5Y2xlID0gZm9sbG93Tm9kZS5hZGRDb21wb25lbnQoTGlmZUN5Y2xlKTtcclxuICAgICAgICBsaWZlQ3ljbGUuYWRkQ2FsbChcIm9uRGVzdHJveVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGlmIChub2RlLmlzVmFsaWQpe1xyXG4gICAgICAgICAgICAgICAgbm9kZS5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgb25EaXNhYmxlRm9sbG93KG5vZGU6Y2MuTm9kZSwgZm9sbG93Tm9kZTpjYy5Ob2RlKXtcclxuICAgICAgICBsZXQgbGlmZUN5Y2xlID0gZm9sbG93Tm9kZS5hZGRDb21wb25lbnQoTGlmZUN5Y2xlKTtcclxuICAgICAgICBsaWZlQ3ljbGUuYWRkQ2FsbChcIm9uRGlzYWJsZVwiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIG5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG9uRW5hYmxlRm9sbG93KG5vZGU6Y2MuTm9kZSwgZm9sbG93Tm9kZTpjYy5Ob2RlKXtcclxuICAgICAgICBsZXQgbGlmZUN5Y2xlID0gZm9sbG93Tm9kZS5hZGRDb21wb25lbnQoTGlmZUN5Y2xlKTtcclxuICAgICAgICBsaWZlQ3ljbGUuYWRkQ2FsbChcIm9uRW5hYmxlXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/audio/SwitchAudioCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0d2e7m1GVBPX4D7BSHixkfQ', 'SwitchAudioCommand');
// framework/audio/SwitchAudioCommand.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Music_1 = require("./Music");
var View_1 = require("../component/View");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var SwitchAudioCommand = /** @class */ (function () {
    function SwitchAudioCommand() {
    }
    SwitchAudioCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {
                        var flag;
                        return __generator(this, function (_a) {
                            flag = !Music_1.Music.getMusicOpen();
                            if (typeof args[0] == "object" && args[0].constructor == cc.Toggle) {
                                flag = args[0].isChecked;
                                if (flag != Music_1.Music.getMusicOpen()) {
                                    View_1.default.executeClickSoundCommand(args[0], args[1]);
                                }
                            }
                            Music_1.Music.setMusicOpen(flag);
                            Music_1.Music.sfxOpen = flag;
                            Music_1.Music.persistence();
                            resolve();
                            return [2 /*return*/];
                        });
                    }); })];
            });
        });
    };
    SwitchAudioCommand = __decorate([
        ccclass("SwitchAudioCommand")
    ], SwitchAudioCommand);
    return SwitchAudioCommand;
}());
exports.default = SwitchAudioCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvYXVkaW8vU3dpdGNoQXVkaW9Db21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOztBQU9uRyxpQ0FBOEI7QUFDOUIsMENBQXFDO0FBRS9CLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQUE7SUFpQkEsQ0FBQztJQWZTLG9DQUFPLEdBQWI7UUFBZSxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOzt1Q0FBRSxPQUFPOzs7Z0JBQzNCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQU0sT0FBTzs7OzRCQUN4QixJQUFJLEdBQUcsQ0FBQyxhQUFLLENBQUMsWUFBWSxFQUFFLENBQUM7NEJBQ2pDLElBQUksT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksUUFBUSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLElBQUksRUFBRSxDQUFDLE1BQU0sRUFBQztnQ0FDL0QsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7Z0NBQ3pCLElBQUksSUFBSSxJQUFJLGFBQUssQ0FBQyxZQUFZLEVBQUUsRUFBQztvQ0FDN0IsY0FBSSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQ0FDbkQ7NkJBQ0o7NEJBQ0QsYUFBSyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQzs0QkFDekIsYUFBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7NEJBQ3JCLGFBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQzs0QkFDcEIsT0FBTyxFQUFFLENBQUM7Ozt5QkFDYixDQUFDLEVBQUM7OztLQUNOO0lBaEJnQixrQkFBa0I7UUFEdEMsT0FBTyxDQUFDLG9CQUFvQixDQUFDO09BQ1Qsa0JBQWtCLENBaUJ0QztJQUFELHlCQUFDO0NBakJELEFBaUJDLElBQUE7a0JBakJvQixrQkFBa0IiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcblxyXG5cclxuXHJcblxyXG5pbXBvcnQge0lDb21tYW5kfSBmcm9tIFwiLi4vZmFjYWRlL0lDb21tYW5kXCI7XHJcbmltcG9ydCB7TXVzaWN9IGZyb20gXCIuL011c2ljXCI7XHJcbmltcG9ydCBWaWV3IGZyb20gXCIuLi9jb21wb25lbnQvVmlld1wiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzcyhcIlN3aXRjaEF1ZGlvQ29tbWFuZFwiKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTd2l0Y2hBdWRpb0NvbW1hbmQgaW1wbGVtZW50cyBJQ29tbWFuZCB7XHJcblxyXG4gICAgYXN5bmMgZXhlY3V0ZSAoLi4uYXJncyk6UHJvbWlzZXtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgcmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBmbGFnID0gIU11c2ljLmdldE11c2ljT3BlbigpO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT0gXCJvYmplY3RcIiAmJiBhcmdzWzBdLmNvbnN0cnVjdG9yID09IGNjLlRvZ2dsZSl7XHJcbiAgICAgICAgICAgICAgICBmbGFnID0gYXJnc1swXS5pc0NoZWNrZWQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoZmxhZyAhPSBNdXNpYy5nZXRNdXNpY09wZW4oKSl7XHJcbiAgICAgICAgICAgICAgICAgICAgVmlldy5leGVjdXRlQ2xpY2tTb3VuZENvbW1hbmQoYXJnc1swXSwgYXJnc1sxXSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTXVzaWMuc2V0TXVzaWNPcGVuKGZsYWcpO1xyXG4gICAgICAgICAgICBNdXNpYy5zZnhPcGVuID0gZmxhZztcclxuICAgICAgICAgICAgTXVzaWMucGVyc2lzdGVuY2UoKTtcclxuICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/dialog/ShowDialogCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1d21aRvW3dDg4Q92XfCz8Of', 'ShowDialogCommand');
// framework/dialog/ShowDialogCommand.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../facade/Facade");
var LifeCycle_1 = require("../component/LifeCycle");
var DialogMediator_1 = require("./DialogMediator");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ShowDialogCommand = /** @class */ (function () {
    function ShowDialogCommand() {
    }
    ShowDialogCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var separationLayer, prefab, node, obj, mediator, key, attr, res, e_1;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    separationLayer = Facade_1.default.addSeparationLayer(args[1], args[2]);
                                    return [4 /*yield*/, cc.loader.loadResAwait(DialogMediator_1.default.dialogPrefabName, cc.Prefab)];
                                case 1:
                                    prefab = _a.sent();
                                    node = cc.instantiate(prefab);
                                    node.setParent(Facade_1.default.canvasNode);
                                    LifeCycle_1.default.onDestroyFollow(separationLayer, node);
                                    obj = args[0];
                                    mediator = node.getComponent(DialogMediator_1.default);
                                    for (key in obj) {
                                        if (obj[key] != null && typeof obj[key] != "function") {
                                            for (attr in obj[key]) {
                                                mediator[key][attr] = obj[key][attr];
                                            }
                                        }
                                    }
                                    _a.label = 2;
                                case 2:
                                    _a.trys.push([2, 4, , 5]);
                                    return [4 /*yield*/, node.onceAwait("clickButton")];
                                case 3:
                                    res = _a.sent();
                                    resolve(res);
                                    return [3 /*break*/, 5];
                                case 4:
                                    e_1 = _a.sent();
                                    reject(e_1);
                                    return [3 /*break*/, 5];
                                case 5: return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    ShowDialogCommand = __decorate([
        ccclass("ShowDialogCommand")
    ], ShowDialogCommand);
    return ShowDialogCommand;
}());
exports.default = ShowDialogCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZGlhbG9nL1Nob3dEaWFsb2dDb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOztBQUluRywyQ0FBc0M7QUFDdEMsb0RBQStDO0FBQy9DLG1EQUE4QztBQUV4QyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFBO0lBNkJBLENBQUM7SUE1QlMsbUNBQU8sR0FBYjtRQUFlLGNBQU87YUFBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1lBQVAseUJBQU87O3VDQUFFLE9BQU87OztnQkFDM0Isc0JBQU8sSUFBSSxPQUFPLENBQUMsVUFBTyxPQUFPLEVBQUUsTUFBTTs7Ozs7b0NBQ2pDLGVBQWUsR0FBRyxnQkFBTSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQ0FDckQscUJBQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsd0JBQWMsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUE7O29DQUFqRixNQUFNLEdBQUcsU0FBd0U7b0NBQ2pGLElBQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO29DQUNsQyxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7b0NBQ2xDLG1CQUFTLENBQUMsZUFBZSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztvQ0FFN0MsR0FBRyxHQUFhLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztvQ0FDeEIsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsd0JBQWMsQ0FBQyxDQUFDO29DQUVqRCxLQUFTLEdBQUcsSUFBSSxHQUFHLEVBQUM7d0NBQ2hCLElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxPQUFPLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxVQUFVLEVBQUM7NENBQ2xELEtBQVEsSUFBSSxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBQztnREFDckIsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQzs2Q0FDeEM7eUNBQ0o7cUNBQ0o7Ozs7b0NBSWEscUJBQU0sSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsRUFBQTs7b0NBQXpDLEdBQUcsR0FBRyxTQUFtQztvQ0FDN0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs7O29DQUViLE1BQU0sQ0FBQyxHQUFDLENBQUMsQ0FBQzs7Ozs7eUJBRWpCLENBQUMsRUFBQzs7O0tBQ047SUE1QmdCLGlCQUFpQjtRQURyQyxPQUFPLENBQUMsbUJBQW1CLENBQUM7T0FDUixpQkFBaUIsQ0E2QnJDO0lBQUQsd0JBQUM7Q0E3QkQsQUE2QkMsSUFBQTtrQkE3Qm9CLGlCQUFpQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuaW1wb3J0IHtEaWFsb2dWT30gZnJvbSBcIi4vRGlhbG9nVk9cIjtcclxuaW1wb3J0IHtJQ29tbWFuZH0gZnJvbSBcIi4uL2ZhY2FkZS9JQ29tbWFuZFwiO1xyXG5pbXBvcnQgRmFjYWRlIGZyb20gXCIuLi9mYWNhZGUvRmFjYWRlXCI7XHJcbmltcG9ydCBMaWZlQ3ljbGUgZnJvbSBcIi4uL2NvbXBvbmVudC9MaWZlQ3ljbGVcIjtcclxuaW1wb3J0IERpYWxvZ01lZGlhdG9yIGZyb20gXCIuL0RpYWxvZ01lZGlhdG9yXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzKFwiU2hvd0RpYWxvZ0NvbW1hbmRcIilcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hvd0RpYWxvZ0NvbW1hbmQgaW1wbGVtZW50cyBJQ29tbWFuZCB7XHJcbiAgICBhc3luYyBleGVjdXRlICguLi5hcmdzKTpQcm9taXNle1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBzZXBhcmF0aW9uTGF5ZXIgPSBGYWNhZGUuYWRkU2VwYXJhdGlvbkxheWVyKGFyZ3NbMV0sIGFyZ3NbMl0pO1xyXG4gICAgICAgICAgICBsZXQgcHJlZmFiID0gYXdhaXQgY2MubG9hZGVyLmxvYWRSZXNBd2FpdChEaWFsb2dNZWRpYXRvci5kaWFsb2dQcmVmYWJOYW1lLCBjYy5QcmVmYWIpO1xyXG4gICAgICAgICAgICBsZXQgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHByZWZhYik7XHJcbiAgICAgICAgICAgIG5vZGUuc2V0UGFyZW50KEZhY2FkZS5jYW52YXNOb2RlKTtcclxuICAgICAgICAgICAgTGlmZUN5Y2xlLm9uRGVzdHJveUZvbGxvdyhzZXBhcmF0aW9uTGF5ZXIsIG5vZGUpO1xyXG5cclxuICAgICAgICAgICAgbGV0IG9iaiA9IDxEaWFsb2dWTz5hcmdzWzBdO1xyXG4gICAgICAgICAgICBsZXQgbWVkaWF0b3IgPSBub2RlLmdldENvbXBvbmVudChEaWFsb2dNZWRpYXRvcik7XHJcblxyXG4gICAgICAgICAgICBmb3IgKGxldCBrZXkgaW4gb2JqKXtcclxuICAgICAgICAgICAgICAgIGlmIChvYmpba2V5XSAhPSBudWxsICYmIHR5cGVvZiBvYmpba2V5XSAhPSBcImZ1bmN0aW9uXCIpe1xyXG4gICAgICAgICAgICAgICAgICAgIGZvcihsZXQgYXR0ciBpbiBvYmpba2V5XSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lZGlhdG9yW2tleV1bYXR0cl0gPSBvYmpba2V5XVthdHRyXTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gbWVkaWF0b3IuY29udGVudC5ub2RlLmNoaWxkcmVuLmZvckVhY2godmFsdWUgPT4gdmFsdWUuYWN0aXZlID0gdHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHJlcyA9IGF3YWl0IG5vZGUub25jZUF3YWl0KFwiY2xpY2tCdXR0b25cIik7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlcyk7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/ZoomEffect.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a29edWktkRN94LMtiNKO1En', 'ZoomEffect');
// framework/component/ZoomEffect.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Actions_1 = require("../actions/Actions");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ZoomEffect = /** @class */ (function (_super) {
    __extends(ZoomEffect, _super);
    function ZoomEffect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.startValue = 1;
        _this.endValue = 1;
        _this.deltaValue = 0.1;
        _this.speed = 1 / 0.8;
        _this.times = 0;
        _this.damping = 0;
        _this.cycleDelay = 0;
        _this.repeatNum = 0;
        _this.repeatDelay = 0;
        return _this;
    }
    ZoomEffect.prototype.onLoad = function () {
        var action = Actions_1.default.cycleAction(cc.scaleTo, this.startValue, this.endValue, this.deltaValue, this.speed, this.times, this.damping, this.cycleDelay);
        if (this.repeatNum > 0) {
            action = cc.repeat(cc.sequence(action, cc.delayTime(this.repeatDelay)), this.repeatNum);
        }
        else if (this.repeatNum < 0) {
            action = cc.repeatForever(cc.sequence(action, cc.delayTime(this.repeatDelay)));
        }
        this.node.runAction(action);
    };
    __decorate([
        property({ displayName: "开始缩放值" })
    ], ZoomEffect.prototype, "startValue", void 0);
    __decorate([
        property({ displayName: "结束缩放值" })
    ], ZoomEffect.prototype, "endValue", void 0);
    __decorate([
        property({ displayName: "缩放差" })
    ], ZoomEffect.prototype, "deltaValue", void 0);
    __decorate([
        property({ displayName: "速度" })
    ], ZoomEffect.prototype, "speed", void 0);
    __decorate([
        property({ displayName: "缩放次数" })
    ], ZoomEffect.prototype, "times", void 0);
    __decorate([
        property({ displayName: "衰减值" })
    ], ZoomEffect.prototype, "damping", void 0);
    __decorate([
        property({ displayName: "周期性延时", textTips: "单摆到最高点时延时" })
    ], ZoomEffect.prototype, "cycleDelay", void 0);
    __decorate([
        property({ displayName: "重复", textTips: "小于零表示repeatForever" })
    ], ZoomEffect.prototype, "repeatNum", void 0);
    __decorate([
        property({ displayName: "重复延时", textTips: "重复次数不等于0时才有效" })
    ], ZoomEffect.prototype, "repeatDelay", void 0);
    ZoomEffect = __decorate([
        ccclass
    ], ZoomEffect);
    return ZoomEffect;
}(cc.Component));
exports.default = ZoomEffect;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L1pvb21FZmZlY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDhDQUF5QztBQUVuQyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUF3Qyw4QkFBWTtJQUFwRDtRQUFBLHFFQXNDQztRQW5DRyxnQkFBVSxHQUFHLENBQUMsQ0FBQztRQUdmLGNBQVEsR0FBRyxDQUFDLENBQUM7UUFHYixnQkFBVSxHQUFHLEdBQUcsQ0FBQztRQUdqQixXQUFLLEdBQUcsQ0FBQyxHQUFDLEdBQUcsQ0FBQztRQUdkLFdBQUssR0FBRyxDQUFDLENBQUM7UUFHVixhQUFPLEdBQUcsQ0FBQyxDQUFDO1FBR1osZ0JBQVUsR0FBRyxDQUFDLENBQUM7UUFHZixlQUFTLEdBQUcsQ0FBQyxDQUFDO1FBR2QsaUJBQVcsR0FBRyxDQUFDLENBQUM7O0lBV3BCLENBQUM7SUFURywyQkFBTSxHQUFOO1FBQ0ksSUFBSSxNQUFNLEdBQUcsaUJBQU8sQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckosSUFBSSxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsRUFBQztZQUNuQixNQUFNLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUMzRjthQUFNLElBQUksSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLEVBQUM7WUFDMUIsTUFBTSxHQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2xGO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQWxDRDtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxPQUFPLEVBQUMsQ0FBQztrREFDakI7SUFHZjtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxPQUFPLEVBQUMsQ0FBQztnREFDbkI7SUFHYjtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxLQUFLLEVBQUMsQ0FBQztrREFDYjtJQUdqQjtRQURDLFFBQVEsQ0FBQyxFQUFDLFdBQVcsRUFBQyxJQUFJLEVBQUMsQ0FBQzs2Q0FDZjtJQUdkO1FBREMsUUFBUSxDQUFDLEVBQUMsV0FBVyxFQUFDLE1BQU0sRUFBQyxDQUFDOzZDQUNyQjtJQUdWO1FBREMsUUFBUSxDQUFDLEVBQUMsV0FBVyxFQUFDLEtBQUssRUFBQyxDQUFDOytDQUNsQjtJQUdaO1FBREMsUUFBUSxDQUFDLEVBQUMsV0FBVyxFQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUMsV0FBVyxFQUFDLENBQUM7a0RBQ3ZDO0lBR2Y7UUFEQyxRQUFRLENBQUMsRUFBQyxXQUFXLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBQyxvQkFBb0IsRUFBQyxDQUFDO2lEQUM5QztJQUdkO1FBREMsUUFBUSxDQUFDLEVBQUMsV0FBVyxFQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUMsY0FBYyxFQUFDLENBQUM7bURBQ3hDO0lBM0JDLFVBQVU7UUFEOUIsT0FBTztPQUNhLFVBQVUsQ0FzQzlCO0lBQUQsaUJBQUM7Q0F0Q0QsQUFzQ0MsQ0F0Q3VDLEVBQUUsQ0FBQyxTQUFTLEdBc0NuRDtrQkF0Q29CLFVBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEFjdGlvbnMgZnJvbSBcIi4uL2FjdGlvbnMvQWN0aW9uc1wiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBab29tRWZmZWN0IGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi5byA5aeL57yp5pS+5YC8XCJ9KVxyXG4gICAgc3RhcnRWYWx1ZSA9IDE7XHJcblxyXG4gICAgQHByb3BlcnR5KHtkaXNwbGF5TmFtZTpcIue7k+adn+e8qeaUvuWAvFwifSlcclxuICAgIGVuZFZhbHVlID0gMTtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi57yp5pS+5beuXCJ9KVxyXG4gICAgZGVsdGFWYWx1ZSA9IDAuMTtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi6YCf5bqmXCJ9KVxyXG4gICAgc3BlZWQgPSAxLzAuODtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi57yp5pS+5qyh5pWwXCJ9KVxyXG4gICAgdGltZXMgPSAwO1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7ZGlzcGxheU5hbWU6XCLoobDlh4/lgLxcIn0pXHJcbiAgICBkYW1waW5nID0gMDtcclxuXHJcbiAgICBAcHJvcGVydHkoe2Rpc3BsYXlOYW1lOlwi5ZGo5pyf5oCn5bu25pe2XCIsIHRleHRUaXBzOlwi5Y2V5pGG5Yiw5pyA6auY54K55pe25bu25pe2XCJ9KVxyXG4gICAgY3ljbGVEZWxheSA9IDA7XHJcblxyXG4gICAgQHByb3BlcnR5KHtkaXNwbGF5TmFtZTpcIumHjeWkjVwiLCB0ZXh0VGlwczpcIuWwj+S6jumbtuihqOekunJlcGVhdEZvcmV2ZXJcIn0pXHJcbiAgICByZXBlYXROdW0gPSAwO1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7ZGlzcGxheU5hbWU6XCLph43lpI3lu7bml7ZcIiwgdGV4dFRpcHM6XCLph43lpI3mrKHmlbDkuI3nrYnkuo4w5pe25omN5pyJ5pWIXCJ9KVxyXG4gICAgcmVwZWF0RGVsYXkgPSAwO1xyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgbGV0IGFjdGlvbiA9IEFjdGlvbnMuY3ljbGVBY3Rpb24oY2Muc2NhbGVUbywgdGhpcy5zdGFydFZhbHVlLCB0aGlzLmVuZFZhbHVlLCB0aGlzLmRlbHRhVmFsdWUsIHRoaXMuc3BlZWQsIHRoaXMudGltZXMsIHRoaXMuZGFtcGluZywgdGhpcy5jeWNsZURlbGF5KTtcclxuICAgICAgICBpZiAodGhpcy5yZXBlYXROdW0gPiAwKXtcclxuICAgICAgICAgICAgYWN0aW9uID0gY2MucmVwZWF0KGNjLnNlcXVlbmNlKGFjdGlvbiwgY2MuZGVsYXlUaW1lKHRoaXMucmVwZWF0RGVsYXkpKSwgdGhpcy5yZXBlYXROdW0pO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5yZXBlYXROdW0gPCAwKXtcclxuICAgICAgICAgICAgYWN0aW9uID0gY2MucmVwZWF0Rm9yZXZlcihjYy5zZXF1ZW5jZShhY3Rpb24sIGNjLmRlbGF5VGltZSh0aGlzLnJlcGVhdERlbGF5KSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGFjdGlvbik7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/converter/IConverter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9d93bWtokZFdpeixHUZwVgA', 'IConverter');
// framework/converter/IConverter.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29udmVydGVyL0lDb252ZXJ0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7O0FBRTdGLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcblxyXG4vKipcclxuICpcclxuICog5rOo5oSPIO+8mlxyXG4gMS7lrp7njrDnsbvkuI3og73nlKhjY2NsYXNz5L+u6aWwXHJcbiAyLuWunueOsOexu+WxnuaAp+W/hemhu+WIneWni+WMlijlgLzkuI3og73kuLp1bmRlZmluZWTvvIzlj6/ku6XkuLpudWxsKVxyXG4gKiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIElDb252ZXJ0ZXJ7XHJcblxyXG4gICAgZW5jb2RlKCk7XHJcblxyXG4gICAgZGVjb2RlKGRhdGE6YW55KTtcclxufVxyXG5cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/cccollider.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2d489o5zLFFiJWbSuWZB11w', 'cccollider');
// framework/extend/cccollider.ts

cc.Collider.prototype.onLoad = function () {
    // console.log("cc.Collider.onLoad");
    cc.director.getCollisionManager().initCollider(this);
};
cc.Collider.prototype.onDisable = function () {
    // console.log("cc.Collider.onDisable");
};
cc.Collider.prototype.onEnable = function () {
    // console.log("cc.Collider.onEnable");
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZXh0ZW5kL2NjY29sbGlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHO0lBQzNCLHFDQUFxQztJQUNyQyxFQUFFLENBQUMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3pELENBQUMsQ0FBQztBQUVGLEVBQUUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRztJQUM5Qix3Q0FBd0M7QUFDNUMsQ0FBQyxDQUFDO0FBRUYsRUFBRSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHO0lBQzdCLHVDQUF1QztBQUMzQyxDQUFDLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY2MuQ29sbGlkZXIucHJvdG90eXBlLm9uTG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKFwiY2MuQ29sbGlkZXIub25Mb2FkXCIpO1xyXG4gICAgY2MuZGlyZWN0b3IuZ2V0Q29sbGlzaW9uTWFuYWdlcigpLmluaXRDb2xsaWRlcih0aGlzKTtcclxufTtcclxuXHJcbmNjLkNvbGxpZGVyLnByb3RvdHlwZS5vbkRpc2FibGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhcImNjLkNvbGxpZGVyLm9uRGlzYWJsZVwiKTtcclxufTtcclxuXHJcbmNjLkNvbGxpZGVyLnByb3RvdHlwZS5vbkVuYWJsZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKFwiY2MuQ29sbGlkZXIub25FbmFibGVcIik7XHJcbn07Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/SpacePartition.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1e0c0hTQv9M4Y9mgmNZ7No5', 'SpacePartition');
// framework/extend/SpacePartition.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var SpacePartition = /** @class */ (function () {
    function SpacePartition() {
    }
    SpacePartition_1 = SpacePartition;
    SpacePartition.randomSpace = function (partitions, width, height) {
        var arr = partitions.filter(function (value) { return value.width > width && value.height > height; });
        if (arr.length === 0)
            return null;
        var index = Math.floor(Math.random() * arr.length) % arr.length;
        var partition = arr[index];
        var x = partition.xMin + Math.random() * (partition.width - width);
        var y = partition.yMin + Math.random() * (partition.height - height);
        var result = cc.rect(x, y, width, height);
        /** 跟它相交的要重新划分 */
        this.partitionRect(partitions, result);
        return result;
    };
    SpacePartition.randomSpaces = function (partitions, width, height, count) {
        var result = [];
        for (var i = 0; i < count; i++) {
            var rect = this.randomSpace(partitions, width, height);
            if (rect) {
                result.push(rect);
            }
            else {
                break;
            }
        }
        return result;
    };
    SpacePartition.partitionRect = function (out, rect, minWidth, minHeight) {
        if (minWidth === void 0) { minWidth = 0; }
        if (minHeight === void 0) { minHeight = 0; }
        var list = out.splice(0);
        list.forEach(function (value) {
            var intersection = new cc.Rect();
            value.intersection(intersection, rect);
            if (intersection.width > 0 && intersection.height > 0) {
                SpacePartition_1.partitionRects(out, value, [rect], minWidth, minHeight);
            }
            else {
                out.push(value);
            }
        });
    };
    /** 根据相交拆分矩形 */
    SpacePartition.partitionRects = function (out, rect, intersects, minWidth, minHeight) {
        if (rect.width < minWidth || rect.height < minHeight) {
            return;
        }
        if (intersects.length == 0) {
            //干净的空间
            out.push(rect);
            return;
        }
        var cutRect = intersects.pop();
        //左
        if (rect.xMin < cutRect.xMin) {
            var leftRect_1 = cc.rect(rect.xMin, rect.yMin, cutRect.xMin - rect.xMin, rect.height);
            this.partitionRects(out, leftRect_1, intersects.filter(function (value) {
                var intersection = new cc.Rect();
                value.intersection(intersection, leftRect_1);
                return intersection.width > 0 && intersection.height > 0;
            }), minWidth, minHeight);
        }
        //右
        if (rect.xMax > cutRect.xMax) {
            var rightRect_1 = cc.rect(cutRect.xMax, rect.yMin, rect.xMax - cutRect.xMax, rect.height);
            this.partitionRects(out, rightRect_1, intersects.filter(function (value) {
                var intersection = new cc.Rect();
                value.intersection(intersection, rightRect_1);
                return intersection.width > 0 && intersection.height > 0;
            }), minWidth, minHeight);
        }
        //上
        if (rect.yMax > cutRect.yMax) {
            var upRect_1 = cc.rect(rect.xMin, cutRect.yMax, rect.width, rect.yMax - cutRect.yMax);
            this.partitionRects(out, upRect_1, intersects.filter(function (value) {
                var intersection = new cc.Rect();
                value.intersection(intersection, upRect_1);
                return intersection.width > 0 && intersection.height > 0;
            }), minWidth, minHeight);
        }
        //下
        if (rect.yMin < cutRect.yMin) {
            var downRect_1 = cc.rect(rect.xMin, rect.yMin, rect.width, cutRect.yMin - rect.yMin);
            this.partitionRects(out, downRect_1, intersects.filter(function (value) {
                var intersection = new cc.Rect();
                value.intersection(intersection, downRect_1);
                return intersection.width > 0 && intersection.height > 0;
            }), minWidth, minHeight);
        }
    };
    var SpacePartition_1;
    SpacePartition = SpacePartition_1 = __decorate([
        ccclass
    ], SpacePartition);
    return SpacePartition;
}());
exports.default = SpacePartition;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/UIScale.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '422cbmXYSFCDaWW8A+EYdil', 'UIScale');
// framework/component/UIScale.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
var UIScale = /** @class */ (function (_super) {
    __extends(UIScale, _super);
    function UIScale() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fitScale = false;
        _this.fitPosition = true;
        return _this;
    }
    UIScale.prototype.start = function () {
        var heightScale = cc.view.getVisibleSize().height / cc.view.getDesignResolutionSize().height;
        var widthScale = cc.view.getVisibleSize().width / cc.view.getDesignResolutionSize().width;
        var addScale = Math.abs(heightScale - widthScale);
        if (this.fitScale) {
            this.node.setScale(this.node.scale + addScale);
        }
        if (this.fitPosition) {
            var worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));
            if (heightScale > widthScale) {
                var y = worldPos.y * (1 + addScale);
                this.node.y = this.node.convertToNodeSpaceAR(cc.v2(0, y)).y;
            }
            else {
                var x = worldPos.x * (1 + addScale);
                this.node.x = this.node.convertToNodeSpaceAR(cc.v2(x, 0)).x;
            }
        }
    };
    __decorate([
        property
    ], UIScale.prototype, "fitScale", void 0);
    __decorate([
        property
    ], UIScale.prototype, "fitPosition", void 0);
    UIScale = __decorate([
        ccclass,
        menu("自定义/UIScale")
    ], UIScale);
    return UIScale;
}(cc.Component));
exports.default = UIScale;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L1VJU2NhbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7O0FBRTdGLElBQUEsS0FBNEIsRUFBRSxDQUFDLFVBQVUsRUFBeEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUUsSUFBSSxVQUFpQixDQUFDO0FBSWhEO0lBQXFDLDJCQUFZO0lBQWpEO1FBQUEscUVBNEJDO1FBekJHLGNBQVEsR0FBRyxLQUFLLENBQUM7UUFHakIsaUJBQVcsR0FBRyxJQUFJLENBQUM7O0lBc0J2QixDQUFDO0lBcEJHLHVCQUFLLEdBQUw7UUFDSSxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLE1BQU0sR0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUMsTUFBTSxDQUFDO1FBQzNGLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsS0FBSyxHQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxLQUFLLENBQUM7UUFFeEYsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDLENBQUM7UUFDbEQsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFDO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLENBQUM7U0FDbEQ7UUFFRCxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUM7WUFDakIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzVELElBQUksV0FBVyxHQUFHLFVBQVUsRUFBQztnQkFDekIsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDbEMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUMvRDtpQkFBSztnQkFDRixJQUFJLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDO2dCQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQy9EO1NBQ0o7SUFDTCxDQUFDO0lBeEJEO1FBREMsUUFBUTs2Q0FDUTtJQUdqQjtRQURDLFFBQVE7Z0RBQ1U7SUFORixPQUFPO1FBRjNCLE9BQU87UUFDUCxJQUFJLENBQUMsYUFBYSxDQUFDO09BQ0MsT0FBTyxDQTRCM0I7SUFBRCxjQUFDO0NBNUJELEFBNEJDLENBNUJvQyxFQUFFLENBQUMsU0FBUyxHQTRCaEQ7a0JBNUJvQixPQUFPIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHksIG1lbnV9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbkBtZW51KFwi6Ieq5a6a5LmJL1VJU2NhbGVcIilcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVUlTY2FsZSBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5XHJcbiAgICBmaXRTY2FsZSA9IGZhbHNlO1xyXG5cclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgZml0UG9zaXRpb24gPSB0cnVlO1xyXG5cclxuICAgIHN0YXJ0ICgpIHtcclxuICAgICAgICBsZXQgaGVpZ2h0U2NhbGUgPSBjYy52aWV3LmdldFZpc2libGVTaXplKCkuaGVpZ2h0L2NjLnZpZXcuZ2V0RGVzaWduUmVzb2x1dGlvblNpemUoKS5oZWlnaHQ7XHJcbiAgICAgICAgbGV0IHdpZHRoU2NhbGUgPSBjYy52aWV3LmdldFZpc2libGVTaXplKCkud2lkdGgvY2Mudmlldy5nZXREZXNpZ25SZXNvbHV0aW9uU2l6ZSgpLndpZHRoO1xyXG5cclxuICAgICAgICBsZXQgYWRkU2NhbGUgPSBNYXRoLmFicyhoZWlnaHRTY2FsZSAtIHdpZHRoU2NhbGUpO1xyXG4gICAgICAgIGlmICh0aGlzLmZpdFNjYWxlKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLnNldFNjYWxlKHRoaXMubm9kZS5zY2FsZSArIGFkZFNjYWxlKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmZpdFBvc2l0aW9uKXtcclxuICAgICAgICAgICAgbGV0IHdvcmxkUG9zID0gdGhpcy5ub2RlLmNvbnZlcnRUb1dvcmxkU3BhY2VBUihjYy52MigwLCAwKSk7XHJcbiAgICAgICAgICAgIGlmIChoZWlnaHRTY2FsZSA+IHdpZHRoU2NhbGUpe1xyXG4gICAgICAgICAgICAgICAgbGV0IHkgPSB3b3JsZFBvcy55ICogKDErYWRkU2NhbGUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub2RlLnkgPSB0aGlzLm5vZGUuY29udmVydFRvTm9kZVNwYWNlQVIoY2MudjIoMCwgeSkpLnk7XHJcbiAgICAgICAgICAgIH0gZWxzZXtcclxuICAgICAgICAgICAgICAgIGxldCB4ID0gd29ybGRQb3MueCAqICgxICsgYWRkU2NhbGUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub2RlLnggPSB0aGlzLm5vZGUuY29udmVydFRvTm9kZVNwYWNlQVIoY2MudjIoeCwgMCkpLng7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/ccloaderAwait.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e303ct+NQ1IDLF7WAIkdu7m', 'ccloaderAwait');
// framework/extend/ccloaderAwait.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
function getRes(url, type) {
    return __awaiter(this, void 0, Promise, function () {
        var _this = this;
        return __generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                    var res, res_1;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                res = cc.loader.getRes(url, type);
                                if (!(res == null)) return [3 /*break*/, 2];
                                return [4 /*yield*/, loadRes(url, type).catch(function (err) {
                                        reject(err);
                                    })];
                            case 1:
                                res_1 = _a.sent();
                                resolve(res_1);
                                return [3 /*break*/, 3];
                            case 2:
                                resolve(res);
                                _a.label = 3;
                            case 3: return [2 /*return*/];
                        }
                    });
                }); })];
        });
    });
}
function loadRes() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return __awaiter(this, void 0, Promise, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve, reject) {
                    var _a;
                    (_a = cc.loader).loadRes.apply(_a, __spreadArrays(args, [function (err, res) {
                            if (err == null) {
                                resolve(res);
                            }
                            else {
                                reject(err);
                            }
                        }]));
                })];
        });
    });
}
function loadResArray() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return __awaiter(this, void 0, Promise, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve, reject) {
                    var _a;
                    (_a = cc.loader).loadResArray.apply(_a, __spreadArrays(args, [function (err, res) {
                            if (err == null) {
                                resolve(res);
                            }
                            else {
                                reject(err);
                            }
                        }]));
                })];
        });
    });
}
function loadResDir() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return __awaiter(this, void 0, Promise, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve, reject) {
                    var _a;
                    (_a = cc.loader).loadResDir.apply(_a, __spreadArrays(args, [function (err, resource, urls) {
                            if (err == null) {
                                resolve([resource, urls]);
                            }
                            else {
                                reject(err);
                            }
                        }]));
                })];
        });
    });
}
function getFileNames(dir, type) {
    var urls = [];
    cc.loader._resources.getUuidArray(dir, type, urls);
    return urls;
}
cc.loader.getResAwait = getRes;
cc.loader.loadResAwait = loadRes;
cc.loader.loadResArrayAwait = loadResArray;
cc.loader.loadResDirAwait = loadResDir;
cc.loader.getFileNames = getFileNames;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZXh0ZW5kL2NjbG9hZGVyQXdhaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFFbkcsU0FBZSxNQUFNLENBQUMsR0FBVyxFQUFFLElBQWU7bUNBQUUsT0FBTzs7O1lBQ3ZELHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQU8sT0FBTyxFQUFFLE1BQU07Ozs7O2dDQUNqQyxHQUFHLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO3FDQUNuQyxDQUFBLEdBQUcsSUFBSSxJQUFJLENBQUEsRUFBWCx3QkFBVztnQ0FDQSxxQkFBTSxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUc7d0NBQ2xELE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztvQ0FDaEIsQ0FBQyxDQUFDLEVBQUE7O2dDQUZFLFFBQU0sU0FFUjtnQ0FDRixPQUFPLENBQUMsS0FBRyxDQUFDLENBQUM7OztnQ0FFYixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7Ozs7O3FCQUVwQixDQUFDLEVBQUM7OztDQUNOO0FBRUQsU0FBZSxPQUFPO0lBQUMsY0FBTztTQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87UUFBUCx5QkFBTzs7bUNBQUUsT0FBTzs7WUFDbkMsc0JBQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTs7b0JBQy9CLENBQUEsS0FBQSxFQUFFLENBQUMsTUFBTSxDQUFBLENBQUMsT0FBTywwQkFBSSxJQUFJLEdBQUUsVUFBVSxHQUFHLEVBQUUsR0FBRzs0QkFDekMsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFDO2dDQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQzs2QkFDaEI7aUNBQU07Z0NBQ0gsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDOzZCQUNmO3dCQUNMLENBQUMsSUFBRTtnQkFDUCxDQUFDLENBQUMsRUFBQzs7O0NBQ047QUFFRCxTQUFlLFlBQVk7SUFBQyxjQUFPO1NBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztRQUFQLHlCQUFPOzttQ0FBRSxPQUFPOztZQUN4QyxzQkFBTyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNOztvQkFDL0IsQ0FBQSxLQUFBLEVBQUUsQ0FBQyxNQUFNLENBQUEsQ0FBQyxZQUFZLDBCQUFJLElBQUksR0FBRSxVQUFVLEdBQUcsRUFBRSxHQUFHOzRCQUM5QyxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUM7Z0NBQ1osT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDOzZCQUNoQjtpQ0FBTTtnQ0FDSCxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7NkJBQ2Y7d0JBQ0wsQ0FBQyxJQUFFO2dCQUNQLENBQUMsQ0FBQyxFQUFDOzs7Q0FDTjtBQUVELFNBQWUsVUFBVTtJQUFDLGNBQU87U0FBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1FBQVAseUJBQU87O21DQUFFLE9BQU87O1lBQ3RDLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07O29CQUMvQixDQUFBLEtBQUEsRUFBRSxDQUFDLE1BQU0sQ0FBQSxDQUFDLFVBQVUsMEJBQUksSUFBSSxHQUFFLFVBQVUsR0FBVSxFQUFFLFFBQWUsRUFBRSxJQUFjOzRCQUMvRSxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUM7Z0NBQ1osT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7NkJBQzdCO2lDQUFNO2dDQUNILE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQzs2QkFDZjt3QkFDTCxDQUFDLElBQUU7Z0JBQ1AsQ0FBQyxDQUFDLEVBQUM7OztDQUNOO0FBR0QsU0FBUyxZQUFZLENBQUMsR0FBVSxFQUFFLElBQXFCO0lBQ25ELElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUNkLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25ELE9BQU8sSUFBSSxDQUFDO0FBQ2hCLENBQUM7QUFFRCxFQUFFLENBQUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUM7QUFDL0IsRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDO0FBQ2pDLEVBQUUsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEdBQUcsWUFBWSxDQUFDO0FBQzNDLEVBQUUsQ0FBQyxNQUFNLENBQUMsZUFBZSxHQUFHLFVBQVUsQ0FBQztBQUN2QyxFQUFFLENBQUMsTUFBTSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldFJlcyh1cmw6IHN0cmluZywgdHlwZT86IEZ1bmN0aW9uKTpQcm9taXNle1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBsZXQgcmVzID0gY2MubG9hZGVyLmdldFJlcyh1cmwsIHR5cGUpO1xyXG4gICAgICAgIGlmKHJlcyA9PSBudWxsKXtcclxuICAgICAgICAgICAgbGV0IHJlcyA9IGF3YWl0IGxvYWRSZXModXJsLCB0eXBlKS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJlc29sdmUocmVzKTtcclxuICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIHJlc29sdmUocmVzKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gbG9hZFJlcyguLi5hcmdzKTpQcm9taXNle1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBjYy5sb2FkZXIubG9hZFJlcyguLi5hcmdzLCBmdW5jdGlvbiAoZXJyLCByZXMpIHtcclxuICAgICAgICAgICAgaWYgKGVyciA9PSBudWxsKXtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gbG9hZFJlc0FycmF5KC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIGNjLmxvYWRlci5sb2FkUmVzQXJyYXkoLi4uYXJncywgZnVuY3Rpb24gKGVyciwgcmVzKSB7XHJcbiAgICAgICAgICAgIGlmIChlcnIgPT0gbnVsbCl7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlcyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGxvYWRSZXNEaXIoLi4uYXJncyk6UHJvbWlzZXtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgY2MubG9hZGVyLmxvYWRSZXNEaXIoLi4uYXJncywgZnVuY3Rpb24gKGVycjogRXJyb3IsIHJlc291cmNlOiBhbnlbXSwgdXJsczogc3RyaW5nW10pIHtcclxuICAgICAgICAgICAgaWYgKGVyciA9PSBudWxsKXtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoW3Jlc291cmNlLCB1cmxzXSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG5mdW5jdGlvbiBnZXRGaWxlTmFtZXMoZGlyOnN0cmluZywgdHlwZTogdHlwZW9mIGNjLkFzc2V0KTpBcnJheTxzdHJpbmc+e1xyXG4gICAgbGV0IHVybHMgPSBbXTtcclxuICAgIGNjLmxvYWRlci5fcmVzb3VyY2VzLmdldFV1aWRBcnJheShkaXIsIHR5cGUsIHVybHMpO1xyXG4gICAgcmV0dXJuIHVybHM7XHJcbn1cclxuXHJcbmNjLmxvYWRlci5nZXRSZXNBd2FpdCA9IGdldFJlcztcclxuY2MubG9hZGVyLmxvYWRSZXNBd2FpdCA9IGxvYWRSZXM7XHJcbmNjLmxvYWRlci5sb2FkUmVzQXJyYXlBd2FpdCA9IGxvYWRSZXNBcnJheTtcclxuY2MubG9hZGVyLmxvYWRSZXNEaXJBd2FpdCA9IGxvYWRSZXNEaXI7XHJcbmNjLmxvYWRlci5nZXRGaWxlTmFtZXMgPSBnZXRGaWxlTmFtZXM7XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/dialog/DialogMediator.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ab009p+inpJkbGNSmjoh5ux', 'DialogMediator');
// framework/dialog/DialogMediator.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = require("../component/View");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DialogMediator = /** @class */ (function (_super) {
    __extends(DialogMediator, _super);
    function DialogMediator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.title = null;
        _this.content = null;
        _this.closeButtonNode = null;
        _this.closeButtonSrpite = null;
        _this.layoutOfLeftRight = null;
        /** 左边按钮 */
        _this.leftButtonNode = null;
        _this.leftButtonSprite = null;
        _this.layoutOfLeftButton = null;
        _this.iconNodeOfLeftButton = null;
        _this.iconSpriteOfLeftButton = null;
        _this.textNodeOfLeftButton = null;
        _this.textOfLeftButton = null;
        /** 右边按钮 **/
        _this.rightButtonNode = null;
        _this.rightButtonSprite = null;
        _this.layoutOfRightButton = null;
        _this.iconNodeOfRightButton = null;
        _this.iconSpriteOfRightButton = null;
        _this.textNodeOfRightButton = null;
        _this.textOfRightButton = null;
        return _this;
    }
    DialogMediator.prototype.onClickLeft = function (event, data) {
        View_1.default.executeClickSoundCommand(event, data);
        this.node.emit("clickButton", "left");
        this.node.destroy();
    };
    DialogMediator.prototype.onClickRight = function (event, data) {
        View_1.default.executeClickSoundCommand(event, data);
        this.node.emit("clickButton", "right");
        this.node.destroy();
    };
    DialogMediator.prototype.onClickClose = function (event, data) {
        View_1.default.executeClickSoundCommand(event, data);
        this.node.emit("clickButton", "close");
        this.node.destroy();
    };
    DialogMediator.dialogPrefabName = null;
    __decorate([
        property({ type: cc.RichText })
    ], DialogMediator.prototype, "title", void 0);
    __decorate([
        property({ type: cc.RichText })
    ], DialogMediator.prototype, "content", void 0);
    __decorate([
        property({ type: cc.Node })
    ], DialogMediator.prototype, "closeButtonNode", void 0);
    __decorate([
        property({ type: cc.Sprite })
    ], DialogMediator.prototype, "closeButtonSrpite", void 0);
    __decorate([
        property({ type: cc.Layout })
    ], DialogMediator.prototype, "layoutOfLeftRight", void 0);
    __decorate([
        property({ type: cc.Node })
    ], DialogMediator.prototype, "leftButtonNode", void 0);
    __decorate([
        property({ type: cc.Sprite })
    ], DialogMediator.prototype, "leftButtonSprite", void 0);
    __decorate([
        property({ type: cc.Layout })
    ], DialogMediator.prototype, "layoutOfLeftButton", void 0);
    __decorate([
        property({ type: cc.Node })
    ], DialogMediator.prototype, "iconNodeOfLeftButton", void 0);
    __decorate([
        property({ type: cc.Sprite })
    ], DialogMediator.prototype, "iconSpriteOfLeftButton", void 0);
    __decorate([
        property({ type: cc.Node })
    ], DialogMediator.prototype, "textNodeOfLeftButton", void 0);
    __decorate([
        property({ type: cc.RichText })
    ], DialogMediator.prototype, "textOfLeftButton", void 0);
    __decorate([
        property({ type: cc.Node })
    ], DialogMediator.prototype, "rightButtonNode", void 0);
    __decorate([
        property({ type: cc.Sprite })
    ], DialogMediator.prototype, "rightButtonSprite", void 0);
    __decorate([
        property({ type: cc.Layout })
    ], DialogMediator.prototype, "layoutOfRightButton", void 0);
    __decorate([
        property({ type: cc.Node })
    ], DialogMediator.prototype, "iconNodeOfRightButton", void 0);
    __decorate([
        property({ type: cc.Sprite })
    ], DialogMediator.prototype, "iconSpriteOfRightButton", void 0);
    __decorate([
        property({ type: cc.Node })
    ], DialogMediator.prototype, "textNodeOfRightButton", void 0);
    __decorate([
        property({ type: cc.RichText })
    ], DialogMediator.prototype, "textOfRightButton", void 0);
    DialogMediator = __decorate([
        ccclass
    ], DialogMediator);
    return DialogMediator;
}(cc.Component));
exports.default = DialogMediator;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/ccIntersection.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '23610RKHSVPp7YUZOd5FJeH', 'ccIntersection');
// framework/extend/ccIntersection.ts

/**
 * 求线段相交的交点坐标
 * */
cc.Intersection.pLineIntersect = function (a, b, c, d, retP) {
    if ((a.x === b.x && a.y === b.y) || (c.x === d.x && c.y === d.y)) {
        return false;
    }
    // 三角形abc 面积的2倍
    var area_abc = (a.x - c.x) * (b.y - c.y) - (a.y - c.y) * (b.x - c.x);
    // 三角形abd 面积的2倍
    var area_abd = (a.x - d.x) * (b.y - d.y) - (a.y - d.y) * (b.x - d.x);
    // 面积符号相同则两点在线段同侧,不相交 (对点在线段上的情况,本例当作不相交处理);
    if (area_abc * area_abd >= 0) {
        return false;
    }
    // 三角形cda 面积的2倍
    var area_cda = (c.x - a.x) * (d.y - a.y) - (c.y - a.y) * (d.x - a.x);
    // 三角形cdb 面积的2倍
    // 注意: 这里有一个小优化.不需要再用公式计算面积,而是通过已知的三个面积加减得出.
    var area_cdb = area_cda + area_abc - area_abd;
    if (area_cda * area_cdb >= 0) {
        return false;
    }
    //计算交点坐标
    var t = area_cda / (area_abd - area_abc);
    var dx = t * (b.x - a.x), dy = t * (b.y - a.y);
    retP.x = a.x + dx;
    retP.y = a.y + dy;
    return true;
};
/**
 * 求线段与圆之间的交点坐标
 * */
cc.Intersection.pLineCircle = function (point1, point2, circle, out) {
    var t;
    var dx = point2.x - point1.x;
    var dy = point2.y - point1.y;
    var a = dx * dx + dy * dy;
    var b = 2 * (dx * (point1.x - circle.position.x) + dy * (point1.y - circle.position.y));
    var c = (point1.x - circle.position.x) * (point1.x - circle.position.x) + (point1.y - circle.position.y) * (point1.y - circle.position.y) - circle.radius * circle.radius;
    var determinate = b * b - 4 * a * c;
    if ((a <= 0.0000001) || (determinate < -0.0000001)) {
        // No real solutions.
        return false;
    }
    if (determinate < 0.0000001 && determinate > -0.0000001) {
        // One solution.
        t = -b / (2 * a);
        out.push(cc.v2(point1.x + t * dx, point1.y + t * dy));
        return true;
    }
    // Two solutions.
    t = ((-b + Math.sqrt(determinate)) / (2 * a));
    out.push(cc.v2(point1.x + t * dx, point1.y + t * dy));
    t = ((-b - Math.sqrt(determinate)) / (2 * a));
    out.push(cc.v2(point1.x + t * dx, point1.y + t * dy));
    return true;
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZXh0ZW5kL2NjSW50ZXJzZWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUNBOztLQUVLO0FBQ0wsRUFBRSxDQUFDLFlBQVksQ0FBQyxjQUFjLEdBQUcsVUFBVSxDQUFTLEVBQUMsQ0FBUyxFQUFDLENBQVMsRUFBQyxDQUFTLEVBQUUsSUFBWTtJQUM1RixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQzlELE9BQU8sS0FBSyxDQUFDO0tBQ2hCO0lBQ0QsZUFBZTtJQUNmLElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFckUsZUFBZTtJQUNmLElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFckUsNENBQTRDO0lBQzVDLElBQUssUUFBUSxHQUFDLFFBQVEsSUFBRSxDQUFDLEVBQUc7UUFDeEIsT0FBTyxLQUFLLENBQUM7S0FDaEI7SUFFRCxlQUFlO0lBQ2YsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRSxlQUFlO0lBQ2YsNENBQTRDO0lBQzVDLElBQUksUUFBUSxHQUFHLFFBQVEsR0FBRyxRQUFRLEdBQUcsUUFBUSxDQUFFO0lBQy9DLElBQU0sUUFBUSxHQUFHLFFBQVEsSUFBSSxDQUFDLEVBQUc7UUFDN0IsT0FBTyxLQUFLLENBQUM7S0FDaEI7SUFFRCxRQUFRO0lBQ1IsSUFBSSxDQUFDLEdBQUcsUUFBUSxHQUFHLENBQUUsUUFBUSxHQUFFLFFBQVEsQ0FBRSxDQUFDO0lBQzFDLElBQUksRUFBRSxHQUFFLENBQUMsR0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUNqQixFQUFFLEdBQUUsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdEIsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNsQixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ2xCLE9BQU8sSUFBSSxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVGOztLQUVLO0FBQ0wsRUFBRSxDQUFDLFlBQVksQ0FBQyxXQUFXLEdBQUcsVUFBVSxNQUFjLEVBQUUsTUFBYyxFQUFFLE1BQTBDLEVBQUUsR0FBa0I7SUFDbEksSUFBSSxDQUFDLENBQUM7SUFFTixJQUFJLEVBQUUsR0FBRyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDN0IsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBRTdCLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQztJQUMxQixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEYsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBRTFLLElBQUksV0FBVyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEMsSUFBSSxDQUFDLENBQUMsSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLFNBQVMsQ0FBQyxFQUNsRDtRQUNJLHFCQUFxQjtRQUNyQixPQUFPLEtBQUssQ0FBQztLQUNoQjtJQUNELElBQUksV0FBVyxHQUFHLFNBQVMsSUFBSSxXQUFXLEdBQUcsQ0FBQyxTQUFTLEVBQ3ZEO1FBQ0ksZ0JBQWdCO1FBQ2hCLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNqQixHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdEQsT0FBTyxJQUFJLENBQUM7S0FDZjtJQUVELGlCQUFpQjtJQUNqQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzlDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUV0RCxPQUFPLElBQUksQ0FBQztBQUNoQixDQUFDLENBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLyoqXHJcbiAqIOaxgue6v+auteebuOS6pOeahOS6pOeCueWdkOagh1xyXG4gKiAqL1xyXG5jYy5JbnRlcnNlY3Rpb24ucExpbmVJbnRlcnNlY3QgPSBmdW5jdGlvbiAoYTpjYy5WZWMyLGI6Y2MuVmVjMixjOmNjLlZlYzIsZDpjYy5WZWMyLCByZXRQOmNjLlZlYzIpIHtcclxuICAgIGlmICgoYS54ID09PSBiLnggJiYgYS55ID09PSBiLnkpIHx8IChjLnggPT09IGQueCAmJiBjLnkgPT09IGQueSkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICAvLyDkuInop5LlvaJhYmMg6Z2i56ev55qEMuWAjVxyXG4gICAgdmFyIGFyZWFfYWJjID0gKGEueCAtIGMueCkgKiAoYi55IC0gYy55KSAtIChhLnkgLSBjLnkpICogKGIueCAtIGMueCk7XHJcblxyXG4gICAgLy8g5LiJ6KeS5b2iYWJkIOmdouenr+eahDLlgI1cclxuICAgIHZhciBhcmVhX2FiZCA9IChhLnggLSBkLngpICogKGIueSAtIGQueSkgLSAoYS55IC0gZC55KSAqIChiLnggLSBkLngpO1xyXG5cclxuICAgIC8vIOmdouenr+espuWPt+ebuOWQjOWImeS4pOeCueWcqOe6v+auteWQjOS+pyzkuI3nm7jkuqQgKOWvueeCueWcqOe6v+auteS4iueahOaDheWGtSzmnKzkvovlvZPkvZzkuI3nm7jkuqTlpITnkIYpO1xyXG4gICAgaWYgKCBhcmVhX2FiYyphcmVhX2FiZD49MCApIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g5LiJ6KeS5b2iY2RhIOmdouenr+eahDLlgI1cclxuICAgIHZhciBhcmVhX2NkYSA9IChjLnggLSBhLngpICogKGQueSAtIGEueSkgLSAoYy55IC0gYS55KSAqIChkLnggLSBhLngpO1xyXG4gICAgLy8g5LiJ6KeS5b2iY2RiIOmdouenr+eahDLlgI1cclxuICAgIC8vIOazqOaEjzog6L+Z6YeM5pyJ5LiA5Liq5bCP5LyY5YyWLuS4jemcgOimgeWGjeeUqOWFrOW8j+iuoeeul+mdouenryzogIzmmK/pgJrov4flt7Lnn6XnmoTkuInkuKrpnaLnp6/liqDlh4/lvpflh7ouXHJcbiAgICB2YXIgYXJlYV9jZGIgPSBhcmVhX2NkYSArIGFyZWFfYWJjIC0gYXJlYV9hYmQgO1xyXG4gICAgaWYgKCAgYXJlYV9jZGEgKiBhcmVhX2NkYiA+PSAwICkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvL+iuoeeul+S6pOeCueWdkOagh1xyXG4gICAgdmFyIHQgPSBhcmVhX2NkYSAvICggYXJlYV9hYmQtIGFyZWFfYWJjICk7XHJcbiAgICB2YXIgZHg9IHQqKGIueCAtIGEueCksXHJcbiAgICAgICAgZHk9IHQqKGIueSAtIGEueSk7XHJcbiAgICByZXRQLnggPSBhLnggKyBkeDtcclxuICAgIHJldFAueSA9IGEueSArIGR5O1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbn07XHJcblxyXG4vKipcclxuICog5rGC57q/5q615LiO5ZyG5LmL6Ze055qE5Lqk54K55Z2Q5qCHXHJcbiAqICovXHJcbmNjLkludGVyc2VjdGlvbi5wTGluZUNpcmNsZSA9IGZ1bmN0aW9uIChwb2ludDE6Y2MuVmVjMiwgcG9pbnQyOmNjLlZlYzIsIGNpcmNsZTp7cG9zaXRpb246IGNjLlZlYzIsIHJhZGl1czogbnVtYmVyfSwgb3V0OkFycmF5PGNjLlZlYzI+KTpib29sZWFuIHtcclxuICAgIGxldCB0O1xyXG5cclxuICAgIGxldCBkeCA9IHBvaW50Mi54IC0gcG9pbnQxLng7XHJcbiAgICBsZXQgZHkgPSBwb2ludDIueSAtIHBvaW50MS55O1xyXG5cclxuICAgIGxldCBhID0gZHggKiBkeCArIGR5ICogZHk7XHJcbiAgICBsZXQgYiA9IDIgKiAoZHggKiAocG9pbnQxLnggLSBjaXJjbGUucG9zaXRpb24ueCkgKyBkeSAqIChwb2ludDEueSAtIGNpcmNsZS5wb3NpdGlvbi55KSk7XHJcbiAgICBsZXQgYyA9IChwb2ludDEueCAtIGNpcmNsZS5wb3NpdGlvbi54KSAqIChwb2ludDEueCAtIGNpcmNsZS5wb3NpdGlvbi54KSArIChwb2ludDEueSAtIGNpcmNsZS5wb3NpdGlvbi55KSAqIChwb2ludDEueSAtIGNpcmNsZS5wb3NpdGlvbi55KSAtIGNpcmNsZS5yYWRpdXMgKiBjaXJjbGUucmFkaXVzO1xyXG5cclxuICAgIGxldCBkZXRlcm1pbmF0ZSA9IGIgKiBiIC0gNCAqIGEgKiBjO1xyXG4gICAgaWYgKChhIDw9IDAuMDAwMDAwMSkgfHwgKGRldGVybWluYXRlIDwgLTAuMDAwMDAwMSkpXHJcbiAgICB7XHJcbiAgICAgICAgLy8gTm8gcmVhbCBzb2x1dGlvbnMuXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaWYgKGRldGVybWluYXRlIDwgMC4wMDAwMDAxICYmIGRldGVybWluYXRlID4gLTAuMDAwMDAwMSlcclxuICAgIHtcclxuICAgICAgICAvLyBPbmUgc29sdXRpb24uXHJcbiAgICAgICAgdCA9IC1iIC8gKDIgKiBhKTtcclxuICAgICAgICBvdXQucHVzaChjYy52Mihwb2ludDEueCArIHQgKiBkeCwgcG9pbnQxLnkgKyB0ICogZHkpKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBUd28gc29sdXRpb25zLlxyXG4gICAgdCA9ICgoLWIgKyBNYXRoLnNxcnQoZGV0ZXJtaW5hdGUpKSAvICgyICogYSkpO1xyXG4gICAgb3V0LnB1c2goY2MudjIocG9pbnQxLnggKyB0ICogZHgsIHBvaW50MS55ICsgdCAqIGR5KSk7XHJcbiAgICB0ID0gKCgtYiAtIE1hdGguc3FydChkZXRlcm1pbmF0ZSkpIC8gKDIgKiBhKSk7XHJcbiAgICBvdXQucHVzaChjYy52Mihwb2ludDEueCArIHQgKiBkeCwgcG9pbnQxLnkgKyB0ICogZHkpKTtcclxuXHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/Extend.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c0c94cgM4FB+Lw7/1tJ4iEf', 'Extend');
// framework/extend/Extend.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.ext = void 0;
// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
var Actions_1 = require("../actions/Actions");
var _isLandscape = false;
if (window.innerWidth > window.innerHeight) {
    _isLandscape = true;
}
var _isIphoneX = false;
if (window.innerWidth < window.innerHeight) {
    _isIphoneX = window.innerWidth / window.innerHeight == 1125 / 2436;
}
else {
    _isIphoneX = window.innerWidth / window.innerHeight == 1125 / 2436;
}
var ext;
(function (ext) {
    function shuffle(aArr) {
        var iLength = aArr.length, i = iLength, mTemp, iRandom;
        while (i--) {
            if (i !== (iRandom = Math.floor(Math.random() * iLength))) {
                mTemp = aArr[i];
                aArr[i] = aArr[iRandom];
                aArr[iRandom] = mTemp;
            }
        }
        return aArr;
    }
    ext.shuffle = shuffle;
    function randomElement(aArr) {
        if (aArr.length == 0) {
            return null;
        }
        var index = Math.floor(Math.random() * aArr.length);
        return aArr[index];
    }
    ext.randomElement = randomElement;
    function createObj(name) {
        var _a;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var obj = cc.js.getClassByName(name);
        if (typeof obj == "undefined") {
            cc.error(name + " not define @ccclass(" + name + ")");
        }
        else if (typeof obj == "function") {
            (_a = obj.prototype.constructor).apply.apply(_a, __spreadArrays([obj], args));
            return obj.prototype;
        }
        return null;
    }
    ext.createObj = createObj;
    function everyNode(root, f) {
        f(root);
        root.children.forEach(function (value) { return everyNode(value, f); });
    }
    ext.everyNode = everyNode;
    ext.isLandscape = _isLandscape;
    ext.isIphoneX = _isIphoneX;
    function wxCreateImageToSprite(sprite, url) {
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var node = sprite.node;
                        var size = { width: node.width, height: node.height };
                        var image = wx.createImage();
                        image.onload = function () {
                            if (sprite && sprite.node && sprite.node.isValid) {
                                var texture = new cc.Texture2D();
                                texture.initWithElement(image);
                                texture.handleLoadedTexture();
                                sprite.spriteFrame = new cc.SpriteFrame(texture);
                                node.width = size.width;
                                node.height = size.height;
                                resolve();
                            }
                        };
                        image.src = url;
                    })];
            });
        });
    }
    ext.wxCreateImageToSprite = wxCreateImageToSprite;
    function randomInteger(min, max) {
        var diff = max - min;
        return Math.floor(min + (Math.random() * diff * 100) % (diff + 1));
    }
    ext.randomInteger = randomInteger;
    /** 修复引擎的bug，cc.RichText有时候设置了string后会导致不显示的问题 */
    function showRichText(richText) {
        richText.node.children.forEach(function (value) { return value.active = true; });
    }
    ext.showRichText = showRichText;
    /** 并行执行promise */
    function concurrentExecute(list) {
        return __awaiter(this, void 0, void 0, function () {
            var _i, list_1, promise;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _i = 0, list_1 = list;
                        _a.label = 1;
                    case 1:
                        if (!(_i < list_1.length)) return [3 /*break*/, 4];
                        promise = list_1[_i];
                        return [4 /*yield*/, promise];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    }
    ext.concurrentExecute = concurrentExecute;
    /** 是否同一天 */
    function isSameDay(date1, date2) {
        return date1.getFullYear() == date2.getFullYear() && date1.getMonth() == date2.getMonth() && date1.getDate() == date2.getDate();
    }
    ext.isSameDay = isSameDay;
    /** 转换数字为k m b t*/
    function shortFormat(num) {
        var result = "";
        var t = 1000 * 1000 * 1000 * 1000;
        var b = 1000 * 1000 * 1000;
        var m = 1000 * 1000;
        var k = 1000;
        if (num >= t) {
            result = Math.floor(num / t * 10) / 10 + "T";
        }
        else if (num >= b) {
            result = Math.floor((num / b) * 10) / 10 + "B";
        }
        else if (num >= m) {
            result = Math.floor((num / m) * 10) / 10 + "M";
        }
        else if (num >= k) {
            result = Math.floor((num / k) * 10) / 10 + "K";
        }
        else {
            result = Math.floor(num).toString();
        }
        return result;
    }
    ext.shortFormat = shortFormat;
    function moveSkeleton(ske, srcY, realY, deayTime, moveTime, boneName, boneY) {
        var subY = realY - srcY;
        var speed = subY / moveTime;
        // console.log("===>srcY="+srcY, "realY="+realY, "subY="+subY, "speed="+speed, "y="+ske.findBone(boneName).y);
        ske.findBone(boneName).y = boneY;
        ske.node.runAction(cc.sequence(cc.delayTime(deayTime), cc.callFunc(function () {
            var moveY = 0;
            var action = Actions_1.default.update(function (dt) {
                var moveLen = dt * speed;
                // console.log("移动骨骼y", moveLen, dt, speed, moveY, subY);
                if (Math.abs(moveY + moveLen) >= Math.abs(subY)) {
                    ske.findBone(boneName).y += subY - moveY;
                    ske.node.stopActionByTag(10020);
                }
                else {
                    ske.findBone(boneName).y += moveLen;
                }
                moveY += moveLen;
            });
            action.setTag(10020);
            ske.node.runAction(action);
        })));
    }
    ext.moveSkeleton = moveSkeleton;
})(ext = exports.ext || (exports.ext = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/facade/OpenViewCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b27f8KHhAhEG5gWtv30iiyW', 'OpenViewCommand');
// framework/facade/OpenViewCommand.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("./Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var OpenViewCommand = /** @class */ (function () {
    function OpenViewCommand() {
    }
    OpenViewCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var prefabName, prefab, node;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    prefabName = args[0];
                                    if (!Facade_1.default.canvasNode.getChildByName(prefabName.substring(prefabName.lastIndexOf("/") + 1))) return [3 /*break*/, 1];
                                    console.error("\u6B64\u7A97\u53E3\u5DF2\u6253\u5F00===>" + prefabName, "或者是prefab根节点名称与其他prefab根节点名称冲突...规则：prefab名称要与该prefab根节点名称一致。");
                                    reject();
                                    return [3 /*break*/, 3];
                                case 1: return [4 /*yield*/, cc.loader.loadResAwait(prefabName, cc.Prefab)];
                                case 2:
                                    prefab = _a.sent();
                                    node = cc.instantiate(prefab);
                                    node.setParent(Facade_1.default.canvasNode);
                                    resolve(node);
                                    _a.label = 3;
                                case 3: return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    OpenViewCommand = __decorate([
        ccclass("OpenViewCommand")
    ], OpenViewCommand);
    return OpenViewCommand;
}());
exports.default = OpenViewCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZmFjYWRlL09wZW5WaWV3Q29tbWFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsaUZBQWlGO0FBQ2pGLHlGQUF5RjtBQUN6RixtQkFBbUI7QUFDbkIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUNuRyw4QkFBOEI7QUFDOUIsMkZBQTJGO0FBQzNGLG1HQUFtRzs7QUFJbkcsbUNBQThCO0FBRXhCLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQUE7SUFnQkEsQ0FBQztJQWRTLGlDQUFPLEdBQWI7UUFBYyxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOzt1Q0FBRSxPQUFPOzs7Z0JBQzFCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQU0sT0FBTyxFQUFFLE1BQU07Ozs7O29DQUNoQyxVQUFVLEdBQVUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO3lDQUM3QixnQkFBTSxDQUFDLFVBQVUsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLEVBQXJGLHdCQUFxRjtvQ0FDcEYsT0FBTyxDQUFDLEtBQUssQ0FBQyw2Q0FBYSxVQUFZLEVBQUUsK0RBQStELENBQUMsQ0FBQztvQ0FDMUcsTUFBTSxFQUFFLENBQUM7O3dDQUVJLHFCQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUE7O29DQUE1RCxNQUFNLEdBQUcsU0FBbUQ7b0NBQzVELElBQUksR0FBVyxFQUFFLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO29DQUMxQyxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7b0NBQ2xDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7Ozs7eUJBRXJCLENBQUMsRUFBQzs7O0tBQ047SUFmZ0IsZUFBZTtRQURuQyxPQUFPLENBQUMsaUJBQWlCLENBQUM7T0FDTixlQUFlLENBZ0JuQztJQUFELHNCQUFDO0NBaEJELEFBZ0JDLElBQUE7a0JBaEJvQixlQUFlIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5pbXBvcnQge0lDb21tYW5kfSBmcm9tIFwiLi9JQ29tbWFuZFwiO1xyXG5pbXBvcnQgTGlmZUN5Y2xlIGZyb20gXCIuLi9jb21wb25lbnQvTGlmZUN5Y2xlXCI7XHJcbmltcG9ydCBGYWNhZGUgZnJvbSBcIi4vRmFjYWRlXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzKFwiT3BlblZpZXdDb21tYW5kXCIpXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9wZW5WaWV3Q29tbWFuZCBpbXBsZW1lbnRzIElDb21tYW5kIHtcclxuXHJcbiAgICBhc3luYyBleGVjdXRlKC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgcHJlZmFiTmFtZTpzdHJpbmcgPSBhcmdzWzBdO1xyXG4gICAgICAgICAgICBpZihGYWNhZGUuY2FudmFzTm9kZS5nZXRDaGlsZEJ5TmFtZShwcmVmYWJOYW1lLnN1YnN0cmluZyhwcmVmYWJOYW1lLmxhc3RJbmRleE9mKFwiL1wiKSsxKSkpe1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihg5q2k56qX5Y+j5bey5omT5byAPT09PiR7cHJlZmFiTmFtZX1gLCBcIuaIluiAheaYr3ByZWZhYuagueiKgueCueWQjeensOS4juWFtuS7lnByZWZhYuagueiKgueCueWQjeensOWGsueqgS4uLuinhOWIme+8mnByZWZhYuWQjeensOimgeS4juivpXByZWZhYuagueiKgueCueWQjeensOS4gOiHtOOAglwiKTtcclxuICAgICAgICAgICAgICAgIHJlamVjdCgpO1xyXG4gICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcHJlZmFiID0gYXdhaXQgY2MubG9hZGVyLmxvYWRSZXNBd2FpdChwcmVmYWJOYW1lLCBjYy5QcmVmYWIpO1xyXG4gICAgICAgICAgICAgICAgbGV0IG5vZGU6Y2MuTm9kZSA9IGNjLmluc3RhbnRpYXRlKHByZWZhYik7XHJcbiAgICAgICAgICAgICAgICBub2RlLnNldFBhcmVudChGYWNhZGUuY2FudmFzTm9kZSk7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKG5vZGUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/facade/LoadSceneCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4fde6oupepCYrYBAsbalMnm', 'LoadSceneCommand');
// framework/facade/LoadSceneCommand.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCurrentSceneName = void 0;
var Facade_1 = require("./Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var currentSceneName = "WelcomeScene";
var blockInputNode = null;
var LoadSceneCommand = /** @class */ (function () {
    function LoadSceneCommand() {
    }
    LoadSceneCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var sceneName, prefab, deletes, node;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    sceneName = args[0];
                                    console.log(sceneName, "sceneName.");
                                    if (blockInputNode == null) {
                                        blockInputNode = new cc.Node();
                                        blockInputNode.zIndex = cc.macro.MAX_ZINDEX;
                                        blockInputNode.addComponent(cc.BlockInputEvents);
                                        blockInputNode.setContentSize(cc.view.getVisibleSize());
                                        blockInputNode.setPosition(cc.view.getViewportRect().center);
                                        blockInputNode.setParent(cc.director.getScene());
                                    }
                                    blockInputNode.active = true;
                                    return [4 /*yield*/, cc.loader.loadResAwait("prefab/" + sceneName, cc.Prefab)];
                                case 1:
                                    prefab = _a.sent();
                                    console.log("加载场景成功", sceneName);
                                    deletes = Facade_1.default.canvasNode.children.filter(function (value) { return value.getComponent(cc.Camera) == null; });
                                    deletes.forEach(function (value) {
                                        // value.removeFromParent(true);
                                        value.destroy();
                                    });
                                    console.log("清理场景成功.");
                                    blockInputNode.active = false;
                                    node = cc.instantiate(prefab);
                                    node.setParent(Facade_1.default.canvasNode);
                                    currentSceneName = sceneName;
                                    console.log("创建场景成功.", sceneName);
                                    resolve(node);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    LoadSceneCommand = __decorate([
        ccclass("LoadSceneCommand")
    ], LoadSceneCommand);
    return LoadSceneCommand;
}());
exports.default = LoadSceneCommand;
function getCurrentSceneName() {
    return currentSceneName;
}
exports.getCurrentSceneName = getCurrentSceneName;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZmFjYWRlL0xvYWRTY2VuZUNvbW1hbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7OztBQUduRyxtQ0FBOEI7QUFFeEIsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFFMUMsSUFBSSxnQkFBZ0IsR0FBVSxjQUFjLENBQUM7QUFFN0MsSUFBSSxjQUFjLEdBQVcsSUFBSSxDQUFDO0FBR2xDO0lBQUE7SUFxQ0EsQ0FBQztJQW5DUyxrQ0FBTyxHQUFiO1FBQWUsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7dUNBQUUsT0FBTzs7O2dCQUMzQixzQkFBTyxJQUFJLE9BQU8sQ0FBQyxVQUFNLE9BQU8sRUFBRSxNQUFNOzs7OztvQ0FLaEMsU0FBUyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztvQ0FDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDLENBQUM7b0NBQ3JDLElBQUksY0FBYyxJQUFJLElBQUksRUFBQzt3Q0FDdkIsY0FBYyxHQUFHLElBQUksRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO3dDQUMvQixjQUFjLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDO3dDQUM1QyxjQUFjLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO3dDQUNqRCxjQUFjLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQzt3Q0FDeEQsY0FBYyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO3dDQUM3RCxjQUFjLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztxQ0FDcEQ7b0NBRUQsY0FBYyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7b0NBQ2hCLHFCQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsR0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFBOztvQ0FBckUsTUFBTSxHQUFHLFNBQTREO29DQUN6RSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQztvQ0FFN0IsT0FBTyxHQUFHLGdCQUFNLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLEVBQXJDLENBQXFDLENBQUMsQ0FBQztvQ0FDaEcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFBLEtBQUs7d0NBQ2pCLGdDQUFnQzt3Q0FDaEMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO29DQUNwQixDQUFDLENBQUMsQ0FBQztvQ0FDSCxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO29DQUN2QixjQUFjLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztvQ0FDMUIsSUFBSSxHQUFXLEVBQUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7b0NBQzFDLElBQUksQ0FBQyxTQUFTLENBQUMsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztvQ0FDbEMsZ0JBQWdCLEdBQUcsU0FBUyxDQUFDO29DQUM3QixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztvQ0FDbEMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDOzs7O3lCQUNqQixDQUFDLEVBQUM7OztLQUNOO0lBcENnQixnQkFBZ0I7UUFEcEMsT0FBTyxDQUFDLGtCQUFrQixDQUFDO09BQ1AsZ0JBQWdCLENBcUNwQztJQUFELHVCQUFDO0NBckNELEFBcUNDLElBQUE7a0JBckNvQixnQkFBZ0I7QUF1Q3JDLFNBQWdCLG1CQUFtQjtJQUMvQixPQUFPLGdCQUFnQixDQUFDO0FBQzVCLENBQUM7QUFGRCxrREFFQyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuaW1wb3J0IHtJQ29tbWFuZH0gZnJvbSBcIi4vSUNvbW1hbmRcIjtcclxuaW1wb3J0IEZhY2FkZSBmcm9tIFwiLi9GYWNhZGVcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxubGV0IGN1cnJlbnRTY2VuZU5hbWU6c3RyaW5nID0gXCJXZWxjb21lU2NlbmVcIjtcclxuXHJcbmxldCBibG9ja0lucHV0Tm9kZTpjYy5Ob2RlID0gbnVsbDtcclxuXHJcbkBjY2NsYXNzKFwiTG9hZFNjZW5lQ29tbWFuZFwiKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2FkU2NlbmVDb21tYW5kIGltcGxlbWVudHMgSUNvbW1hbmQge1xyXG5cclxuICAgIGFzeW5jIGV4ZWN1dGUgKC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICAvKiog55Sx5LqOY29jb3PliIfmjaLlnLrmma/lnKjpg6jliIZhbmRyb2lk5omL5py65LiK5Lya6buR5bGP5LiA5LiL77yM5omA5Lul5Yqg6L295Zy65pmv5pS55Li65Yqg6L295a+55bqUcHJlZmFiICovXHJcbiAgICAgICAgICAgIC8qY2MuZGlyZWN0b3IubG9hZFNjZW5lKHNjZW5lTmFtZSwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgICAgICB9KSovXHJcbiAgICAgICAgICAgIGxldCBzY2VuZU5hbWUgPSBhcmdzWzBdO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhzY2VuZU5hbWUsIFwic2NlbmVOYW1lLlwiKTtcclxuICAgICAgICAgICAgaWYgKGJsb2NrSW5wdXROb2RlID09IG51bGwpe1xyXG4gICAgICAgICAgICAgICAgYmxvY2tJbnB1dE5vZGUgPSBuZXcgY2MuTm9kZSgpO1xyXG4gICAgICAgICAgICAgICAgYmxvY2tJbnB1dE5vZGUuekluZGV4ID0gY2MubWFjcm8uTUFYX1pJTkRFWDtcclxuICAgICAgICAgICAgICAgIGJsb2NrSW5wdXROb2RlLmFkZENvbXBvbmVudChjYy5CbG9ja0lucHV0RXZlbnRzKTtcclxuICAgICAgICAgICAgICAgIGJsb2NrSW5wdXROb2RlLnNldENvbnRlbnRTaXplKGNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKSk7XHJcbiAgICAgICAgICAgICAgICBibG9ja0lucHV0Tm9kZS5zZXRQb3NpdGlvbihjYy52aWV3LmdldFZpZXdwb3J0UmVjdCgpLmNlbnRlcik7XHJcbiAgICAgICAgICAgICAgICBibG9ja0lucHV0Tm9kZS5zZXRQYXJlbnQoY2MuZGlyZWN0b3IuZ2V0U2NlbmUoKSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGJsb2NrSW5wdXROb2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIGxldCBwcmVmYWIgPSBhd2FpdCBjYy5sb2FkZXIubG9hZFJlc0F3YWl0KFwicHJlZmFiL1wiK3NjZW5lTmFtZSwgY2MuUHJlZmFiKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLliqDovb3lnLrmma/miJDlip9cIiwgc2NlbmVOYW1lKTtcclxuICAgICAgICAgICAgLyoqIOWFiOaKiuWcuuaZr+S4iueahOi1hOa6kOmDveW5suaOiemZpOS6huaRhOWDj+acuiAqL1xyXG4gICAgICAgICAgICBsZXQgZGVsZXRlcyA9IEZhY2FkZS5jYW52YXNOb2RlLmNoaWxkcmVuLmZpbHRlcih2YWx1ZSA9PiB2YWx1ZS5nZXRDb21wb25lbnQoY2MuQ2FtZXJhKSA9PSBudWxsKTtcclxuICAgICAgICAgICAgZGVsZXRlcy5mb3JFYWNoKHZhbHVlID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIHZhbHVlLnJlbW92ZUZyb21QYXJlbnQodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZS5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIua4heeQhuWcuuaZr+aIkOWKny5cIik7XHJcbiAgICAgICAgICAgIGJsb2NrSW5wdXROb2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBsZXQgbm9kZTpjYy5Ob2RlID0gY2MuaW5zdGFudGlhdGUocHJlZmFiKTtcclxuICAgICAgICAgICAgbm9kZS5zZXRQYXJlbnQoRmFjYWRlLmNhbnZhc05vZGUpO1xyXG4gICAgICAgICAgICBjdXJyZW50U2NlbmVOYW1lID0gc2NlbmVOYW1lO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIm+W7uuWcuuaZr+aIkOWKny5cIiwgc2NlbmVOYW1lKTtcclxuICAgICAgICAgICAgcmVzb2x2ZShub2RlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldEN1cnJlbnRTY2VuZU5hbWUoKTpzdHJpbmcge1xyXG4gICAgcmV0dXJuIGN1cnJlbnRTY2VuZU5hbWU7XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/http/HttpOption.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9aa190e59hJS45MuYWui0Ak', 'HttpOption');
// framework/http/HttpOption.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpOption = void 0;
var HttpOption = /** @class */ (function () {
    function HttpOption() {
        this.host = null;
        this.port = null;
        this.timeout = null;
        this.cookieKey = null;
        this.headers = new Map();
    }
    return HttpOption;
}());
exports.HttpOption = HttpOption;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvaHR0cC9IdHRwT3B0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7SUFBQTtRQUNJLFNBQUksR0FBVSxJQUFJLENBQUM7UUFDbkIsU0FBSSxHQUFVLElBQUksQ0FBQztRQUNuQixZQUFPLEdBQVUsSUFBSSxDQUFDO1FBQ3RCLGNBQVMsR0FBVSxJQUFJLENBQUM7UUFDeEIsWUFBTyxHQUFHLElBQUksR0FBRyxFQUFlLENBQUM7SUFDckMsQ0FBQztJQUFELGlCQUFDO0FBQUQsQ0FOQSxBQU1DLElBQUE7QUFOWSxnQ0FBVSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBIdHRwT3B0aW9ue1xyXG4gICAgaG9zdDpzdHJpbmcgPSBudWxsO1xyXG4gICAgcG9ydDpudW1iZXIgPSBudWxsO1xyXG4gICAgdGltZW91dDpudW1iZXIgPSBudWxsO1xyXG4gICAgY29va2llS2V5OnN0cmluZyA9IG51bGw7XHJcbiAgICBoZWFkZXJzID0gbmV3IE1hcDxzdHJpbmcsIGFueT4oKTtcclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/facade/CloseViewCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b427fLK8OtPeZpFZCOu+9Mi', 'CloseViewCommand');
// framework/facade/CloseViewCommand.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("./Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var CloseViewCommand = /** @class */ (function () {
    function CloseViewCommand() {
    }
    CloseViewCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var node = args[0];
                        if (typeof node == "string") {
                            node = Facade_1.default.canvasNode.getChildByName(node);
                        }
                        if (node) {
                            node.destroy();
                        }
                        resolve();
                    })];
            });
        });
    };
    CloseViewCommand = __decorate([
        ccclass("CloseViewCommand")
    ], CloseViewCommand);
    return CloseViewCommand;
}());
exports.default = CloseViewCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZmFjYWRlL0Nsb3NlVmlld0NvbW1hbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7O0FBR25HLG1DQUE4QjtBQUV4QixJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFBO0lBY0EsQ0FBQztJQVpTLGtDQUFPLEdBQWI7UUFBZSxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOzt1Q0FBRSxPQUFPOztnQkFDM0Isc0JBQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTt3QkFDL0IsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNuQixJQUFJLE9BQU8sSUFBSSxJQUFJLFFBQVEsRUFBQzs0QkFDeEIsSUFBSSxHQUFHLGdCQUFNLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQzt5QkFDakQ7d0JBQ0QsSUFBSSxJQUFJLEVBQUM7NEJBQ0wsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO3lCQUNsQjt3QkFDRCxPQUFPLEVBQUUsQ0FBQztvQkFDZCxDQUFDLENBQUMsRUFBQzs7O0tBQ047SUFiZ0IsZ0JBQWdCO1FBRHBDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQztPQUNQLGdCQUFnQixDQWNwQztJQUFELHVCQUFDO0NBZEQsQUFjQyxJQUFBO2tCQWRvQixnQkFBZ0IiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcbmltcG9ydCB7SUNvbW1hbmR9IGZyb20gXCIuL0lDb21tYW5kXCI7XHJcbmltcG9ydCBGYWNhZGUgZnJvbSBcIi4vRmFjYWRlXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzKFwiQ2xvc2VWaWV3Q29tbWFuZFwiKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDbG9zZVZpZXdDb21tYW5kIGltcGxlbWVudHMgSUNvbW1hbmQge1xyXG5cclxuICAgIGFzeW5jIGV4ZWN1dGUgKC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgbGV0IG5vZGUgPSBhcmdzWzBdO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG5vZGUgPT0gXCJzdHJpbmdcIil7XHJcbiAgICAgICAgICAgICAgICBub2RlID0gRmFjYWRlLmNhbnZhc05vZGUuZ2V0Q2hpbGRCeU5hbWUobm9kZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG5vZGUpe1xyXG4gICAgICAgICAgICAgICAgbm9kZS5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/http/HttpClient.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0d6301Fqh9AaZzazi2zgka+', 'HttpClient');
// framework/http/HttpClient.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpClient = void 0;
var HttpOption_1 = require("./HttpOption");
var NetworkConfig_1 = require("../../script/app/config/NetworkConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var cookieMap = new Map();
/** http默认配置 */
var httpOption = new HttpOption_1.HttpOption();
httpOption.host = NetworkConfig_1.NetworkConfig.host;
httpOption.port = 443;
// httpOption.timeout = 3*6000;
httpOption.timeout = 1;
httpOption.cookieKey = "vertx-cookie";
// 不支持FormData的浏览器的处理
if (typeof FormData == "undefined") {
    httpOption.headers.set("content-type", "application/x-www-form-urlencoded");
}
/**
 * 错误处理:
 * error.status 0表示网络异常，1表示网络超时  >=200表示http请求状态码
 * */
var HttpClient = /** @class */ (function () {
    function HttpClient() {
    }
    HttpClient.deleteCookie = function (cookieKey) {
        cookieMap.delete(cookieKey);
    };
    HttpClient.get = function (protocol, httpOption) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.send("GET", protocol, httpOption)];
            });
        });
    };
    HttpClient.post = function (protocol, httpOption) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.send("POST", protocol, httpOption)];
            });
        });
    };
    HttpClient.send = function (method, protocol, httpOption) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var option, xmlrequest, url, val, res;
                        return __generator(this, function (_a) {
                            option = httpOption || HttpClient.defaultHttpOption;
                            xmlrequest = new XMLHttpRequest();
                            xmlrequest.timeout = option.timeout;
                            xmlrequest.ontimeout = function (e) {
                                console.log(e, "ontimeout...");
                                reject({
                                    message: "网络超时",
                                    status: 1,
                                    protocol: protocol
                                });
                            };
                            xmlrequest.onerror = function (err) {
                                console.log(err, "onerror...");
                                if (typeof wx != "undefined" && err.indexOf('timeout') !== -1) {
                                    reject({
                                        message: "网络超时",
                                        status: 1,
                                        protocol: protocol
                                    });
                                }
                                else {
                                    reject({
                                        message: "网络错误",
                                        status: 1,
                                        protocol: protocol
                                    });
                                }
                            };
                            xmlrequest.onloadend = function (e) {
                                if (xmlrequest.readyState == 4) {
                                    if (option.cookieKey && !cookieMap.get(option.cookieKey)) {
                                        cookieMap.set(option.cookieKey, xmlrequest.getResponseHeader(option.cookieKey));
                                    }
                                    if (xmlrequest.status === 200) {
                                        try {
                                            protocol.decode(xmlrequest.responseText);
                                            resolve(protocol.getResponseData());
                                        }
                                        catch (e) {
                                            reject({
                                                message: "服务器状态出错==>" + protocol.getResponseMessage(),
                                                status: 200,
                                                protocol: protocol
                                            });
                                        }
                                    }
                                    else {
                                        if (xmlrequest.status == 0 && e.timeStamp && e.timeStamp > xmlrequest.timeout) {
                                            /** 超时在超时回调里处理 */
                                            return;
                                        }
                                        var msg = void 0;
                                        if (xmlrequest.status === 0) {
                                            msg = "网络异常";
                                        }
                                        else {
                                            msg = "服务器异常";
                                        }
                                        reject({
                                            message: msg,
                                            status: xmlrequest.status,
                                            protocol: protocol
                                        });
                                    }
                                }
                            };
                            url = option.host;
                            if (option.port != 80 && option.port != 443) {
                                url += ":" + option.port;
                            }
                            url += protocol.uri;
                            xmlrequest.open(method, url);
                            if (option.cookieKey) {
                                val = cookieMap.get(option.cookieKey);
                                if (val != null) {
                                    xmlrequest.setRequestHeader(option.cookieKey, val);
                                }
                            }
                            option.headers.forEach(function (value, key) { return xmlrequest.setRequestHeader(key, value); });
                            res = protocol.encode();
                            xmlrequest.send(res);
                            return [2 /*return*/];
                        });
                    }); })];
            });
        });
    };
    HttpClient.defaultHttpOption = httpOption;
    return HttpClient;
}());
exports.HttpClient = HttpClient;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/bigNumber.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '02e4aFqystFf7DVaHnZYH68', 'bigNumber');
// framework/extend/bigNumber.js

"use strict";

;

(function (globalObject) {
  'use strict';
  /*
   *      bignumber.js v7.2.1
   *      A JavaScript library for arbitrary-precision arithmetic.
   *      https://github.com/MikeMcl/bignumber.js
   *      Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>
   *      MIT Licensed.
   *
   *      BigNumber.prototype methods     |  BigNumber methods
   *                                      |
   *      absoluteValue            abs    |  clone
   *      comparedTo                      |  config               set
   *      decimalPlaces            dp     |      DECIMAL_PLACES
   *      dividedBy                div    |      ROUNDING_MODE
   *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT
   *      exponentiatedBy          pow    |      RANGE
   *      integerValue                    |      CRYPTO
   *      isEqualTo                eq     |      MODULO_MODE
   *      isFinite                        |      POW_PRECISION
   *      isGreaterThan            gt     |      FORMAT
   *      isGreaterThanOrEqualTo   gte    |      ALPHABET
   *      isInteger                       |  isBigNumber
   *      isLessThan               lt     |  maximum              max
   *      isLessThanOrEqualTo      lte    |  minimum              min
   *      isNaN                           |  random
   *      isNegative                      |
   *      isPositive                      |
   *      isZero                          |
   *      minus                           |
   *      modulo                   mod    |
   *      multipliedBy             times  |
   *      negated                         |
   *      plus                            |
   *      precision                sd     |
   *      shiftedBy                       |
   *      squareRoot               sqrt   |
   *      toExponential                   |
   *      toFixed                         |
   *      toFormat                        |
   *      toFraction                      |
   *      toJSON                          |
   *      toNumber                        |
   *      toPrecision                     |
   *      toString                        |
   *      valueOf                         |
   *
   */

  var BigNumber,
      isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
      mathceil = Math.ceil,
      mathfloor = Math.floor,
      bignumberError = '[BigNumber Error] ',
      tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',
      BASE = 1e14,
      LOG_BASE = 14,
      MAX_SAFE_INTEGER = 0x1fffffffffffff,
      // 2^53 - 1
  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
      SQRT_BASE = 1e7,
      // EDITABLE
  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
  // the arguments to toExponential, toFixed, toFormat, and toPrecision.
  MAX = 1E9; // 0 to MAX_INT32

  /*
   * Create and return a BigNumber constructor.
   */

  function clone(configObject) {
    var div,
        convertBase,
        parseNumeric,
        P = BigNumber.prototype = {
      constructor: BigNumber,
      toString: null,
      valueOf: null
    },
        ONE = new BigNumber(1),
        //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------
    // The default values below must be integers within the inclusive ranges stated.
    // The values can also be changed at run-time using BigNumber.set.
    // The maximum number of decimal places for operations involving division.
    DECIMAL_PLACES = 20,
        // 0 to MAX
    // The rounding mode used when rounding to the above decimal places, and when using
    // toExponential, toFixed, toFormat and toPrecision, and round (default value).
    // UP         0 Away from zero.
    // DOWN       1 Towards zero.
    // CEIL       2 Towards +Infinity.
    // FLOOR      3 Towards -Infinity.
    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.
    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
    ROUNDING_MODE = 4,
        // 0 to 8
    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]
    // The exponent value at and beneath which toString returns exponential notation.
    // Number type: -7
    TO_EXP_NEG = -7,
        // 0 to -MAX
    // The exponent value at and above which toString returns exponential notation.
    // Number type: 21
    TO_EXP_POS = 21,
        // 0 to MAX
    // RANGE : [MIN_EXP, MAX_EXP]
    // The minimum exponent value, beneath which underflow to zero occurs.
    // Number type: -324  (5e-324)
    MIN_EXP = -1e7,
        // -1 to -MAX
    // The maximum exponent value, above which overflow to Infinity occurs.
    // Number type:  308  (1.7976931348623157e+308)
    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
    MAX_EXP = 1e7,
        // 1 to MAX
    // Whether to use cryptographically-secure random number generation, if available.
    CRYPTO = false,
        // true or false
    // The modulo mode used when calculating the modulus: a mod n.
    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
    // The remainder (r) is calculated as: r = a - n * q.
    //
    // UP        0 The remainder is positive if the dividend is negative, else is negative.
    // DOWN      1 The remainder has the same sign as the dividend.
    //             This modulo mode is commonly known as 'truncated division' and is
    //             equivalent to (a % n) in JavaScript.
    // FLOOR     3 The remainder has the same sign as the divisor (Python %).
    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
    //             The remainder is always positive.
    //
    // The truncated division, floored division, Euclidian division and IEEE 754 remainder
    // modes are commonly used for the modulus operation.
    // Although the other rounding modes can also be used, they may not give useful results.
    MODULO_MODE = 1,
        // 0 to 9
    // The maximum number of significant digits of the result of the exponentiatedBy operation.
    // If POW_PRECISION is 0, there will be unlimited significant digits.
    POW_PRECISION = 0,
        // 0 to MAX
    // The format specification used by the BigNumber.prototype.toFormat method.
    FORMAT = {
      decimalSeparator: '.',
      groupSeparator: ',',
      groupSize: 3,
      secondaryGroupSize: 0,
      fractionGroupSeparator: '\xA0',
      // non-breaking space
      fractionGroupSize: 0
    },
        // The alphabet used for base conversion.
    // It must be at least 2 characters long, with no '.' or repeated character.
    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'
    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz'; //------------------------------------------------------------------------------------------
    // CONSTRUCTOR

    /*
     * The BigNumber constructor and exported function.
     * Create and return a new instance of a BigNumber object.
     *
     * n {number|string|BigNumber} A numeric value.
     * [b] {number} The base of n. Integer, 2 to ALPHABET.length inclusive.
     */

    function BigNumber(n, b) {
      var alphabet,
          c,
          caseChanged,
          e,
          i,
          isNum,
          len,
          str,
          x = this; // Enable constructor usage without new.

      if (!(x instanceof BigNumber)) {
        // Don't throw on constructor call without new (#81).
        // '[BigNumber Error] Constructor call without new: {n}'
        //throw Error(bignumberError + ' Constructor call without new: ' + n);
        return new BigNumber(n, b);
      }

      if (b == null) {
        // Duplicate.
        if (n instanceof BigNumber) {
          x.s = n.s;
          x.e = n.e;
          x.c = (n = n.c) ? n.slice() : n;
          return;
        }

        isNum = typeof n == 'number';

        if (isNum && n * 0 == 0) {
          // Use `1 / n` to handle minus zero also.
          x.s = 1 / n < 0 ? (n = -n, -1) : 1; // Faster path for integers.

          if (n === ~~n) {
            for (e = 0, i = n; i >= 10; i /= 10, e++) {
              ;
            }

            x.e = e;
            x.c = [n];
            return;
          }

          str = n + '';
        } else {
          if (!isNumeric.test(str = n + '')) return parseNumeric(x, str, isNum);
          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
        } // Decimal point?


        if ((e = str.indexOf('.')) > -1) str = str.replace('.', ''); // Exponential form?

        if ((i = str.search(/e/i)) > 0) {
          // Determine exponent.
          if (e < 0) e = i;
          e += +str.slice(i + 1);
          str = str.substring(0, i);
        } else if (e < 0) {
          // Integer.
          e = str.length;
        }
      } else {
        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
        intCheck(b, 2, ALPHABET.length, 'Base');
        str = n + ''; // Allow exponential notation to be used with base 10 argument, while
        // also rounding to DECIMAL_PLACES as with other bases.

        if (b == 10) {
          x = new BigNumber(n instanceof BigNumber ? n : str);
          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
        }

        isNum = typeof n == 'number';

        if (isNum) {
          // Avoid potential interpretation of Infinity and NaN as base 44+ values.
          if (n * 0 != 0) return parseNumeric(x, str, isNum, b);
          x.s = 1 / n < 0 ? (str = str.slice(1), -1) : 1; // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'

          if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
            throw Error(tooManyDigits + n);
          } // Prevent later check for length on converted number.


          isNum = false;
        } else {
          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
        }

        alphabet = ALPHABET.slice(0, b);
        e = i = 0; // Check that str is a valid base b number.
        // Don't use RegExp so alphabet can contain special characters.

        for (len = str.length; i < len; i++) {
          if (alphabet.indexOf(c = str.charAt(i)) < 0) {
            if (c == '.') {
              // If '.' is not the first character and it has not be found before.
              if (i > e) {
                e = len;
                continue;
              }
            } else if (!caseChanged) {
              // Allow e.g. hexadecimal 'FF' as well as 'ff'.
              if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
                caseChanged = true;
                i = -1;
                e = 0;
                continue;
              }
            }

            return parseNumeric(x, n + '', isNum, b);
          }
        }

        str = convertBase(str, b, 10, x.s); // Decimal point?

        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;
      } // Determine leading zeros.


      for (i = 0; str.charCodeAt(i) === 48; i++) {
        ;
      } // Determine trailing zeros.


      for (len = str.length; str.charCodeAt(--len) === 48;) {
        ;
      }

      str = str.slice(i, ++len);

      if (str) {
        len -= i; // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'

        if (isNum && BigNumber.DEBUG && len > 15 && (n > MAX_SAFE_INTEGER || n !== mathfloor(n))) {
          throw Error(tooManyDigits + x.s * n);
        }

        e = e - i - 1; // Overflow?

        if (e > MAX_EXP) {
          // Infinity.
          x.c = x.e = null; // Underflow?
        } else if (e < MIN_EXP) {
          // Zero.
          x.c = [x.e = 0];
        } else {
          x.e = e;
          x.c = []; // Transform base
          // e is the base 10 exponent.
          // i is where to slice str to get the first element of the coefficient array.

          i = (e + 1) % LOG_BASE;
          if (e < 0) i += LOG_BASE;

          if (i < len) {
            if (i) x.c.push(+str.slice(0, i));

            for (len -= LOG_BASE; i < len;) {
              x.c.push(+str.slice(i, i += LOG_BASE));
            }

            str = str.slice(i);
            i = LOG_BASE - str.length;
          } else {
            i -= len;
          }

          for (; i--; str += '0') {
            ;
          }

          x.c.push(+str);
        }
      } else {
        // Zero.
        x.c = [x.e = 0];
      }
    } // CONSTRUCTOR PROPERTIES


    BigNumber.clone = clone;
    BigNumber.ROUND_UP = 0;
    BigNumber.ROUND_DOWN = 1;
    BigNumber.ROUND_CEIL = 2;
    BigNumber.ROUND_FLOOR = 3;
    BigNumber.ROUND_HALF_UP = 4;
    BigNumber.ROUND_HALF_DOWN = 5;
    BigNumber.ROUND_HALF_EVEN = 6;
    BigNumber.ROUND_HALF_CEIL = 7;
    BigNumber.ROUND_HALF_FLOOR = 8;
    BigNumber.EUCLID = 9;
    /*
     * Configure infrequently-changing library-wide settings.
     *
     * Accept an object with the following optional properties (if the value of a property is
     * a number, it must be an integer within the inclusive range stated):
     *
     *   DECIMAL_PLACES   {number}           0 to MAX
     *   ROUNDING_MODE    {number}           0 to 8
     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]
     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]
     *   CRYPTO           {boolean}          true or false
     *   MODULO_MODE      {number}           0 to 9
     *   POW_PRECISION       {number}           0 to MAX
     *   ALPHABET         {string}           A string of two or more unique characters which does
     *                                       not contain '.'.
     *   FORMAT           {object}           An object with some of the following properties:
     *      decimalSeparator       {string}
     *      groupSeparator         {string}
     *      groupSize              {number}
     *      secondaryGroupSize     {number}
     *      fractionGroupSeparator {string}
     *      fractionGroupSize      {number}
     *
     * (The values assigned to the above FORMAT object properties are not checked for validity.)
     *
     * E.g.
     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
     *
     * Ignore properties/parameters set to null or undefined, except for ALPHABET.
     *
     * Return an object with the properties current values.
     */

    BigNumber.config = BigNumber.set = function (obj) {
      var p, v;

      if (obj != null) {
        if (typeof obj == 'object') {
          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            DECIMAL_PLACES = v;
          } // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.
          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'


          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
            v = obj[p];
            intCheck(v, 0, 8, p);
            ROUNDING_MODE = v;
          } // EXPONENTIAL_AT {number|number[]}
          // Integer, -MAX to MAX inclusive or
          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].
          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'


          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
            v = obj[p];

            if (isArray(v)) {
              intCheck(v[0], -MAX, 0, p);
              intCheck(v[1], 0, MAX, p);
              TO_EXP_NEG = v[0];
              TO_EXP_POS = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
            }
          } // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or
          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].
          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'


          if (obj.hasOwnProperty(p = 'RANGE')) {
            v = obj[p];

            if (isArray(v)) {
              intCheck(v[0], -MAX, -1, p);
              intCheck(v[1], 1, MAX, p);
              MIN_EXP = v[0];
              MAX_EXP = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);

              if (v) {
                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
              } else {
                throw Error(bignumberError + p + ' cannot be zero: ' + v);
              }
            }
          } // CRYPTO {boolean} true or false.
          // '[BigNumber Error] CRYPTO not true or false: {v}'
          // '[BigNumber Error] crypto unavailable'


          if (obj.hasOwnProperty(p = 'CRYPTO')) {
            v = obj[p];

            if (v === !!v) {
              if (v) {
                if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                  CRYPTO = v;
                } else {
                  CRYPTO = !v;
                  throw Error(bignumberError + 'crypto unavailable');
                }
              } else {
                CRYPTO = v;
              }
            } else {
              throw Error(bignumberError + p + ' not true or false: ' + v);
            }
          } // MODULO_MODE {number} Integer, 0 to 9 inclusive.
          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'


          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
            v = obj[p];
            intCheck(v, 0, 9, p);
            MODULO_MODE = v;
          } // POW_PRECISION {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'


          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            POW_PRECISION = v;
          } // FORMAT {object}
          // '[BigNumber Error] FORMAT not an object: {v}'


          if (obj.hasOwnProperty(p = 'FORMAT')) {
            v = obj[p];
            if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);
          } // ALPHABET {string}
          // '[BigNumber Error] ALPHABET invalid: {v}'


          if (obj.hasOwnProperty(p = 'ALPHABET')) {
            v = obj[p]; // Disallow if only one character, or contains '.' or a repeated character.

            if (typeof v == 'string' && !/^.$|\.|(.).*\1/.test(v)) {
              ALPHABET = v;
            } else {
              throw Error(bignumberError + p + ' invalid: ' + v);
            }
          }
        } else {
          // '[BigNumber Error] Object expected: {v}'
          throw Error(bignumberError + 'Object expected: ' + obj);
        }
      }

      return {
        DECIMAL_PLACES: DECIMAL_PLACES,
        ROUNDING_MODE: ROUNDING_MODE,
        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
        RANGE: [MIN_EXP, MAX_EXP],
        CRYPTO: CRYPTO,
        MODULO_MODE: MODULO_MODE,
        POW_PRECISION: POW_PRECISION,
        FORMAT: FORMAT,
        ALPHABET: ALPHABET
      };
    };
    /*
     * Return true if v is a BigNumber instance, otherwise return false.
     *
     * v {any}
     */


    BigNumber.isBigNumber = function (v) {
      return v instanceof BigNumber || v && v._isBigNumber === true || false;
    };
    /*
     * Return a new BigNumber whose value is the maximum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */


    BigNumber.maximum = BigNumber.max = function () {
      return maxOrMin(arguments, P.lt);
    };
    /*
     * Return a new BigNumber whose value is the minimum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */


    BigNumber.minimum = BigNumber.min = function () {
      return maxOrMin(arguments, P.gt);
    };
    /*
     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,
     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing
     * zeros are produced).
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'
     * '[BigNumber Error] crypto unavailable'
     */


    BigNumber.random = function () {
      var pow2_53 = 0x20000000000000; // Return a 53 bit integer n, where 0 <= n < 9007199254740992.
      // Check if Math.random() produces more than 32 bits of randomness.
      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.

      var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {
        return mathfloor(Math.random() * pow2_53);
      } : function () {
        return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);
      };
      return function (dp) {
        var a,
            b,
            e,
            k,
            v,
            i = 0,
            c = [],
            rand = new BigNumber(ONE);
        if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);
        k = mathceil(dp / LOG_BASE);

        if (CRYPTO) {
          // Browsers supporting crypto.getRandomValues.
          if (crypto.getRandomValues) {
            a = crypto.getRandomValues(new Uint32Array(k *= 2));

            for (; i < k;) {
              // 53 bits:
              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)
              // 11111 11111111 11111111 11111111 11100000 00000000 00000000
              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)
              //                                     11111 11111111 11111111
              // 0x20000 is 2^21.
              v = a[i] * 0x20000 + (a[i + 1] >>> 11); // Rejection sampling:
              // 0 <= v < 9007199254740992
              // Probability that v >= 9e15, is
              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251

              if (v >= 9e15) {
                b = crypto.getRandomValues(new Uint32Array(2));
                a[i] = b[0];
                a[i + 1] = b[1];
              } else {
                // 0 <= v <= 8999999999999999
                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 2;
              }
            }

            i = k / 2; // Node.js supporting crypto.randomBytes.
          } else if (crypto.randomBytes) {
            // buffer
            a = crypto.randomBytes(k *= 7);

            for (; i < k;) {
              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40
              // 0x100000000 is 2^32, 0x1000000 is 2^24
              // 11111 11111111 11111111 11111111 11111111 11111111 11111111
              // 0 <= v < 9007199254740992
              v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

              if (v >= 9e15) {
                crypto.randomBytes(7).copy(a, i);
              } else {
                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 7;
              }
            }

            i = k / 7;
          } else {
            CRYPTO = false;
            throw Error(bignumberError + 'crypto unavailable');
          }
        } // Use Math.random.


        if (!CRYPTO) {
          for (; i < k;) {
            v = random53bitInt();
            if (v < 9e15) c[i++] = v % 1e14;
          }
        }

        k = c[--i];
        dp %= LOG_BASE; // Convert trailing digits to zeros according to dp.

        if (k && dp) {
          v = POWS_TEN[LOG_BASE - dp];
          c[i] = mathfloor(k / v) * v;
        } // Remove trailing elements which are zero.


        for (; c[i] === 0; c.pop(), i--) {
          ;
        } // Zero?


        if (i < 0) {
          c = [e = 0];
        } else {
          // Remove leading elements which are zero and adjust exponent accordingly.
          for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE) {
            ;
          } // Count the digits of the first element of c to determine leading zeros, and...


          for (i = 1, v = c[0]; v >= 10; v /= 10, i++) {
            ;
          } // adjust the exponent accordingly.


          if (i < LOG_BASE) e -= LOG_BASE - i;
        }

        rand.e = e;
        rand.c = c;
        return rand;
      };
    }(); // PRIVATE FUNCTIONS
    // Called by BigNumber and BigNumber.prototype.toString.


    convertBase = function () {
      var decimal = '0123456789';
      /*
       * Convert string of baseIn to an array of numbers of baseOut.
       * Eg. toBaseOut('255', 10, 16) returns [15, 15].
       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].
       */

      function toBaseOut(str, baseIn, baseOut, alphabet) {
        var j,
            arr = [0],
            arrL,
            i = 0,
            len = str.length;

        for (; i < len;) {
          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) {
            ;
          }

          arr[0] += alphabet.indexOf(str.charAt(i++));

          for (j = 0; j < arr.length; j++) {
            if (arr[j] > baseOut - 1) {
              if (arr[j + 1] == null) arr[j + 1] = 0;
              arr[j + 1] += arr[j] / baseOut | 0;
              arr[j] %= baseOut;
            }
          }
        }

        return arr.reverse();
      } // Convert a numeric string of baseIn to a numeric string of baseOut.
      // If the caller is toString, we are converting from base 10 to baseOut.
      // If the caller is BigNumber, we are converting from baseIn to base 10.


      return function (str, baseIn, baseOut, sign, callerIsToString) {
        var alphabet,
            d,
            e,
            k,
            r,
            x,
            xc,
            y,
            i = str.indexOf('.'),
            dp = DECIMAL_PLACES,
            rm = ROUNDING_MODE; // Non-integer.

        if (i >= 0) {
          k = POW_PRECISION; // Unlimited precision.

          POW_PRECISION = 0;
          str = str.replace('.', '');
          y = new BigNumber(baseIn);
          x = y.pow(str.length - i);
          POW_PRECISION = k; // Convert str as if an integer, then restore the fraction part by dividing the
          // result by its base raised to a power.

          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);
          y.e = y.c.length;
        } // Convert the number as integer.


        xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET)); // xc now represents str as an integer and converted to baseOut. e is the exponent.

        e = k = xc.length; // Remove trailing zeros.

        for (; xc[--k] == 0; xc.pop()) {
          ;
        } // Zero?


        if (!xc[0]) return alphabet.charAt(0); // Does str represent an integer? If so, no need for the division.

        if (i < 0) {
          --e;
        } else {
          x.c = xc;
          x.e = e; // The sign is needed for correct rounding.

          x.s = sign;
          x = div(x, y, dp, rm, baseOut);
          xc = x.c;
          r = x.r;
          e = x.e;
        } // xc now represents str converted to baseOut.
        // THe index of the rounding digit.


        d = e + dp + 1; // The rounding digit: the digit to the right of the digit that may be rounded up.

        i = xc[d]; // Look at the rounding digits and mode to determine whether to round up.

        k = baseOut / 2;
        r = r || d < 0 || xc[d + 1] != null;
        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7)); // If the index of the rounding digit is not greater than zero, or xc represents
        // zero, then the result of the base conversion is zero or, if rounding up, a value
        // such as 0.00001.

        if (d < 1 || !xc[0]) {
          // 1^-dp or 0
          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
        } else {
          // Truncate xc to the required number of decimal places.
          xc.length = d; // Round up?

          if (r) {
            // Rounding up may mean the previous digit has to be rounded up and so on.
            for (--baseOut; ++xc[--d] > baseOut;) {
              xc[d] = 0;

              if (!d) {
                ++e;
                xc = [1].concat(xc);
              }
            }
          } // Determine trailing zeros.


          for (k = xc.length; !xc[--k];) {
            ;
          } // E.g. [4, 11, 15] becomes 4bf.


          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])) {
            ;
          } // Add leading zeros, decimal point and trailing zeros as required.


          str = toFixedPoint(str, e, alphabet.charAt(0));
        } // The caller will add the sign.


        return str;
      };
    }(); // Perform division in the specified base. Called by div and convertBase.


    div = function () {
      // Assume non-zero x and k.
      function multiply(x, k, base) {
        var m,
            temp,
            xlo,
            xhi,
            carry = 0,
            i = x.length,
            klo = k % SQRT_BASE,
            khi = k / SQRT_BASE | 0;

        for (x = x.slice(); i--;) {
          xlo = x[i] % SQRT_BASE;
          xhi = x[i] / SQRT_BASE | 0;
          m = khi * xlo + xhi * klo;
          temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;
          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
          x[i] = temp % base;
        }

        if (carry) x = [carry].concat(x);
        return x;
      }

      function compare(a, b, aL, bL) {
        var i, cmp;

        if (aL != bL) {
          cmp = aL > bL ? 1 : -1;
        } else {
          for (i = cmp = 0; i < aL; i++) {
            if (a[i] != b[i]) {
              cmp = a[i] > b[i] ? 1 : -1;
              break;
            }
          }
        }

        return cmp;
      }

      function subtract(a, b, aL, base) {
        var i = 0; // Subtract b from a.

        for (; aL--;) {
          a[aL] -= i;
          i = a[aL] < b[aL] ? 1 : 0;
          a[aL] = i * base + a[aL] - b[aL];
        } // Remove leading zeros.


        for (; !a[0] && a.length > 1; a.splice(0, 1)) {
          ;
        }
      } // x: dividend, y: divisor.


      return function (x, y, dp, rm, base) {
        var cmp,
            e,
            i,
            more,
            n,
            prod,
            prodL,
            q,
            qc,
            rem,
            remL,
            rem0,
            xi,
            xL,
            yc0,
            yL,
            yz,
            s = x.s == y.s ? 1 : -1,
            xc = x.c,
            yc = y.c; // Either NaN, Infinity or 0?

        if (!xc || !xc[0] || !yc || !yc[0]) {
          return new BigNumber( // Return NaN if either NaN, or both Infinity or 0.
          !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : // Return 卤0 if x is 卤0 or y is 卤Infinity, or return 卤Infinity as y is 卤0.
          xc && xc[0] == 0 || !yc ? s * 0 : s / 0);
        }

        q = new BigNumber(s);
        qc = q.c = [];
        e = x.e - y.e;
        s = dp + e + 1;

        if (!base) {
          base = BASE;
          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
          s = s / LOG_BASE | 0;
        } // Result exponent may be one less then the current value of e.
        // The coefficients of the BigNumbers from convertBase may have trailing zeros.


        for (i = 0; yc[i] == (xc[i] || 0); i++) {
          ;
        }

        if (yc[i] > (xc[i] || 0)) e--;

        if (s < 0) {
          qc.push(1);
          more = true;
        } else {
          xL = xc.length;
          yL = yc.length;
          i = 0;
          s += 2; // Normalise xc and yc so highest order digit of yc is >= base / 2.

          n = mathfloor(base / (yc[0] + 1)); // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.
          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {

          if (n > 1) {
            yc = multiply(yc, n, base);
            xc = multiply(xc, n, base);
            yL = yc.length;
            xL = xc.length;
          }

          xi = yL;
          rem = xc.slice(0, yL);
          remL = rem.length; // Add zeros to make remainder as long as divisor.

          for (; remL < yL; rem[remL++] = 0) {
            ;
          }

          yz = yc.slice();
          yz = [0].concat(yz);
          yc0 = yc[0];
          if (yc[1] >= base / 2) yc0++; // Not necessary, but to prevent trial digit n > base, when using base 3.
          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;

          do {
            n = 0; // Compare divisor and remainder.

            cmp = compare(yc, rem, yL, remL); // If divisor < remainder.

            if (cmp < 0) {
              // Calculate trial digit, n.
              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0); // n is how many times the divisor goes into the current remainder.

              n = mathfloor(rem0 / yc0); //  Algorithm:
              //  product = divisor multiplied by trial digit (n).
              //  Compare product and remainder.
              //  If product is greater than remainder:
              //    Subtract divisor from product, decrement trial digit.
              //  Subtract product from remainder.
              //  If product was less than remainder at the last compare:
              //    Compare new remainder and divisor.
              //    If remainder is greater than divisor:
              //      Subtract divisor from remainder, increment trial digit.

              if (n > 1) {
                // n may be > base only when base is 3.
                if (n >= base) n = base - 1; // product = divisor * trial digit.

                prod = multiply(yc, n, base);
                prodL = prod.length;
                remL = rem.length; // Compare product and remainder.
                // If product > remainder then trial digit n too high.
                // n is 1 too high about 5% of the time, and is not known to have
                // ever been more than 1 too high.

                while (compare(prod, rem, prodL, remL) == 1) {
                  n--; // Subtract divisor from product.

                  subtract(prod, yL < prodL ? yz : yc, prodL, base);
                  prodL = prod.length;
                  cmp = 1;
                }
              } else {
                // n is 0 or 1, cmp is -1.
                // If n is 0, there is no need to compare yc and rem again below,
                // so change cmp to 1 to avoid it.
                // If n is 1, leave cmp as -1, so yc and rem are compared again.
                if (n == 0) {
                  // divisor < remainder, so n must be at least 1.
                  cmp = n = 1;
                } // product = divisor


                prod = yc.slice();
                prodL = prod.length;
              }

              if (prodL < remL) prod = [0].concat(prod); // Subtract product from remainder.

              subtract(rem, prod, remL, base);
              remL = rem.length; // If product was < remainder.

              if (cmp == -1) {
                // Compare divisor and new remainder.
                // If divisor < new remainder, subtract divisor from remainder.
                // Trial digit n too low.
                // n is 1 too low about 5% of the time, and very rarely 2 too low.
                while (compare(yc, rem, yL, remL) < 1) {
                  n++; // Subtract divisor from remainder.

                  subtract(rem, yL < remL ? yz : yc, remL, base);
                  remL = rem.length;
                }
              }
            } else if (cmp === 0) {
              n++;
              rem = [0];
            } // else cmp === 1 and n will be 0
            // Add the next digit, n, to the result array.


            qc[i++] = n; // Update the remainder.

            if (rem[0]) {
              rem[remL++] = xc[xi] || 0;
            } else {
              rem = [xc[xi]];
              remL = 1;
            }
          } while ((xi++ < xL || rem[0] != null) && s--);

          more = rem[0] != null; // Leading zero?

          if (!qc[0]) qc.splice(0, 1);
        }

        if (base == BASE) {
          // To calculate q.e, first get the number of digits of qc[0].
          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) {
            ;
          }

          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more); // Caller is convertBase.
        } else {
          q.e = e;
          q.r = +more;
        }

        return q;
      };
    }();
    /*
     * Return a string representing the value of BigNumber n in fixed-point or exponential
     * notation rounded to the specified decimal places or significant digits.
     *
     * n: a BigNumber.
     * i: the index of the last digit required (i.e. the digit that may be rounded up).
     * rm: the rounding mode.
     * id: 1 (toExponential) or 2 (toPrecision).
     */


    function format(n, i, rm, id) {
      var c0, e, ne, len, str;
      if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
      if (!n.c) return n.toString();
      c0 = n.c[0];
      ne = n.e;

      if (i == null) {
        str = coeffToString(n.c);
        str = id == 1 || id == 2 && ne <= TO_EXP_NEG ? toExponential(str, ne) : toFixedPoint(str, ne, '0');
      } else {
        n = round(new BigNumber(n), i, rm); // n.e may have changed if the value was rounded up.

        e = n.e;
        str = coeffToString(n.c);
        len = str.length; // toPrecision returns exponential notation if the number of significant digits
        // specified is less than the number of digits necessary to represent the integer
        // part of the value in fixed-point notation.
        // Exponential notation.

        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {
          // Append zeros?
          for (; len < i; str += '0', len++) {
            ;
          }

          str = toExponential(str, e); // Fixed-point notation.
        } else {
          i -= ne;
          str = toFixedPoint(str, e, '0'); // Append zeros?

          if (e + 1 > len) {
            if (--i > 0) for (str += '.'; i--; str += '0') {
              ;
            }
          } else {
            i += e - len;

            if (i > 0) {
              if (e + 1 == len) str += '.';

              for (; i--; str += '0') {
                ;
              }
            }
          }
        }
      }

      return n.s < 0 && c0 ? '-' + str : str;
    } // Handle BigNumber.max and BigNumber.min.


    function maxOrMin(args, method) {
      var m,
          n,
          i = 0;
      if (isArray(args[0])) args = args[0];
      m = new BigNumber(args[0]);

      for (; ++i < args.length;) {
        n = new BigNumber(args[i]); // If any number is NaN, return NaN.

        if (!n.s) {
          m = n;
          break;
        } else if (method.call(m, n)) {
          m = n;
        }
      }

      return m;
    }
    /*
     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
     * Called by minus, plus and times.
     */


    function normalise(n, c, e) {
      var i = 1,
          j = c.length; // Remove trailing zeros.

      for (; !c[--j]; c.pop()) {
        ;
      } // Calculate the base 10 exponent. First get the number of digits of c[0].


      for (j = c[0]; j >= 10; j /= 10, i++) {
        ;
      } // Overflow?


      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {
        // Infinity.
        n.c = n.e = null; // Underflow?
      } else if (e < MIN_EXP) {
        // Zero.
        n.c = [n.e = 0];
      } else {
        n.e = e;
        n.c = c;
      }

      return n;
    } // Handle values that fail the validity test in BigNumber.


    parseNumeric = function () {
      var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
          dotAfter = /^([^.]+)\.$/,
          dotBefore = /^\.([^.]+)$/,
          isInfinityOrNaN = /^-?(Infinity|NaN)$/,
          whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
      return function (x, str, isNum, b) {
        var base,
            s = isNum ? str : str.replace(whitespaceOrPlus, ''); // No exception on 卤Infinity or NaN.

        if (isInfinityOrNaN.test(s)) {
          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
          x.c = x.e = null;
        } else {
          if (!isNum) {
            // basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i
            s = s.replace(basePrefix, function (m, p1, p2) {
              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
              return !b || b == base ? p1 : m;
            });

            if (b) {
              base = b; // E.g. '1.' to '1', '.1' to '0.1'

              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
            }

            if (str != s) return new BigNumber(s, base);
          } // '[BigNumber Error] Not a number: {n}'
          // '[BigNumber Error] Not a base {b} number: {n}'


          if (BigNumber.DEBUG) {
            throw Error(bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);
          } // NaN


          x.c = x.e = x.s = null;
        }
      };
    }();
    /*
     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
     * If r is truthy, it is known that there are more digits after the rounding digit.
     */


    function round(x, sd, rm, r) {
      var d,
          i,
          j,
          k,
          n,
          ni,
          rd,
          xc = x.c,
          pows10 = POWS_TEN; // if x is not Infinity or NaN...

      if (xc) {
        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
        // n is a base 1e14 number, the value of the element of array x.c containing rd.
        // ni is the index of n within x.c.
        // d is the number of digits of n.
        // i is the index of rd within n including leading zeros.
        // j is the actual index of rd within n (if < 0, rd is a leading zero).
        out: {
          // Get the number of digits of the first element of xc.
          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) {
            ;
          }

          i = sd - d; // If the rounding digit is in the first element of xc...

          if (i < 0) {
            i += LOG_BASE;
            j = sd;
            n = xc[ni = 0]; // Get the rounding digit at index j of n.

            rd = n / pows10[d - j - 1] % 10 | 0;
          } else {
            ni = mathceil((i + 1) / LOG_BASE);

            if (ni >= xc.length) {
              if (r) {
                // Needed by sqrt.
                for (; xc.length <= ni; xc.push(0)) {
                  ;
                }

                n = rd = 0;
                d = 1;
                i %= LOG_BASE;
                j = i - LOG_BASE + 1;
              } else {
                break out;
              }
            } else {
              n = k = xc[ni]; // Get the number of digits of n.

              for (d = 1; k >= 10; k /= 10, d++) {
                ;
              } // Get the index of rd within n.


              i %= LOG_BASE; // Get the index of rd within n, adjusted for leading zeros.
              // The number of leading zeros of n is given by LOG_BASE - d.

              j = i - LOG_BASE + d; // Get the rounding digit at index j of n.

              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
            }
          }

          r = r || sd < 0 || // Are there any non-zero digits after the rounding digit?
          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
          xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);
          r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
          (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));

          if (sd < 1 || !xc[0]) {
            xc.length = 0;

            if (r) {
              // Convert sd to decimal places.
              sd -= x.e + 1; // 1, 0.1, 0.01, 0.001, 0.0001 etc.

              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
              x.e = -sd || 0;
            } else {
              // Zero.
              xc[0] = x.e = 0;
            }

            return x;
          } // Remove excess digits.


          if (i == 0) {
            xc.length = ni;
            k = 1;
            ni--;
          } else {
            xc.length = ni + 1;
            k = pows10[LOG_BASE - i]; // E.g. 56700 becomes 56000 if 7 is the rounding digit.
            // j > 0 means i > number of leading zeros of n.

            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
          } // Round up?


          if (r) {
            for (;;) {
              // If the digit to be rounded up is in the first element of xc...
              if (ni == 0) {
                // i will be the length of xc[0] before k is added.
                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) {
                  ;
                }

                j = xc[0] += k;

                for (k = 1; j >= 10; j /= 10, k++) {
                  ;
                } // if i != k the length has increased.


                if (i != k) {
                  x.e++;
                  if (xc[0] == BASE) xc[0] = 1;
                }

                break;
              } else {
                xc[ni] += k;
                if (xc[ni] != BASE) break;
                xc[ni--] = 0;
                k = 1;
              }
            }
          } // Remove trailing zeros.


          for (i = xc.length; xc[--i] === 0; xc.pop()) {
            ;
          }
        } // Overflow? Infinity.


        if (x.e > MAX_EXP) {
          x.c = x.e = null; // Underflow? Zero.
        } else if (x.e < MIN_EXP) {
          x.c = [x.e = 0];
        }
      }

      return x;
    } // PROTOTYPE/INSTANCE METHODS

    /*
     * Return a new BigNumber whose value is the absolute value of this BigNumber.
     */


    P.absoluteValue = P.abs = function () {
      var x = new BigNumber(this);
      if (x.s < 0) x.s = 1;
      return x;
    };
    /*
     * Return
     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
     *   0 if they have the same value,
     *   or null if the value of either is NaN.
     */


    P.comparedTo = function (y, b) {
      return compare(this, new BigNumber(y, b));
    };
    /*
     * If dp is undefined or null or true or false, return the number of decimal places of the
     * value of this BigNumber, or null if the value of this BigNumber is 卤Infinity or NaN.
     *
     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */


    P.decimalPlaces = P.dp = function (dp, rm) {
      var c,
          n,
          v,
          x = this;

      if (dp != null) {
        intCheck(dp, 0, MAX);
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        return round(new BigNumber(x), dp + x.e + 1, rm);
      }

      if (!(c = x.c)) return null;
      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE; // Subtract the number of trailing zeros of the last number.

      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--) {
        ;
      }
      if (n < 0) n = 0;
      return n;
    };
    /*
     *  n / 0 = I
     *  n / N = N
     *  n / I = 0
     *  0 / n = 0
     *  0 / 0 = N
     *  0 / N = N
     *  0 / I = 0
     *  N / n = N
     *  N / 0 = N
     *  N / N = N
     *  N / I = N
     *  I / n = I
     *  I / 0 = I
     *  I / N = N
     *  I / I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of
     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */


    P.dividedBy = P.div = function (y, b) {
      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
    };
    /*
     * Return a new BigNumber whose value is the integer part of dividing the value of this
     * BigNumber by the value of BigNumber(y, b).
     */


    P.dividedToIntegerBy = P.idiv = function (y, b) {
      return div(this, new BigNumber(y, b), 0, 1);
    };
    /*
     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.
     *
     * If m is present, return the result modulo m.
     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.
     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.
     *
     * The modular power operation works efficiently when x, n, and m are integers, otherwise it
     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.
     *
     * n {number|string|BigNumber} The exponent. An integer.
     * [m] {number|string|BigNumber} The modulus.
     *
     * '[BigNumber Error] Exponent not an integer: {n}'
     */


    P.exponentiatedBy = P.pow = function (n, m) {
      var half,
          isModExp,
          k,
          more,
          nIsBig,
          nIsNeg,
          nIsOdd,
          y,
          x = this;
      n = new BigNumber(n); // Allow NaN and 卤Infinity, but not other non-integers.

      if (n.c && !n.isInteger()) {
        throw Error(bignumberError + 'Exponent not an integer: ' + n);
      }

      if (m != null) m = new BigNumber(m); // Exponent of MAX_SAFE_INTEGER is 15.

      nIsBig = n.e > 14; // If x is NaN, 卤Infinity, 卤0 or 卤1, or n is 卤Infinity, NaN or 卤0.

      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {
        // The sign of the result of pow when x is negative depends on the evenness of n.
        // If +n overflows to 卤Infinity, the evenness of n would be not be known.
        y = new BigNumber(Math.pow(+x.valueOf(), nIsBig ? 2 - isOdd(n) : +n));
        return m ? y.mod(m) : y;
      }

      nIsNeg = n.s < 0;

      if (m) {
        // x % m returns NaN if abs(m) is zero, or m is NaN.
        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);
        isModExp = !nIsNeg && x.isInteger() && m.isInteger();
        if (isModExp) x = x.mod(m); // Overflow to 卤Infinity: >=2**1e10 or >=1.0000024**1e15.
        // Underflow to 卤0: <=0.79**1e10 or <=0.9999975**1e15.
      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 // [1, 240000000]
      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 // [80000000000000]  [99999750000000]
      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {
        // If x is negative and n is odd, k = -0, else k = 0.
        k = x.s < 0 && isOdd(n) ? -0 : 0; // If x >= 1, k = 卤Infinity.

        if (x.e > -1) k = 1 / k; // If n is negative return 卤0, else return 卤Infinity.

        return new BigNumber(nIsNeg ? 1 / k : k);
      } else if (POW_PRECISION) {
        // Truncating each coefficient array to a length of k after each multiplication
        // equates to truncating significant digits to POW_PRECISION + [28, 41],
        // i.e. there will be a minimum of 28 guard digits retained.
        k = mathceil(POW_PRECISION / LOG_BASE + 2);
      }

      if (nIsBig) {
        half = new BigNumber(0.5);
        nIsOdd = isOdd(n);
      } else {
        nIsOdd = n % 2;
      }

      if (nIsNeg) n.s = 1;
      y = new BigNumber(ONE); // Performs 54 loop iterations for n of 9007199254740991.

      for (;;) {
        if (nIsOdd) {
          y = y.times(x);
          if (!y.c) break;

          if (k) {
            if (y.c.length > k) y.c.length = k;
          } else if (isModExp) {
            y = y.mod(m); //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));
          }
        }

        if (nIsBig) {
          n = n.times(half);
          round(n, n.e + 1, 1);
          if (!n.c[0]) break;
          nIsBig = n.e > 14;
          nIsOdd = isOdd(n);
        } else {
          n = mathfloor(n / 2);
          if (!n) break;
          nIsOdd = n % 2;
        }

        x = x.times(x);

        if (k) {
          if (x.c && x.c.length > k) x.c.length = k;
        } else if (isModExp) {
          x = x.mod(m); //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));
        }
      }

      if (isModExp) return y;
      if (nIsNeg) y = ONE.div(y);
      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
    };
    /*
     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer
     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'
     */


    P.integerValue = function (rm) {
      var n = new BigNumber(this);
      if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
      return round(n, n.e + 1, rm);
    };
    /*
     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),
     * otherwise return false.
     */


    P.isEqualTo = P.eq = function (y, b) {
      return compare(this, new BigNumber(y, b)) === 0;
    };
    /*
     * Return true if the value of this BigNumber is a finite number, otherwise return false.
     */


    P.isFinite = function () {
      return !!this.c;
    };
    /*
     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),
     * otherwise return false.
     */


    P.isGreaterThan = P.gt = function (y, b) {
      return compare(this, new BigNumber(y, b)) > 0;
    };
    /*
     * Return true if the value of this BigNumber is greater than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */


    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;
    };
    /*
     * Return true if the value of this BigNumber is an integer, otherwise return false.
     */


    P.isInteger = function () {
      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
    };
    /*
     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),
     * otherwise return false.
     */


    P.isLessThan = P.lt = function (y, b) {
      return compare(this, new BigNumber(y, b)) < 0;
    };
    /*
     * Return true if the value of this BigNumber is less than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */


    P.isLessThanOrEqualTo = P.lte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
    };
    /*
     * Return true if the value of this BigNumber is NaN, otherwise return false.
     */


    P.isNaN = function () {
      return !this.s;
    };
    /*
     * Return true if the value of this BigNumber is negative, otherwise return false.
     */


    P.isNegative = function () {
      return this.s < 0;
    };
    /*
     * Return true if the value of this BigNumber is positive, otherwise return false.
     */


    P.isPositive = function () {
      return this.s > 0;
    };
    /*
     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.
     */


    P.isZero = function () {
      return !!this.c && this.c[0] == 0;
    };
    /*
     *  n - 0 = n
     *  n - N = N
     *  n - I = -I
     *  0 - n = -n
     *  0 - 0 = 0
     *  0 - N = N
     *  0 - I = -I
     *  N - n = N
     *  N - 0 = N
     *  N - N = N
     *  N - I = N
     *  I - n = I
     *  I - 0 = I
     *  I - N = N
     *  I - I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber minus the value of
     * BigNumber(y, b).
     */


    P.minus = function (y, b) {
      var i,
          j,
          t,
          xLTy,
          x = this,
          a = x.s;
      y = new BigNumber(y, b);
      b = y.s; // Either NaN?

      if (!a || !b) return new BigNumber(NaN); // Signs differ?

      if (a != b) {
        y.s = -b;
        return x.plus(y);
      }

      var xe = x.e / LOG_BASE,
          ye = y.e / LOG_BASE,
          xc = x.c,
          yc = y.c;

      if (!xe || !ye) {
        // Either Infinity?
        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN); // Either zero?

        if (!xc[0] || !yc[0]) {
          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
          ROUNDING_MODE == 3 ? -0 : 0);
        }
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice(); // Determine which is the bigger number.

      if (a = xe - ye) {
        if (xLTy = a < 0) {
          a = -a;
          t = xc;
        } else {
          ye = xe;
          t = yc;
        }

        t.reverse(); // Prepend zeros to equalise exponents.

        for (b = a; b--; t.push(0)) {
          ;
        }

        t.reverse();
      } else {
        // Exponents equal. Check digit by digit.
        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

        for (a = b = 0; b < j; b++) {
          if (xc[b] != yc[b]) {
            xLTy = xc[b] < yc[b];
            break;
          }
        }
      } // x < y? Point xc to the array of the bigger number.


      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;
      b = (j = yc.length) - (i = xc.length); // Append zeros to xc if shorter.
      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.

      if (b > 0) for (; b--; xc[i++] = 0) {
        ;
      }
      b = BASE - 1; // Subtract yc from xc.

      for (; j > a;) {
        if (xc[--j] < yc[j]) {
          for (i = j; i && !xc[--i]; xc[i] = b) {
            ;
          }

          --xc[i];
          xc[j] += BASE;
        }

        xc[j] -= yc[j];
      } // Remove leading zeros and adjust exponent accordingly.


      for (; xc[0] == 0; xc.splice(0, 1), --ye) {
        ;
      } // Zero?


      if (!xc[0]) {
        // Following IEEE 754 (2008) 6.3,
        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.
        y.s = ROUNDING_MODE == 3 ? -1 : 1;
        y.c = [y.e = 0];
        return y;
      } // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
      // for finite x and y.


      return normalise(y, xc, ye);
    };
    /*
     *   n % 0 =  N
     *   n % N =  N
     *   n % I =  n
     *   0 % n =  0
     *  -0 % n = -0
     *   0 % 0 =  N
     *   0 % N =  N
     *   0 % I =  0
     *   N % n =  N
     *   N % 0 =  N
     *   N % N =  N
     *   N % I =  N
     *   I % n =  N
     *   I % 0 =  N
     *   I % N =  N
     *   I % I =  N
     *
     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of
     * BigNumber(y, b). The result depends on the value of MODULO_MODE.
     */


    P.modulo = P.mod = function (y, b) {
      var q,
          s,
          x = this;
      y = new BigNumber(y, b); // Return NaN if x is Infinity or NaN, or y is NaN or zero.

      if (!x.c || !y.s || y.c && !y.c[0]) {
        return new BigNumber(NaN); // Return x if y is Infinity or x is zero.
      } else if (!y.c || x.c && !x.c[0]) {
        return new BigNumber(x);
      }

      if (MODULO_MODE == 9) {
        // Euclidian division: q = sign(y) * floor(x / abs(y))
        // r = x - qy    where  0 <= r < abs(y)
        s = y.s;
        y.s = 1;
        q = div(x, y, 0, 3);
        y.s = s;
        q.s *= s;
      } else {
        q = div(x, y, 0, MODULO_MODE);
      }

      y = x.minus(q.times(y)); // To match JavaScript %, ensure sign of zero is sign of dividend.

      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;
      return y;
    };
    /*
     *  n * 0 = 0
     *  n * N = N
     *  n * I = I
     *  0 * n = 0
     *  0 * 0 = 0
     *  0 * N = N
     *  0 * I = N
     *  N * n = N
     *  N * 0 = N
     *  N * N = N
     *  N * I = N
     *  I * n = I
     *  I * 0 = N
     *  I * N = N
     *  I * I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value
     * of BigNumber(y, b).
     */


    P.multipliedBy = P.times = function (y, b) {
      var c,
          e,
          i,
          j,
          k,
          m,
          xcL,
          xlo,
          xhi,
          ycL,
          ylo,
          yhi,
          zc,
          base,
          sqrtBase,
          x = this,
          xc = x.c,
          yc = (y = new BigNumber(y, b)).c; // Either NaN, 卤Infinity or 卤0?

      if (!xc || !yc || !xc[0] || !yc[0]) {
        // Return NaN if either is NaN, or one is 0 and the other is Infinity.
        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
          y.c = y.e = y.s = null;
        } else {
          y.s *= x.s; // Return 卤Infinity if either is 卤Infinity.

          if (!xc || !yc) {
            y.c = y.e = null; // Return 卤0 if either is 卤0.
          } else {
            y.c = [0];
            y.e = 0;
          }
        }

        return y;
      }

      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
      y.s *= x.s;
      xcL = xc.length;
      ycL = yc.length; // Ensure xc points to longer array and xcL to its length.

      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i; // Initialise the result array with zeros.

      for (i = xcL + ycL, zc = []; i--; zc.push(0)) {
        ;
      }

      base = BASE;
      sqrtBase = SQRT_BASE;

      for (i = ycL; --i >= 0;) {
        c = 0;
        ylo = yc[i] % sqrtBase;
        yhi = yc[i] / sqrtBase | 0;

        for (k = xcL, j = i + k; j > i;) {
          xlo = xc[--k] % sqrtBase;
          xhi = xc[k] / sqrtBase | 0;
          m = yhi * xlo + xhi * ylo;
          xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;
          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
          zc[j--] = xlo % base;
        }

        zc[j] = c;
      }

      if (c) {
        ++e;
      } else {
        zc.splice(0, 1);
      }

      return normalise(y, zc, e);
    };
    /*
     * Return a new BigNumber whose value is the value of this BigNumber negated,
     * i.e. multiplied by -1.
     */


    P.negated = function () {
      var x = new BigNumber(this);
      x.s = -x.s || null;
      return x;
    };
    /*
     *  n + 0 = n
     *  n + N = N
     *  n + I = I
     *  0 + n = n
     *  0 + 0 = 0
     *  0 + N = N
     *  0 + I = I
     *  N + n = N
     *  N + 0 = N
     *  N + N = N
     *  N + I = N
     *  I + n = I
     *  I + 0 = I
     *  I + N = N
     *  I + I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber plus the value of
     * BigNumber(y, b).
     */


    P.plus = function (y, b) {
      var t,
          x = this,
          a = x.s;
      y = new BigNumber(y, b);
      b = y.s; // Either NaN?

      if (!a || !b) return new BigNumber(NaN); // Signs differ?

      if (a != b) {
        y.s = -b;
        return x.minus(y);
      }

      var xe = x.e / LOG_BASE,
          ye = y.e / LOG_BASE,
          xc = x.c,
          yc = y.c;

      if (!xe || !ye) {
        // Return 卤Infinity if either 卤Infinity.
        if (!xc || !yc) return new BigNumber(a / 0); // Either zero?
        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.

        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice(); // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.

      if (a = xe - ye) {
        if (a > 0) {
          ye = xe;
          t = yc;
        } else {
          a = -a;
          t = xc;
        }

        t.reverse();

        for (; a--; t.push(0)) {
          ;
        }

        t.reverse();
      }

      a = xc.length;
      b = yc.length; // Point xc to the longer array, and b to the shorter length.

      if (a - b < 0) t = yc, yc = xc, xc = t, b = a; // Only start adding at yc.length - 1 as the further digits of xc can be ignored.

      for (a = 0; b;) {
        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
      }

      if (a) {
        xc = [a].concat(xc);
        ++ye;
      } // No need to check for zero, as +x + +y != 0 && -x + -y != 0
      // ye = MAX_EXP + 1 possible


      return normalise(y, xc, ye);
    };
    /*
     * If sd is undefined or null or true or false, return the number of significant digits of
     * the value of this BigNumber, or null if the value of this BigNumber is 卤Infinity or NaN.
     * If sd is true include integer-part trailing zeros in the count.
     *
     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.
     *                     boolean: whether to count integer-part trailing zeros: true or false.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */


    P.precision = P.sd = function (sd, rm) {
      var c,
          n,
          v,
          x = this;

      if (sd != null && sd !== !!sd) {
        intCheck(sd, 1, MAX);
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        return round(new BigNumber(x), sd, rm);
      }

      if (!(c = x.c)) return null;
      v = c.length - 1;
      n = v * LOG_BASE + 1;

      if (v = c[v]) {
        // Subtract the number of trailing zeros of the last element.
        for (; v % 10 == 0; v /= 10, n--) {
          ;
        } // Add the number of digits of the first element.


        for (v = c[0]; v >= 10; v /= 10, n++) {
          ;
        }
      }

      if (sd && x.e + 1 > n) n = x.e + 1;
      return n;
    };
    /*
     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places
     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.
     *
     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'
     */


    P.shiftedBy = function (k) {
      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
      return this.times('1e' + k);
    };
    /*
     *  sqrt(-n) =  N
     *  sqrt(N) =  N
     *  sqrt(-I) =  N
     *  sqrt(I) =  I
     *  sqrt(0) =  0
     *  sqrt(-0) = -0
     *
     * Return a new BigNumber whose value is the square root of the value of this BigNumber,
     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */


    P.squareRoot = P.sqrt = function () {
      var m,
          n,
          r,
          rep,
          t,
          x = this,
          c = x.c,
          s = x.s,
          e = x.e,
          dp = DECIMAL_PLACES + 4,
          half = new BigNumber('0.5'); // Negative/NaN/Infinity/zero?

      if (s !== 1 || !c || !c[0]) {
        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
      } // Initial estimate.


      s = Math.sqrt(+x); // Math.sqrt underflow/overflow?
      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.

      if (s == 0 || s == 1 / 0) {
        n = coeffToString(c);
        if ((n.length + e) % 2 == 0) n += '0';
        s = Math.sqrt(n);
        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

        if (s == 1 / 0) {
          n = '1e' + e;
        } else {
          n = s.toExponential();
          n = n.slice(0, n.indexOf('e') + 1) + e;
        }

        r = new BigNumber(n);
      } else {
        r = new BigNumber(s + '');
      } // Check for zero.
      // r could be zero if MIN_EXP is changed after the this value was created.
      // This would cause a division by zero (x/t) and hence Infinity below, which would cause
      // coeffToString to throw.


      if (r.c[0]) {
        e = r.e;
        s = e + dp;
        if (s < 3) s = 0; // Newton-Raphson iteration.

        for (;;) {
          t = r;
          r = half.times(t.plus(div(x, t, dp, 1)));

          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {
            // The exponent of r may here be one less than the final result exponent,
            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits
            // are indexed correctly.
            if (r.e < e) --s;
            n = n.slice(s - 3, s + 1); // The 4th rounding digit may be in error by -1 so if the 4 rounding digits
            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
            // iteration.

            if (n == '9999' || !rep && n == '4999') {
              // On the first iteration only, check to see if rounding up gives the
              // exact result as the nines may infinitely repeat.
              if (!rep) {
                round(t, t.e + DECIMAL_PLACES + 2, 0);

                if (t.times(t).eq(x)) {
                  r = t;
                  break;
                }
              }

              dp += 4;
              s += 4;
              rep = 1;
            } else {
              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact
              // result. If not, then there are further digits and m will be truthy.
              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {
                // Truncate to the first rounding digit.
                round(r, r.e + DECIMAL_PLACES + 2, 1);
                m = !r.times(r).eq(x);
              }

              break;
            }
          }
        }
      }

      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
    };
    /*
     * Return a string representing the value of this BigNumber in exponential notation and
     * rounded using ROUNDING_MODE to dp fixed decimal places.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */


    P.toExponential = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp++;
      }

      return format(this, dp, rm, 1);
    };
    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounding
     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
     * but e.g. (-0.00001).toFixed(0) is '-0'.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */


    P.toFixed = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp = dp + this.e + 1;
      }

      return format(this, dp, rm);
    };
    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounded
     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties
     * of the FORMAT object (see BigNumber.set).
     *
     * FORMAT = {
     *      decimalSeparator : '.',
     *      groupSeparator : ',',
     *      groupSize : 3,
     *      secondaryGroupSize : 0,
     *      fractionGroupSeparator : '\xA0',    // non-breaking space
     *      fractionGroupSize : 0
     * };
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */


    P.toFormat = function (dp, rm) {
      var str = this.toFixed(dp, rm);

      if (this.c) {
        var i,
            arr = str.split('.'),
            g1 = +FORMAT.groupSize,
            g2 = +FORMAT.secondaryGroupSize,
            groupSeparator = FORMAT.groupSeparator,
            intPart = arr[0],
            fractionPart = arr[1],
            isNeg = this.s < 0,
            intDigits = isNeg ? intPart.slice(1) : intPart,
            len = intDigits.length;
        if (g2) i = g1, g1 = g2, g2 = i, len -= i;

        if (g1 > 0 && len > 0) {
          i = len % g1 || g1;
          intPart = intDigits.substr(0, i);

          for (; i < len; i += g1) {
            intPart += groupSeparator + intDigits.substr(i, g1);
          }

          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
          if (isNeg) intPart = '-' + intPart;
        }

        str = fractionPart ? intPart + FORMAT.decimalSeparator + ((g2 = +FORMAT.fractionGroupSize) ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'), '$&' + FORMAT.fractionGroupSeparator) : fractionPart) : intPart;
      }

      return str;
    };
    /*
     * Return a string array representing the value of this BigNumber as a simple fraction with
     * an integer numerator and an integer denominator. The denominator will be a positive
     * non-zero value less than or equal to the specified maximum denominator. If a maximum
     * denominator is not specified, the denominator will be the lowest value necessary to
     * represent the number exactly.
     *
     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.
     *
     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'
     */


    P.toFraction = function (md) {
      var arr,
          d,
          d0,
          d1,
          d2,
          e,
          exp,
          n,
          n0,
          n1,
          q,
          s,
          x = this,
          xc = x.c;

      if (md != null) {
        n = new BigNumber(md); // Throw if md is less than one or is not an integer, unless it is Infinity.

        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
          throw Error(bignumberError + 'Argument ' + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + md);
        }
      }

      if (!xc) return x.toString();
      d = new BigNumber(ONE);
      n1 = d0 = new BigNumber(ONE);
      d1 = n0 = new BigNumber(ONE);
      s = coeffToString(xc); // Determine initial denominator.
      // d is a power of 10 and the minimum max denominator that specifies the value exactly.

      e = d.e = s.length - x.e - 1;
      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
      md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;
      exp = MAX_EXP;
      MAX_EXP = 1 / 0;
      n = new BigNumber(s); // n0 = d1 = 0

      n0.c[0] = 0;

      for (;;) {
        q = div(n, d, 0, 1);
        d2 = d0.plus(q.times(d1));
        if (d2.comparedTo(md) == 1) break;
        d0 = d1;
        d1 = d2;
        n1 = n0.plus(q.times(d2 = n1));
        n0 = d2;
        d = n.minus(q.times(d2 = d));
        n = d2;
      }

      d2 = div(md.minus(d0), d1, 0, 1);
      n0 = n0.plus(d2.times(n1));
      d0 = d0.plus(d2.times(d1));
      n0.s = n1.s = x.s;
      e *= 2; // Determine which fraction is closer to x, n0/d0 or n1/d1

      arr = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1.toString(), d1.toString()] : [n0.toString(), d0.toString()];
      MAX_EXP = exp;
      return arr;
    };
    /*
     * Return the value of this BigNumber converted to a number primitive.
     */


    P.toNumber = function () {
      return +this;
    };
    /*
     * Return a string representing the value of this BigNumber rounded to sd significant digits
     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits
     * necessary to represent the integer part of the value in fixed-point notation, then use
     * exponential notation.
     *
     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */


    P.toPrecision = function (sd, rm) {
      if (sd != null) intCheck(sd, 1, MAX);
      return format(this, sd, rm, 2);
    };
    /*
     * Return a string representing the value of this BigNumber in base b, or base 10 if b is
     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and
     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent
     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than
     * TO_EXP_NEG, return exponential notation.
     *
     * [b] {number} Integer, 2 to ALPHABET.length inclusive.
     *
     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
     */


    P.toString = function (b) {
      var str,
          n = this,
          s = n.s,
          e = n.e; // Infinity or NaN?

      if (e === null) {
        if (s) {
          str = 'Infinity';
          if (s < 0) str = '-' + str;
        } else {
          str = 'NaN';
        }
      } else {
        str = coeffToString(n.c);

        if (b == null) {
          str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');
          str = convertBase(toFixedPoint(str, e, '0'), 10, b, s, true);
        }

        if (s < 0 && n.c[0]) str = '-' + str;
      }

      return str;
    };
    /*
     * Return as toString, but do not accept a base argument, and include the minus sign for
     * negative zero.
     */


    P.valueOf = P.toJSON = function () {
      var str,
          n = this,
          e = n.e;
      if (e === null) return n.toString();
      str = coeffToString(n.c);
      str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');
      return n.s < 0 ? '-' + str : str;
    };

    P._isBigNumber = true;
    if (configObject != null) BigNumber.set(configObject);
    return BigNumber;
  } // PRIVATE HELPER FUNCTIONS


  function bitFloor(n) {
    var i = n | 0;
    return n > 0 || n === i ? i : i - 1;
  } // Return a coefficient array as a string of base 10 digits.


  function coeffToString(a) {
    var s,
        z,
        i = 1,
        j = a.length,
        r = a[0] + '';

    for (; i < j;) {
      s = a[i++] + '';
      z = LOG_BASE - s.length;

      for (; z--; s = '0' + s) {
        ;
      }

      r += s;
    } // Determine trailing zeros.


    for (j = r.length; r.charCodeAt(--j) === 48;) {
      ;
    }

    return r.slice(0, j + 1 || 1);
  } // Compare the value of BigNumbers x and y.


  function compare(x, y) {
    var a,
        b,
        xc = x.c,
        yc = y.c,
        i = x.s,
        j = y.s,
        k = x.e,
        l = y.e; // Either NaN?

    if (!i || !j) return null;
    a = xc && !xc[0];
    b = yc && !yc[0]; // Either zero?

    if (a || b) return a ? b ? 0 : -j : i; // Signs differ?

    if (i != j) return i;
    a = i < 0;
    b = k == l; // Either Infinity?

    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1; // Compare exponents.

    if (!b) return k > l ^ a ? 1 : -1;
    j = (k = xc.length) < (l = yc.length) ? k : l; // Compare digit by digit.

    for (i = 0; i < j; i++) {
      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;
    } // Compare lengths.


    return k == l ? 0 : k > l ^ a ? 1 : -1;
  }
  /*
   * Check that n is a primitive number, an integer, and in range, otherwise throw.
   */


  function intCheck(n, min, max, name) {
    if (n < min || n > max || n !== (n < 0 ? mathceil(n) : mathfloor(n))) {
      throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + n);
    }
  }

  function isArray(obj) {
    return Object.prototype.toString.call(obj) == '[object Array]';
  } // Assumes finite n.


  function isOdd(n) {
    var k = n.c.length - 1;
    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
  }

  function toExponential(str, e) {
    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;
  }

  function toFixedPoint(str, e, z) {
    var len, zs; // Negative exponent?

    if (e < 0) {
      // Prepend zeros.
      for (zs = z + '.'; ++e; zs += z) {
        ;
      }

      str = zs + str; // Positive exponent
    } else {
      len = str.length; // Append zeros.

      if (++e > len) {
        for (zs = z, e -= len; --e; zs += z) {
          ;
        }

        str += zs;
      } else if (e < len) {
        str = str.slice(0, e) + '.' + str.slice(e);
      }
    }

    return str;
  } // EXPORT


  BigNumber = clone();
  BigNumber['default'] = BigNumber.BigNumber = BigNumber; // AMD.

  if (typeof define == 'function' && define.amd) {
    define(function () {
      return BigNumber;
    }); // Node.js and other environments that support module.exports.
  } else if (typeof module != 'undefined' && module.exports) {
    module.exports = BigNumber; // Browser.
  } else {
    if (!globalObject) {
      globalObject = typeof self != 'undefined' && self ? self : window;
    }

    globalObject.BigNumber = BigNumber;
  }
})(void 0);

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/interceptor/PostCommandInterceptor.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b1980TfB1xNpaZmm/jO2HzX', 'PostCommandInterceptor');
// framework/interceptor/PostCommandInterceptor.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostCommandInterceptor = void 0;
var PostCommandInterceptor = /** @class */ (function () {
    function PostCommandInterceptor() {
    }
    PostCommandInterceptor.prototype.preHandle = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) { return resolve(true); })];
            });
        });
    };
    return PostCommandInterceptor;
}());
exports.PostCommandInterceptor = PostCommandInterceptor;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvaW50ZXJjZXB0b3IvUG9zdENvbW1hbmRJbnRlcmNlcHRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsaUZBQWlGO0FBQ2pGLHlGQUF5RjtBQUN6RixtQkFBbUI7QUFDbkIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUNuRyw4QkFBOEI7QUFDOUIsMkZBQTJGO0FBQzNGLG1HQUFtRzs7O0FBSW5HO0lBQUE7SUFPQSxDQUFDO0lBTFUsMENBQVMsR0FBaEI7UUFBaUIsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7dUNBQUUsT0FBTzs7Z0JBQzdCLHNCQUFPLElBQUksT0FBTyxDQUFVLFVBQUEsT0FBTyxJQUFJLE9BQUEsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFiLENBQWEsQ0FBQyxFQUFDOzs7S0FDekQ7SUFHTCw2QkFBQztBQUFELENBUEEsQUFPQyxJQUFBO0FBUHFCLHdEQUFzQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuaW1wb3J0IHtJQ29tbWFuZEludGVyY2VwdG9yfSBmcm9tIFwiLi9Db21tYW5kSW50ZXJjZXB0b3JcIjtcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQb3N0Q29tbWFuZEludGVyY2VwdG9yIGltcGxlbWVudHMgSUNvbW1hbmRJbnRlcmNlcHRvciB7XHJcblxyXG4gICAgYXN5bmMgIHByZUhhbmRsZSguLi5hcmdzKTpQcm9taXNlPGJvb2xlYW4+e1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZTxib29sZWFuPihyZXNvbHZlID0+IHJlc29sdmUodHJ1ZSkpO1xyXG4gICAgfVxyXG5cclxuICAgIGFic3RyYWN0IGFzeW5jIHBvc3RIYW5kbGUocmVzOmFueSwgLi4uYXJncyk6UHJvbWlzZTtcclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/Toast.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '909590vl5dAK5p6FmzQ2dSn', 'Toast');
// framework/extend/Toast.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Toast = /** @class */ (function () {
    function Toast() {
    }
    /** 飘动显示效果(适合显示label提示，类似toast) */
    Toast.flutterAction = function () {
        var moveSeq = cc.sequence([
            cc.moveBy(0.6, cc.v2(0, 0)),
            cc.moveBy(1, cc.v2(0, 84))
        ]);
        var scaleSeq = cc.sequence([
            cc.scaleTo(0.1, 1.2),
            cc.scaleTo(0.1, 0.8),
            cc.scaleTo(0.1, 1),
        ]);
        var alphaSeq = cc.sequence([
            cc.fadeTo(0.8, 255),
            cc.fadeTo(0.8, 0),
        ]);
        var spawn = cc.spawn(moveSeq, alphaSeq);
        return spawn;
    };
    Toast.createRichText = function (config) {
        var name = "OnlyOneToastNode";
        var node = cc.director.getScene().getChildByName(name);
        if (!node) {
            node = new cc.Node(name);
            cc.director.getScene().addChild(node, 100);
        }
        node.scale = 1;
        node.rotation = 0;
        node.opacity = 255;
        node.group = config.group || "ui";
        node.x = config.x || cc.visibleRect.center.x;
        node.y = config.y || cc.visibleRect.center.y;
        var sprite = node.addComponent(cc.Sprite);
        sprite.type = cc.Sprite.Type.SLICED;
        sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;
        sprite.spriteFrame = cc.loader.getRes("frame_fy005", cc.SpriteFrame);
        var richTextNode = node.getChildByName("RichTextNode");
        if (!richTextNode) {
            richTextNode = new cc.Node("RichTextNode");
            node.addChild(richTextNode);
            richTextNode.addComponent(cc.RichText);
        }
        var richText = richTextNode.getComponent(cc.RichText);
        richText.fontSize = config.fontSize || 38;
        richText.string = config.string;
        richText.lineHeight = richText.fontSize + 10;
        node.setContentSize(richText.node.width + 30, richText.node.height + 20);
        return node;
    };
    Toast.flutter = function (config) {
        var node = this.createRichText(config);
        node.stopAllActions();
        node.runAction(cc.sequence(cc.delayTime(0.6), this.flutterAction(), cc.callFunc(function () { return node.destroy(); })));
    };
    Toast.fadeOut = function (config) {
        var node = this.createRichText(config);
        node.stopAllActions();
        node.runAction(cc.sequence(cc.delayTime(0.8), cc.fadeTo(2, 80), cc.callFunc(function () { return node.destroy(); })));
    };
    Toast = __decorate([
        ccclass
    ], Toast);
    return Toast;
}());
exports.default = Toast;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/interceptor/PreCommandInterceptor.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a3b4dlTRDJMdKhqI+oAHol6', 'PreCommandInterceptor');
// framework/interceptor/PreCommandInterceptor.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.PreCommandInterceptor = void 0;
var PreCommandInterceptor = /** @class */ (function () {
    function PreCommandInterceptor() {
    }
    PreCommandInterceptor.prototype.postHandle = function (res) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) { return resolve(); })];
            });
        });
    };
    return PreCommandInterceptor;
}());
exports.PreCommandInterceptor = PreCommandInterceptor;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvaW50ZXJjZXB0b3IvUHJlQ29tbWFuZEludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBV0E7SUFBQTtJQU9BLENBQUM7SUFIUywwQ0FBVSxHQUFoQixVQUFpQixHQUFPO1FBQUUsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCw2QkFBTzs7dUNBQUUsT0FBTzs7Z0JBQ3RDLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQUEsT0FBTyxJQUFJLE9BQUEsT0FBTyxFQUFFLEVBQVQsQ0FBUyxDQUFDLEVBQUM7OztLQUM1QztJQUNMLDRCQUFDO0FBQUQsQ0FQQSxBQU9DLElBQUE7QUFQcUIsc0RBQXFCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbmltcG9ydCB7SUNvbW1hbmRJbnRlcmNlcHRvcn0gZnJvbSBcIi4vQ29tbWFuZEludGVyY2VwdG9yXCI7XHJcblxyXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgUHJlQ29tbWFuZEludGVyY2VwdG9yIGltcGxlbWVudHMgSUNvbW1hbmRJbnRlcmNlcHRvciB7XHJcblxyXG4gICAgYWJzdHJhY3QgYXN5bmMgcHJlSGFuZGxlKC4uLmFyZ3MpOlByb21pc2U8Ym9vbGVhbj47XHJcblxyXG4gICAgYXN5bmMgcG9zdEhhbmRsZShyZXM6YW55LCAuLi5hcmdzKTpQcm9taXNle1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHJlc29sdmUoKSk7XHJcbiAgICB9XHJcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/interceptor/TestInterceptor.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '15bb6OJyFFCL6LFRF9kunrS', 'TestInterceptor');
// framework/interceptor/TestInterceptor.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var PostCommandInterceptor_1 = require("./PostCommandInterceptor");
var Interceptor_1 = require("./Interceptor");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TestInterceptor = /** @class */ (function (_super) {
    __extends(TestInterceptor, _super);
    function TestInterceptor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestInterceptor.prototype.postHandle = function (res) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        setTimeout(function () {
                            console.log("postHandle");
                            resolve(true);
                        }, 3000);
                    })];
            });
        });
    };
    TestInterceptor.prototype.preHandle = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        setTimeout(function () {
                            console.log(Interceptor_1.Interceptor.interceptorsOf("test.TestCommand"), "====");
                            Interceptor_1.Interceptor.unregister("test.TestCommand", TestInterceptor);
                            // InterceptorManager.unregister("test.TestCommand", TestInterceptor2);
                            console.log(Interceptor_1.Interceptor.interceptorsOf("test.TestCommand"), "====22");
                            resolve(true);
                        }, 3000);
                    })];
            });
        });
    };
    return TestInterceptor;
}(PostCommandInterceptor_1.PostCommandInterceptor));
exports.default = TestInterceptor;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvaW50ZXJjZXB0b3IvVGVzdEludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOztBQUluRyxtRUFBZ0U7QUFDaEUsNkNBQTBDO0FBRXBDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRTFDO0lBQTZDLG1DQUFzQjtJQUFuRTs7SUFzQkEsQ0FBQztJQXBCUyxvQ0FBVSxHQUFoQixVQUFpQixHQUFPO1FBQUUsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCw2QkFBTzs7dUNBQUUsT0FBTzs7Z0JBQ3RDLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQUEsT0FBTzt3QkFDdEIsVUFBVSxDQUFDOzRCQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUM7NEJBQzFCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzt3QkFDbEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO29CQUNiLENBQUMsQ0FBQyxFQUFDOzs7S0FDTjtJQUVLLG1DQUFTLEdBQWY7UUFBZ0IsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7dUNBQUUsT0FBTzs7Z0JBQzVCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQUEsT0FBTzt3QkFDdEIsVUFBVSxDQUFDOzRCQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQVcsQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQzs0QkFDcEUseUJBQVcsQ0FBQyxVQUFVLENBQUMsa0JBQWtCLEVBQUUsZUFBZSxDQUFDLENBQUM7NEJBQzVELHVFQUF1RTs0QkFDdkUsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBVyxDQUFDLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDOzRCQUN0RSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ2xCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztvQkFDYixDQUFDLENBQUMsRUFBQzs7O0tBQ047SUFDTCxzQkFBQztBQUFELENBdEJBLEFBc0JDLENBdEI0QywrQ0FBc0IsR0FzQmxFIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5cclxuXHJcbmltcG9ydCB7UG9zdENvbW1hbmRJbnRlcmNlcHRvcn0gZnJvbSBcIi4vUG9zdENvbW1hbmRJbnRlcmNlcHRvclwiO1xyXG5pbXBvcnQge0ludGVyY2VwdG9yfSBmcm9tIFwiLi9JbnRlcmNlcHRvclwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXN0SW50ZXJjZXB0b3IgZXh0ZW5kcyBQb3N0Q29tbWFuZEludGVyY2VwdG9yIHtcclxuXHJcbiAgICBhc3luYyBwb3N0SGFuZGxlKHJlczphbnksIC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicG9zdEhhbmRsZVwiKTtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XHJcbiAgICAgICAgICAgIH0sIDMwMDApO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIHByZUhhbmRsZSguLi5hcmdzKTpQcm9taXNle1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhJbnRlcmNlcHRvci5pbnRlcmNlcHRvcnNPZihcInRlc3QuVGVzdENvbW1hbmRcIiksIFwiPT09PVwiKTtcclxuICAgICAgICAgICAgICAgIEludGVyY2VwdG9yLnVucmVnaXN0ZXIoXCJ0ZXN0LlRlc3RDb21tYW5kXCIsIFRlc3RJbnRlcmNlcHRvcik7XHJcbiAgICAgICAgICAgICAgICAvLyBJbnRlcmNlcHRvck1hbmFnZXIudW5yZWdpc3RlcihcInRlc3QuVGVzdENvbW1hbmRcIiwgVGVzdEludGVyY2VwdG9yMik7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhJbnRlcmNlcHRvci5pbnRlcmNlcHRvcnNPZihcInRlc3QuVGVzdENvbW1hbmRcIiksIFwiPT09PTIyXCIpO1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcclxuICAgICAgICAgICAgfSwgMzAwMCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/interceptor/TestInterceptor2.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '106578FBhpDPKHz51vWDn84', 'TestInterceptor2');
// framework/interceptor/TestInterceptor2.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestInterceptor2 = void 0;
var PostCommandInterceptor_1 = require("./PostCommandInterceptor");
var TestInterceptor2 = /** @class */ (function (_super) {
    __extends(TestInterceptor2, _super);
    function TestInterceptor2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestInterceptor2.prototype.postHandle = function (res) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        setTimeout(function () {
                            console.log("postHandle  TestInterceptor2");
                            resolve(true);
                        }, 3000);
                    })];
            });
        });
    };
    TestInterceptor2.prototype.preHandle = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        setTimeout(function () {
                            console.log("preHandle  TestInterceptor2");
                            resolve(true);
                        }, 3000);
                    })];
            });
        });
    };
    return TestInterceptor2;
}(PostCommandInterceptor_1.PostCommandInterceptor));
exports.TestInterceptor2 = TestInterceptor2;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvaW50ZXJjZXB0b3IvVGVzdEludGVyY2VwdG9yMi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsaUZBQWlGO0FBQ2pGLHlGQUF5RjtBQUN6RixtQkFBbUI7QUFDbkIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUNuRyw4QkFBOEI7QUFDOUIsMkZBQTJGO0FBQzNGLG1HQUFtRzs7O0FBS25HLG1FQUFnRTtBQUVoRTtJQUFzQyxvQ0FBc0I7SUFBNUQ7O0lBbUJBLENBQUM7SUFsQlMscUNBQVUsR0FBaEIsVUFBaUIsR0FBTztRQUFFLGNBQU87YUFBUCxVQUFPLEVBQVAscUJBQU8sRUFBUCxJQUFPO1lBQVAsNkJBQU87O3VDQUFFLE9BQU87O2dCQUN0QyxzQkFBTyxJQUFJLE9BQU8sQ0FBQyxVQUFBLE9BQU87d0JBQ3RCLFVBQVUsQ0FBQzs0QkFDUCxPQUFPLENBQUMsR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUM7NEJBQzVDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQzt3QkFDbEIsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO29CQUNiLENBQUMsQ0FBQyxFQUFDOzs7S0FDTjtJQUVLLG9DQUFTLEdBQWY7UUFBZ0IsY0FBTzthQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCx5QkFBTzs7dUNBQUUsT0FBTzs7Z0JBQzVCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQUEsT0FBTzt3QkFDdEIsVUFBVSxDQUFDOzRCQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsNkJBQTZCLENBQUMsQ0FBQzs0QkFDM0MsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO3dCQUNsQixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7b0JBQ2IsQ0FBQyxDQUFDLEVBQUM7OztLQUNOO0lBRUwsdUJBQUM7QUFBRCxDQW5CQSxBQW1CQyxDQW5CcUMsK0NBQXNCLEdBbUIzRDtBQW5CWSw0Q0FBZ0IiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcblxyXG5cclxuXHJcbmltcG9ydCB7UG9zdENvbW1hbmRJbnRlcmNlcHRvcn0gZnJvbSBcIi4vUG9zdENvbW1hbmRJbnRlcmNlcHRvclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRlc3RJbnRlcmNlcHRvcjIgZXh0ZW5kcyBQb3N0Q29tbWFuZEludGVyY2VwdG9yIHtcclxuICAgIGFzeW5jIHBvc3RIYW5kbGUocmVzOmFueSwgLi4uYXJncyk6UHJvbWlzZXtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJwb3N0SGFuZGxlICBUZXN0SW50ZXJjZXB0b3IyXCIpO1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcclxuICAgICAgICAgICAgfSwgMzAwMCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgcHJlSGFuZGxlKC4uLmFyZ3MpOlByb21pc2V7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicHJlSGFuZGxlICBUZXN0SW50ZXJjZXB0b3IyXCIpO1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcclxuICAgICAgICAgICAgfSwgMzAwMCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/facade/ICommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f2c54BXBTlBn4fPXf6TacFb', 'ICommand');
// framework/facade/ICommand.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZmFjYWRlL0lDb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5cclxuLyoqXHJcbiAqIOWRveS7pOaooeW8j+aOpeWPoyjml6DnirbmgIHmiafooYzpgLvovpHvvIznm7jlvZPkuo7nuq/lh73mlbApXHJcbiAqIDEu57un5om/5q2k5o6l5Y+j5bqU6K+l5re75YqgQGNjY2xhc3MoY2xhc3NOYW1lKVxyXG4gKiAyLueUseS6juWRveS7pOaooeW8j+WPguaVsCguLi5hcmdzKeayoeacieexu+Wei++8jOaJgOS7peW7uuiuruWPguaVsOi+g+WkmuaDheWGteS4i+S9v+eUqOmdmeaAgeaWueazleS7o+abv2NvbW1hbmTjgIJcclxuICogKi9cclxuZXhwb3J0IGludGVyZmFjZSBJQ29tbWFuZHtcclxuICAgIGV4ZWN1dGUgKC4uLmFyZ3MpOlByb21pc2U7XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/actions/CCCircleAction.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'afdccsULkNP67nQoHfoJT7g', 'CCCircleAction');
// framework/actions/CCCircleAction.js

"use strict";

//creator from pabble 2018-11-12
cc.Circle = cc.Class({
  name: 'cc.Circle',
  "extends": cc.ActionInterval,

  /**
   * @param duration  时间
   * @param center  圆心点
   * @param r  半径
   * @param s  起点弧度
   * @param e  终点弧度
   * @param revert  是否顺时针(默认顺时针，逆时针传false)
   * */
  ctor: function ctor(duration, center, r, s, e, revert) {
    if (revert === void 0) {
      revert = false;
    }

    this._duration = duration;
    this._center = center;
    this._radius = r;
    this._startAngle = s;
    this._endAngle = e;
    this._dstartAngle = s % (2 * Math.PI);
    this._dendAngle = e % (2 * Math.PI);
    this._runTime = 0;
    this._direction = revert;

    if (this._direction) {
      if (this._dendAngle >= this._dstartAngle) {
        this._dstartAngle += 2 * Math.PI;
      }
    } else {
      if (this._dendAngle <= this._dstartAngle) {
        this._dendAngle += 2 * Math.PI;
      }
    }

    cc.Circle.prototype.initWithDuration.call(this, duration, center, r, s, e, revert);
  },
  initWithDuration: function initWithDuration(duration) {
    cc.ActionInterval.prototype.initWithDuration.call(this, duration);
    return true;
  },
  startWithTarget: function startWithTarget(target) {
    cc.ActionInterval.prototype.startWithTarget.call(this, target);
  },
  update: function update(dt) {
    dt = this._computeEaseTime(dt);

    if (this.target) {
      var a = (this._dendAngle - this._dstartAngle) * dt + this._dstartAngle;
      var x = this._center.x + this._radius * Math.sin(a);
      var y = this._center.y + this._radius * Math.cos(a);
      this.target.x = x;
      this.target.y = y;
    }
  },
  reverse: function reverse() {
    var action = new cc.Circle(this._duration, this._center, this._radius, this._endAngle, this._startAngle, !this._direction);

    this._cloneDecoration(action);

    this._reverseEaseList(action);

    return action;
  },
  clone: function clone() {
    var action = new cc.Circle(this._duration, this._center, this._radius, this._startAngle, this._endAngle, this._direction);

    this._cloneDecoration(action);

    this._reverseEaseList(action);

    return action;
  }
});

cc.circle = function (duration, center, r, s, e, revert) {
  return new cc.Circle(duration, center, r, s, e, revert);
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvYWN0aW9ucy9DQ0NpcmNsZUFjdGlvbi5qcyJdLCJuYW1lcyI6WyJjYyIsIkNpcmNsZSIsIkNsYXNzIiwibmFtZSIsIkFjdGlvbkludGVydmFsIiwiY3RvciIsImR1cmF0aW9uIiwiY2VudGVyIiwiciIsInMiLCJlIiwicmV2ZXJ0IiwiX2R1cmF0aW9uIiwiX2NlbnRlciIsIl9yYWRpdXMiLCJfc3RhcnRBbmdsZSIsIl9lbmRBbmdsZSIsIl9kc3RhcnRBbmdsZSIsIk1hdGgiLCJQSSIsIl9kZW5kQW5nbGUiLCJfcnVuVGltZSIsIl9kaXJlY3Rpb24iLCJwcm90b3R5cGUiLCJpbml0V2l0aER1cmF0aW9uIiwiY2FsbCIsInN0YXJ0V2l0aFRhcmdldCIsInRhcmdldCIsInVwZGF0ZSIsImR0IiwiX2NvbXB1dGVFYXNlVGltZSIsImEiLCJ4Iiwic2luIiwieSIsImNvcyIsInJldmVyc2UiLCJhY3Rpb24iLCJfY2xvbmVEZWNvcmF0aW9uIiwiX3JldmVyc2VFYXNlTGlzdCIsImNsb25lIiwiY2lyY2xlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0FBLEVBQUUsQ0FBQ0MsTUFBSCxHQUFZRCxFQUFFLENBQUNFLEtBQUgsQ0FBUztFQUNqQkMsSUFBSSxFQUFHLFdBRFU7RUFFakIsV0FBVUgsRUFBRSxDQUFDSSxjQUZJOztFQUdqQjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0lDLElBQUksRUFBQyxjQUFTQyxRQUFULEVBQWtCQyxNQUFsQixFQUF5QkMsQ0FBekIsRUFBMkJDLENBQTNCLEVBQTZCQyxDQUE3QixFQUErQkMsTUFBL0IsRUFBNEM7SUFBQSxJQUFiQSxNQUFhO01BQWJBLE1BQWEsR0FBTixLQUFNO0lBQUE7O0lBQzdDLEtBQUtDLFNBQUwsR0FBaUJOLFFBQWpCO0lBQ0EsS0FBS08sT0FBTCxHQUFlTixNQUFmO0lBQ0EsS0FBS08sT0FBTCxHQUFlTixDQUFmO0lBQ0EsS0FBS08sV0FBTCxHQUFtQk4sQ0FBbkI7SUFDQSxLQUFLTyxTQUFMLEdBQWlCTixDQUFqQjtJQUNBLEtBQUtPLFlBQUwsR0FBb0JSLENBQUMsSUFBRyxJQUFFUyxJQUFJLENBQUNDLEVBQVYsQ0FBckI7SUFDQSxLQUFLQyxVQUFMLEdBQWtCVixDQUFDLElBQUcsSUFBRVEsSUFBSSxDQUFDQyxFQUFWLENBQW5CO0lBQ0EsS0FBS0UsUUFBTCxHQUFnQixDQUFoQjtJQUNBLEtBQUtDLFVBQUwsR0FBa0JYLE1BQWxCOztJQUNBLElBQUcsS0FBS1csVUFBUixFQUFtQjtNQUNmLElBQUcsS0FBS0YsVUFBTCxJQUFtQixLQUFLSCxZQUEzQixFQUF3QztRQUNwQyxLQUFLQSxZQUFMLElBQW1CLElBQUVDLElBQUksQ0FBQ0MsRUFBMUI7TUFDSDtJQUNKLENBSkQsTUFJTztNQUNILElBQUcsS0FBS0MsVUFBTCxJQUFtQixLQUFLSCxZQUEzQixFQUF3QztRQUNwQyxLQUFLRyxVQUFMLElBQWlCLElBQUVGLElBQUksQ0FBQ0MsRUFBeEI7TUFDSDtJQUNKOztJQUNEbkIsRUFBRSxDQUFDQyxNQUFILENBQVVzQixTQUFWLENBQW9CQyxnQkFBcEIsQ0FBcUNDLElBQXJDLENBQTBDLElBQTFDLEVBQWdEbkIsUUFBaEQsRUFBeURDLE1BQXpELEVBQWdFQyxDQUFoRSxFQUFrRUMsQ0FBbEUsRUFBb0VDLENBQXBFLEVBQXNFQyxNQUF0RTtFQUNILENBL0JnQjtFQWdDakJhLGdCQUFnQixFQUFDLDBCQUFTbEIsUUFBVCxFQUFrQjtJQUMvQk4sRUFBRSxDQUFDSSxjQUFILENBQWtCbUIsU0FBbEIsQ0FBNEJDLGdCQUE1QixDQUE2Q0MsSUFBN0MsQ0FBa0QsSUFBbEQsRUFBd0RuQixRQUF4RDtJQUNBLE9BQU8sSUFBUDtFQUNILENBbkNnQjtFQW9DakJvQixlQXBDaUIsMkJBb0NEQyxNQXBDQyxFQW9DTTtJQUNuQjNCLEVBQUUsQ0FBQ0ksY0FBSCxDQUFrQm1CLFNBQWxCLENBQTRCRyxlQUE1QixDQUE0Q0QsSUFBNUMsQ0FBaUQsSUFBakQsRUFBdURFLE1BQXZEO0VBQ0gsQ0F0Q2dCO0VBdUNqQkMsTUF2Q2lCLGtCQXVDVkMsRUF2Q1UsRUF1Q1A7SUFDTkEsRUFBRSxHQUFHLEtBQUtDLGdCQUFMLENBQXNCRCxFQUF0QixDQUFMOztJQUNBLElBQUcsS0FBS0YsTUFBUixFQUFlO01BQ1gsSUFBSUksQ0FBQyxHQUFHLENBQUMsS0FBS1gsVUFBTCxHQUFrQixLQUFLSCxZQUF4QixJQUF5Q1ksRUFBekMsR0FBK0MsS0FBS1osWUFBNUQ7TUFFQSxJQUFJZSxDQUFDLEdBQUcsS0FBS25CLE9BQUwsQ0FBYW1CLENBQWIsR0FBaUIsS0FBS2xCLE9BQUwsR0FBZUksSUFBSSxDQUFDZSxHQUFMLENBQVNGLENBQVQsQ0FBeEM7TUFDQSxJQUFJRyxDQUFDLEdBQUcsS0FBS3JCLE9BQUwsQ0FBYXFCLENBQWIsR0FBaUIsS0FBS3BCLE9BQUwsR0FBZUksSUFBSSxDQUFDaUIsR0FBTCxDQUFTSixDQUFULENBQXhDO01BQ0EsS0FBS0osTUFBTCxDQUFZSyxDQUFaLEdBQWdCQSxDQUFoQjtNQUNBLEtBQUtMLE1BQUwsQ0FBWU8sQ0FBWixHQUFnQkEsQ0FBaEI7SUFDSDtFQUNKLENBakRnQjtFQWtEakJFLE9BQU8sRUFBQyxtQkFBWTtJQUNoQixJQUFJQyxNQUFNLEdBQUcsSUFBSXJDLEVBQUUsQ0FBQ0MsTUFBUCxDQUFjLEtBQUtXLFNBQW5CLEVBQTZCLEtBQUtDLE9BQWxDLEVBQTBDLEtBQUtDLE9BQS9DLEVBQXVELEtBQUtFLFNBQTVELEVBQXNFLEtBQUtELFdBQTNFLEVBQXVGLENBQUMsS0FBS08sVUFBN0YsQ0FBYjs7SUFDQSxLQUFLZ0IsZ0JBQUwsQ0FBc0JELE1BQXRCOztJQUNBLEtBQUtFLGdCQUFMLENBQXNCRixNQUF0Qjs7SUFDQSxPQUFPQSxNQUFQO0VBQ0gsQ0F2RGdCO0VBd0RqQkcsS0FBSyxFQUFDLGlCQUFVO0lBQ1osSUFBSUgsTUFBTSxHQUFHLElBQUlyQyxFQUFFLENBQUNDLE1BQVAsQ0FBYyxLQUFLVyxTQUFuQixFQUE2QixLQUFLQyxPQUFsQyxFQUEwQyxLQUFLQyxPQUEvQyxFQUF1RCxLQUFLQyxXQUE1RCxFQUF3RSxLQUFLQyxTQUE3RSxFQUF1RixLQUFLTSxVQUE1RixDQUFiOztJQUNBLEtBQUtnQixnQkFBTCxDQUFzQkQsTUFBdEI7O0lBQ0EsS0FBS0UsZ0JBQUwsQ0FBc0JGLE1BQXRCOztJQUNBLE9BQU9BLE1BQVA7RUFDSDtBQTdEZ0IsQ0FBVCxDQUFaOztBQWdFQXJDLEVBQUUsQ0FBQ3lDLE1BQUgsR0FBWSxVQUFTbkMsUUFBVCxFQUFrQkMsTUFBbEIsRUFBeUJDLENBQXpCLEVBQTJCQyxDQUEzQixFQUE2QkMsQ0FBN0IsRUFBK0JDLE1BQS9CLEVBQXNDO0VBQzlDLE9BQU8sSUFBSVgsRUFBRSxDQUFDQyxNQUFQLENBQWNLLFFBQWQsRUFBdUJDLE1BQXZCLEVBQThCQyxDQUE5QixFQUFnQ0MsQ0FBaEMsRUFBa0NDLENBQWxDLEVBQW9DQyxNQUFwQyxDQUFQO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy9jcmVhdG9yIGZyb20gcGFiYmxlIDIwMTgtMTEtMTJcclxuY2MuQ2lyY2xlID0gY2MuQ2xhc3Moe1xyXG4gICAgbmFtZSA6ICdjYy5DaXJjbGUnLFxyXG4gICAgZXh0ZW5kcyA6IGNjLkFjdGlvbkludGVydmFsLFxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0gZHVyYXRpb24gIOaXtumXtFxyXG4gICAgICogQHBhcmFtIGNlbnRlciAg5ZyG5b+D54K5XHJcbiAgICAgKiBAcGFyYW0gciAg5Y2K5b6EXHJcbiAgICAgKiBAcGFyYW0gcyAg6LW354K55byn5bqmXHJcbiAgICAgKiBAcGFyYW0gZSAg57uI54K55byn5bqmXHJcbiAgICAgKiBAcGFyYW0gcmV2ZXJ0ICDmmK/lkKbpobrml7bpkogo6buY6K6k6aG65pe26ZKI77yM6YCG5pe26ZKI5LygZmFsc2UpXHJcbiAgICAgKiAqL1xyXG4gICAgY3RvcjpmdW5jdGlvbihkdXJhdGlvbixjZW50ZXIscixzLGUscmV2ZXJ0PWZhbHNlKXtcclxuICAgICAgICB0aGlzLl9kdXJhdGlvbiA9IGR1cmF0aW9uO1xyXG4gICAgICAgIHRoaXMuX2NlbnRlciA9IGNlbnRlcjtcclxuICAgICAgICB0aGlzLl9yYWRpdXMgPSByO1xyXG4gICAgICAgIHRoaXMuX3N0YXJ0QW5nbGUgPSBzO1xyXG4gICAgICAgIHRoaXMuX2VuZEFuZ2xlID0gZTtcclxuICAgICAgICB0aGlzLl9kc3RhcnRBbmdsZSA9IHMlICgyKk1hdGguUEkpXHJcbiAgICAgICAgdGhpcy5fZGVuZEFuZ2xlID0gZSUgKDIqTWF0aC5QSSlcclxuICAgICAgICB0aGlzLl9ydW5UaW1lID0gMDtcclxuICAgICAgICB0aGlzLl9kaXJlY3Rpb24gPSByZXZlcnRcclxuICAgICAgICBpZih0aGlzLl9kaXJlY3Rpb24pe1xyXG4gICAgICAgICAgICBpZih0aGlzLl9kZW5kQW5nbGUgPj0gdGhpcy5fZHN0YXJ0QW5nbGUpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZHN0YXJ0QW5nbGUrPTIqTWF0aC5QSVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYodGhpcy5fZGVuZEFuZ2xlIDw9IHRoaXMuX2RzdGFydEFuZ2xlKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2RlbmRBbmdsZSs9MipNYXRoLlBJXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2MuQ2lyY2xlLnByb3RvdHlwZS5pbml0V2l0aER1cmF0aW9uLmNhbGwodGhpcywgZHVyYXRpb24sY2VudGVyLHIscyxlLHJldmVydCk7XHRcclxuICAgIH0sXHJcbiAgICBpbml0V2l0aER1cmF0aW9uOmZ1bmN0aW9uKGR1cmF0aW9uKXtcclxuICAgICAgICBjYy5BY3Rpb25JbnRlcnZhbC5wcm90b3R5cGUuaW5pdFdpdGhEdXJhdGlvbi5jYWxsKHRoaXMsIGR1cmF0aW9uKVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSxcclxuICAgIHN0YXJ0V2l0aFRhcmdldCh0YXJnZXQpe1xyXG4gICAgICAgIGNjLkFjdGlvbkludGVydmFsLnByb3RvdHlwZS5zdGFydFdpdGhUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQpO1xyXG4gICAgfSxcclxuICAgIHVwZGF0ZShkdCl7XHJcbiAgICAgICAgZHQgPSB0aGlzLl9jb21wdXRlRWFzZVRpbWUoZHQpO1xyXG4gICAgICAgIGlmKHRoaXMudGFyZ2V0KXtcclxuICAgICAgICAgICAgdmFyIGEgPSAodGhpcy5fZGVuZEFuZ2xlIC0gdGhpcy5fZHN0YXJ0QW5nbGUpICogKGR0KSArIHRoaXMuX2RzdGFydEFuZ2xlXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2YXIgeCA9IHRoaXMuX2NlbnRlci54ICsgdGhpcy5fcmFkaXVzICogTWF0aC5zaW4oYSk7XHJcbiAgICAgICAgICAgIHZhciB5ID0gdGhpcy5fY2VudGVyLnkgKyB0aGlzLl9yYWRpdXMgKiBNYXRoLmNvcyhhKTtcclxuICAgICAgICAgICAgdGhpcy50YXJnZXQueCA9IHg7XHJcbiAgICAgICAgICAgIHRoaXMudGFyZ2V0LnkgPSB5XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIHJldmVyc2U6ZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBhY3Rpb24gPSBuZXcgY2MuQ2lyY2xlKHRoaXMuX2R1cmF0aW9uLHRoaXMuX2NlbnRlcix0aGlzLl9yYWRpdXMsdGhpcy5fZW5kQW5nbGUsdGhpcy5fc3RhcnRBbmdsZSwhdGhpcy5fZGlyZWN0aW9uKVxyXG4gICAgICAgIHRoaXMuX2Nsb25lRGVjb3JhdGlvbihhY3Rpb24pO1xyXG4gICAgICAgIHRoaXMuX3JldmVyc2VFYXNlTGlzdChhY3Rpb24pO1xyXG4gICAgICAgIHJldHVybiBhY3Rpb247XHJcbiAgICB9LFxyXG4gICAgY2xvbmU6ZnVuY3Rpb24oKXtcclxuICAgICAgICB2YXIgYWN0aW9uID0gbmV3IGNjLkNpcmNsZSh0aGlzLl9kdXJhdGlvbix0aGlzLl9jZW50ZXIsdGhpcy5fcmFkaXVzLHRoaXMuX3N0YXJ0QW5nbGUsdGhpcy5fZW5kQW5nbGUsdGhpcy5fZGlyZWN0aW9uKVxyXG4gICAgICAgIHRoaXMuX2Nsb25lRGVjb3JhdGlvbihhY3Rpb24pO1xyXG4gICAgICAgIHRoaXMuX3JldmVyc2VFYXNlTGlzdChhY3Rpb24pO1xyXG4gICAgICAgIHJldHVybiBhY3Rpb247XHJcbiAgICB9XHJcbn0pXHJcblxyXG5jYy5jaXJjbGUgPSBmdW5jdGlvbihkdXJhdGlvbixjZW50ZXIscixzLGUscmV2ZXJ0KXtcclxuICAgIHJldHVybiBuZXcgY2MuQ2lyY2xlKGR1cmF0aW9uLGNlbnRlcixyLHMsZSxyZXZlcnQpXHJcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/component/NodeEvent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6b1ecDYFXlE36An3M1fJwDV', 'NodeEvent');
// framework/component/NodeEvent.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu;
var NodeEventType;
(function (NodeEventType) {
    NodeEventType[NodeEventType["TOUCH_START"] = 0] = "TOUCH_START";
    NodeEventType[NodeEventType["TOUCH_MOVE"] = 1] = "TOUCH_MOVE";
    NodeEventType[NodeEventType["TOUCH_END"] = 2] = "TOUCH_END";
    NodeEventType[NodeEventType["TOUCH_CANCEL"] = 3] = "TOUCH_CANCEL";
    NodeEventType[NodeEventType["MOUSE_DOWN"] = 4] = "MOUSE_DOWN";
    NodeEventType[NodeEventType["MOUSE_MOVE"] = 5] = "MOUSE_MOVE";
    NodeEventType[NodeEventType["MOUSE_ENTER"] = 6] = "MOUSE_ENTER";
    NodeEventType[NodeEventType["MOUSE_LEAVE"] = 7] = "MOUSE_LEAVE";
    NodeEventType[NodeEventType["MOUSE_UP"] = 8] = "MOUSE_UP";
    NodeEventType[NodeEventType["MOUSE_WHEEL"] = 9] = "MOUSE_WHEEL";
    NodeEventType[NodeEventType["POSITION_CHANGED"] = 10] = "POSITION_CHANGED";
    NodeEventType[NodeEventType["ROTATION_CHANGED"] = 11] = "ROTATION_CHANGED";
    NodeEventType[NodeEventType["SCALE_CHANGED"] = 12] = "SCALE_CHANGED";
    NodeEventType[NodeEventType["SIZE_CHANGED"] = 13] = "SIZE_CHANGED";
    NodeEventType[NodeEventType["ANCHOR_CHANGED"] = 14] = "ANCHOR_CHANGED";
    NodeEventType[NodeEventType["CHILD_ADDED"] = 15] = "CHILD_ADDED";
    NodeEventType[NodeEventType["CHILD_REMOVED"] = 16] = "CHILD_REMOVED";
    NodeEventType[NodeEventType["CHILD_REORDER"] = 17] = "CHILD_REORDER";
    NodeEventType[NodeEventType["GROUP_CHANGED"] = 18] = "GROUP_CHANGED";
})(NodeEventType || (NodeEventType = {}));
var map = new Map();
map.set(NodeEventType.TOUCH_START, cc.Node.EventType.TOUCH_START);
map.set(NodeEventType.TOUCH_MOVE, cc.Node.EventType.TOUCH_MOVE);
map.set(NodeEventType.TOUCH_END, cc.Node.EventType.TOUCH_END);
map.set(NodeEventType.TOUCH_CANCEL, cc.Node.EventType.TOUCH_CANCEL);
map.set(NodeEventType.MOUSE_DOWN, cc.Node.EventType.MOUSE_DOWN);
map.set(NodeEventType.MOUSE_MOVE, cc.Node.EventType.MOUSE_MOVE);
map.set(NodeEventType.MOUSE_ENTER, cc.Node.EventType.MOUSE_ENTER);
map.set(NodeEventType.MOUSE_LEAVE, cc.Node.EventType.MOUSE_LEAVE);
map.set(NodeEventType.MOUSE_UP, cc.Node.EventType.MOUSE_UP);
map.set(NodeEventType.MOUSE_WHEEL, cc.Node.EventType.MOUSE_WHEEL);
map.set(NodeEventType.POSITION_CHANGED, cc.Node.EventType.POSITION_CHANGED);
map.set(NodeEventType.SCALE_CHANGED, cc.Node.EventType.SCALE_CHANGED);
map.set(NodeEventType.ANCHOR_CHANGED, cc.Node.EventType.ANCHOR_CHANGED);
map.set(NodeEventType.CHILD_ADDED, cc.Node.EventType.CHILD_ADDED);
map.set(NodeEventType.CHILD_REMOVED, cc.Node.EventType.CHILD_REMOVED);
map.set(NodeEventType.CHILD_REORDER, cc.Node.EventType.CHILD_REORDER);
map.set(NodeEventType.GROUP_CHANGED, cc.Node.EventType.GROUP_CHANGED);
var NodeEvent = /** @class */ (function (_super) {
    __extends(NodeEvent, _super);
    function NodeEvent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.once = false;
        _this.eventType = NodeEventType.TOUCH_END;
        _this.eventHandlers = [];
        return _this;
    }
    NodeEvent.prototype.onLoad = function () {
        this.node.on(map.get(this.eventType), this.onNodeEvent, this);
    };
    NodeEvent.prototype.onNodeEvent = function (event) {
        cc.Component.EventHandler.emitEvents(this.eventHandlers, event);
        if (this.once) {
            this.offEvent();
            this.destroy();
        }
    };
    NodeEvent.prototype.offEvent = function () {
        this.node.off(map.get(this.eventType), this.onNodeEvent, this);
    };
    NodeEvent.prototype.onDestroy = function () {
        this.offEvent();
    };
    __decorate([
        property
    ], NodeEvent.prototype, "once", void 0);
    __decorate([
        property({ type: cc.Enum(NodeEventType), displayName: "事件类型" })
    ], NodeEvent.prototype, "eventType", void 0);
    __decorate([
        property({ type: cc.Component.EventHandler, displayName: "触发事件" })
    ], NodeEvent.prototype, "eventHandlers", void 0);
    NodeEvent = __decorate([
        ccclass,
        menu("自定义/NodeEvent")
    ], NodeEvent);
    return NodeEvent;
}(cc.Component));
exports.default = NodeEvent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvY29tcG9uZW50L05vZGVFdmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQU0sSUFBQSxLQUE0QixFQUFFLENBQUMsVUFBVSxFQUF4QyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQUEsRUFBRSxJQUFJLFVBQWlCLENBQUM7QUFFaEQsSUFBSyxhQW9CSjtBQXBCRCxXQUFLLGFBQWE7SUFDZCwrREFBVyxDQUFBO0lBQ1gsNkRBQVUsQ0FBQTtJQUNWLDJEQUFTLENBQUE7SUFDVCxpRUFBWSxDQUFBO0lBQ1osNkRBQVUsQ0FBQTtJQUNWLDZEQUFVLENBQUE7SUFDViwrREFBVyxDQUFBO0lBQ1gsK0RBQVcsQ0FBQTtJQUNYLHlEQUFRLENBQUE7SUFDUiwrREFBVyxDQUFBO0lBQ1gsMEVBQWdCLENBQUE7SUFDaEIsMEVBQWdCLENBQUE7SUFDaEIsb0VBQWEsQ0FBQTtJQUNiLGtFQUFZLENBQUE7SUFDWixzRUFBYyxDQUFBO0lBQ2QsZ0VBQVcsQ0FBQTtJQUNYLG9FQUFhLENBQUE7SUFDYixvRUFBYSxDQUFBO0lBQ2Isb0VBQWEsQ0FBQTtBQUNqQixDQUFDLEVBcEJJLGFBQWEsS0FBYixhQUFhLFFBb0JqQjtBQUVELElBQUksR0FBRyxHQUFHLElBQUksR0FBRyxFQUF5QixDQUFDO0FBQzNDLEdBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNsRSxHQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDaEUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQzlELEdBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUNwRSxHQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDaEUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2hFLEdBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNsRSxHQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDbEUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzVELEdBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNsRSxHQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQzVFLEdBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN0RSxHQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxjQUFjLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDeEUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2xFLEdBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN0RSxHQUFHLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxhQUFhLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDdEUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBS3RFO0lBQXVDLDZCQUFZO0lBQW5EO1FBQUEscUVBK0JDO1FBNUJHLFVBQUksR0FBRyxLQUFLLENBQUM7UUFHYixlQUFTLEdBQWlCLGFBQWEsQ0FBQyxTQUFTLENBQUM7UUFHbEQsbUJBQWEsR0FBK0IsRUFBRSxDQUFDOztJQXNCbkQsQ0FBQztJQXBCRywwQkFBTSxHQUFOO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRUQsK0JBQVcsR0FBWCxVQUFZLEtBQUs7UUFDYixFQUFFLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNoRSxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUM7WUFDVixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDaEIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ2xCO0lBQ0wsQ0FBQztJQUVELDRCQUFRLEdBQVI7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFHRCw2QkFBUyxHQUFUO1FBQ0ksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUEzQkQ7UUFEQyxRQUFROzJDQUNJO0lBR2I7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsRUFBRSxXQUFXLEVBQUMsTUFBTSxFQUFDLENBQUM7Z0RBQ1Y7SUFHbEQ7UUFEQyxRQUFRLENBQUMsRUFBQyxJQUFJLEVBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFDLE1BQU0sRUFBQyxDQUFDO29EQUNoQjtJQVQ5QixTQUFTO1FBRjdCLE9BQU87UUFDUCxJQUFJLENBQUMsZUFBZSxDQUFDO09BQ0QsU0FBUyxDQStCN0I7SUFBRCxnQkFBQztDQS9CRCxBQStCQyxDQS9Cc0MsRUFBRSxDQUFDLFNBQVMsR0ErQmxEO2tCQS9Cb0IsU0FBUyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eSwgbWVudX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuZW51bSBOb2RlRXZlbnRUeXBle1xyXG4gICAgVE9VQ0hfU1RBUlQsXHJcbiAgICBUT1VDSF9NT1ZFLFxyXG4gICAgVE9VQ0hfRU5ELFxyXG4gICAgVE9VQ0hfQ0FOQ0VMLFxyXG4gICAgTU9VU0VfRE9XTixcclxuICAgIE1PVVNFX01PVkUsXHJcbiAgICBNT1VTRV9FTlRFUixcclxuICAgIE1PVVNFX0xFQVZFLFxyXG4gICAgTU9VU0VfVVAsXHJcbiAgICBNT1VTRV9XSEVFTCxcclxuICAgIFBPU0lUSU9OX0NIQU5HRUQsXHJcbiAgICBST1RBVElPTl9DSEFOR0VELFxyXG4gICAgU0NBTEVfQ0hBTkdFRCxcclxuICAgIFNJWkVfQ0hBTkdFRCxcclxuICAgIEFOQ0hPUl9DSEFOR0VELFxyXG4gICAgQ0hJTERfQURERUQsXHJcbiAgICBDSElMRF9SRU1PVkVELFxyXG4gICAgQ0hJTERfUkVPUkRFUixcclxuICAgIEdST1VQX0NIQU5HRUQsXHJcbn1cclxuXHJcbmxldCBtYXAgPSBuZXcgTWFwPE5vZGVFdmVudFR5cGUsIHN0cmluZz4oKTtcclxubWFwLnNldChOb2RlRXZlbnRUeXBlLlRPVUNIX1NUQVJULCBjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9TVEFSVCk7XHJcbm1hcC5zZXQoTm9kZUV2ZW50VHlwZS5UT1VDSF9NT1ZFLCBjYy5Ob2RlLkV2ZW50VHlwZS5UT1VDSF9NT1ZFKTtcclxubWFwLnNldChOb2RlRXZlbnRUeXBlLlRPVUNIX0VORCwgY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5EKTtcclxubWFwLnNldChOb2RlRXZlbnRUeXBlLlRPVUNIX0NBTkNFTCwgY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfQ0FOQ0VMKTtcclxubWFwLnNldChOb2RlRXZlbnRUeXBlLk1PVVNFX0RPV04sIGNjLk5vZGUuRXZlbnRUeXBlLk1PVVNFX0RPV04pO1xyXG5tYXAuc2V0KE5vZGVFdmVudFR5cGUuTU9VU0VfTU9WRSwgY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfTU9WRSk7XHJcbm1hcC5zZXQoTm9kZUV2ZW50VHlwZS5NT1VTRV9FTlRFUiwgY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfRU5URVIpO1xyXG5tYXAuc2V0KE5vZGVFdmVudFR5cGUuTU9VU0VfTEVBVkUsIGNjLk5vZGUuRXZlbnRUeXBlLk1PVVNFX0xFQVZFKTtcclxubWFwLnNldChOb2RlRXZlbnRUeXBlLk1PVVNFX1VQLCBjYy5Ob2RlLkV2ZW50VHlwZS5NT1VTRV9VUCk7XHJcbm1hcC5zZXQoTm9kZUV2ZW50VHlwZS5NT1VTRV9XSEVFTCwgY2MuTm9kZS5FdmVudFR5cGUuTU9VU0VfV0hFRUwpO1xyXG5tYXAuc2V0KE5vZGVFdmVudFR5cGUuUE9TSVRJT05fQ0hBTkdFRCwgY2MuTm9kZS5FdmVudFR5cGUuUE9TSVRJT05fQ0hBTkdFRCk7XHJcbm1hcC5zZXQoTm9kZUV2ZW50VHlwZS5TQ0FMRV9DSEFOR0VELCBjYy5Ob2RlLkV2ZW50VHlwZS5TQ0FMRV9DSEFOR0VEKTtcclxubWFwLnNldChOb2RlRXZlbnRUeXBlLkFOQ0hPUl9DSEFOR0VELCBjYy5Ob2RlLkV2ZW50VHlwZS5BTkNIT1JfQ0hBTkdFRCk7XHJcbm1hcC5zZXQoTm9kZUV2ZW50VHlwZS5DSElMRF9BRERFRCwgY2MuTm9kZS5FdmVudFR5cGUuQ0hJTERfQURERUQpO1xyXG5tYXAuc2V0KE5vZGVFdmVudFR5cGUuQ0hJTERfUkVNT1ZFRCwgY2MuTm9kZS5FdmVudFR5cGUuQ0hJTERfUkVNT1ZFRCk7XHJcbm1hcC5zZXQoTm9kZUV2ZW50VHlwZS5DSElMRF9SRU9SREVSLCBjYy5Ob2RlLkV2ZW50VHlwZS5DSElMRF9SRU9SREVSKTtcclxubWFwLnNldChOb2RlRXZlbnRUeXBlLkdST1VQX0NIQU5HRUQsIGNjLk5vZGUuRXZlbnRUeXBlLkdST1VQX0NIQU5HRUQpO1xyXG5cclxuXHJcbkBjY2NsYXNzXHJcbkBtZW51KFwi6Ieq5a6a5LmJL05vZGVFdmVudFwiKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb2RlRXZlbnQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgb25jZSA9IGZhbHNlO1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7dHlwZTpjYy5FbnVtKE5vZGVFdmVudFR5cGUpLCBkaXNwbGF5TmFtZTpcIuS6i+S7tuexu+Wei1wifSlcclxuICAgIGV2ZW50VHlwZTpOb2RlRXZlbnRUeXBlID0gTm9kZUV2ZW50VHlwZS5UT1VDSF9FTkQ7XHJcblxyXG4gICAgQHByb3BlcnR5KHt0eXBlOmNjLkNvbXBvbmVudC5FdmVudEhhbmRsZXIsIGRpc3BsYXlOYW1lOlwi6Kem5Y+R5LqL5Lu2XCJ9KVxyXG4gICAgZXZlbnRIYW5kbGVyczpbY2MuQ29tcG9uZW50LkV2ZW50SGFuZGxlcl0gPSBbXTtcclxuXHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIHRoaXMubm9kZS5vbihtYXAuZ2V0KHRoaXMuZXZlbnRUeXBlKSwgdGhpcy5vbk5vZGVFdmVudCwgdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Ob2RlRXZlbnQoZXZlbnQpe1xyXG4gICAgICAgIGNjLkNvbXBvbmVudC5FdmVudEhhbmRsZXIuZW1pdEV2ZW50cyh0aGlzLmV2ZW50SGFuZGxlcnMsIGV2ZW50KTtcclxuICAgICAgICBpZiAodGhpcy5vbmNlKXtcclxuICAgICAgICAgICAgdGhpcy5vZmZFdmVudCgpO1xyXG4gICAgICAgICAgICB0aGlzLmRlc3Ryb3koKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb2ZmRXZlbnQoKXtcclxuICAgICAgICB0aGlzLm5vZGUub2ZmKG1hcC5nZXQodGhpcy5ldmVudFR5cGUpLCB0aGlzLm9uTm9kZUV2ZW50LCB0aGlzKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgb25EZXN0cm95KCl7XHJcbiAgICAgICAgdGhpcy5vZmZFdmVudCgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/config/InviteConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0b4bf370PJHSbsNEq/dqeAY', 'InviteConfig');
// script/app/config/InviteConfig.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.InviteConfig = void 0;
var InviteConfig = /** @class */ (function () {
    function InviteConfig() {
    }
    InviteConfig.datas = [
        { icon: "WhackZombies/001.jpg", title: "末日 废土 丧尸 和成为超级战士的你！" },
    ];
    return InviteConfig;
}());
exports.InviteConfig = InviteConfig;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2NvbmZpZy9JbnZpdGVDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTtJQUFBO0lBSUEsQ0FBQztJQUhtQixrQkFBSyxHQUFHO1FBQ3BCLEVBQUMsSUFBSSxFQUFDLHNCQUFzQixFQUFFLEtBQUssRUFBQyxxQkFBcUIsRUFBQztLQUM3RCxDQUFDO0lBQ04sbUJBQUM7Q0FKRCxBQUlDLElBQUE7QUFKWSxvQ0FBWSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5leHBvcnQgY2xhc3MgSW52aXRlQ29uZmlnIHtcclxuICAgIHN0YXRpYyByZWFkb25seSBkYXRhcyA9IFtcclxuICAgICAgICB7aWNvbjpcIldoYWNrWm9tYmllcy8wMDEuanBnXCIsIHRpdGxlOlwi5pyr5pelIOW6n+WcnyDkuKflsLgg5ZKM5oiQ5Li66LaF57qn5oiY5aOr55qE5L2g77yBXCJ9LFxyXG4gICAgXTtcclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/interceptor/CommandInterceptor.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5db59EtNk5B6rnUA4Q97KNs', 'CommandInterceptor');
// framework/interceptor/CommandInterceptor.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvaW50ZXJjZXB0b3IvQ29tbWFuZEludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG4vKipcclxuICog5ZG95Luk5oum5oiq5ZmoXHJcbiAqIOWPr+S7peaLpuaIqmNvbW1hbmTlkb3ku6TvvIzlnKjmiafooYxjb21tYW5k5LmL5YmN5oiW5LmL5ZCO5YGa5LiA5Lqb6Ieq5bex55qE5aSE55CG5bel5L2c77yM5q+U5aaC77yaXHJcbiAqIDEu5YiH5o2i6IOM5pmv6Z+z5LmQXHJcbiAqIDIu5paw5omL5byV5a+8XHJcbiAqIDMu5LyY5YyW5oCn6IO9KOaPkOWJjeWKoOi9vei1hOa6kClcclxuICogZXRjLlxyXG4gKiDlnKjkuI3kv67mlLnmuLjmiI/pgLvovpHnmoTku6PnoIHlrozmiJDov5nkupvlip/og73jgIJcclxuICogKi9cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUNvbW1hbmRJbnRlcmNlcHRvcntcclxuICAgIHByZUhhbmRsZSguLi5hcmdzKTpQcm9taXNlPGJvb2xlYW4+O1xyXG4gICAgcG9zdEhhbmRsZShyZXM6YW55LCAuLi5hcmdzKTpQcm9taXNlO1xyXG59XHJcblxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/config/MusicPaths.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '191c6z1J6lMp4PCBdsWPXAH', 'MusicPaths');
// script/app/config/MusicPaths.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.MusicPaths = void 0;
var MusicPaths;
(function (MusicPaths) {
    MusicPaths["HomeBg"] = "sound/msc_fly";
    MusicPaths["GameBg"] = "sound/bgm";
    MusicPaths["ClickUI"] = "sound/ui_click";
})(MusicPaths = exports.MusicPaths || (exports.MusicPaths = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2NvbmZpZy9NdXNpY1BhdGhzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOzs7QUFHbkcsSUFBWSxVQUlYO0FBSkQsV0FBWSxVQUFVO0lBQ2xCLHNDQUF3QixDQUFBO0lBQ3hCLGtDQUFvQixDQUFBO0lBQ3BCLHdDQUEwQixDQUFBO0FBQzlCLENBQUMsRUFKVyxVQUFVLEdBQVYsa0JBQVUsS0FBVixrQkFBVSxRQUlyQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuXHJcbmV4cG9ydCBlbnVtIE11c2ljUGF0aHN7XHJcbiAgICBIb21lQmcgPSBcInNvdW5kL21zY19mbHlcIixcclxuICAgIEdhbWVCZyA9IFwic291bmQvYmdtXCIsXHJcbiAgICBDbGlja1VJID0gXCJzb3VuZC91aV9jbGlja1wiLFxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/config/GroupConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a8411Y6H4RH8ILHau8poiNJ', 'GroupConfig');
// script/app/config/GroupConfig.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupConfig = void 0;
var GroupConfig;
(function (GroupConfig) {
    GroupConfig["default"] = "default";
    GroupConfig["enemy"] = "enemy";
    GroupConfig["role"] = "role";
})(GroupConfig = exports.GroupConfig || (exports.GroupConfig = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2NvbmZpZy9Hcm91cENvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsaUZBQWlGO0FBQ2pGLHlGQUF5RjtBQUN6RixtQkFBbUI7QUFDbkIsMkZBQTJGO0FBQzNGLG1HQUFtRztBQUNuRyw4QkFBOEI7QUFDOUIsMkZBQTJGO0FBQzNGLG1HQUFtRzs7O0FBRW5HLElBQVksV0FJWDtBQUpELFdBQVksV0FBVztJQUNuQixrQ0FBbUIsQ0FBQTtJQUNuQiw4QkFBZSxDQUFBO0lBQ2YsNEJBQWEsQ0FBQTtBQUNqQixDQUFDLEVBSlcsV0FBVyxHQUFYLG1CQUFXLEtBQVgsbUJBQVcsUUFJdEIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMZWFybiBUeXBlU2NyaXB0OlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy90eXBlc2NyaXB0Lmh0bWxcclxuLy8gTGVhcm4gQXR0cmlidXRlOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuXHJcbmV4cG9ydCBlbnVtIEdyb3VwQ29uZmlnIHtcclxuICAgIGRlZmF1bHQgPSBcImRlZmF1bHRcIixcclxuICAgIGVuZW15ID0gXCJlbmVteVwiLFxyXG4gICAgcm9sZSA9IFwicm9sZVwiLFxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/config/ResConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c07349DfYtOrKUAwEyz1xe/', 'ResConfig');
// script/app/config/ResConfig.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.ResConfig = void 0;
var ResConfig = /** @class */ (function () {
    function ResConfig() {
    }
    ResConfig.retainPrefabs = [
        "prefab/dialog",
        "prefab/separationLayer",
        "prefab/textTips",
    ];
    return ResConfig;
}());
exports.ResConfig = ResConfig;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2NvbmZpZy9SZXNDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQTtJQUFBO0lBT0EsQ0FBQztJQUxtQix1QkFBYSxHQUFHO1FBQzVCLGVBQWU7UUFDZix3QkFBd0I7UUFDeEIsaUJBQWlCO0tBQ3BCLENBQUM7SUFDTixnQkFBQztDQVBELEFBT0MsSUFBQTtBQVBZLDhCQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5leHBvcnQgY2xhc3MgUmVzQ29uZmlnIHtcclxuXHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgcmV0YWluUHJlZmFicyA9IFtcclxuICAgICAgICBcInByZWZhYi9kaWFsb2dcIixcclxuICAgICAgICBcInByZWZhYi9zZXBhcmF0aW9uTGF5ZXJcIixcclxuICAgICAgICBcInByZWZhYi90ZXh0VGlwc1wiLFxyXG4gICAgXTtcclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/config/LocalStorageKeys.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c2610q2qXFMkpceJwMl/oK9', 'LocalStorageKeys');
// script/app/config/LocalStorageKeys.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.localStorageKeys = void 0;
var localStorageKeys;
(function (localStorageKeys) {
    localStorageKeys["gameBG"] = "gameBG";
})(localStorageKeys = exports.localStorageKeys || (exports.localStorageKeys = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2NvbmZpZy9Mb2NhbFN0b3JhZ2VLZXlzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOzs7QUFHbkcsSUFBWSxnQkFFWDtBQUZELFdBQVksZ0JBQWdCO0lBQ3hCLHFDQUFpQixDQUFBO0FBQ3JCLENBQUMsRUFGVyxnQkFBZ0IsR0FBaEIsd0JBQWdCLEtBQWhCLHdCQUFnQixRQUUzQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuXHJcbmV4cG9ydCBlbnVtIGxvY2FsU3RvcmFnZUtleXN7XHJcbiAgICBnYW1lQkcgPSBcImdhbWVCR1wiLFxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameEnemysController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6254chnxYNAb5mM5HqrGwAR', 'GameEnemysController');
// script/app/game/GameEnemysController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Enemy_1 = require("../entities/enemy/Enemy");
var SpacePartition_1 = require("../../../framework/extend/SpacePartition");
var GameProxy_1 = require("./GameProxy");
var PropBase_1 = require("../entities/prop/PropBase");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MAX_LOGIC_COUNT = 10;
var GameEnemysController = /** @class */ (function (_super) {
    __extends(GameEnemysController, _super);
    function GameEnemysController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.propLayer = null;
        _this.enemyLayer = null;
        _this.enemyBloodLayer = null;
        _this.bgNode = null;
        _this._enemyCount = 0;
        _this.enemyLogicList = [];
        _this._enmeyMap = new Map();
        _this._enmeyBloodArray = [];
        _this._propMap = new Map();
        _this._gunsArr = [];
        _this.gameProps = [];
        _this._screenRect = cc.rect(0, 0, cc.visibleRect.width, cc.visibleRect.height);
        return _this;
    }
    Object.defineProperty(GameEnemysController.prototype, "enemyCount", {
        get: function () {
            return this._enemyCount;
        },
        set: function (value) {
            this._enemyCount = value;
        },
        enumerable: false,
        configurable: true
    });
    GameEnemysController.prototype.genEnemy = function (id) {
        var prefabPath = 'prefab/entities/enemy/enemy' + id;
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        node.active = false;
        this.enemyLayer.addChild(node);
        var enemy = node.getComponent(Enemy_1.default);
        enemy.init(id);
        var arr = this._enmeyMap.get(id);
        if (typeof arr == "undefined") {
            arr = [];
            this._enmeyMap.set(id, arr);
        }
        arr.push(enemy);
        return enemy;
    };
    GameEnemysController.prototype.getInactiveEnemy = function (id) {
        var result = undefined;
        var arr = this._enmeyMap.get(id);
        if (typeof arr != 'undefined') {
            result = arr.find(function (value) { return value.node.active == false; });
        }
        if (typeof result == "undefined") {
            result = this.genEnemy(id);
        }
        return result;
    };
    GameEnemysController.prototype.genEnemyBloodNode = function () {
        var prefabPath = 'prefab/entities/blood/blood';
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        node.active = false;
        this.enemyBloodLayer.addChild(node);
        this._enmeyBloodArray.push(node);
        return node;
    };
    GameEnemysController.prototype.getInactiveEnemyBloodNode = function () {
        var result = this._enmeyBloodArray.find(function (value) { return value.active == false; });
        if (typeof result == "undefined") {
            result = this.genEnemyBloodNode();
        }
        return result;
    };
    GameEnemysController.prototype.genProp = function (id) {
        var prefabPath = 'prefab/entities/prop/prop' + id;
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        node.active = false;
        this.propLayer.addChild(node);
        var prop = node.getComponent(PropBase_1.default);
        prop.init(id);
        var arr = this._propMap.get(id);
        if (typeof arr == "undefined") {
            arr = [];
            this._propMap.set(id, arr);
        }
        arr.push(prop);
        return prop;
    };
    GameEnemysController.prototype.getInactiveProp = function (id) {
        var result = undefined;
        var arr = this._propMap.get(id);
        if (typeof arr != 'undefined') {
            result = arr.find(function (value) { return value.node.active == false; });
        }
        if (typeof result == "undefined") {
            result = this.genProp(id);
        }
        return result;
    };
    GameEnemysController.prototype.getInactiveGun = function () {
        var result = this._gunsArr.find(function (value) { return value.node.active == false; });
        if (typeof result == "undefined") {
            var prefabPath = 'prefab/entities/prop/guns';
            var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
            var node = cc.instantiate(entityPrefab);
            this.propLayer.addChild(node);
            node.active = false;
            result = node.getComponent(PropBase_1.default);
            this._gunsArr.push(result);
        }
        return result;
    };
    GameEnemysController.prototype.onLoad = function () {
        this.node.on(GameProxy_1.GameProxy.Event.KillEnemy, this.onKillEnemy, this);
        window['GameEnemysController'] = this;
    };
    GameEnemysController.prototype.onDestroy = function () {
        this.node.off(GameProxy_1.GameProxy.Event.KillEnemy, this.onKillEnemy, this);
    };
    GameEnemysController.prototype.allAliveAndInScreenEnemy = function () {
        var list = [];
        this._screenRect.x = -this.bgNode.x - cc.visibleRect.center.x;
        this._screenRect.y = -this.bgNode.y - cc.visibleRect.center.y;
        for (var _i = 0, _a = this.enemyLayer.children; _i < _a.length; _i++) {
            var node = _a[_i];
            var enemy = node.getComponent(Enemy_1.default);
            if (!enemy.node.active || enemy.hp <= 0 || enemy.node.x + enemy.spaceCircleCollider.radius <= this._screenRect.xMin || enemy.node.x - enemy.spaceCircleCollider.radius > this._screenRect.xMax || enemy.node.y + enemy.spaceCircleCollider.radius < this._screenRect.yMin || enemy.node.y - enemy.spaceCircleCollider.radius > this._screenRect.yMax) {
                continue;
            }
            list.push(enemy);
        }
        return list;
    };
    GameEnemysController.prototype.allAliveEnemy = function () {
        return this.enemyLayer.children.filter(function (value) { return value.active && value.getComponent(Enemy_1.default).hp > 0; }).map(function (value) { return value.getComponent(Enemy_1.default); });
    };
    GameEnemysController.prototype.allActiveEnemy = function () {
        return this.enemyLayer.children.filter(function (value) { return value.active; }).map(function (value) { return value.getComponent(Enemy_1.default); });
    };
    GameEnemysController.prototype.createEnemy = function (id) {
        // console.log("createEnemy==>", id);
        this.enemyCount++;
        //绑定
        //角色900范围内随机出现
        var x1 = Math.max(-this.bgNode.x - cc.visibleRect.center.x, -this.bgNode.width / 2);
        var y1 = Math.max(-this.bgNode.y - cc.visibleRect.center.y, -this.bgNode.height / 2);
        var w1 = Math.min(cc.visibleRect.width, this.bgNode.width / 2 - x1);
        var h1 = Math.min(cc.visibleRect.height, this.bgNode.height / 2 - y1);
        var screenRect = cc.rect(x1, y1, w1, h1);
        var range = 200;
        var x2 = Math.max(x1 - range, -this.bgNode.width / 2);
        var y2 = Math.max(y1 - range, -this.bgNode.height / 2);
        var w2 = Math.min(cc.visibleRect.width + range * 2, this.bgNode.width / 2 - x2);
        var h2 = Math.min(cc.visibleRect.height + range * 2, this.bgNode.height / 2 - y2);
        var rangeRect = cc.rect(x2, y2, w2, h2);
        var partitions = [rangeRect];
        SpacePartition_1.default.partitionRect(partitions, screenRect, 30, 30);
        // let partitions = [cc.rect(-this._bgNode.width/2, -this._bgNode.height/2, this._bgNode.width, this._bgNode.height)];
        // this.allActiveEnemy().forEach(value => {
        //     SpacePartition.partitionRect(partitions, value.enemyAABB.aabb());
        // });
        //
        // SpacePartition.partitionRect(partitions, this._gameRoleController.role.roleAABB.aabb());
        var enemy = this.getInactiveEnemy(id);
        var radius = enemy.getComponent(cc.CircleCollider).radius;
        var rect = SpacePartition_1.default.randomSpace(partitions, radius * 2, radius * 2);
        if (rect) {
            enemy.node.position = rect.center;
            enemy.node.active = true;
            this.enemyLogicList.push(enemy);
            window['GameCollisionController'].looseQuadTree.insert(enemy.enemyAABB);
        }
        else {
            console.error("没有空间了...", partitions);
        }
    };
    GameEnemysController.prototype.onKillEnemy = function (enemy) {
        this.enemyLogicList.splice(this.enemyLogicList.indexOf(enemy), 1);
        window['GameCollisionController'].looseQuadTree.remove(enemy.enemyAABB);
        this.enemyCount--;
    };
    GameEnemysController.prototype.lateUpdate = function () {
        var _a;
        if (GameProxy_1.GameProxy.pauseGame) {
            return;
        }
        /** 每次处理固定数量的敌人逻辑 */
        var preNum = 0;
        for (var _i = 0, _b = this.enemyLogicList; _i < _b.length; _i++) {
            var enemy = _b[_i];
            if (enemy.logicFlag) {
                preNum++;
                enemy.logicFlag = false;
            }
            else {
                break;
            }
        }
        (_a = this.enemyLogicList).push.apply(_a, this.enemyLogicList.splice(0, preNum));
        var count = Math.min(MAX_LOGIC_COUNT, this.enemyLogicList.length);
        for (var i = 0; i < count; i++) {
            this.enemyLogicList[i].logicFlag = true;
        }
    };
    __decorate([
        property(cc.Node)
    ], GameEnemysController.prototype, "propLayer", void 0);
    __decorate([
        property(cc.Node)
    ], GameEnemysController.prototype, "enemyLayer", void 0);
    __decorate([
        property(cc.Node)
    ], GameEnemysController.prototype, "enemyBloodLayer", void 0);
    __decorate([
        property(cc.Node)
    ], GameEnemysController.prototype, "bgNode", void 0);
    GameEnemysController = __decorate([
        ccclass
    ], GameEnemysController);
    return GameEnemysController;
}(cc.Component));
exports.default = GameEnemysController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameExplosivesController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '89858T6hXVPE6i2+IlNrBWF', 'GameExplosivesController');
// script/app/game/GameExplosivesController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Explosive_1 = require("../entities/explosive/Explosive");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameExplosivesController = /** @class */ (function (_super) {
    __extends(GameExplosivesController, _super);
    function GameExplosivesController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.explosiveLayer = null;
        _this._explosiveMap = new Map();
        return _this;
    }
    GameExplosivesController.prototype.genExplosive = function (id) {
        var prefabPath = 'prefab/entities/explosive/explosive' + id;
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        this.explosiveLayer.addChild(node);
        var explosive = node.getComponent(Explosive_1.default);
        explosive.init(id);
        var arr = this._explosiveMap.get(id);
        if (typeof arr == "undefined") {
            arr = [];
            this._explosiveMap.set(id, arr);
        }
        arr.push(explosive);
        node.active = false;
        return explosive;
    };
    GameExplosivesController.prototype.getInactiveExplosive = function (id) {
        var result = undefined;
        var arr = this._explosiveMap.get(id);
        if (typeof arr != 'undefined') {
            result = arr.find(function (value) { return value.node.active == false; });
        }
        if (typeof result == "undefined") {
            result = this.genExplosive(id);
        }
        return result;
    };
    __decorate([
        property(cc.Node)
    ], GameExplosivesController.prototype, "explosiveLayer", void 0);
    GameExplosivesController = __decorate([
        ccclass
    ], GameExplosivesController);
    return GameExplosivesController;
}(cc.Component));
exports.default = GameExplosivesController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2dhbWUvR2FtZUV4cGxvc2l2ZXNDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSw2REFBd0Q7QUFFbEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBc0QsNENBQVk7SUFBbEU7UUFBQSxxRUFtQ0M7UUFoQ0csb0JBQWMsR0FBVyxJQUFJLENBQUM7UUFFdEIsbUJBQWEsR0FBRyxJQUFJLEdBQUcsRUFBNEIsQ0FBQzs7SUE4QmhFLENBQUM7SUE1QlcsK0NBQVksR0FBcEIsVUFBcUIsRUFBUztRQUMxQixJQUFJLFVBQVUsR0FBRyxxQ0FBcUMsR0FBQyxFQUFFLENBQUM7UUFDMUQsSUFBSSxZQUFZLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMzRCxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLElBQUksU0FBUyxHQUFjLElBQUksQ0FBQyxZQUFZLENBQUMsbUJBQVMsQ0FBQyxDQUFDO1FBQ3hELFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbkIsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDckMsSUFBSSxPQUFPLEdBQUcsSUFBSSxXQUFXLEVBQUM7WUFDMUIsR0FBRyxHQUFHLEVBQUUsQ0FBQztZQUNULElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztTQUNuQztRQUNELEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQUVELHVEQUFvQixHQUFwQixVQUFxQixFQUFTO1FBQzFCLElBQUksTUFBTSxHQUFhLFNBQVMsQ0FBQztRQUNqQyxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNyQyxJQUFJLE9BQU8sR0FBRyxJQUFJLFdBQVcsRUFBQztZQUMxQixNQUFNLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLEtBQUssRUFBMUIsQ0FBMEIsQ0FBQyxDQUFDO1NBQzFEO1FBQ0QsSUFBSSxPQUFPLE1BQU0sSUFBSSxXQUFXLEVBQUM7WUFDN0IsTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDbEM7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBL0JEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7b0VBQ1k7SUFIYix3QkFBd0I7UUFENUMsT0FBTztPQUNhLHdCQUF3QixDQW1DNUM7SUFBRCwrQkFBQztDQW5DRCxBQW1DQyxDQW5DcUQsRUFBRSxDQUFDLFNBQVMsR0FtQ2pFO2tCQW5Db0Isd0JBQXdCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBFeHBsb3NpdmUgZnJvbSBcIi4uL2VudGl0aWVzL2V4cGxvc2l2ZS9FeHBsb3NpdmVcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUV4cGxvc2l2ZXNDb250cm9sbGVyIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIGV4cGxvc2l2ZUxheWVyOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIHByaXZhdGUgX2V4cGxvc2l2ZU1hcCA9IG5ldyBNYXA8bnVtYmVyLCBBcnJheTxFeHBsb3NpdmU+PigpO1xyXG5cclxuICAgIHByaXZhdGUgZ2VuRXhwbG9zaXZlKGlkOm51bWJlcik6RXhwbG9zaXZle1xyXG4gICAgICAgIGxldCBwcmVmYWJQYXRoID0gJ3ByZWZhYi9lbnRpdGllcy9leHBsb3NpdmUvZXhwbG9zaXZlJytpZDtcclxuICAgICAgICBsZXQgZW50aXR5UHJlZmFiID0gY2MubG9hZGVyLmdldFJlcyhwcmVmYWJQYXRoLCBjYy5QcmVmYWIpO1xyXG4gICAgICAgIGxldCBub2RlID0gY2MuaW5zdGFudGlhdGUoZW50aXR5UHJlZmFiKTtcclxuICAgICAgICB0aGlzLmV4cGxvc2l2ZUxheWVyLmFkZENoaWxkKG5vZGUpO1xyXG4gICAgICAgIGxldCBleHBsb3NpdmUgPSA8RXhwbG9zaXZlPm5vZGUuZ2V0Q29tcG9uZW50KEV4cGxvc2l2ZSk7XHJcbiAgICAgICAgZXhwbG9zaXZlLmluaXQoaWQpO1xyXG4gICAgICAgIGxldCBhcnIgPSB0aGlzLl9leHBsb3NpdmVNYXAuZ2V0KGlkKTtcclxuICAgICAgICBpZiAodHlwZW9mIGFyciA9PSBcInVuZGVmaW5lZFwiKXtcclxuICAgICAgICAgICAgYXJyID0gW107XHJcbiAgICAgICAgICAgIHRoaXMuX2V4cGxvc2l2ZU1hcC5zZXQoaWQsIGFycik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFyci5wdXNoKGV4cGxvc2l2ZSk7XHJcbiAgICAgICAgbm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICByZXR1cm4gZXhwbG9zaXZlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEluYWN0aXZlRXhwbG9zaXZlKGlkOm51bWJlcik6RXhwbG9zaXZle1xyXG4gICAgICAgIGxldCByZXN1bHQ6RXhwbG9zaXZlID0gdW5kZWZpbmVkO1xyXG4gICAgICAgIGxldCBhcnIgPSB0aGlzLl9leHBsb3NpdmVNYXAuZ2V0KGlkKTtcclxuICAgICAgICBpZiAodHlwZW9mIGFyciAhPSAndW5kZWZpbmVkJyl7XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IGFyci5maW5kKHZhbHVlID0+IHZhbHVlLm5vZGUuYWN0aXZlID09IGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT0gXCJ1bmRlZmluZWRcIil7XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IHRoaXMuZ2VuRXhwbG9zaXZlKGlkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameLabelsController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f7e2bT6UTxOj6t7XhqyjcZH', 'GameLabelsController');
// script/app/game/GameLabelsController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameLabelsController = /** @class */ (function (_super) {
    __extends(GameLabelsController, _super);
    function GameLabelsController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.labelLayer = null;
        _this.templateLabel = null;
        return _this;
    }
    GameLabelsController.prototype.onLoad = function () {
        window['GameLabelsController'] = this;
    };
    GameLabelsController.prototype.genLabel = function () {
        var labelNode = cc.instantiate(this.templateLabel.node);
        labelNode.active = false;
        this.labelLayer.addChild(labelNode);
        return labelNode.getComponent(cc.Label);
    };
    GameLabelsController.prototype.getInactiveLabel = function () {
        var findNode = this.labelLayer.children.find(function (value) { return value.active == false && value.getComponent(cc.Label); });
        if (findNode) {
            return findNode.getComponent(cc.Label);
        }
        else {
            return this.genLabel();
        }
    };
    /** 飘字 */
    GameLabelsController.prototype.fly = function (str, pos) {
        var label = this.getInactiveLabel();
        label.node.active = true;
        label.string = str;
        label.node.position = pos;
        label.node.color = cc.Color.RED;
        label.node.scale = 0;
        label.node.runAction(cc.sequence(cc.spawn(cc.scaleTo(0.1, 1), cc.fadeTo(0.1, 255), cc.moveBy(0.1, cc.v2(0, 10))), cc.delayTime(0.1), cc.spawn(cc.moveBy(0.3, cc.v2(0, 30)), cc.fadeTo(0.3, 100)), cc.callFunc(function () {
            label.node.active = false;
        })));
    };
    __decorate([
        property(cc.Node)
    ], GameLabelsController.prototype, "labelLayer", void 0);
    __decorate([
        property(cc.Label)
    ], GameLabelsController.prototype, "templateLabel", void 0);
    GameLabelsController = __decorate([
        ccclass
    ], GameLabelsController);
    return GameLabelsController;
}(cc.Component));
exports.default = GameLabelsController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2dhbWUvR2FtZUxhYmVsc0NvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQWtELHdDQUFZO0lBQTlEO1FBQUEscUVBMENDO1FBdkNHLGdCQUFVLEdBQVcsSUFBSSxDQUFDO1FBRzFCLG1CQUFhLEdBQVksSUFBSSxDQUFDOztJQW9DbEMsQ0FBQztJQWxDRyxxQ0FBTSxHQUFOO1FBQ0ksTUFBTSxDQUFDLHNCQUFzQixDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQzFDLENBQUM7SUFHTyx1Q0FBUSxHQUFoQjtRQUNJLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4RCxTQUFTLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNwQyxPQUFPLFNBQVMsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCwrQ0FBZ0IsR0FBaEI7UUFDSSxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsTUFBTSxJQUFJLEtBQUssSUFBSSxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBckQsQ0FBcUQsQ0FBQyxDQUFDO1FBQzdHLElBQUksUUFBUSxFQUFDO1lBQ1QsT0FBTyxRQUFRLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUMxQzthQUFLO1lBQ0YsT0FBTyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDMUI7SUFDTCxDQUFDO0lBRUQsU0FBUztJQUNULGtDQUFHLEdBQUgsVUFBSSxHQUFVLEVBQUUsR0FBVztRQUN2QixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUNwQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDekIsS0FBSyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7UUFDbkIsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1FBQzFCLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO1FBRWhDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNyQixLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUMxTSxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDOUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1QsQ0FBQztJQXRDRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOzREQUNRO0lBRzFCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7K0RBQ1c7SUFOYixvQkFBb0I7UUFEeEMsT0FBTztPQUNhLG9CQUFvQixDQTBDeEM7SUFBRCwyQkFBQztDQTFDRCxBQTBDQyxDQTFDaUQsRUFBRSxDQUFDLFNBQVMsR0EwQzdEO2tCQTFDb0Isb0JBQW9CIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUxhYmVsc0NvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgbGFiZWxMYXllcjpjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXHJcbiAgICB0ZW1wbGF0ZUxhYmVsOmNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBvbkxvYWQoKXtcclxuICAgICAgICB3aW5kb3dbJ0dhbWVMYWJlbHNDb250cm9sbGVyJ10gPSB0aGlzO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwcml2YXRlIGdlbkxhYmVsKCk6Y2MuTGFiZWx7XHJcbiAgICAgICAgbGV0IGxhYmVsTm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMudGVtcGxhdGVMYWJlbC5ub2RlKTtcclxuICAgICAgICBsYWJlbE5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5sYWJlbExheWVyLmFkZENoaWxkKGxhYmVsTm9kZSk7XHJcbiAgICAgICAgcmV0dXJuIGxhYmVsTm9kZS5nZXRDb21wb25lbnQoY2MuTGFiZWwpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEluYWN0aXZlTGFiZWwoKTpjYy5MYWJlbHtcclxuICAgICAgICBsZXQgZmluZE5vZGUgPSB0aGlzLmxhYmVsTGF5ZXIuY2hpbGRyZW4uZmluZCh2YWx1ZSA9PiB2YWx1ZS5hY3RpdmUgPT0gZmFsc2UgJiYgdmFsdWUuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKSk7XHJcbiAgICAgICAgaWYgKGZpbmROb2RlKXtcclxuICAgICAgICAgICAgcmV0dXJuIGZpbmROb2RlLmdldENvbXBvbmVudChjYy5MYWJlbCk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZW5MYWJlbCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiog6aOY5a2XICovXHJcbiAgICBmbHkoc3RyOnN0cmluZywgcG9zOmNjLlZlYzIpe1xyXG4gICAgICAgIGxldCBsYWJlbCA9IHRoaXMuZ2V0SW5hY3RpdmVMYWJlbCgpO1xyXG4gICAgICAgIGxhYmVsLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBsYWJlbC5zdHJpbmcgPSBzdHI7XHJcbiAgICAgICAgbGFiZWwubm9kZS5wb3NpdGlvbiA9IHBvcztcclxuICAgICAgICBsYWJlbC5ub2RlLmNvbG9yID0gY2MuQ29sb3IuUkVEO1xyXG5cclxuICAgICAgICBsYWJlbC5ub2RlLnNjYWxlID0gMDtcclxuICAgICAgICBsYWJlbC5ub2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5zcGF3bihjYy5zY2FsZVRvKDAuMSwgMSksIGNjLmZhZGVUbygwLjEsIDI1NSksIGNjLm1vdmVCeSgwLjEsIGNjLnYyKDAsIDEwKSkpLCBjYy5kZWxheVRpbWUoMC4xKSwgY2Muc3Bhd24oY2MubW92ZUJ5KDAuMywgY2MudjIoMCwgMzApKSwgY2MuZmFkZVRvKDAuMywgMTAwKSksIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgIGxhYmVsLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgfSkpKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameOver.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0ff30pjHBFH77CAQSQ7Z0pY', 'GameOver');
// script/app/game/GameOver.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../../../framework/facade/Facade");
var Extend_1 = require("../../../framework/extend/Extend");
var GameProxy_1 = require("./GameProxy");
var World_1 = require("../info/World");
var GameOverLucky_1 = require("./GameOverLucky");
var Network_1 = require("../network/Network");
var NetworkConfig_1 = require("../config/NetworkConfig");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
//curTime = 80  subTime = 0.6   addTime = 10  max = 100   7次，第8次出误点banner
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameOver = /** @class */ (function (_super) {
    __extends(GameOver, _super);
    function GameOver() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.titleLabel = null;
        _this.topNode = null;
        _this.goldLabel = null;
        _this.videoGoldLabel = null;
        _this.videoMulLabel = null;
        _this.luckyProgressBar = null;
        _this.gameOverLucky = null;
        _this.oneButtonNode = null;
        _this.tripleButtonNode = null;
        _this.luckyButtonNode = null;
        _this.luckyVideoSprite = null;
        _this.inviteSpriteFrame = null;
        _this.videoSpriteFrame = null;
        _this._takeGoldOne = 0;
        _this._videoMul = 3;
        return _this;
    }
    GameOver.prototype.onLoad = function () {
        var _this = this;
        this.oneButtonNode.on(cc.Node.EventType.POSITION_CHANGED, function () {
            _this.luckyButtonNode.parent.position = _this.oneButtonNode.position.add(cc.v2(0, 120));
        });
        cc.game.on("video_5", function () {
            _this.onGameOverTakeDajiangDo();
        }, this);
    };
    GameOver.prototype.onEnable = function () {
        var _this = this;
        this._takeGoldOne = 0;
        this._videoMul = 3;
        this.gameOverLucky.node.active = false;
        this.gameOverLucky.node.zIndex = 10;
        console.log("GameOver===>GameProxy.pauseGame = true");
        GameProxy_1.GameProxy.pauseGame = true;
        // this.oneBackgroundSprite.setMaterial(0, cc.Material.getBuiltinMaterial("2d-gray-sprite"));
        this.node.children.forEach(function (value, index) {
            value.scale = 0;
            value.runAction(cc.sequence(cc.delayTime(1 + 0.08 * index), cc.scaleTo(0.2, 1).easing(cc.easeElasticOut(0.45))));
        });
        World_1.World.Storage.unlockGun = -World_1.World.Storage.unlockGun;
        this.topNode.removeFromParent(false);
        this.node.addChild(this.topNode);
        this.topNode.getChildByName('progress').runAction(cc.sequence(cc.delayTime(0.3), cc.moveBy(0.35, cc.v2(0, -125))));
        this.topNode.getChildByName('level').runAction(cc.sequence(cc.delayTime(0.7), cc.spawn(cc.scaleTo(0.35, 2).easing(cc.easeElasticOut(0.6)), cc.moveBy(0.35, cc.v2(0, -95)).easing(cc.easeElasticOut(0.6)))));
        if (GameProxy_1.GameProxy.killCount >= GameProxy_1.GameProxy.maxEnemyNum) {
            // World.Storage.passLuckyCount++;
            GameProxy_1.GameProxy.goldCount += GameProxy_1.GameProxy.passGold();
            World_1.World.Storage.gameLevel++;
            /** 上传关卡 */
            if (NetworkConfig_1.NetworkConfig.connectServer) {
                Network_1.default.uploadLv(World_1.World.Storage.gameLevel);
            }
            /** 计算解锁最新的一把枪 */
            var weaponConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon);
            for (var _i = 0, weaponConfig_1 = weaponConfig; _i < weaponConfig_1.length; _i++) {
                var item = weaponConfig_1[_i];
                if (item['unlock'] == World_1.World.Storage.gameLevel) {
                    World_1.World.Storage.unlockGun = item['id'];
                    break;
                }
            }
        }
        else {
            this.titleLabel.string = "战斗失败";
        }
        this._takeGoldOne = GameProxy_1.GameProxy.goldCount;
        this.goldLabel.string = Extend_1.ext.shortFormat(this._takeGoldOne);
        this.topNode.getChildByName('progress').getChildByName('goldLabel').getComponent(cc.Label).string = this.goldLabel.string;
        this.updateVideo();
        // this.oneButtonNode.active = false;
        // this.scheduleOnce(()=>this.oneButtonNode.active = true, 2);
        this.scheduleOnce(function () {
            _this.luckyButtonNode.parent.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.5, 0.95), cc.scaleTo(0.5, 1))));
        }, 2);
    };
    GameOver.prototype.updateVideo = function () {
        this.videoMulLabel.string = "x" + this._videoMul;
        this.videoGoldLabel.string = Extend_1.ext.shortFormat(this._takeGoldOne * this._videoMul);
        this.luckyProgressBar.progress = 1;
        this.tripleButtonNode.active = false;
        // this.luckyProgressBar.progress = World.Storage.passLuckyCount/5;
        // this.tripleButtonNode.active = World.Storage.passLuckyCount < 5;
        this.luckyButtonNode.active = !this.tripleButtonNode.active;
        var spriteFrame = this.inviteSpriteFrame;
        // if (WXADVideo.canPlay()){
        //     spriteFrame = this.videoSpriteFrame;
        // }
        this.luckyVideoSprite.spriteFrame = spriteFrame;
    };
    GameOver.prototype.onGameOverTake = function (event, data) {
        console.log("【video】5 幸运大奖 【Click】GameOver onGameOverTake ", data);
        var num = parseInt(data);
        if (num == 1) {
            if (this._takeGoldOne > 0) {
                World_1.World.Storage.goldCount += this._takeGoldOne;
                Facade_1.default.executeCommand('ShowTipsCommand', "\u91D1\u5E01 +" + Extend_1.ext.shortFormat(this._takeGoldOne));
            }
            this.node.active = false;
            Facade_1.default.executeCommand("LoadSceneCommand", "HomeScene");
        }
        else {
            this.onGameOverTakeDajiang();
        }
    };
    GameOver.prototype.onGameOverTakeDajiang = function () {
        World_1.World.Storage._videoSign = 5;
        World_1.World.Storage.videoAd_show();
    };
    GameOver.prototype.onGameOverTakeDajiangDo = function () {
        var _this = this;
        if (this.luckyProgressBar.progress >= 1) {
            console.log("幸运大奖.");
            this.gameOverLucky.node.active = true;
            var num_1 = Extend_1.ext.randomElement([10, 9, 8, 7, 6, 5, 4]);
            this.gameOverLucky.run(num_1, function () {
                _this._videoMul = num_1;
                // World.Storage.passLuckyCount = 0;
                _this.node.active = false;
                var goldCount = _this._takeGoldOne * _this._videoMul;
                if (goldCount > 0) {
                    World_1.World.Storage.goldCount += goldCount;
                    Facade_1.default.executeCommand('ShowTipsCommand', "\u91D1\u5E01 +" + Extend_1.ext.shortFormat(goldCount));
                }
                Facade_1.default.executeCommand("LoadSceneCommand", "HomeScene");
            });
            return;
        }
        var goldCount = this._takeGoldOne * this._videoMul;
        if (goldCount > 0) {
            World_1.World.Storage.goldCount += goldCount;
            Facade_1.default.executeCommand('ShowTipsCommand', "\u91D1\u5E01 +" + Extend_1.ext.shortFormat(goldCount));
        }
        this.node.active = false;
        Facade_1.default.executeCommand("LoadSceneCommand", "HomeScene");
    };
    __decorate([
        property(cc.Label)
    ], GameOver.prototype, "titleLabel", void 0);
    __decorate([
        property(cc.Node)
    ], GameOver.prototype, "topNode", void 0);
    __decorate([
        property(cc.Label)
    ], GameOver.prototype, "goldLabel", void 0);
    __decorate([
        property(cc.Label)
    ], GameOver.prototype, "videoGoldLabel", void 0);
    __decorate([
        property(cc.Label)
    ], GameOver.prototype, "videoMulLabel", void 0);
    __decorate([
        property(cc.ProgressBar)
    ], GameOver.prototype, "luckyProgressBar", void 0);
    __decorate([
        property(GameOverLucky_1.default)
    ], GameOver.prototype, "gameOverLucky", void 0);
    __decorate([
        property(cc.Node)
    ], GameOver.prototype, "oneButtonNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameOver.prototype, "tripleButtonNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameOver.prototype, "luckyButtonNode", void 0);
    __decorate([
        property(cc.Sprite)
    ], GameOver.prototype, "luckyVideoSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameOver.prototype, "inviteSpriteFrame", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameOver.prototype, "videoSpriteFrame", void 0);
    GameOver = __decorate([
        ccclass
    ], GameOver);
    return GameOver;
}(cc.Component));
exports.default = GameOver;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameProxy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9801fpOathEUp/24jFoCzlC', 'GameProxy');
// script/app/game/GameProxy.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.GameProxy = void 0;
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var Extend_1 = require("../../../framework/extend/Extend");
var World_1 = require("../info/World");
var ENEMY_HURT_MUL = 1;
var ENEMY_HP_MUL = 1;
var ENEMY_GOLD_MUL = 1;
var PASS_GOLD_MUL = 1;
var GameProxy = /** @class */ (function () {
    function GameProxy() {
    }
    GameProxy.emit = function (e) {
        var _a;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (this.GameScene) {
            (_a = this.GameScene).emit.apply(_a, __spreadArrays([e], args));
        }
    };
    Object.defineProperty(GameProxy, "level", {
        get: function () {
            return this._level;
        },
        set: function (value) {
            var _a, _b;
            this._level = value;
            console.log("_level===>", this._level);
            var goldUpCfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
            var enemyUpCfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.EnemyUp);
            ENEMY_HURT_MUL = enemyUpCfg[this._level]['enemy_hurt'];
            ENEMY_HP_MUL = enemyUpCfg[this._level]['enemy_health'];
            ENEMY_GOLD_MUL = enemyUpCfg[this._level]['enemy_gold'] * goldUpCfg[World_1.World.Storage.goldLv - 1]['gvalue'];
            PASS_GOLD_MUL = enemyUpCfg[this._level]['clear_gold'];
            var levelConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Level);
            if (this._level <= levelConfig.length - 4) {
                this._levelConfig = levelConfig[this._level - 1];
            }
            else {
                /** 最后四关里随机一关 */
                this._levelConfig = levelConfig[levelConfig.length - 4 + Math.ceil(Math.random() * 100) % 4];
            }
            if (!this._levelConfig) {
                console.error("levelConfig error==>" + this._level);
            }
            /** 生成敌人列表 */
            var enemyArr1 = [], enemyArr2 = [];
            var maxEnemyId1 = 0, maxEnemyId2 = 0;
            var max1 = 0, max2 = 0;
            var enemyID = 1;
            while (typeof this._levelConfig["p1_enemy_" + enemyID] !== "undefined") {
                if (this._levelConfig["p1_enemy_" + enemyID] > 0) {
                    for (var i = 0; i < Math.floor(this._levelConfig["p1_enemy_" + enemyID] * this._levelConfig.amount_p1); i++) {
                        enemyArr1.push(enemyID);
                    }
                    if (this._levelConfig["p1_enemy_" + enemyID] > max1) {
                        max1 = this._levelConfig["p1_enemy_" + enemyID];
                        maxEnemyId1 = enemyID;
                    }
                }
                if (this._levelConfig["p2_enemy_" + enemyID] > 0) {
                    for (var i = 0; i < Math.floor(this._levelConfig["p2_enemy_" + enemyID] * this._levelConfig.amount_p2); i++) {
                        enemyArr2.push(enemyID);
                    }
                    if (this._levelConfig["p2_enemy_" + enemyID] > max2) {
                        max2 = this._levelConfig["p2_enemy_" + enemyID];
                        maxEnemyId2 = enemyID;
                    }
                }
                enemyID++;
            }
            this._levelConfig.amount_p1 = enemyArr1.length;
            this._levelConfig.amount_p2 = enemyArr2.length;
            /** 打乱顺序 */
            Extend_1.ext.shuffle(enemyArr1);
            Extend_1.ext.shuffle(enemyArr2);
            /** 得到敌人列表 */
            this._enemyList.length = 0;
            (_a = this._enemyList).push.apply(_a, enemyArr1);
            for (var i = 0; i < this._levelConfig.p1_boss_7; i++) {
                this._enemyList.push(7);
            }
            for (var i = 0; i < this._levelConfig.p1_boss_8; i++) {
                this._enemyList.push(8);
            }
            (_b = this._enemyList).push.apply(_b, enemyArr2);
            for (var i = 0; i < this._levelConfig.p2_boss_7; i++) {
                this._enemyList.push(7);
            }
            for (var i = 0; i < this._levelConfig.p2_boss_8; i++) {
                this._enemyList.push(8);
            }
            //初始化属性
            this.isOver = false;
            this.killCount = 0;
            this.goldCount = 0;
            this.secondBossNum = this._levelConfig.p2_boss_7 + this._levelConfig.p2_boss_8;
            this._maxEnemyNum = this._enemyList.length;
            this._slowGame = false;
            this._pauseGame = false;
            this.magnetic = false;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameProxy, "levelConfig", {
        get: function () {
            return this._levelConfig;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameProxy, "enemyList", {
        get: function () {
            return this._enemyList;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameProxy, "pauseGame", {
        get: function () {
            return this._pauseGame;
        },
        set: function (value) {
            console.log("GameProxy===>pauseGame", value);
            if (this._pauseGame != value) {
                this._pauseGame = value;
                this.emit(this.Event.PauseGame, this._pauseGame);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameProxy, "slowGame", {
        get: function () {
            return this._slowGame;
        },
        set: function (value) {
            if (this._slowGame != value) {
                this._slowGame = value;
                this.emit(this.Event.SlowGame, this._slowGame);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameProxy, "maxEnemyNum", {
        get: function () {
            return this._maxEnemyNum;
        },
        enumerable: false,
        configurable: true
    });
    /** 敌人伤害公式 */
    GameProxy.enemyHurtMulOf = function (enemyId) {
        return ENEMY_HURT_MUL;
    };
    /** 敌人血量公式 */
    GameProxy.enemyHpMulOf = function (enemyId) {
        return ENEMY_HP_MUL;
    };
    /** 敌人金币产量公式 */
    GameProxy.enemyGoldMulOf = function (enemyId) {
        return ENEMY_GOLD_MUL;
    };
    /** 过关金币公式 */
    GameProxy.passGold = function () {
        return PASS_GOLD_MUL;
    };
    GameProxy.GameScene = null;
    GameProxy.Event = {
        StartGenEnemy: "StartGenEnemy",
        StopGenEnemy: "StopGenEnemy",
        KillEnemy: "KillEnemy",
        KillRole: "KillRole",
        PauseGame: "PauseGame",
        SlowGame: "SlowGame",
        InitGame: "InitGame",
        StartGame: "StartGame",
        ReliveGame: "ReliveGame",
        OverGame: "OverGame",
        UpdateBulletCount: "UpdateBulletCount",
        ShakeScreen: "ShakeScreen",
        PropCDZero: "PropCDZero",
        PropTrigger: "PropTrigger",
    };
    GameProxy.firstAidFlag = true;
    GameProxy.secondBossNum = 0;
    /** 关卡 */
    GameProxy._level = 0;
    /** 关卡配置 */
    GameProxy._levelConfig = null;
    /** 敌人列表 */
    GameProxy._enemyList = [];
    /** 预选枪支 */
    GameProxy.prepareGun = 0;
    /** 是否结束 */
    GameProxy.isOver = false;
    /** 杀敌数 */
    GameProxy.killCount = 0;
    /** 金币数 */
    GameProxy.goldCount = 0;
    /** 金币番倍 */
    GameProxy.goldMul = 1;
    /** 暂停 */
    GameProxy._pauseGame = false;
    /** 磁力道具 */
    GameProxy.magnetic = false;
    /** 变慢 */
    GameProxy._slowGame = false;
    /** 敌人总数 */
    GameProxy._maxEnemyNum = 0;
    return GameProxy;
}());
exports.GameProxy = GameProxy;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/config/NetworkConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1cfcd2hmxdBN5+omE1y+zAv', 'NetworkConfig');
// script/app/config/NetworkConfig.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkConfig = void 0;
var NetworkConfig = /** @class */ (function () {
    function NetworkConfig() {
    }
    /** 是否连接服务器 */
    NetworkConfig.connectServer = false;
    /** 连接服务器的ip */
    NetworkConfig.host = "https://xddxx.com"; //
    return NetworkConfig;
}());
exports.NetworkConfig = NetworkConfig;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2NvbmZpZy9OZXR3b3JrQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7SUFBQTtJQU9BLENBQUM7SUFOQSxjQUFjO0lBQ0ssMkJBQWEsR0FBRyxLQUFLLENBQUM7SUFDdEMsZUFBZTtJQUNFLGtCQUFJLEdBQ2pCLG1CQUFtQixDQUFDLENBQUEsRUFBRTtJQUU5QixvQkFBQztDQVBELEFBT0MsSUFBQTtBQVBZLHNDQUFhIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5leHBvcnQgY2xhc3MgTmV0d29ya0NvbmZpZyB7XHJcblx0LyoqIOaYr+WQpui/nuaOpeacjeWKoeWZqCAqL1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IGNvbm5lY3RTZXJ2ZXIgPSBmYWxzZTtcclxuICAgIC8qKiDov57mjqXmnI3liqHlmajnmoRpcCAqL1xyXG4gICAgc3RhdGljIHJlYWRvbmx5ICBob3N0OnN0cmluZyA9XHJcbiAgICAgICAgXCJodHRwczovL3hkZHh4LmNvbVwiOy8vXHJcblxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/config/AppConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'dd662BFPltNfY7IYdf7FQXJ', 'AppConfig');
// script/app/config/AppConfig.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppConfig = void 0;
var AppConfig = /** @class */ (function () {
    function AppConfig() {
    }
    AppConfig.version = "1.0.0";
    AppConfig.gameName = "我是射击手";
    AppConfig.isDebug = true;
    AppConfig.GameID = "2";
    AppConfig.rankKey = "rank2";
    return AppConfig;
}());
exports.AppConfig = AppConfig;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2NvbmZpZy9BcHBDb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7OztBQUVuRztJQUFBO0lBTUEsQ0FBQztJQUxtQixpQkFBTyxHQUFVLE9BQU8sQ0FBQztJQUN6QixrQkFBUSxHQUFVLE9BQU8sQ0FBQztJQUMxQixpQkFBTyxHQUFXLElBQUksQ0FBQztJQUN2QixnQkFBTSxHQUFVLEdBQUcsQ0FBQztJQUNwQixpQkFBTyxHQUFHLE9BQU8sQ0FBQztJQUN0QyxnQkFBQztDQU5ELEFBTUMsSUFBQTtBQU5ZLDhCQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5leHBvcnQgY2xhc3MgQXBwQ29uZmlnIHtcclxuICAgIHN0YXRpYyByZWFkb25seSB2ZXJzaW9uOnN0cmluZyA9IFwiMS4wLjBcIjtcclxuICAgIHN0YXRpYyByZWFkb25seSBnYW1lTmFtZTpzdHJpbmcgPSBcIuaIkeaYr+WwhOWHu+aJi1wiO1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IGlzRGVidWc6Ym9vbGVhbiA9IHRydWU7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgR2FtZUlEOnN0cmluZyA9IFwiMlwiO1xyXG4gICAgc3RhdGljIHJlYWRvbmx5IHJhbmtLZXkgPSBcInJhbmsyXCI7XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameRelive.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c841aUcQDlKNb/TIRPN/nS1', 'GameRelive');
// script/app/game/GameRelive.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameProxy_1 = require("./GameProxy");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var World_1 = require("../info/World");
var CDTimer_1 = require("../../../framework/component/CDTimer");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameRelive = /** @class */ (function (_super) {
    __extends(GameRelive, _super);
    function GameRelive() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gameOverNode = null;
        _this.gunSpriteFrames = [];
        _this.gunSprite = null;
        _this.bulletLabel = null;
        _this.cdLabel = null;
        _this.cdTimer = null;
        return _this;
    }
    // LIFE-CYCLE CALLBACKS:
    GameRelive.prototype.onLoad = function () {
        var _this = this;
        cc.game.on("video_7", function () {
            _this.onClickReliveDo();
        }, this);
    };
    GameRelive.prototype.onEnable = function () {
        console.log("GameRelive===>GameProxy.pauseGame = true");
        GameProxy_1.GameProxy.pauseGame = true;
        this.cdTimer.reset();
        this.cdTimer.pause = false;
        this.cdLabel.string = Math.ceil(this.cdTimer.cdDelta()).toString();
        // this.noReliveNode.active = false;
        this.node.stopAllActions();
        // this.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(()=>{
        //     this.noReliveNode.active = true;
        // })));
        var weaponConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon).filter(function (value) { return value['id'] != 1; }).sort((function (a, b) { return b['unlock'] - a['unlock']; }));
        for (var _i = 0, weaponConfig_1 = weaponConfig; _i < weaponConfig_1.length; _i++) {
            var item = weaponConfig_1[_i];
            if (GameProxy_1.GameProxy.level >= item['unlock']) {
                this.gunSprite.spriteFrame = this.gunSpriteFrames[item['id'] - 1];
                this.bulletLabel.string = "\u5B50\u5F39 " + World_1.World.My.armory.payloadAddOf(item['id']) * 3 + "x3";
                break;
            }
        }
    };
    GameRelive.prototype.onClickRelive = function (event, data) {
        console.log("【video】7 复活【click】GameRelive Relive");
        World_1.World.Storage._videoSign = 7;
        World_1.World.Storage.videoAd_show();
    };
    GameRelive.prototype.onClickReliveDo = function () {
        this.node.active = false;
        GameProxy_1.GameProxy.pauseGame = false;
        GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.ReliveGame);
    };
    GameRelive.prototype.onNoRelive = function (event, data) {
        this.node.active = false;
        this.gameOverNode.active = true;
    };
    GameRelive.prototype.onProgressEvent = function (progress) {
        this.cdLabel.string = Math.ceil(this.cdTimer.cdDelta()).toString();
    };
    __decorate([
        property(cc.Node)
    ], GameRelive.prototype, "gameOverNode", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameRelive.prototype, "gunSpriteFrames", void 0);
    __decorate([
        property(cc.Sprite)
    ], GameRelive.prototype, "gunSprite", void 0);
    __decorate([
        property(cc.Label)
    ], GameRelive.prototype, "bulletLabel", void 0);
    __decorate([
        property(cc.Label)
    ], GameRelive.prototype, "cdLabel", void 0);
    __decorate([
        property(CDTimer_1.default)
    ], GameRelive.prototype, "cdTimer", void 0);
    GameRelive = __decorate([
        ccclass
    ], GameRelive);
    return GameRelive;
}(cc.Component));
exports.default = GameRelive;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2dhbWUvR2FtZVJlbGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EseUNBQXNDO0FBQ3RDLDZEQUEwRDtBQUMxRCxxRUFBa0U7QUFDbEUsdUNBQW9DO0FBQ3BDLGdFQUEyRDtBQUVyRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUF3Qyw4QkFBWTtJQUFwRDtRQUFBLHFFQXNFQztRQW5FRyxrQkFBWSxHQUFXLElBQUksQ0FBQztRQUc1QixxQkFBZSxHQUFvQixFQUFFLENBQUM7UUFHdEMsZUFBUyxHQUFhLElBQUksQ0FBQztRQUczQixpQkFBVyxHQUFZLElBQUksQ0FBQztRQUc1QixhQUFPLEdBQVksSUFBSSxDQUFDO1FBR3hCLGFBQU8sR0FBVyxJQUFJLENBQUM7O0lBb0QzQixDQUFDO0lBbERHLHdCQUF3QjtJQUV4QiwyQkFBTSxHQUFOO1FBQUEsaUJBSUM7UUFIRyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUM7WUFDakIsS0FBSSxDQUFDLGVBQWUsRUFBRSxDQUFBO1FBQzFCLENBQUMsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUNaLENBQUM7SUFFRCw2QkFBUSxHQUFSO1FBQ0ksT0FBTyxDQUFDLEdBQUcsQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDO1FBQ3hELHFCQUFTLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuRSxvQ0FBb0M7UUFDcEMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUMzQixxRUFBcUU7UUFDckUsdUNBQXVDO1FBQ3ZDLFFBQVE7UUFDUixJQUFJLFlBQVksR0FBRyx5QkFBVyxDQUFDLGFBQWEsQ0FBQyxpQ0FBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQWhCLENBQWdCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUF6QixDQUF5QixDQUFDLENBQUMsQ0FBQztRQUNuSixLQUFpQixVQUFZLEVBQVosNkJBQVksRUFBWiwwQkFBWSxFQUFaLElBQVksRUFBQztZQUF6QixJQUFJLElBQUkscUJBQUE7WUFDVCxJQUFJLHFCQUFTLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBQztnQkFDbEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xFLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLGtCQUFNLGFBQUssQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQUksQ0FBQztnQkFDakYsTUFBTTthQUNUO1NBQ0o7SUFDTCxDQUFDO0lBRUQsa0NBQWEsR0FBYixVQUFjLEtBQUssRUFBRSxJQUFJO1FBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsQ0FBQTtRQUVsRCxhQUFLLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBQyxDQUFDLENBQUE7UUFDMUIsYUFBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsQ0FBQTtJQUNoQyxDQUFDO0lBRUQsb0NBQWUsR0FBZjtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUN6QixxQkFBUyxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDNUIscUJBQVMsQ0FBQyxJQUFJLENBQUMscUJBQVMsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELCtCQUFVLEdBQVYsVUFBVyxLQUFLLEVBQUUsSUFBSTtRQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxvQ0FBZSxHQUFmLFVBQWdCLFFBQWU7UUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDdkUsQ0FBQztJQWxFRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO29EQUNVO0lBRzVCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUM7dURBQ2E7SUFHdEM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztpREFDTztJQUczQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO21EQUNTO0lBRzVCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7K0NBQ0s7SUFHeEI7UUFEQyxRQUFRLENBQUMsaUJBQU8sQ0FBQzsrQ0FDSztJQWxCTixVQUFVO1FBRDlCLE9BQU87T0FDYSxVQUFVLENBc0U5QjtJQUFELGlCQUFDO0NBdEVELEFBc0VDLENBdEV1QyxFQUFFLENBQUMsU0FBUyxHQXNFbkQ7a0JBdEVvQixVQUFVIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7R2FtZVByb3h5fSBmcm9tIFwiLi9HYW1lUHJveHlcIjtcclxuaW1wb3J0IHtFeGNlbFRhYmxlTmFtZXN9IGZyb20gXCIuLi9jb25maWcvRXhjZWxUYWJsZU5hbWVzXCI7XHJcbmltcG9ydCB7RXhjZWxDb25maWd9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvY29uZmlnL0V4Y2VsQ29uZmlnXCI7XHJcbmltcG9ydCB7V29ybGR9IGZyb20gXCIuLi9pbmZvL1dvcmxkXCI7XHJcbmltcG9ydCBDRFRpbWVyIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvY29tcG9uZW50L0NEVGltZXJcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVJlbGl2ZSBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBnYW1lT3Zlck5vZGU6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLlNwcml0ZUZyYW1lKVxyXG4gICAgZ3VuU3ByaXRlRnJhbWVzOltjYy5TcHJpdGVGcmFtZV0gPSBbXTtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKVxyXG4gICAgZ3VuU3ByaXRlOmNjLlNwcml0ZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxyXG4gICAgYnVsbGV0TGFiZWw6Y2MuTGFiZWwgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIGNkTGFiZWw6Y2MuTGFiZWwgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShDRFRpbWVyKVxyXG4gICAgY2RUaW1lcjpDRFRpbWVyID0gbnVsbDtcclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICBvbkxvYWQoKXtcclxuICAgICAgICBjYy5nYW1lLm9uKFwidmlkZW9fN1wiLCgpPT57XHJcbiAgICAgICAgICAgIHRoaXMub25DbGlja1JlbGl2ZURvKClcclxuICAgICAgICB9LHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRW5hYmxlICgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkdhbWVSZWxpdmU9PT0+R2FtZVByb3h5LnBhdXNlR2FtZSA9IHRydWVcIik7XHJcbiAgICAgICAgR2FtZVByb3h5LnBhdXNlR2FtZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5jZFRpbWVyLnJlc2V0KCk7XHJcbiAgICAgICAgdGhpcy5jZFRpbWVyLnBhdXNlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5jZExhYmVsLnN0cmluZyA9IE1hdGguY2VpbCh0aGlzLmNkVGltZXIuY2REZWx0YSgpKS50b1N0cmluZygpO1xyXG4gICAgICAgIC8vIHRoaXMubm9SZWxpdmVOb2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubm9kZS5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgIC8vIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MuZGVsYXlUaW1lKDMpLCBjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgIC8vICAgICB0aGlzLm5vUmVsaXZlTm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIC8vIH0pKSk7XHJcbiAgICAgICAgbGV0IHdlYXBvbkNvbmZpZyA9IEV4Y2VsQ29uZmlnLmdldEV4Y2VsVGFibGUoRXhjZWxUYWJsZU5hbWVzLldlYXBvbikuZmlsdGVyKHZhbHVlID0+IHZhbHVlWydpZCddICE9IDEpLnNvcnQoKChhLCBiKSA9PiBiWyd1bmxvY2snXSAtIGFbJ3VubG9jayddKSk7XHJcbiAgICAgICAgZm9yIChsZXQgaXRlbSBvZiB3ZWFwb25Db25maWcpe1xyXG4gICAgICAgICAgICBpZiAoR2FtZVByb3h5LmxldmVsID49IGl0ZW1bJ3VubG9jayddKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuZ3VuU3ByaXRlLnNwcml0ZUZyYW1lID0gdGhpcy5ndW5TcHJpdGVGcmFtZXNbaXRlbVsnaWQnXSAtIDFdO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5idWxsZXRMYWJlbC5zdHJpbmcgPSBg5a2Q5by5ICR7V29ybGQuTXkuYXJtb3J5LnBheWxvYWRBZGRPZihpdGVtWydpZCddKSAqIDN9eDNgO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja1JlbGl2ZShldmVudCwgZGF0YSl7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLjgJB2aWRlb+OAkTcg5aSN5rS744CQY2xpY2vjgJFHYW1lUmVsaXZlIFJlbGl2ZVwiKVxyXG5cclxuICAgICAgICBXb3JsZC5TdG9yYWdlLl92aWRlb1NpZ249N1xyXG4gICAgICAgIFdvcmxkLlN0b3JhZ2UudmlkZW9BZF9zaG93KCkgXHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja1JlbGl2ZURvKCl7XHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIEdhbWVQcm94eS5wYXVzZUdhbWUgPSBmYWxzZTtcclxuICAgICAgICBHYW1lUHJveHkuZW1pdChHYW1lUHJveHkuRXZlbnQuUmVsaXZlR2FtZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Ob1JlbGl2ZShldmVudCwgZGF0YSl7XHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZ2FtZU92ZXJOb2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgb25Qcm9ncmVzc0V2ZW50KHByb2dyZXNzOm51bWJlcil7XHJcbiAgICAgICAgdGhpcy5jZExhYmVsLnN0cmluZyA9IE1hdGguY2VpbCh0aGlzLmNkVGltZXIuY2REZWx0YSgpKS50b1N0cmluZygpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameSupply.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fa532I+751DgZh0kt4K3xve', 'GameSupply');
// script/app/game/GameSupply.ts

Object.defineProperty(exports, "__esModule", { value: true });
var TableViewMediator_1 = require("../../../framework/tableview/TableViewMediator");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var GameProxy_1 = require("./GameProxy");
var GameSupplyItem_1 = require("./GameSupplyItem");
var World_1 = require("../info/World");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var OnceFlag = false;
var GameSupply = /** @class */ (function (_super) {
    __extends(GameSupply, _super);
    function GameSupply() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.useGuideNode = null;
        _this.videoNode = null;
        _this.tableViewMediator = null;
        _this.noUseNode = null;
        _this._focus = 0;
        return _this;
    }
    Object.defineProperty(GameSupply.prototype, "focus", {
        get: function () {
            return this._focus;
        },
        set: function (value) {
            this._focus = value;
            this.tableViewMediator.updateData();
        },
        enumerable: false,
        configurable: true
    });
    GameSupply.prototype.onLoad = function () {
        var _this = this;
        GameSupplyItem_1.default.gameSupply = this;
        /** 加载数据 */
        this.tableViewMediator.datas = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon).filter(function (value) { return value['id'] != 1; }).sort(function (a, b) { return a['order'] - b['order']; });
        cc.game.on("video_4", function () {
            _this.onClickUseSupplyDo();
        }, this);
    };
    GameSupply.prototype.onEnable = function () {
        if (OnceFlag) {
            this.tableViewMediator.showAction();
        }
        OnceFlag = true;
        GameProxy_1.GameProxy.pauseGame = true;
        if (!World_1.World.My.newbies.state("FirstEntrySupply")) {
            this.useGuideNode.x = 0;
            var newbieNode = new cc.Node();
            newbieNode.name = "newbieNode";
            newbieNode.position = this.useGuideNode.convertToWorldSpaceAR(cc.v2());
            cc.director.getScene().addChild(newbieNode);
            /** guideCircle */
            var guideCirclePrefab = cc.loader.getRes("prefab/guideCircle");
            var guideCircleNode = cc.instantiate(guideCirclePrefab);
            guideCircleNode.position = cc.v2();
            newbieNode.addChild(guideCircleNode);
            /** guideSke */
            var guideSkePrefab = cc.loader.getRes("prefab/guideSke");
            var guideSkeNode = cc.instantiate(guideSkePrefab);
            guideSkeNode.position = cc.v2();
            newbieNode.addChild(guideSkeNode);
            this.useGuideNode.x = 0;
            this.videoNode.active = false;
        }
        else {
            this.useGuideNode.x = 50;
            this.videoNode.active = true;
        }
        // this.noUseNode.active = false;
        // this.node.stopAllActions();
        // this.node.runAction(cc.sequence(cc.delayTime(3), cc.callFunc(()=>{
        //     this.noUseNode.active = true;
        // })));
    };
    GameSupply.prototype.onClickCloseSupply = function () {
        GameProxy_1.GameProxy.pauseGame = false;
        this.node.active = false;
    };
    GameSupply.prototype.onClickUseSupply = function (event, data) {
        console.log("【video】4 装备补给【click】GameSupply UseSupply");
        World_1.World.Storage._videoSign = 4;
        World_1.World.Storage.videoAd_show();
    };
    GameSupply.prototype.onClickUseSupplyDo = function () {
        var item = this.tableViewMediator.datas[this._focus];
        var gameRoleController = window['GameRoleController'];
        gameRoleController.bulletEmitter = item['id'];
        gameRoleController.bulletEmitterDelegate.payload = (World_1.World.My.armory.payloadAddOf(item['id'])) * 3;
        /** 设置弹容量 */
        this.onClickCloseSupply();
        var newbieNode = cc.director.getScene().getChildByName("newbieNode");
        if (newbieNode) {
            newbieNode.destroy();
            World_1.World.My.newbies.finish("FirstEntrySupply");
        }
    };
    GameSupply.prototype.onTest = function () {
        console.log("gameSupply test");
    };
    __decorate([
        property(cc.Node)
    ], GameSupply.prototype, "useGuideNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameSupply.prototype, "videoNode", void 0);
    __decorate([
        property(TableViewMediator_1.default)
    ], GameSupply.prototype, "tableViewMediator", void 0);
    __decorate([
        property(cc.Node)
    ], GameSupply.prototype, "noUseNode", void 0);
    GameSupply = __decorate([
        ccclass
    ], GameSupply);
    return GameSupply;
}(cc.Component));
exports.default = GameSupply;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameSupplyItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '897d2HY3ThCFpCJTdoeL/dK', 'GameSupplyItem');
// script/app/game/GameSupplyItem.ts

Object.defineProperty(exports, "__esModule", { value: true });
var AbstractTableItem_1 = require("../../../framework/tableview/AbstractTableItem");
var World_1 = require("../info/World");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameSupplyItem = /** @class */ (function (_super) {
    __extends(GameSupplyItem, _super);
    function GameSupplyItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.lockLabel = null;
        _this.bgSprite = null;
        _this.weaponSprite = null;
        _this.nameLabel = null;
        _this.bulletLabel = null;
        _this.numLabel = null;
        _this.weaponSpriteFrames = [];
        _this.bgSpriteFrames = [];
        _this._index = 0;
        _this._data = null;
        return _this;
    }
    GameSupplyItem_1 = GameSupplyItem;
    GameSupplyItem.prototype.upadteItem = function (data, index) {
        this._data = data;
        this._index = index;
        this.bgSprite.spriteFrame = this.bgSpriteFrames[GameSupplyItem_1.gameSupply.focus == index ? 1 : 0];
        this.weaponSprite.spriteFrame = this.weaponSpriteFrames[data['id'] - 1];
        this.nameLabel.string = data['gun_name'];
        this.numLabel.string = World_1.World.My.armory.payloadAddOf(data['id']) + "x3";
        this.lockLabel.string = data['unlock'] + "\u5173\u89E3\u9501";
        var bLock = World_1.World.Storage.gameLevel < data['unlock'];
        this.lockLabel.node.active = bLock;
        this.nameLabel.node.active = !bLock;
        this.weaponSprite.setMaterial(0, cc.Material.getBuiltinMaterial(bLock ? "2d-gray-sprite" : "2d-sprite"));
        this.weaponSprite.node.opacity = bLock ? 128 : 255;
    };
    GameSupplyItem.prototype.onClickButton = function (event, data) {
        console.log("【click】GameSupplyItem Button");
        if (World_1.World.Storage.gameLevel < this._data['unlock']) {
            return;
        }
        GameSupplyItem_1.gameSupply.focus = this._index;
    };
    var GameSupplyItem_1;
    GameSupplyItem.gameSupply = null;
    __decorate([
        property(cc.Label)
    ], GameSupplyItem.prototype, "lockLabel", void 0);
    __decorate([
        property(cc.Sprite)
    ], GameSupplyItem.prototype, "bgSprite", void 0);
    __decorate([
        property(cc.Sprite)
    ], GameSupplyItem.prototype, "weaponSprite", void 0);
    __decorate([
        property(cc.Label)
    ], GameSupplyItem.prototype, "nameLabel", void 0);
    __decorate([
        property(cc.Label)
    ], GameSupplyItem.prototype, "bulletLabel", void 0);
    __decorate([
        property(cc.Label)
    ], GameSupplyItem.prototype, "numLabel", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameSupplyItem.prototype, "weaponSpriteFrames", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], GameSupplyItem.prototype, "bgSpriteFrames", void 0);
    GameSupplyItem = GameSupplyItem_1 = __decorate([
        ccclass
    ], GameSupplyItem);
    return GameSupplyItem;
}(AbstractTableItem_1.default));
exports.default = GameSupplyItem;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2dhbWUvR2FtZVN1cHBseUl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9GQUErRTtBQUUvRSx1Q0FBb0M7QUFFOUIsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBNEMsa0NBQWlCO0lBQTdEO1FBQUEscUVBc0RDO1FBakRHLGVBQVMsR0FBWSxJQUFJLENBQUM7UUFHMUIsY0FBUSxHQUFhLElBQUksQ0FBQztRQUcxQixrQkFBWSxHQUFjLElBQUksQ0FBQztRQUcvQixlQUFTLEdBQWEsSUFBSSxDQUFDO1FBRzNCLGlCQUFXLEdBQVksSUFBSSxDQUFDO1FBRzVCLGNBQVEsR0FBWSxJQUFJLENBQUM7UUFHekIsd0JBQWtCLEdBQW9CLEVBQUUsQ0FBQztRQUd6QyxvQkFBYyxHQUFvQixFQUFFLENBQUM7UUFFN0IsWUFBTSxHQUFHLENBQUMsQ0FBQztRQUNYLFdBQUssR0FBRyxJQUFJLENBQUM7O0lBeUJ6QixDQUFDO3VCQXREb0IsY0FBYztJQStCL0IsbUNBQVUsR0FBVixVQUFXLElBQVMsRUFBRSxLQUFhO1FBQy9CLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsZ0JBQWMsQ0FBQyxVQUFVLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQSxDQUFDLENBQUEsQ0FBQyxDQUFBLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQztRQUM5RixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBTSxhQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQUksQ0FBQztRQUN2RSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBTSxJQUFJLENBQUMsUUFBUSxDQUFDLHVCQUFLLENBQUM7UUFDL0MsSUFBSSxLQUFLLEdBQUcsYUFBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3JELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDbkMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQSxDQUFDLENBQUEsZ0JBQWdCLENBQUEsQ0FBQyxDQUFBLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFDckcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQSxDQUFDLENBQUEsR0FBRyxDQUFBLENBQUMsQ0FBQSxHQUFHLENBQUM7SUFDbkQsQ0FBQztJQUVELHNDQUFhLEdBQWIsVUFBYyxLQUFLLEVBQUUsSUFBSTtRQUNyQixPQUFPLENBQUMsR0FBRyxDQUFDLDhCQUE4QixDQUFDLENBQUE7UUFFM0MsSUFBSSxhQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFDO1lBQy9DLE9BQU87U0FDVjtRQUNELGdCQUFjLENBQUMsVUFBVSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ2xELENBQUM7O0lBbkRNLHlCQUFVLEdBQWMsSUFBSSxDQUFDO0lBR3BDO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7cURBQ087SUFHMUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztvREFDTTtJQUcxQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3dEQUNXO0lBRy9CO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7cURBQ1E7SUFHM0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzt1REFDUztJQUc1QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO29EQUNNO0lBR3pCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUM7OERBQ2dCO0lBR3pDO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUM7MERBQ1k7SUExQnBCLGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0FzRGxDO0lBQUQscUJBQUM7Q0F0REQsQUFzREMsQ0F0RDJDLDJCQUFpQixHQXNENUQ7a0JBdERvQixjQUFjIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFic3RyYWN0VGFibGVJdGVtIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvdGFibGV2aWV3L0Fic3RyYWN0VGFibGVJdGVtXCI7XHJcbmltcG9ydCBHYW1lU3VwcGx5IGZyb20gXCIuL0dhbWVTdXBwbHlcIjtcclxuaW1wb3J0IHtXb3JsZH0gZnJvbSBcIi4uL2luZm8vV29ybGRcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZVN1cHBseUl0ZW0gZXh0ZW5kcyBBYnN0cmFjdFRhYmxlSXRlbSB7XHJcblxyXG4gICAgc3RhdGljIGdhbWVTdXBwbHk6R2FtZVN1cHBseSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxyXG4gICAgbG9ja0xhYmVsOmNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKVxyXG4gICAgYmdTcHJpdGU6Y2MuU3ByaXRlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKVxyXG4gICAgd2VhcG9uU3ByaXRlOiBjYy5TcHJpdGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIG5hbWVMYWJlbDogY2MuTGFiZWwgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIGJ1bGxldExhYmVsOmNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXHJcbiAgICBudW1MYWJlbDpjYy5MYWJlbCA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLlNwcml0ZUZyYW1lKVxyXG4gICAgd2VhcG9uU3ByaXRlRnJhbWVzOltjYy5TcHJpdGVGcmFtZV0gPSBbXTtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlRnJhbWUpXHJcbiAgICBiZ1Nwcml0ZUZyYW1lczpbY2MuU3ByaXRlRnJhbWVdID0gW107XHJcblxyXG4gICAgcHJpdmF0ZSBfaW5kZXggPSAwO1xyXG4gICAgcHJpdmF0ZSBfZGF0YSA9IG51bGw7XHJcblxyXG4gICAgdXBhZHRlSXRlbShkYXRhOiBhbnksIGluZGV4OiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9kYXRhID0gZGF0YTtcclxuICAgICAgICB0aGlzLl9pbmRleCA9IGluZGV4O1xyXG4gICAgICAgIHRoaXMuYmdTcHJpdGUuc3ByaXRlRnJhbWUgPSB0aGlzLmJnU3ByaXRlRnJhbWVzW0dhbWVTdXBwbHlJdGVtLmdhbWVTdXBwbHkuZm9jdXMgPT0gaW5kZXg/MTowXTtcclxuICAgICAgICB0aGlzLndlYXBvblNwcml0ZS5zcHJpdGVGcmFtZSA9IHRoaXMud2VhcG9uU3ByaXRlRnJhbWVzW2RhdGFbJ2lkJ10tMV07XHJcbiAgICAgICAgdGhpcy5uYW1lTGFiZWwuc3RyaW5nID0gZGF0YVsnZ3VuX25hbWUnXTtcclxuICAgICAgICB0aGlzLm51bUxhYmVsLnN0cmluZyA9IGAke1dvcmxkLk15LmFybW9yeS5wYXlsb2FkQWRkT2YoZGF0YVsnaWQnXSl9eDNgO1xyXG4gICAgICAgIHRoaXMubG9ja0xhYmVsLnN0cmluZyA9IGAke2RhdGFbJ3VubG9jayddfeWFs+ino+mUgWA7XHJcbiAgICAgICAgbGV0IGJMb2NrID0gV29ybGQuU3RvcmFnZS5nYW1lTGV2ZWwgPCBkYXRhWyd1bmxvY2snXTtcclxuICAgICAgICB0aGlzLmxvY2tMYWJlbC5ub2RlLmFjdGl2ZSA9IGJMb2NrO1xyXG4gICAgICAgIHRoaXMubmFtZUxhYmVsLm5vZGUuYWN0aXZlID0gIWJMb2NrO1xyXG4gICAgICAgIHRoaXMud2VhcG9uU3ByaXRlLnNldE1hdGVyaWFsKDAsIGNjLk1hdGVyaWFsLmdldEJ1aWx0aW5NYXRlcmlhbChiTG9jaz9cIjJkLWdyYXktc3ByaXRlXCI6XCIyZC1zcHJpdGVcIikpO1xyXG4gICAgICAgIHRoaXMud2VhcG9uU3ByaXRlLm5vZGUub3BhY2l0eSA9IGJMb2NrPzEyODoyNTU7XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja0J1dHRvbihldmVudCwgZGF0YSl7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLjgJBjbGlja+OAkUdhbWVTdXBwbHlJdGVtIEJ1dHRvblwiKVxyXG5cclxuICAgICAgICBpZiAoV29ybGQuU3RvcmFnZS5nYW1lTGV2ZWwgPCB0aGlzLl9kYXRhWyd1bmxvY2snXSl7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgR2FtZVN1cHBseUl0ZW0uZ2FtZVN1cHBseS5mb2N1cyA9IHRoaXMuX2luZGV4O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameCollisionController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ade4a+D8vBFtrWGh6gZ6Ugw', 'GameCollisionController');
// script/app/game/GameCollisionController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var LooseQuadTree_1 = require("../../quad-tree/LooseQuadTree");
var GameProxy_1 = require("./GameProxy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var math = cc.math;
var _vec2 = cc.v2();
function obbApplyMatrix(rect, mat4, out_bl, out_tl, out_tr, out_br) {
    var x = rect.x;
    var y = rect.y;
    var width = rect.width;
    var height = rect.height;
    var m00 = mat4.m0, m01 = mat4.m1, m04 = mat4.m4, m05 = mat4.m5;
    var m12 = mat4.m12, m13 = mat4.m13;
    var tx = m00 * x + m04 * y + m12;
    var ty = m01 * x + m05 * y + m13;
    var xa = m00 * width;
    var xb = m01 * width;
    var yc = m04 * height;
    var yd = m05 * height;
    out_tl.x = tx;
    out_tl.y = ty;
    out_tr.x = xa + tx;
    out_tr.y = xb + ty;
    out_bl.x = yc + tx;
    out_bl.y = yd + ty;
    out_br.x = xa + yc + tx;
    out_br.y = xb + yd + ty;
}
;
var GameCollisionController = /** @class */ (function (_super) {
    __extends(GameCollisionController, _super);
    function GameCollisionController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.enemyBulletLayer = null;
        _this.looseQuadTree = null;
        _this._updateColliders = [];
        return _this;
    }
    GameCollisionController_1 = GameCollisionController;
    GameCollisionController.prototype.onLoad = function () {
        window['GameCollisionController'] = this;
    };
    GameCollisionController.updateCollider = function (collider) {
        var offset = collider.offset;
        var world = collider.world;
        var aabb = world.aabb;
        var m = world.matrix;
        collider.node.getLocalMatrix(m);
        var preAabb = world.preAabb;
        preAabb.x = aabb.x;
        preAabb.y = aabb.y;
        preAabb.width = aabb.width;
        preAabb.height = aabb.height;
        if (collider instanceof cc.BoxCollider) {
            var size = collider.size;
            aabb.x = offset.x - size.width / 2;
            aabb.y = offset.y - size.height / 2;
            aabb.width = size.width;
            aabb.height = size.height;
            var wps = world.points;
            var wp0 = wps[0], wp1 = wps[1], wp2 = wps[2], wp3 = wps[3];
            obbApplyMatrix(aabb, m, wp0, wp1, wp2, wp3);
            var minx = Math.min(wp0.x, wp1.x, wp2.x, wp3.x);
            var miny = Math.min(wp0.y, wp1.y, wp2.y, wp3.y);
            var maxx = Math.max(wp0.x, wp1.x, wp2.x, wp3.x);
            var maxy = Math.max(wp0.y, wp1.y, wp2.y, wp3.y);
            aabb.x = minx;
            aabb.y = miny;
            aabb.width = maxx - minx;
            aabb.height = maxy - miny;
        }
        else if (collider instanceof cc.CircleCollider) {
            // calculate world position
            math.Vec2.transformMat4(_vec2, collider.offset, m);
            world.position.x = _vec2.x;
            world.position.y = _vec2.y;
            // calculate world radius
            var tempx = m.m12, tempy = m.m13;
            m.m12 = m.m13 = 0;
            _vec2.x = collider.radius;
            _vec2.y = 0;
            math.Vec2.transformMat4(_vec2, _vec2, m);
            var d = Math.sqrt(_vec2.x * _vec2.x + _vec2.y * _vec2.y);
            world.radius = d;
            aabb.x = world.position.x - d;
            aabb.y = world.position.y - d;
            aabb.width = d * 2;
            aabb.height = d * 2;
            m.m12 = tempx;
            m.m13 = tempy;
        }
        else if (collider instanceof cc.PolygonCollider) {
            var points = collider.points;
            var worldPoints = world.points;
            worldPoints.length = points.length;
            var minx = 1e6, miny = 1e6, maxx = -1e6, maxy = -1e6;
            for (var i = 0, l = points.length; i < l; i++) {
                if (!worldPoints[i]) {
                    worldPoints[i] = cc.v2();
                }
                _vec2.x = points[i].x + offset.x;
                _vec2.y = points[i].y + offset.y;
                math.Vec2.transformMat4(_vec2, _vec2, m);
                var x = _vec2.x;
                var y = _vec2.y;
                worldPoints[i].x = x;
                worldPoints[i].y = y;
                if (x > maxx)
                    maxx = x;
                if (x < minx)
                    minx = x;
                if (y > maxy)
                    maxy = y;
                if (y < miny)
                    miny = y;
            }
            aabb.x = minx;
            aabb.y = miny;
            aabb.width = maxx - minx;
            aabb.height = maxy - miny;
        }
    };
    GameCollisionController.prototype.update = function (dt) {
        if (GameProxy_1.GameProxy.pauseGame)
            return;
        this.looseQuadTree.updateAll();
        this._updateColliders.forEach(function (value) { return value.bUpdateCollider = false; });
        this._updateColliders.length = 0;
        var gameBulletsController = window['GameBulletsController'];
        /** 与敌人的碰撞 */
        /** 子弹和其他爆炸物 */
        var enemyContacts = gameBulletsController.roleBullets;
        for (var _i = 0, enemyContacts_1 = enemyContacts; _i < enemyContacts_1.length; _i++) {
            var enemyContact = enemyContacts_1[_i];
            if (enemyContact.collider.enabled) {
                GameCollisionController_1.updateCollider(enemyContact.collider);
                /** 获取可能发生碰撞的敌人 */
                var arr = [];
                this.looseQuadTree.retrieve(enemyContact.collider.world.aabb, arr);
                for (var _a = 0, arr_1 = arr; _a < arr_1.length; _a++) {
                    var aabbRegion = arr_1[_a];
                    var enemy = aabbRegion.enemy;
                    if (!aabbRegion.bUpdateCollider) {
                        GameCollisionController_1.updateCollider(enemy.spaceCircleCollider);
                        GameCollisionController_1.updateCollider(enemy.defenceBoxCollider);
                        aabbRegion.bUpdateCollider = true;
                        this._updateColliders.push(aabbRegion);
                    }
                    var bContact = false;
                    if (enemyContact.collider instanceof cc.CircleCollider) {
                        bContact = cc.Intersection.polygonCircle(enemy.defenceBoxCollider.world.points, enemyContact.collider.world);
                    }
                    else {
                        bContact = cc.Intersection.polygonPolygon(enemy.defenceBoxCollider.world.points, enemyContact.collider.world.points);
                    }
                    if (bContact) {
                        // console.log("========>产生了碰撞..");
                        if (!enemyContact.contacts.includes(enemy)) {
                            // console.log("=======>onCollisionEnter");
                            enemyContact.contacts.push(enemy);
                            enemyContact.onCollisionEnter(enemy.defenceBoxCollider, enemyContact.collider);
                            if (!enemyContact.bThrought)
                                break;
                        }
                        else {
                            // console.log("========>onCollisionStay");
                            enemyContact.onCollisionStay(enemy.defenceBoxCollider, enemyContact.collider);
                        }
                    }
                    else {
                        var index = enemyContact.contacts.indexOf(enemy);
                        if (index >= 0) {
                            enemyContact.contacts.splice(index, 1);
                            enemyContact.onCollisionExit(enemy.defenceBoxCollider, enemyContact.collider);
                        }
                    }
                }
            }
        }
        var gameRoleController = window['GameRoleController'];
        /** 与角色的碰撞 */
        var bRoleUpdateCollider = false;
        /** 敌人的子弹 */
        gameBulletsController.enemyBullets.forEach(function (bullet) {
            /** 先过滤掉一些比较远的 */
            if (bullet.node.position.sub(gameRoleController.role.node.position).mag() < Math.max(bullet.node.width, bullet.node.height) + gameRoleController.role.spaceCircleCollider.radius) {
                /** 精密判断 */
                GameCollisionController_1.updateCollider(bullet.collider);
                if (!bRoleUpdateCollider) {
                    GameCollisionController_1.updateCollider(gameRoleController.role.spaceCircleCollider);
                }
                /** 判断圆形与多边形的碰撞 */
                var bContact = false;
                if (bullet.collider instanceof cc.CircleCollider) {
                    bContact = cc.Intersection.circleCircle(bullet.collider.world, gameRoleController.role.spaceCircleCollider.world);
                }
                else {
                    bContact = cc.Intersection.polygonCircle(bullet.collider.world.points, gameRoleController.role.spaceCircleCollider.world);
                }
                if (bContact) {
                    // console.log("========>产生了碰撞..");
                    if (!bullet.contacts.includes(gameRoleController.role)) {
                        // console.log("=======>onCollisionEnter");
                        bullet.contacts.push(gameRoleController.role);
                        bullet.onCollisionEnter(gameRoleController.role.spaceCircleCollider, bullet.collider);
                    }
                    else {
                        // console.log("========>onCollisionStay");
                        bullet.onCollisionStay(gameRoleController.role.spaceCircleCollider, bullet.collider);
                    }
                }
                else {
                    var index = bullet.contacts.indexOf(gameRoleController.role);
                    if (index >= 0) {
                        bullet.contacts.splice(index, 1);
                        bullet.onCollisionExit(gameRoleController.role.spaceCircleCollider, bullet.collider);
                    }
                }
            }
        });
        /** 道具 */
        window['GameEnemysController'].gameProps.forEach(function (prop) {
            if (!prop.on_off) {
                var distance = prop.node.position.sub(gameRoleController.role.node.position).mag();
                if (GameProxy_1.GameProxy.magnetic && !prop.magnetic) {
                    if (distance < 100) {
                        prop.magnetic = true;
                    }
                }
                if (distance < Math.max(prop.node.width, prop.node.height) + gameRoleController.role.spaceCircleCollider.radius) {
                    /** 精密判断 */
                    GameCollisionController_1.updateCollider(prop.collider);
                    if (!bRoleUpdateCollider) {
                        GameCollisionController_1.updateCollider(gameRoleController.role.spaceCircleCollider);
                    }
                    /** 判断圆形与多边形的碰撞 */
                    var bContact = false;
                    if (prop.collider instanceof cc.CircleCollider) {
                        bContact = cc.Intersection.circleCircle(prop.collider.world, gameRoleController.role.spaceCircleCollider.world);
                    }
                    else {
                        bContact = cc.Intersection.polygonCircle(prop.collider.world.points, gameRoleController.role.spaceCircleCollider.world);
                    }
                    if (bContact) {
                        // console.log("========>产生了碰撞..");
                        prop.trigger();
                    }
                }
            }
        });
    };
    var GameCollisionController_1;
    __decorate([
        property(cc.Node)
    ], GameCollisionController.prototype, "enemyBulletLayer", void 0);
    __decorate([
        property(LooseQuadTree_1.default)
    ], GameCollisionController.prototype, "looseQuadTree", void 0);
    GameCollisionController = GameCollisionController_1 = __decorate([
        ccclass
    ], GameCollisionController);
    return GameCollisionController;
}(cc.Component));
exports.default = GameCollisionController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameRoleController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6a436jVTaVMhK6DmWGm6kzl', 'GameRoleController');
// script/app/game/GameRoleController.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectionType = exports.JoystickType = void 0;
var BulletEmitterShanDianQiu_1 = require("../entities/bulletEmitter/BulletEmitterShanDianQiu");
var BulletEmitterHuoJianTong_1 = require("../entities/bulletEmitter/BulletEmitterHuoJianTong");
var BulletEmitterShouQiang_1 = require("../entities/bulletEmitter/BulletEmitterShouQiang");
var BulletEmitterSanDanQiang_1 = require("../entities/bulletEmitter/BulletEmitterSanDanQiang");
var Role_1 = require("../entities/role/Role");
var Actions_1 = require("../../../framework/actions/Actions");
var BulletEmitterJiGuang_1 = require("../entities/bulletEmitter/BulletEmitterJiGuang");
var BulletEmitterLiZiPao_1 = require("../entities/bulletEmitter/BulletEmitterLiZiPao");
var BulletEmitterJiaTeLin_1 = require("../entities/bulletEmitter/BulletEmitterJiaTeLin");
var BulletEmitterJuJiQiang_1 = require("../entities/bulletEmitter/BulletEmitterJuJiQiang");
var BulletEmitterHuoYan_1 = require("../entities/bulletEmitter/BulletEmitterHuoYan");
var BulletEmitter_1 = require("../entities/bulletEmitter/BulletEmitter");
var BulletEmitterPenZi_1 = require("../entities/bulletEmitter/BulletEmitterPenZi");
var GameProxy_1 = require("./GameProxy");
var Enemy_1 = require("../entities/enemy/Enemy");
var BulletOfFangHuDun_1 = require("../entities/bullet/BulletOfFangHuDun");
var PropStateController_1 = require("../entities/prop/PropStateController");
var Music_1 = require("../../../framework/audio/Music");
var World_1 = require("../info/World");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var GameController_1 = require("./GameController");
var Extend_1 = require("../../../framework/extend/Extend");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var JoystickType;
(function (JoystickType) {
    JoystickType[JoystickType["FIXED"] = 0] = "FIXED";
    JoystickType[JoystickType["FOLLOW"] = 1] = "FOLLOW";
})(JoystickType = exports.JoystickType || (exports.JoystickType = {}));
var DirectionType;
(function (DirectionType) {
    DirectionType[DirectionType["FOUR"] = 4] = "FOUR";
    DirectionType[DirectionType["EIGHT"] = 8] = "EIGHT";
    DirectionType[DirectionType["ALL"] = 0] = "ALL";
})(DirectionType = exports.DirectionType || (exports.DirectionType = {}));
var RING_OPACITY = 80;
var EmitterSfxVolumes = [0.33, 0.8, 0.8, 0.45, 1, 2, 1, 0.6, 1, 2, 1, 1, 1];
var GameRoleController = /** @class */ (function (_super) {
    __extends(GameRoleController, _super);
    function GameRoleController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.guideNode = null;
        _this.bulletStrikeLayer = null;
        _this.propStatePrefab = null;
        _this.propStateNode = null;
        _this.takePropLayer = null;
        _this.beAttackSke = null;
        _this.weaponSke = null;
        _this.payloadLabel = null;
        _this.payloadBars = [];
        _this.hpProgressBar = null;
        _this.hpBarNode = null;
        _this.bgLayer = null;
        _this.dot = null;
        _this.ring = null;
        _this.joystickType = JoystickType.FIXED;
        _this.directionType = DirectionType.ALL;
        _this._radius = 0;
        _this._takeProps = [];
        _this.role = null;
        _this.impenetrableDefence = null;
        _this.maxHp = 1000;
        _this._hp = 0;
        _this._bulletEmitter = 0;
        _this._bulletEmitterDelegate = null;
        _this._touchId = null;
        _this._bMove = false;
        _this._dir = cc.v2();
        _this._fireCD = 0;
        _this._bgBounds = cc.rect();
        _this._roleBounds = cc.rect();
        _this._bgNode = null;
        _this._screenRect = cc.rect(0, 0, cc.visibleRect.width, cc.visibleRect.height);
        return _this;
    }
    GameRoleController.prototype.genTakePropNode = function () {
        var prefabPath = 'prefab/entities/prop/takeProp';
        var entityPrefab = cc.loader.getRes(prefabPath, cc.Prefab);
        var node = cc.instantiate(entityPrefab);
        node.active = false;
        this.takePropLayer.addChild(node);
        this._takeProps.push(node);
        return node;
    };
    GameRoleController.prototype.getInactiveTakePropNode = function () {
        var result = this._takeProps.find(function (value) { return value.active == false; });
        if (typeof result == "undefined") {
            result = this.genTakePropNode();
        }
        return result;
    };
    Object.defineProperty(GameRoleController.prototype, "hp", {
        get: function () {
            return this._hp;
        },
        set: function (value) {
            var _this = this;
            if (this.impenetrableDefence.node.active) {
                //减速
                this.impenetrableDefence.strike(null, null);
                return;
            }
            if (this._hp <= 0)
                return;
            var damage = this._hp - value;
            window['GameLabelsController'].fly("-" + Extend_1.ext.shortFormat(damage), this.role.node.position.add(cc.v2(0, this.role.spaceCircleCollider.radius)));
            this._hp = value;
            if (value <= 0) {
                GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.KillRole);
            }
            this.updateHpProgress();
            this.beAttackSke.node.active = true;
            this.beAttackSke.setAnimation(0, "crazy", false);
            Music_1.Music.playSFX("sound/msc_rol001");
            this.hpBarNode.color = cc.Color.RED;
            this.role.spriteNode.color = cc.Color.RED;
            var action = cc.sequence(cc.delayTime(0.2), cc.callFunc(function () {
                _this.hpBarNode.color = cc.Color.GREEN;
                _this.role.spriteNode.color = cc.Color.WHITE;
            }));
            action.setTag(901);
            this.role.node.stopActionByTag(901);
            this.role.node.runAction(action);
        },
        enumerable: false,
        configurable: true
    });
    GameRoleController.prototype.huiXue = function (add) {
        this._hp += add;
        if (this._hp > this.maxHp) {
            this._hp = this.maxHp;
        }
        this.updateHpProgress();
    };
    GameRoleController.prototype.updateHpProgress = function () {
        this.hpProgressBar.progress = this._hp / this.maxHp;
    };
    Object.defineProperty(GameRoleController.prototype, "bulletEmitter", {
        get: function () {
            return this._bulletEmitter;
        },
        set: function (value) {
            if (this._bulletEmitter != 0) {
                Music_1.Music.playSFX("sound/msc_rol003");
            }
            if (this._bulletEmitter != value) {
                this._bulletEmitter = value;
                var gameBulletsController = window['GameBulletsController'];
                var bulletEmitter = null;
                switch (this._bulletEmitter) {
                    case BulletEmitter_1.default.TYPES.ShouQiang:
                        bulletEmitter = new BulletEmitterShouQiang_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.PenZi:
                        bulletEmitter = new BulletEmitterPenZi_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.JiaTeLin:
                        bulletEmitter = new BulletEmitterJiaTeLin_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.SanDanQiang:
                        bulletEmitter = new BulletEmitterSanDanQiang_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.JuJiQiang:
                        bulletEmitter = new BulletEmitterJuJiQiang_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.LiZiPao:
                        bulletEmitter = new BulletEmitterLiZiPao_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.HuoJianTong:
                        bulletEmitter = new BulletEmitterHuoJianTong_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.ShanDianQiu:
                        bulletEmitter = new BulletEmitterShanDianQiu_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.JiGuang:
                        bulletEmitter = new BulletEmitterJiGuang_1.default(gameBulletsController);
                        break;
                    case BulletEmitter_1.default.TYPES.HuoYan:
                        bulletEmitter = new BulletEmitterHuoYan_1.default(gameBulletsController);
                        break;
                }
                this.bulletEmitterDelegate = bulletEmitter;
                bulletEmitter.init(this._bulletEmitter);
                // this.weaponSke.node.scale = 0;
                // this.weaponSke.node.runAction(cc.scaleTo(0.35, 0.55).easing(cc.easeBackOut()));
                this.weaponSke.setSkin(("000" + this._bulletEmitter).substr(-3));
                this.weaponSke.setAnimation(0, "gun_002", false);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameRoleController.prototype, "bulletEmitterDelegate", {
        get: function () {
            return this._bulletEmitterDelegate;
        },
        set: function (value) {
            if (this._bulletEmitterDelegate) {
                this._bulletEmitterDelegate.onExit();
            }
            this._bulletEmitterDelegate = value;
            this._bulletEmitterDelegate.onEnter();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameRoleController.prototype, "touchId", {
        set: function (value) {
            this._touchId = value;
            // if (this._touchId == null){
            //     GameProxy.slowGame = true;
            // } else {
            //     GameProxy.slowGame = false;
            // }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameRoleController.prototype, "dir", {
        get: function () {
            return this._dir;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameRoleController.prototype, "bMove", {
        get: function () {
            return this._bMove;
        },
        enumerable: false,
        configurable: true
    });
    GameRoleController.prototype.onLoad = function () {
        var _this = this;
        this._radius = this.ring.width / 2;
        if (this.joystickType == JoystickType.FOLLOW) {
            this.ring.opacity = 0;
            this.dot.opacity = 0;
        }
        this.role.node.on(cc.Node.EventType.POSITION_CHANGED, this.onRolePositionChanged, this);
        this.node.on(GameProxy_1.GameProxy.Event.PauseGame, this.onPauseGame, this);
        this.node.on(GameProxy_1.GameProxy.Event.InitGame, this.onInitGame, this);
        this.node.on(GameProxy_1.GameProxy.Event.StartGame, this.onStartGame, this);
        this.node.on(GameProxy_1.GameProxy.Event.ReliveGame, this.onReliveGame, this);
        this.node.on(GameProxy_1.GameProxy.Event.UpdateBulletCount, this.onUpdateBulletCount, this);
        this.node.on(GameProxy_1.GameProxy.Event.PropTrigger, this.onPropTrigger, this);
        this.node.on(GameProxy_1.GameProxy.Event.PropCDZero, this.onPropCDZero, this);
        this.beAttackSke.setCompleteListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            _this.beAttackSke.node.active = false;
        });
        this.beAttackSke.node.active = false;
        this.beAttackSke.node.scaleY = cc.view.getVisibleSize().height / 1334;
        this.weaponSke.setCompleteListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            if (name == 'gun_002') {
                _this.weaponSke.setAnimation(0, "gun", false);
            }
        });
        window['GameRoleController'] = this;
    };
    GameRoleController.prototype.onUpdateBulletCount = function () {
        var str = "x" + this._bulletEmitterDelegate.bulletCount;
        if (this._bulletEmitter == 1) {
            str = '∞';
        }
        this.payloadLabel.string = str;
        var num = this.payloadBars.length;
        if (this._bulletEmitterDelegate.payload > 0) {
            num = Math.ceil(this._bulletEmitterDelegate.bulletCount / this._bulletEmitterDelegate.payload * this.payloadBars.length);
        }
        this.payloadBars.forEach(function (value, index) { return value.active = index < num; });
    };
    GameRoleController.prototype.onPauseGame = function (pause) {
        if (pause) {
            this.touchId = null;
            this._bMove = false;
            this.dot.setPosition(this.ring.getPosition());
            if (this.joystickType == JoystickType.FOLLOW) {
                this.ring.opacity = 0;
                this.dot.opacity = 0;
            }
        }
    };
    GameRoleController.prototype.onInitGame = function () {
        this.maxHp = this._hp = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.HpLv - 1]['life'];
        this.updateHpProgress();
        this.setImpenetrableDefenceCD(3);
    };
    GameRoleController.prototype.setImpenetrableDefenceCD = function (cd) {
        var _this = this;
        console.log("setImpenetrableDefenceCD==>", cd);
        this.impenetrableDefence.node.active = true;
        this.impenetrableDefence.unblink();
        var action = cc.sequence(cc.delayTime(cd - 1), cc.callFunc(function () {
            _this.impenetrableDefence.blink();
        }), cc.delayTime(1), cc.callFunc(function () {
            _this.impenetrableDefence.node.active = false;
        }));
        action.setTag(889);
        this.role.node.stopActionByTag(889);
        this.role.node.runAction(action);
    };
    GameRoleController.prototype.onStartGame = function () {
        console.log("onStartGame===>", GameProxy_1.GameProxy.pauseGame);
        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
        if (!World_1.World.My.newbies.state("FirstEntryGame")) {
            this.guideNode.active = true;
        }
        else {
            this.getComponent(GameController_1.default).startGenerating();
        }
    };
    GameRoleController.prototype.onReliveGame = function () {
        this.onInitGame();
        var weaponConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon).filter(function (value) { return value['id'] != 1; }).sort((function (a, b) { return b['unlock'] - a['unlock']; }));
        for (var _i = 0, weaponConfig_1 = weaponConfig; _i < weaponConfig_1.length; _i++) {
            var item = weaponConfig_1[_i];
            if (GameProxy_1.GameProxy.level >= item['unlock']) {
                this.bulletEmitter = item['id'];
                this.bulletEmitterDelegate.payload = this.bulletEmitterDelegate.payload * 3;
                break;
            }
        }
    };
    GameRoleController.prototype.onRolePositionChanged = function () {
        var _this = this;
        this.hpProgressBar.node.position = this.role.node.position;
        this._takeProps.forEach(function (value) {
            if (value.active) {
                value.position = _this.role.node.position;
            }
        });
    };
    GameRoleController.prototype.onPropTrigger = function (prop) {
        var _this = this;
        var takePropNode = this.getInactiveTakePropNode();
        takePropNode.position = this.role.node.position;
        takePropNode.active = true;
        takePropNode.scale = 1;
        takePropNode.opacity = 255;
        takePropNode.runAction(cc.sequence(cc.scaleTo(0.3, 4), cc.fadeTo(0.3, 80), cc.callFunc(function () {
            takePropNode.active = false;
        })));
        var propID = prop.propID;
        var propMove = function (callback) {
            var propBaseNode = cc.instantiate(prop.node);
            propBaseNode.position = _this.propStateNode.getParent().convertToNodeSpaceAR(prop.node.convertToWorldSpaceAR(cc.v2()));
            _this.propStateNode.getParent().addChild(propBaseNode);
            /** 飞到状态栏的位置 */
            var flyDuration = 0.3;
            var propStateNode = cc.instantiate(_this.propStatePrefab);
            _this.propStateNode.addChild(propStateNode);
            propStateNode.scale = 0;
            propStateNode.runAction(cc.scaleTo(flyDuration, 1));
            propBaseNode.runAction(cc.sequence(cc.moveTo(flyDuration, _this.propStateNode.position.add(cc.v2(0, -78 / 2))), cc.callFunc(function () {
                _this.propStateNode.children.forEach(function (value) {
                    var propStateConroller = value.getComponent(PropStateController_1.default);
                    if (propStateConroller.propID == propID && value != propStateNode) {
                        propStateConroller.cdTimer.pause = true;
                        propStateConroller.node.active = false;
                    }
                });
                var propStateConroller = propStateNode.getComponent(PropStateController_1.default);
                propStateConroller.init(propID);
                propStateConroller.cdTimer.pause = false;
                propBaseNode.destroy();
                if (callback) {
                    callback();
                }
            })));
        };
        switch (propID) {
            case 5:
                this.setImpenetrableDefenceCD(10 + 0.3);
                break;
            case 11:
                this.role.addSupply(propID);
                this.huiXue(Math.floor(this.maxHp * 0.3));
                break;
            case 9:
                this.role.addSupply(propID);
                propMove();
                this.role.accSpeed = 1.5;
                break;
            case 10:
                propMove();
                break;
            case 12:
                this.role.addSupply(propID);
                propMove();
                GameProxy_1.GameProxy.goldMul = 2;
                break;
            case 13:
                GameProxy_1.GameProxy.magnetic = true;
                propMove();
                break;
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
                if (this.bulletEmitter == propID - 100) {
                    this.bulletEmitterDelegate.bulletCount = this.bulletEmitterDelegate.payload;
                }
                else {
                    this.bulletEmitter = propID - 100;
                }
                break;
        }
    };
    GameRoleController.prototype.onPropCDZero = function (id) {
        switch (id) {
            case 5:
                this.impenetrableDefence.node.active = false;
                break;
            case 9:
                this.role.accSpeed = 1;
                break;
            case 10:
                break;
            case 12:
                GameProxy_1.GameProxy.goldMul = 1;
                break;
            case 13:
                GameProxy_1.GameProxy.magnetic = false;
                break;
        }
    };
    GameRoleController.prototype.start = function () {
        var _this = this;
        var bgNode = this.role.node.getParent();
        this._bgNode = bgNode;
        this._roleBounds.x = -bgNode.width / 2 + this.role.spaceCircleCollider.radius;
        this._roleBounds.y = -bgNode.height / 2 + this.role.spaceCircleCollider.radius;
        this._roleBounds.width = bgNode.width - this.role.spaceCircleCollider.radius * 2;
        this._roleBounds.height = bgNode.height - this.role.spaceCircleCollider.radius * 2;
        this._bgBounds.x = -this.bgLayer.width / 2 + cc.view.getVisibleSize().width / 2;
        this._bgBounds.y = -this.bgLayer.height / 2 + cc.view.getVisibleSize().height / 2;
        this._bgBounds.width = this.bgLayer.width - cc.view.getVisibleSize().width;
        this._bgBounds.height = this.bgLayer.height - cc.view.getVisibleSize().height;
        // console.log(this._roleBounds, "this._roleBounds===>");
        // let node = new cc.Node();
        // bgNode.addChild(node);
        // let graphic = node.addComponent(cc.Graphics);
        // graphic.strokeColor = cc.Color.RED;
        // graphic.lineWidth = 5;
        // graphic.rect(-bgNode.width/2, -bgNode.height/2, bgNode.width, bgNode.height);
        // graphic.stroke();
        //
        // graphic = this.role.node.addComponent(cc.Graphics);
        // graphic.strokeColor = cc.Color.RED;
        // graphic.lineWidth = 3;
        // graphic.circle(this.role.spaceCircleCollider.offset.x, this.role.spaceCircleCollider.offset.y, this.role.spaceCircleCollider.radius);
        // graphic.stroke();
        /** 移动控制 */
        this.node.runAction(Actions_1.default.update(function (dt) {
            /**
             * 角色移动
             * 有控制的情况下才能移动
             * 小于边界内才能移动
             * */
            var roleMoveLen = _this.role.speed * dt;
            if (_this._bMove && !GameProxy_1.GameProxy.pauseGame) {
                var deltaPos = _this._dir.mul(roleMoveLen);
                var destPos = _this.role.node.position.add(deltaPos);
                var arr = [];
                window['GameCollisionController'].looseQuadTree.retrieve(_this.role.roleAABB.aabb(), arr);
                var flag = false;
                for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
                    var aabbRegion = arr_1[_i];
                    var enemy = aabbRegion.enemy;
                    if (enemy.node.position.sub(destPos).mag() < enemy.spaceCircleCollider.radius + _this.role.spaceCircleCollider.radius) {
                        flag = true;
                        break;
                    }
                }
                if (!flag) {
                    if (destPos.x > _this._roleBounds.xMax || destPos.x < _this._roleBounds.xMin || destPos.y > _this._roleBounds.yMax || destPos.y < _this._roleBounds.yMin) {
                        flag = true;
                    }
                }
                if (!flag) {
                    _this.role.node.position = destPos;
                }
                /*if (deltaPos.x > 0){
                    if (destPos.x > this._roleBounds.xMax){
                        destPos.x = this._roleBounds.xMax;
                    }
                }else if (deltaPos.x < 0){
                    if (destPos.x < this._roleBounds.xMin){
                        destPos.x = this._roleBounds.xMin;
                    }
                }

                if (deltaPos.y > 0){
                    if (destPos.y > this._roleBounds.yMax){
                        destPos.y = this._roleBounds.yMax;
                    }
                }else if (deltaPos.y < 0){
                    if (destPos.y < this._roleBounds.yMin){
                        destPos.y = this._roleBounds.yMin;
                    }
                }*/
                // let intersections = [];
                // /** 求线段与边线的交点 */
                // if (deltaPos.x > 0 && destPos.x > this._roleBounds.xMax){
                //     //与右边界的交点
                //     let point = cc.v2();
                //     if(cc.Intersection.pLineIntersect(this.role.node.position, destPos, cc.v2(this._roleBounds.xMax, this._roleBounds.yMin), cc.v2(this._roleBounds.xMax, this._roleBounds.yMax), point)){
                //         intersections.push(point);
                //     }
                // }
                // if (deltaPos.x < 0 && destPos.x < this._roleBounds.xMin){
                //     //与左边界的交点
                //     let point = cc.v2();
                //     if(cc.Intersection.pLineIntersect(this.role.node.position, destPos, cc.v2(this._roleBounds.xMin, this._roleBounds.yMin), cc.v2(this._roleBounds.xMin, this._roleBounds.yMax), point)){
                //         intersections.push(point);
                //     }
                // }
                // if (deltaPos.y > 0 && destPos.y > this._roleBounds.yMax){
                //     //与上边界的交点
                //     let point = cc.v2();
                //     if(cc.Intersection.pLineIntersect(this.role.node.position, destPos, cc.v2(this._roleBounds.xMin, this._roleBounds.yMax), cc.v2(this._roleBounds.xMax, this._roleBounds.yMax), point)){
                //         intersections.push(point);
                //     }
                // }
                // if (deltaPos.y < 0 && destPos.y < this._roleBounds.yMin){
                //     //与下边界的交点
                //     let point = cc.v2();
                //     if(cc.Intersection.pLineIntersect(this.role.node.position, destPos, cc.v2(this._roleBounds.xMin, this._roleBounds.yMin), cc.v2(this._roleBounds.xMax, this._roleBounds.yMin), point)){
                //         intersections.push(point);
                //     }
                // }
                /** 求线段与圆的交点 */
                // arr.forEach(value => {
                //     let enemy = value.getComponent(Enemy);
                //     // cc.Intersection.pLineCircle(this.role.node.position, destPos, {position:enemy.node.position, radius:enemy.spaceCircleCollider.radius}, intersections);
                //     let doubleRadius = enemy.spaceCircleCollider.radius + this.role.spaceCircleCollider.radius;
                //     if (cc.Intersection.pointLineDistance(enemy.node.position, this.role.node.position, destPos, true) < doubleRadius){
                //         console.log("与怪物相交，求最小移动距离");
                //         /** 距离 */
                //         let centerSub = enemy.node.position.sub(this.role.node.position);
                //         let centerLen = centerSub.mag();
                //         if (centerLen > doubleRadius){
                //             /** 求夹角 */
                //             let radians = destPos.angle(centerSub);
                //             if (radians > 0){
                //                 /** 求垂线 */
                //                 let vLen = centerLen * Math.sin(radians);
                //                 if (vLen < doubleRadius){
                //                     let sideLen = Math.sqrt(doubleRadius*doubleRadius - vLen*vLen);
                //                     let hLen = centerLen * Math.cos(radians);
                //                     intersections.push(this.node.position.add(this._dir.mul(hLen - sideLen)));
                //                 }
                //             } else {
                //                 intersections.push(this.node.position.add(this._dir.mul(centerLen - doubleRadius)));
                //             }
                //         }
                //     }
                // });
                // if (intersections.length > 0){
                //     console.log(intersections, "intersections..");
                //     if (intersections.length == 1){
                //         let t = cc.v2();
                //         this.role.node.position = intersections[0].addSelf(this._dir.neg(t));
                //     }else {
                //         /** 求距离role最近的那个 */
                //         let p = intersections[0];
                //         let minDistance = p.sub(this.role.node.position).mag();
                //         for (let i=1; i<intersections.length; i++){
                //             let mag = intersections[i].sub(this.role.node.position).mag();
                //             if (mag < minDistance){
                //                 p = intersections[i];
                //                 minDistance = mag;
                //             }
                //         }
                //         let t = cc.v2();
                //         this.role.node.position = p.addSelf(this._dir.neg(t));
                //     }
                // } else {
                //     this.role.node.position = destPos;
                // }
            }
            /**
             * 地图的移动
             * --它的移动速度比角色要慢一点
             * --要保证角色的点在屏幕中心
             * */
            var sub = cc.v2(-_this.role.node.x, -_this.role.node.y).sub(bgNode.position);
            var mag = sub.mag();
            var normalize = sub.normalize();
            if (mag > 0) {
                var speed = roleMoveLen * (mag > 50 ? 1 : 5 / 6);
                var x = speed * normalize.x;
                var y = speed * normalize.y;
                if (Math.abs(x) > Math.abs(sub.x)) {
                    x = sub.x;
                }
                if (Math.abs(y) > Math.abs(sub.y)) {
                    y = sub.y;
                }
                var destX = bgNode.x + x;
                var destY = bgNode.y + y;
                if (destX < _this._bgBounds.xMin) {
                    destX = _this._bgBounds.xMin;
                }
                else if (destX > _this._bgBounds.xMax) {
                    destX = _this._bgBounds.xMax;
                }
                if (destY < _this._bgBounds.yMin) {
                    destY = _this._bgBounds.yMin;
                }
                else if (destY > _this._bgBounds.yMax) {
                    destY = _this._bgBounds.yMax;
                }
                bgNode.x = destX;
                bgNode.y = destY;
            }
        }));
        var gameEnemysController = window['GameEnemysController'];
        if (GameProxy_1.GameProxy.prepareGun > 0) {
            this.bulletEmitter = GameProxy_1.GameProxy.prepareGun;
            this.bulletEmitterDelegate.payload = this.bulletEmitterDelegate.payload * 3;
            GameProxy_1.GameProxy.prepareGun = 0;
        }
        else {
            this.bulletEmitter = BulletEmitter_1.default.TYPES.ShouQiang;
        }
        /** 发射控制 */
        this.node.runAction(Actions_1.default.update(function (dt) {
            if (GameProxy_1.GameProxy.pauseGame || GameProxy_1.GameProxy.slowGame)
                return;
            if (_this._fireCD > 0) {
                _this._fireCD -= dt;
            }
            /** 找到离角度最近的敌人 */
            var enemyNode = null;
            var minSub = null;
            var minDistance = _this.bulletEmitterDelegate.firingRange;
            // console.log(minDistance, "minDistance");
            _this._screenRect.x = -_this._bgNode.x - cc.visibleRect.center.x;
            _this._screenRect.y = -_this._bgNode.y - cc.visibleRect.center.y;
            var rolePos = _this.role.node.position;
            gameEnemysController.enemyLayer.children.forEach(function (value) {
                if (value.active && value.getComponent(Enemy_1.default).hp > 0 && _this._screenRect.contains(value.position)) {
                    var sub = value.position.sub(rolePos);
                    var mag = sub.mag();
                    if (mag < minDistance) {
                        minSub = sub;
                        minDistance = mag;
                        enemyNode = value;
                    }
                }
            });
            if (enemyNode) {
                /** 转向敌人 */
                _this.turnTo(minSub);
                if (_this._fireCD <= 0) {
                    /** 根据攻击距离计算攻击夹角 */
                    var attackRadian = Math.atan(enemyNode.getComponent(Enemy_1.default).spaceCircleCollider.radius / minDistance);
                    if (minSub.angle(cc.v2(0, 1).rotate(cc.misc.degreesToRadians(-_this.role.node.rotation))) < attackRadian) {
                        /** fire */
                        _this._fireCD = _this.bulletEmitterDelegate.interval;
                        var dir = enemyNode.position.sub(rolePos).normalize();
                        if (dir.x == 0 && dir.y == 0) {
                            dir = cc.v2(0, 1).normalize().rotate(cc.misc.degreesToRadians(-_this.role.node.rotation));
                        }
                        if (_this._bulletEmitter == BulletEmitter_1.default.TYPES.JuJiQiang) {
                            var bulletStrikePrefab = cc.loader.getRes("prefab/entities/bullet/fire7");
                            var bulletStrikeNode_1 = cc.instantiate(bulletStrikePrefab);
                            _this.bulletStrikeLayer.addChild(bulletStrikeNode_1);
                            bulletStrikeNode_1.position = _this.role.node.position.add(dir.mul(_this.role.gunTopNode.y));
                            bulletStrikeNode_1.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
                            bulletStrikeNode_1.getComponent(sp.Skeleton).setCompleteListener(function () {
                                bulletStrikeNode_1.destroy();
                            });
                        }
                        else if (_this._bulletEmitter !== BulletEmitter_1.default.TYPES.JiGuang && _this._bulletEmitter !== BulletEmitter_1.default.TYPES.PenZi) {
                            _this.role.fireSprite.node.scale = 1;
                            _this.role.fireSprite.node.active = true;
                            _this.role.fireSprite.node.runAction(cc.sequence(cc.scaleTo(0.05, 0.5), cc.callFunc(function () {
                                _this.role.fireSprite.node.active = false;
                            })));
                        }
                        _this._bulletEmitterDelegate.fire(_this.role.node.position.add(dir.mul(_this.role.gunTopNode.y)), dir);
                        var str = 'sound/msc_g' + ("0000000000000000" + _this._bulletEmitter).substr(-3);
                        Music_1.Music.playSFX(str, EmitterSfxVolumes[_this._bulletEmitter - 1]);
                        if (_this._bulletEmitterDelegate.isUseUp()) {
                            _this.bulletEmitter = BulletEmitter_1.default.TYPES.ShouQiang;
                        }
                    }
                }
            }
        }));
    };
    GameRoleController.prototype.turnTo = function (dir) {
        var degree = (90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x))) % 360;
        // console.log("de===>", degree);
        // console.log("dir===>x="+dir.x+" y="+dir.y);
        if (degree < 0) {
            degree += 360;
        }
        var enemyRotation = this.role.node.rotation % 360;
        if (enemyRotation < 0) {
            enemyRotation += 360;
        }
        var subDegree = Math.abs(degree - enemyRotation);
        // console.log("degree="+degree);
        // console.log("enemyRotation====>"+enemyRotation);
        if (subDegree > 0) {
            var rotation = 0;
            if (subDegree > 180) {
                rotation = Math.sign(enemyRotation - degree) * 10;
                if (Math.abs(rotation) > 360 - subDegree) {
                    rotation = Math.sign(rotation) * (360 - subDegree);
                }
            }
            else {
                rotation = Math.sign(degree - enemyRotation) * 10;
                if (Math.abs(rotation) > subDegree) {
                    rotation = Math.sign(rotation) * subDegree;
                }
            }
            enemyRotation += rotation;
        }
        this.role.node.rotation = enemyRotation;
    };
    GameRoleController.prototype.onDestroy = function () {
        this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
        this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
    };
    GameRoleController.prototype.onTouchStart = function (event) {
        // console.log("onTouchStart===>", this._touchId, GameProxy.pauseGame);
        if (this._touchId == null) {
            this.touchId = event.getID();
            this._bMove = false;
            this.ring.opacity = RING_OPACITY;
            this.dot.opacity = RING_OPACITY;
            // 更改摇杆的位置
            this.ring.setPosition(event.getLocation().sub(cc.visibleRect.center));
            this.dot.setPosition(cc.v2(0, 0));
        }
    };
    GameRoleController.prototype.onTouchMove = function (event) {
        // console.log("onTouchMove===>", this._touchId, GameProxy.pauseGame);
        if (!GameProxy_1.GameProxy.pauseGame && event.getID() == this._touchId) {
            this._bMove = true;
            if (this.guideNode.active && this.dot.position.mag() > 30) {
                this.guideNode.active = false;
                World_1.World.My.newbies.finish("FirstEntryGame");
                this.getComponent(GameController_1.default).startGenerating();
            }
            var pos = this.dot.position.add(event.getDelta());
            this._dir = pos.normalize();
            if (pos.mag() >= this._radius) {
                this.dot.position = this._dir.mul(this._radius);
                this.role.speedType = Role_1.SpeedType.FAST;
                this.ring.position = event.getLocation().sub(cc.visibleRect.center).sub(this.dot.position);
            }
            else {
                this.dot.position = pos;
                this.role.speedType = Role_1.SpeedType.NORMAL;
            }
        }
    };
    GameRoleController.prototype.onTouchEnd = function (event) {
        // console.log("onTouchEnd===>", this._touchId, GameProxy.pauseGame);
        if (!GameProxy_1.GameProxy.pauseGame && event.getID() == this._touchId) {
            this.touchId = null;
            this._bMove = false;
            this.dot.setPosition(this.ring.getPosition());
            if (this.joystickType == JoystickType.FOLLOW) {
                this.ring.opacity = 0;
                this.dot.opacity = 0;
            }
            // this.role.speedType = SpeedType.STOP;
        }
    };
    __decorate([
        property(cc.Node)
    ], GameRoleController.prototype, "guideNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameRoleController.prototype, "bulletStrikeLayer", void 0);
    __decorate([
        property(cc.Prefab)
    ], GameRoleController.prototype, "propStatePrefab", void 0);
    __decorate([
        property(cc.Node)
    ], GameRoleController.prototype, "propStateNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameRoleController.prototype, "takePropLayer", void 0);
    __decorate([
        property(sp.Skeleton)
    ], GameRoleController.prototype, "beAttackSke", void 0);
    __decorate([
        property(sp.Skeleton)
    ], GameRoleController.prototype, "weaponSke", void 0);
    __decorate([
        property(cc.Label)
    ], GameRoleController.prototype, "payloadLabel", void 0);
    __decorate([
        property(cc.Node)
    ], GameRoleController.prototype, "payloadBars", void 0);
    __decorate([
        property(cc.ProgressBar)
    ], GameRoleController.prototype, "hpProgressBar", void 0);
    __decorate([
        property(cc.Node)
    ], GameRoleController.prototype, "hpBarNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameRoleController.prototype, "bgLayer", void 0);
    __decorate([
        property({ type: cc.Node, tooltip: "摇杆操纵点" })
    ], GameRoleController.prototype, "dot", void 0);
    __decorate([
        property({ type: cc.Node, tooltip: "摇杆背景节点" })
    ], GameRoleController.prototype, "ring", void 0);
    __decorate([
        property({ type: cc.Enum(JoystickType), tooltip: "触摸类型" })
    ], GameRoleController.prototype, "joystickType", void 0);
    __decorate([
        property({ type: cc.Enum(DirectionType), tooltip: "方向类型" })
    ], GameRoleController.prototype, "directionType", void 0);
    __decorate([
        property(Role_1.default)
    ], GameRoleController.prototype, "role", void 0);
    __decorate([
        property(BulletOfFangHuDun_1.default)
    ], GameRoleController.prototype, "impenetrableDefence", void 0);
    GameRoleController = __decorate([
        ccclass
    ], GameRoleController);
    return GameRoleController;
}(cc.Component));
exports.default = GameRoleController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/PreloadGameSceneCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cf93bRhBi5KuIVrHFENupQS', 'PreloadGameSceneCommand');
// script/app/game/PreloadGameSceneCommand.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PreloadGameSceneCommand = /** @class */ (function () {
    function PreloadGameSceneCommand() {
    }
    PreloadGameSceneCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Promise.all([
                                cc.loader.loadResAwait("prefab/entities/enemy/enemy1", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/enemy/enemy2", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/enemy/enemy3", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/enemy/enemy4", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/enemy/enemy5", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/enemy/enemy6", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/enemy/enemy7", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/enemy/enemy8", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet1", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet1Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet2", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet2Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet3", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet3Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet4", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet4Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet5", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet5Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet6", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet6Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet7", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet7Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet8", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet8Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet9", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet9Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet10", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet10Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet108", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/bullet108Strike", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/fire7", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/explosive/explosive9", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/enemyBullet1", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/enemyBullet2", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/enemyBullet3", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/propBullet1", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/propBullet2", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/propBullet3", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/propBullet4", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/propBullet5", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/bullet/propBullet6", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop1", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop2", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop3", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop4", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop5", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop6", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop9", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop10", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop11", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop12", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/prop13", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/guns", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/propState", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/prop/takeProp", cc.Prefab),
                                cc.loader.loadResAwait("prefab/entities/blood/blood", cc.Prefab),
                                cc.loader.loadResAwait("prefab/roleSupply", cc.Prefab),
                            ]).then(function (res) {
                                resolve();
                            }).catch(function (err) {
                                reject(err);
                            });
                            return [2 /*return*/];
                        });
                    }); })];
            });
        });
    };
    PreloadGameSceneCommand = __decorate([
        ccclass("PreloadGameSceneCommand")
    ], PreloadGameSceneCommand);
    return PreloadGameSceneCommand;
}());
exports.default = PreloadGameSceneCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a2a30D950ZPwLVWttC/Wqyp', 'GameController');
// script/app/game/GameController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameProxy_1 = require("./GameProxy");
var Extend_1 = require("../../../framework/extend/Extend");
var World_1 = require("../info/World");
var Shake_1 = require("../../../framework/extend/Shake");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var Music_1 = require("../../../framework/audio/Music");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameController = /** @class */ (function (_super) {
    __extends(GameController, _super);
    function GameController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.moreEnemyTipsAnimation = null;
        _this.bossTipsAnimation = null;
        _this.supplyGuideNode = null;
        _this.shakeNode = null;
        _this.topNode = null;
        _this.leftNode = null;
        _this.rightNode = null;
        _this.supplyNode = null;
        _this.greyNode = null;
        _this.blockNode = null;
        _this.reliveNode = null;
        _this.gameOverNode = null;
        _this._generating = false;
        _this._shakeDuration = 0;
        _this._genEnemyCount = 0;
        _this._propList = [1, 2, 3, 4, 5, 6, 9, 11, 12, 13];
        _this._gunsList = [];
        _this._displayPropList = [];
        _this._displayGusList = [];
        _this._preDisplayGun = false;
        return _this;
    }
    GameController.prototype.onClickSupply = function (event, data) {
        console.log("【click】 GameControllerSupply");
        this.supplyNode.active = true;
        var newbieNode = cc.director.getScene().getChildByName("newbieNode");
        if (newbieNode) {
            newbieNode.destroy();
            World_1.World.My.newbies.finish("KillFiveEnemy");
        }
    };
    GameController.prototype.playEntry = function () {
        var _this = this;
        var promises = [];
        this.topNode.active = true;
        this.topNode.y = cc.view.getVisibleSize().height / 2 + 300;
        var speed = 700;
        var distance = this.topNode.y - cc.view.getVisibleSize().height / 2;
        if (Extend_1.ext.isIphoneX) {
            distance += 66;
        }
        promises.push(this.topNode.runActionAwait(cc.moveBy(distance / speed, cc.v2(0, -distance))));
        this.leftNode.active = true;
        this.leftNode.x = -cc.view.getVisibleSize().width / 2 - 200;
        promises.push(this.leftNode.runActionAwait(cc.moveTo(Math.abs(-cc.view.getVisibleSize().width / 2 - this.leftNode.x) / speed, cc.v2(-cc.view.getVisibleSize().width / 2, this.leftNode.y))));
        this.rightNode.active = true;
        this.rightNode.x = cc.view.getVisibleSize().width / 2 + 200;
        promises.push(this.rightNode.runActionAwait(cc.moveTo(Math.abs(cc.view.getVisibleSize().width / 2 - this.rightNode.x) / speed, cc.v2(cc.view.getVisibleSize().width / 2, this.rightNode.y))));
        Promise.all(promises).then(function (res) {
            GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.StartGame);
            _this.blockNode.active = false;
        });
    };
    GameController.prototype.onLoad = function () {
        this.supplyNode.active = false;
        this.greyNode.active = true;
        this.greyNode.opacity = 0;
        this.reliveNode.active = false;
        this.gameOverNode.active = false;
        this.topNode.active = false;
        this.leftNode.active = false;
        this.rightNode.active = false;
        this.blockNode.active = true;
        this.node.on(GameProxy_1.GameProxy.Event.StartGenEnemy, this.startGenerating, this);
        this.node.on(GameProxy_1.GameProxy.Event.StopGenEnemy, this.stopGenerating, this);
        this.node.on(GameProxy_1.GameProxy.Event.KillEnemy, this.onKillEnemy, this);
        this.node.on(GameProxy_1.GameProxy.Event.KillRole, this.onKillRole, this);
        this.node.on(GameProxy_1.GameProxy.Event.SlowGame, this.onSlowGame, this);
        this.node.on(GameProxy_1.GameProxy.Event.PauseGame, this.onPauseGame, this);
        this.node.on(GameProxy_1.GameProxy.Event.ShakeScreen, this.onShakeScreen, this);
        GameProxy_1.GameProxy.GameScene = this.node;
        this.playEntry();
    };
    GameController.prototype.start = function () {
        GameProxy_1.GameProxy.level = World_1.World.Storage.gameLevel;
        GameProxy_1.GameProxy.slowGame = false;
        GameProxy_1.GameProxy.pauseGame = false;
        this._preDisplayGun = Math.random() * 100 > 50;
        GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.InitGame);
        this._propList = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop).filter(function (value) { return value['id'] != 7 && value['id'] != 8 && value['id'] != 10 && (value['unlock'] == 0 || World_1.World.My.propInfo.beUsing(value['id'])); }).map(function (value) { return value['id']; });
        this._gunsList = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon).filter(function (value) { return value['id'] != 1 && value['unlock'] <= World_1.World.Storage.gameLevel; }).map(function (value) { return value['id']; });
    };
    GameController.prototype.onDestroy = function () {
        this.node.off(GameProxy_1.GameProxy.Event.StartGenEnemy, this.startGenerating, this);
        this.node.off(GameProxy_1.GameProxy.Event.StopGenEnemy, this.stopGenerating, this);
        this.node.off(GameProxy_1.GameProxy.Event.KillEnemy, this.onKillEnemy, this);
        this.node.off(GameProxy_1.GameProxy.Event.KillRole, this.onKillRole, this);
        this.node.off(GameProxy_1.GameProxy.Event.SlowGame, this.onSlowGame, this);
        this.node.off(GameProxy_1.GameProxy.Event.PauseGame, this.onPauseGame, this);
        this.node.off(GameProxy_1.GameProxy.Event.ShakeScreen, this.onShakeScreen, this);
    };
    GameController.prototype.onShakeScreen = function (duration, strength_x, strength_y) {
        if (this._shakeDuration <= duration) {
            this._shakeDuration = duration;
            this.shakeNode.stopAllActions();
            this.shakeNode.position = cc.v2();
            this.shakeNode.runAction(Shake_1.Shake.create(duration, strength_x, strength_y));
        }
    };
    GameController.prototype.onSlowGame = function (slow) {
        // this.updateGrey();
        window['GameEnemysController'].allActiveEnemy().forEach(function (value) { return value.gameSlow = slow; });
    };
    GameController.prototype.onPauseGame = function (pause) {
        this.updateGrey();
    };
    GameController.prototype.updateGrey = function (opacity) {
        if (opacity === void 0) { opacity = 190; }
        console.log("updateGrey==>", GameProxy_1.GameProxy.pauseGame);
        this.greyNode.stopAllActions();
        if (GameProxy_1.GameProxy.pauseGame || GameProxy_1.GameProxy.slowGame) {
            this.greyNode.runAction(cc.fadeTo(0.3, opacity));
            // cc.tween(this.greyNode)
            //     .to(0.3, { opacity: opacity })
            //     .start();
        }
        else {
            this.greyNode.opacity = 0;
        }
    };
    /**
     * 启动怪物生成计划
     */
    GameController.prototype.startGenerating = function () {
        var _this = this;
        if (this._generating)
            return;
        this._generating = true;
        // console.log(GameProxy.enemyList, "enemyList");
        if (GameProxy_1.GameProxy.killCount < GameProxy_1.GameProxy.levelConfig.amount_p1) {
            /** 第一阶段 0.5s出一个怪物 */
            /** 0.5s出一个怪物 */
            var action = cc.sequence(cc.repeat(cc.sequence(cc.callFunc(function () { return _this._genEnemyCount += 1; }), cc.delayTime(0.5)), GameProxy_1.GameProxy.levelConfig.delimit_p1), cc.callFunc(function () {
                _this._generating = false;
                _this.startCDTask();
            }));
            action.setTag(1010);
            this.node.runAction(action);
        }
        else {
            /** 第二阶段 0.5s一次出3个 */
            /** 0.5s出一个怪物 */
            var action = cc.sequence(cc.repeat(cc.sequence(cc.callFunc(function () { return _this._genEnemyCount += 1; }), cc.delayTime(0.5)), Math.floor(GameProxy_1.GameProxy.levelConfig.delimit_p1)), cc.callFunc(function () {
                _this._generating = false;
                _this.startCDTask();
            }));
            action.setTag(1010);
            this.node.runAction(action);
        }
    };
    /**
     * 停止怪物生成计划
     * */
    GameController.prototype.stopGenerating = function () {
        if (!this._generating)
            return;
        this.node.stopActionByTag(1010);
    };
    /** 计时任务 */
    GameController.prototype.startCDTask = function () {
        var _this = this;
        this.stopCDTask();
        var action = cc.sequence(cc.delayTime(10), cc.callFunc(function () {
            /** 生成两只怪物 */
            _this._genEnemyCount += 2;
            _this.startCDTask();
        }));
        action.setTag(1041);
        this.node.runAction(action);
    };
    /** 停止计时任务 */
    GameController.prototype.stopCDTask = function () {
        this.node.stopActionByTag(1041);
    };
    GameController.prototype.onKillRole = function () {
        GameProxy_1.GameProxy.isOver = true;
        GameProxy_1.GameProxy.pauseGame = true;
        if (GameProxy_1.GameProxy.firstAidFlag) {
            this.reliveNode.active = true;
        }
        else {
            this.reliveNode.active = true;
        }
        Music_1.Music.playSFX("sound/msc_rol002");
        console.log("game over==>等待复活");
    };
    /** 掉枪 */
    GameController.prototype.displayGun = function (position) {
        var _this = this;
        var prop = window['GameEnemysController'].getInactiveGun();
        var testList = this._gunsList.filter(function (value) { return !_this._displayGusList.includes(value); });
        if (testList.length == 0) {
            testList = this._gunsList;
            this._displayGusList = [];
        }
        var id = Extend_1.ext.randomElement(testList);
        this._displayGusList.push(id);
        prop.init(id + 100);
        prop.node.position = position;
        prop.display();
    };
    /** 掉道具 */
    GameController.prototype.displayProp = function (position) {
        var _this = this;
        var testList = this._propList.filter(function (value) { return !_this._displayPropList.includes(value); });
        if (testList.length == 0) {
            testList = this._propList;
            this._displayPropList = [];
        }
        var id = Extend_1.ext.randomElement(testList);
        this._displayPropList.push(id);
        var prop = window['GameEnemysController'].getInactiveProp(id);
        prop.node.position = position;
        prop.display();
    };
    GameController.prototype.onKillEnemy = function (enemy) {
        if (GameProxy_1.GameProxy.killCount % 10 == 0) {
            var position = enemy.node.position;
            if (this._preDisplayGun) {
                this.displayProp(position);
            }
            else {
                this.displayGun(position);
            }
            this._preDisplayGun = !this._preDisplayGun;
        }
        if (GameProxy_1.GameProxy.killCount == GameProxy_1.GameProxy.levelConfig.amount_p1 - 3) {
            this.displayGun(enemy.node.position);
        }
        if (GameProxy_1.GameProxy.killCount + window['GameEnemysController'].allAliveEnemy().length < GameProxy_1.GameProxy.levelConfig.amount_p1) {
            //第一阶段
            this._genEnemyCount += 2;
            this.startCDTask();
        }
        else if (GameProxy_1.GameProxy.enemyList.length > 0) {
            //第二阶段
            this._genEnemyCount += 3;
            this.startCDTask();
        }
        else if (GameProxy_1.GameProxy.killCount >= GameProxy_1.GameProxy.maxEnemyNum) {
            GameProxy_1.GameProxy.isOver = true;
            GameProxy_1.GameProxy.pauseGame = true;
            console.log("game win.");
            this.blockNode.active = true;
        }
        if (GameProxy_1.GameProxy.killCount == 5) {
            if (!World_1.World.My.newbies.state("KillFiveEnemy")) {
                var newbieNode = new cc.Node();
                newbieNode.name = "newbieNode";
                newbieNode.position = this.supplyGuideNode.convertToWorldSpaceAR(cc.v2());
                cc.director.getScene().addChild(newbieNode);
                /** guideCircle */
                var guideCirclePrefab = cc.loader.getRes("prefab/guideCircle");
                var guideCircleNode = cc.instantiate(guideCirclePrefab);
                guideCircleNode.position = cc.v2();
                newbieNode.addChild(guideCircleNode);
                /** guideSke */
                var guideSkePrefab = cc.loader.getRes("prefab/guideSke");
                var guideSkeNode = cc.instantiate(guideSkePrefab);
                guideSkeNode.position = cc.v2();
                newbieNode.addChild(guideSkeNode);
                GameProxy_1.GameProxy.pauseGame = true;
                this.greyNode.stopAllActions();
                this.greyNode.opacity = 0;
            }
        }
    };
    GameController.prototype.genEnemy = function () {
        if (GameProxy_1.GameProxy.enemyList.length <= 0) {
            return;
        }
        /** 判断上限 */
        /** 第一阶段 */
        var aliveCount = window['GameEnemysController'].allAliveEnemy().length;
        if (GameProxy_1.GameProxy.killCount + aliveCount <= GameProxy_1.GameProxy.levelConfig.amount_p1) {
            if (aliveCount >= GameProxy_1.GameProxy.levelConfig.limit_p1) {
                return;
            }
        }
        else {
            if (aliveCount >= GameProxy_1.GameProxy.levelConfig.limit_p2) {
                return;
            }
        }
        window['GameEnemysController'].createEnemy(GameProxy_1.GameProxy.enemyList.shift());
        this._genEnemyCount--;
        // window['GameEnemysController'].createEnemy(3);
        if (GameProxy_1.GameProxy.maxEnemyNum - GameProxy_1.GameProxy.enemyList.length === GameProxy_1.GameProxy.levelConfig.amount_p1 + 1) {
            this.moreEnemyTipsAnimation.node.opacity = 255;
            this.moreEnemyTipsAnimation.node.active = true;
            this.moreEnemyTipsAnimation.play();
        }
        if (GameProxy_1.GameProxy.enemyList.length == GameProxy_1.GameProxy.secondBossNum - 1) {
            this.bossTipsAnimation.node.opacity = 255;
            this.bossTipsAnimation.node.active = true;
            this.bossTipsAnimation.play();
        }
    };
    GameController.prototype.update = function (dt) {
        if (this._genEnemyCount > 0) {
            this.genEnemy();
        }
    };
    __decorate([
        property(cc.Animation)
    ], GameController.prototype, "moreEnemyTipsAnimation", void 0);
    __decorate([
        property(cc.Animation)
    ], GameController.prototype, "bossTipsAnimation", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "supplyGuideNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "shakeNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "topNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "leftNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "rightNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "supplyNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "greyNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "blockNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "reliveNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameController.prototype, "gameOverNode", void 0);
    GameController = __decorate([
        ccclass
    ], GameController);
    return GameController;
}(cc.Component));
exports.default = GameController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/extend/ccnodeAwait.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8fb7amgeJpKe4gJLebr3F9k', 'ccnodeAwait');
// framework/extend/ccnodeAwait.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
function runAction(actionOrActionArray, tag) {
    return __awaiter(this, void 0, Promise, function () {
        var self;
        return __generator(this, function (_a) {
            self = this;
            return [2 /*return*/, new Promise(function (resolve) {
                    var seq = cc.sequence(actionOrActionArray, cc.callFunc(function () {
                        resolve();
                    }));
                    if (tag) {
                        seq.setTag(tag);
                    }
                    self.runAction(seq);
                })];
        });
    });
}
function once(type, useCapture) {
    return __awaiter(this, void 0, Promise, function () {
        var self;
        return __generator(this, function (_a) {
            self = this;
            return [2 /*return*/, new Promise(function (resolve) {
                    self.once(type, function (event) {
                        resolve(event);
                    }, null, useCapture);
                })];
        });
    });
}
cc.Node.prototype.runActionAwait = runAction;
cc.Node.prototype.onceAwait = once;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mcmFtZXdvcmsvZXh0ZW5kL2Njbm9kZUF3YWl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBRW5HLFNBQWUsU0FBUyxDQUFFLG1CQUE4RCxFQUFFLEdBQVc7bUNBQUUsT0FBTzs7O1lBQ3RHLElBQUksR0FBWSxJQUFJLENBQUM7WUFDekIsc0JBQU8sSUFBSSxPQUFPLENBQUMsVUFBQSxPQUFPO29CQUN0QixJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLG1CQUFtQixFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUM7d0JBQ25ELE9BQU8sRUFBRSxDQUFDO29CQUNkLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ0osSUFBSSxHQUFHLEVBQUU7d0JBQ0wsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztxQkFDbkI7b0JBQ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDeEIsQ0FBQyxDQUFDLEVBQUM7OztDQUNOO0FBR0QsU0FBZSxJQUFJLENBQUMsSUFBWSxFQUFFLFVBQW9CO21DQUFFLE9BQU87OztZQUN2RCxJQUFJLEdBQVksSUFBSSxDQUFDO1lBQ3pCLHNCQUFPLElBQUksT0FBTyxDQUFDLFVBQUEsT0FBTztvQkFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsVUFBVSxLQUFLO3dCQUMzQixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQ25CLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7Z0JBQ3pCLENBQUMsQ0FBQyxFQUFDOzs7Q0FDTjtBQUVELEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsR0FBRyxTQUFTLENBQUM7QUFDN0MsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuYXN5bmMgZnVuY3Rpb24gcnVuQWN0aW9uIChhY3Rpb25PckFjdGlvbkFycmF5OiBjYy5GaW5pdGVUaW1lQWN0aW9ufGNjLkZpbml0ZVRpbWVBY3Rpb25bXSwgdGFnPzpOdW1iZXIpOlByb21pc2Uge1xyXG4gICAgbGV0IHNlbGYgPSA8Y2MuTm9kZT50aGlzO1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgIGxldCBzZXEgPSBjYy5zZXF1ZW5jZShhY3Rpb25PckFjdGlvbkFycmF5LCBjYy5jYWxsRnVuYyhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJlc29sdmUoKTtcclxuICAgICAgICB9KSk7XHJcbiAgICAgICAgaWYgKHRhZykge1xyXG4gICAgICAgICAgICBzZXEuc2V0VGFnKHRhZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNlbGYucnVuQWN0aW9uKHNlcSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIG9uY2UodHlwZTogc3RyaW5nLCB1c2VDYXB0dXJlPzogYm9vbGVhbik6UHJvbWlzZXtcclxuICAgIGxldCBzZWxmID0gPGNjLk5vZGU+dGhpcztcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICBzZWxmLm9uY2UodHlwZSwgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIHJlc29sdmUoZXZlbnQpO1xyXG4gICAgICAgIH0sIG51bGwsIHVzZUNhcHR1cmUpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmNjLk5vZGUucHJvdG90eXBlLnJ1bkFjdGlvbkF3YWl0ID0gcnVuQWN0aW9uO1xyXG5jYy5Ob2RlLnByb3RvdHlwZS5vbmNlQXdhaXQgPSBvbmNlOyJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameUIController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f3f85MNlcZIA6Ym+TSEYYf+', 'GameUIController');
// script/app/game/GameUIController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameProxy_1 = require("./GameProxy");
var Extend_1 = require("../../../framework/extend/Extend");
var Actions_1 = require("../../../framework/actions/Actions");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GoldIconNodePos = null;
var GameUIController = /** @class */ (function (_super) {
    __extends(GameUIController, _super);
    function GameUIController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.supplyIconNode = null;
        _this.lvLabels = [];
        _this.gameProgressBar = null;
        _this.gameProgressLabel = null;
        _this.goldLabel = null;
        _this.goldIconNode = null;
        _this.goldLayer = null;
        _this.gameOverNode = null;
        return _this;
        // update (dt) {}
    }
    GameUIController.prototype.getInactiveGoldIconNode = function () {
        var node = this.goldLayer.children.find(function (value) { return value.active == false; });
        if (node == null) {
            node = cc.instantiate(this.goldIconNode);
            node.active = false;
            this.goldLayer.addChild(node);
        }
        node.opacity = 255;
        node.scale = 0.7;
        return node;
    };
    GameUIController.prototype.updateGold = function () {
        this.goldLabel.string = Extend_1.ext.shortFormat(GameProxy_1.GameProxy.goldCount);
    };
    GameUIController.prototype.onLoad = function () {
        this.node.on(GameProxy_1.GameProxy.Event.KillEnemy, this.onKillEnemy, this);
        this.node.on(GameProxy_1.GameProxy.Event.InitGame, this.onInitGame, this);
        this.node.on(GameProxy_1.GameProxy.Event.StartGame, this.onStartGame, this);
        this.supplyIconNode.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(0.35, 0.91), cc.scaleTo(0.35, 1))));
    };
    GameUIController.prototype.onDestroy = function () {
        this.node.off(GameProxy_1.GameProxy.Event.KillEnemy, this.onKillEnemy, this);
        this.node.off(GameProxy_1.GameProxy.Event.InitGame, this.onInitGame, this);
        this.node.off(GameProxy_1.GameProxy.Event.StartGame, this.onStartGame, this);
    };
    GameUIController.prototype.checkWin = function () {
        if (GameProxy_1.GameProxy.isOver && GameProxy_1.GameProxy.killCount >= GameProxy_1.GameProxy.maxEnemyNum && this.goldLayer.children.every(function (value) { return value.active == false; })) {
            console.log("金币飞完了，结算");
            this.gameOverNode.active = true;
        }
    };
    GameUIController.prototype.onKillEnemy = function (enemy) {
        var _this = this;
        // console.log("======onKillEnemy====>");
        /** 分配金币 */
        var totalGold = enemy.gold * GameProxy_1.GameProxy.goldMul;
        var sigleGold = Math.floor(totalGold / enemy.goldIconFell);
        var restGold = totalGold - sigleGold * enemy.goldIconFell;
        var addFlag = false;
        var moveSpeed = 1000;
        /** 飞金币 */
        var position = enemy.node.position.add(enemy.node.getParent().getParent().position);
        if (enemy.goldIconFell < 5) {
            /** 每一个延迟0.1秒执行 */
            /** 随机一个方向 */
            var sub = GoldIconNodePos.sub(position);
            var center = position.add(sub.mul(0.15));
            var p = sub.normalize().rotate(-90 * Math.PI / 180);
            // let duration = sub.mag()/moveSpeed;
            var duration = 0.65;
            var bLeft = (Math.random() * 100) % 2 === 1;
            var _loop_1 = function (i) {
                var left = i % 2 === 0 ? bLeft : !bLeft;
                var goldIcon = this_1.getInactiveGoldIconNode();
                goldIcon.position = position;
                goldIcon.active = true;
                goldIcon.runAction(cc.speed(cc.sequence(cc.delayTime(i * 0.1), cc.bezierTo(duration, [
                    center.add(p.mul(300 * (left ? -1 : 1))),
                    GoldIconNodePos,
                    GoldIconNodePos
                ]).easing(cc.easeCircleActionIn()), cc.callFunc(function () {
                    goldIcon.active = false;
                    //加金币
                    if (!addFlag) {
                        addFlag = true;
                        GameProxy_1.GameProxy.goldCount += sigleGold + restGold;
                    }
                    else {
                        GameProxy_1.GameProxy.goldCount += sigleGold;
                    }
                    _this.updateGold();
                    _this.checkWin();
                })), 1));
            };
            var this_1 = this;
            for (var i = 0; i < enemy.goldIconFell; i++) {
                _loop_1(i);
            }
        }
        else {
            // console.log("Actions.boom===>");
            /** 像转盘一样炸开 */
            var radius = 80;
            var num = enemy.goldIconFell;
            Actions_1.default.boom(function () {
                var node = _this.getInactiveGoldIconNode();
                node.active = true;
                return node;
            }, position, GoldIconNodePos, radius, num, moveSpeed, function () {
                if (!addFlag) {
                    addFlag = true;
                    GameProxy_1.GameProxy.goldCount += sigleGold + restGold;
                }
                else {
                    GameProxy_1.GameProxy.goldCount += sigleGold;
                }
                _this.updateGold();
                _this.checkWin();
            });
        }
        this.updateGameProgress();
    };
    GameUIController.prototype.onInitGame = function () {
        this.lvLabels.forEach(function (value, index) { return value.string = "<b><outline color=#1e1e1e width=3>" + (GameProxy_1.GameProxy.level - 1 + index) + "</outline></b>"; });
        if (GameProxy_1.GameProxy.level < 2) {
            this.lvLabels[0].node.getParent().active = false;
        }
        this.updateGameProgress();
        this.updateGold();
    };
    GameUIController.prototype.onStartGame = function () {
        GoldIconNodePos = this.goldLayer.convertToNodeSpaceAR(this.goldIconNode.convertToWorldSpaceAR(cc.v2()));
    };
    GameUIController.prototype.updateGameProgress = function () {
        this.gameProgressBar.progress = GameProxy_1.GameProxy.killCount / GameProxy_1.GameProxy.maxEnemyNum;
        this.gameProgressLabel.string = "\u5269\u4F59\u654C\u4EBA\uFF1A" + Math.ceil(100 * (GameProxy_1.GameProxy.maxEnemyNum - GameProxy_1.GameProxy.killCount) / GameProxy_1.GameProxy.maxEnemyNum) + "%";
    };
    __decorate([
        property(cc.Node)
    ], GameUIController.prototype, "supplyIconNode", void 0);
    __decorate([
        property(cc.RichText)
    ], GameUIController.prototype, "lvLabels", void 0);
    __decorate([
        property(cc.ProgressBar)
    ], GameUIController.prototype, "gameProgressBar", void 0);
    __decorate([
        property(cc.Label)
    ], GameUIController.prototype, "gameProgressLabel", void 0);
    __decorate([
        property(cc.Label)
    ], GameUIController.prototype, "goldLabel", void 0);
    __decorate([
        property(cc.Node)
    ], GameUIController.prototype, "goldIconNode", void 0);
    __decorate([
        property(cc.Node)
    ], GameUIController.prototype, "goldLayer", void 0);
    __decorate([
        property(cc.Node)
    ], GameUIController.prototype, "gameOverNode", void 0);
    GameUIController = __decorate([
        ccclass
    ], GameUIController);
    return GameUIController;
}(cc.Component));
exports.default = GameUIController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/LoadingCommand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ec9e9EHzntFyYuA7kcVJd7f', 'LoadingCommand');
// script/app/home/LoadingCommand.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../../../framework/facade/Facade");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LoadingCommand = /** @class */ (function () {
    function LoadingCommand() {
    }
    LoadingCommand.prototype.execute = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve) {
                        console.log("LoadingCommand");
                        var list = [];
                        /** 初始化隔离层prefab */
                        list.push(ExcelConfig_1.ExcelConfig.loadAllExcel("data/"));
                        for (var i = 0; i < 8; i++) {
                            list.push(cc.loader.loadResAwait("prefab/entities/enemy/enemy" + (i + 1), cc.Prefab));
                        }
                        list.push(cc.loader.loadResAwait("prefab/guideCircle"));
                        list.push(cc.loader.loadResAwait("prefab/guideSke"));
                        list.push(Facade_1.default.initSeparationLayer("prefab/separationLayer"));
                        list.push(Facade_1.default.initTextTips("prefab/textTips"));
                        list.push(Facade_1.default.initTextTips("prefab/color"));
                        list.push(cc.loader.loadResAwait("frame_fy005", cc.SpriteFrame));
                        list.push(cc.loader.loadResDirAwait("sound/"));
                        /** 加载一些不是很紧急的资源 */
                        cc.loader.loadRes("prefab/exchange");
                        cc.loader.loadRes("prefab/friendRank");
                        cc.loader.loadRes("prefab/invites");
                        cc.loader.loadRes("prefab/props");
                        cc.loader.loadRes("prefab/roleSupply");
                        cc.loader.loadRes("prefab/settings");
                        cc.loader.loadRes("prefab/takeJackpot");
                        cc.loader.loadRes("prefab/tips");
                        cc.loader.loadRes("prefab/recommend");
                        Promise.all(list).then(function () {
                            console.log('加载完成...');
                            cc.sys.garbageCollect();
                            resolve();
                        }).catch(function (err) {
                            console.error(err);
                        });
                    })];
            });
        });
    };
    LoadingCommand = __decorate([
        ccclass("LoadingCommand")
    ], LoadingCommand);
    return LoadingCommand;
}());
exports.default = LoadingCommand;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvTG9hZGluZ0NvbW1hbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsb0JBQW9CO0FBQ3BCLGlGQUFpRjtBQUNqRix5RkFBeUY7QUFDekYsbUJBQW1CO0FBQ25CLDJGQUEyRjtBQUMzRixtR0FBbUc7QUFDbkcsOEJBQThCO0FBQzlCLDJGQUEyRjtBQUMzRixtR0FBbUc7O0FBSW5HLDJEQUFzRDtBQUN0RCxxRUFBa0U7QUFJNUQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFLMUM7SUFBQTtJQXVDQSxDQUFDO0lBdENTLGdDQUFPLEdBQWI7UUFBZSxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOzt1Q0FBRSxPQUFPOztnQkFDM0Isc0JBQU8sSUFBSSxPQUFPLENBQUMsVUFBQSxPQUFPO3dCQUN0QixPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUM7d0JBRTlCLElBQUksSUFBSSxHQUFrQixFQUFFLENBQUM7d0JBRTdCLG1CQUFtQjt3QkFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyx5QkFBVyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO3dCQUM3QyxLQUFLLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBRSxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFDOzRCQUNuQixJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLDZCQUE2QixHQUFDLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO3lCQUNyRjt3QkFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQzt3QkFDeEQsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7d0JBQ3JELElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQU0sQ0FBQyxtQkFBbUIsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUM7d0JBQ2hFLElBQUksQ0FBQyxJQUFJLENBQUMsZ0JBQU0sQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO3dCQUNsRCxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFNLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7d0JBQy9DLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO3dCQUNqRSxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7d0JBQy9DLG1CQUFtQjt3QkFDbkIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQzt3QkFDckMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQzt3QkFDdkMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQzt3QkFDcEMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7d0JBQ2xDLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7d0JBQ3ZDLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7d0JBQ3JDLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUM7d0JBQ3hDLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO3dCQUNqQyxFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO3dCQUV0QyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQzs0QkFDbkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQzs0QkFDdkIsRUFBRSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsQ0FBQzs0QkFDeEIsT0FBTyxFQUFFLENBQUM7d0JBQ2QsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQUEsR0FBRzs0QkFDUixPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO3dCQUN2QixDQUFDLENBQUMsQ0FBQztvQkFDUCxDQUFDLENBQUMsRUFBQzs7O0tBQ047SUF0Q2dCLGNBQWM7UUFEbEMsT0FBTyxDQUFDLGdCQUFnQixDQUFDO09BQ0wsY0FBYyxDQXVDbEM7SUFBRCxxQkFBQztDQXZDRCxBQXVDQyxJQUFBO2tCQXZDb0IsY0FBYyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIExlYXJuIFR5cGVTY3JpcHQ6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3R5cGVzY3JpcHQuaHRtbFxyXG4vLyBMZWFybiBBdHRyaWJ1dGU6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9yZWZlcmVuY2UvYXR0cmlidXRlcy5odG1sXHJcbi8vIExlYXJuIGxpZmUtY3ljbGUgY2FsbGJhY2tzOlxyXG4vLyAgLSBbQ2hpbmVzZV0gaHR0cDovL2RvY3MuY29jb3MuY29tL2NyZWF0b3IvbWFudWFsL3poL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuXHJcbmltcG9ydCB7SUNvbW1hbmR9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvZmFjYWRlL0lDb21tYW5kXCI7XHJcbmltcG9ydCBGYWNhZGUgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9mYWNhZGUvRmFjYWRlXCI7XHJcbmltcG9ydCB7RXhjZWxDb25maWd9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvY29uZmlnL0V4Y2VsQ29uZmlnXCI7XHJcbmltcG9ydCB7d3hBcGl9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvd3hBcGkvd3hBcGlcIjtcclxuaW1wb3J0IE5ldHdvcmsgZnJvbSBcIi4uL25ldHdvcmsvTmV0d29ya1wiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5cclxuXHJcbkBjY2NsYXNzKFwiTG9hZGluZ0NvbW1hbmRcIilcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9hZGluZ0NvbW1hbmQgaW1wbGVtZW50cyBJQ29tbWFuZCB7XHJcbiAgICBhc3luYyBleGVjdXRlICguLi5hcmdzKTpQcm9taXNlPGFueT57XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkxvYWRpbmdDb21tYW5kXCIpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbGV0IGxpc3Q6QXJyYXk8UHJvbWlzZT4gPSBbXTtcclxuXHJcbiAgICAgICAgICAgIC8qKiDliJ3lp4vljJbpmpTnprvlsYJwcmVmYWIgKi9cclxuICAgICAgICAgICAgbGlzdC5wdXNoKEV4Y2VsQ29uZmlnLmxvYWRBbGxFeGNlbChcImRhdGEvXCIpKTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaT0wOyBpPDg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICBsaXN0LnB1c2goY2MubG9hZGVyLmxvYWRSZXNBd2FpdChcInByZWZhYi9lbnRpdGllcy9lbmVteS9lbmVteVwiKyhpKzEpLCBjYy5QcmVmYWIpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsaXN0LnB1c2goY2MubG9hZGVyLmxvYWRSZXNBd2FpdChcInByZWZhYi9ndWlkZUNpcmNsZVwiKSk7XHJcbiAgICAgICAgICAgIGxpc3QucHVzaChjYy5sb2FkZXIubG9hZFJlc0F3YWl0KFwicHJlZmFiL2d1aWRlU2tlXCIpKTtcclxuICAgICAgICAgICAgbGlzdC5wdXNoKEZhY2FkZS5pbml0U2VwYXJhdGlvbkxheWVyKFwicHJlZmFiL3NlcGFyYXRpb25MYXllclwiKSk7XHJcbiAgICAgICAgICAgIGxpc3QucHVzaChGYWNhZGUuaW5pdFRleHRUaXBzKFwicHJlZmFiL3RleHRUaXBzXCIpKTtcclxuICAgICAgICAgICAgbGlzdC5wdXNoKEZhY2FkZS5pbml0VGV4dFRpcHMoXCJwcmVmYWIvY29sb3JcIikpO1xyXG4gICAgICAgICAgICBsaXN0LnB1c2goY2MubG9hZGVyLmxvYWRSZXNBd2FpdChcImZyYW1lX2Z5MDA1XCIsIGNjLlNwcml0ZUZyYW1lKSk7XHJcbiAgICAgICAgICAgIGxpc3QucHVzaChjYy5sb2FkZXIubG9hZFJlc0RpckF3YWl0KFwic291bmQvXCIpKTtcclxuICAgICAgICAgICAgLyoqIOWKoOi9veS4gOS6m+S4jeaYr+W+iOe0p+aApeeahOi1hOa6kCAqL1xyXG4gICAgICAgICAgICBjYy5sb2FkZXIubG9hZFJlcyhcInByZWZhYi9leGNoYW5nZVwiKTtcclxuICAgICAgICAgICAgY2MubG9hZGVyLmxvYWRSZXMoXCJwcmVmYWIvZnJpZW5kUmFua1wiKTtcclxuICAgICAgICAgICAgY2MubG9hZGVyLmxvYWRSZXMoXCJwcmVmYWIvaW52aXRlc1wiKTtcclxuICAgICAgICAgICAgY2MubG9hZGVyLmxvYWRSZXMoXCJwcmVmYWIvcHJvcHNcIik7XHJcbiAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKFwicHJlZmFiL3JvbGVTdXBwbHlcIik7XHJcbiAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkUmVzKFwicHJlZmFiL3NldHRpbmdzXCIpO1xyXG4gICAgICAgICAgICBjYy5sb2FkZXIubG9hZFJlcyhcInByZWZhYi90YWtlSmFja3BvdFwiKTtcclxuICAgICAgICAgICAgY2MubG9hZGVyLmxvYWRSZXMoXCJwcmVmYWIvdGlwc1wiKTtcclxuICAgICAgICAgICAgY2MubG9hZGVyLmxvYWRSZXMoXCJwcmVmYWIvcmVjb21tZW5kXCIpO1xyXG5cclxuICAgICAgICAgICAgUHJvbWlzZS5hbGwobGlzdCkudGhlbigoKT0+e1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+WKoOi9veWujOaIkC4uLicpO1xyXG4gICAgICAgICAgICAgICAgY2Muc3lzLmdhcmJhZ2VDb2xsZWN0KCk7XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgIH0pLmNhdGNoKGVycj0+e1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/JackpotController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4df4e9sTVZId7fiAYzaOydn', 'JackpotController');
// script/app/home/JackpotController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("../info/World");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var Extend_1 = require("../../../framework/extend/Extend");
var NetworkConfig_1 = require("../config/NetworkConfig");
var Network_1 = require("../network/Network");
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var JackpotController = /** @class */ (function (_super) {
    __extends(JackpotController, _super);
    function JackpotController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.progressBar = null;
        _this.goldLabel = null;
        _this.takeLabel = null;
        _this.button = null;
        return _this;
    }
    // LIFE-CYCLE CALLBACKS:
    JackpotController.prototype.onLoad = function () {
        var _this = this;
        this.progressBar.node.active = false;
        this.goldLabel.node.active = false;
        this.takeLabel.node.active = false;
        Facade_1.default.canvasNode.on('TakeJackpot', this._takeIt, this);
        this.init();
        cc.game.on("video_6", function () {
            _this.takeIt3Do();
        }, this);
    };
    JackpotController.prototype.onDestroy = function () {
        Facade_1.default.canvasNode.off('TakeJackpot', this._takeIt, this);
    };
    JackpotController.prototype.init = function () {
        var _this = this;
        this.scheduleOnce(function () {
            _this.goldLabel.node.active = true;
            if (World_1.World.Storage.dayEarnTotalModifyTime == 0) {
                World_1.World.Storage.dayEarnTotalModifyTime = World_1.World.My.serverTime;
            }
            if (World_1.World.Storage.dayEarnExpireTime == 0) {
                World_1.World.Storage.dayEarnExpireTime = World_1.World.My.serverTime + 24 * 60 * 60 * 1000;
            }
            _this.schedule(function () {
                _this.updateDayEarnCD();
            }, 0);
            _this.updateDayEarnCD();
        }, 0.1);
    };
    JackpotController.prototype.updateDayEarnCD = function () {
        var currentTime = World_1.World.My.serverTime;
        var cdTime = (World_1.World.Storage.dayEarnExpireTime - currentTime) / 1000;
        var progress = 0;
        if (cdTime > 0) {
            progress = (24 * 60 * 60 * 1000 - cdTime * 1000) / (24 * 60 * 60 * 1000);
            if (progress > 1) {
                progress = 1;
            }
        }
        else {
            progress = 1;
        }
        this.progressBar.node.active = progress < 1;
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
        var dayGet = cfg[World_1.World.Storage.dayEarnLv - 1]['on_hook'];
        var diffTime = (World_1.World.My.serverTime - World_1.World.Storage.dayEarnTotalModifyTime) / 1000;
        var addTotal = Math.floor(diffTime / 3) * dayGet;
        if (addTotal > 0) {
            World_1.World.Storage.dayEarnTotal += addTotal;
        }
        this.goldLabel.string = Extend_1.ext.shortFormat(World_1.World.Storage.dayEarnTotal);
        this.button.interactable = World_1.World.Storage.dayEarnTotal > 0;
        this.takeLabel.node.active = World_1.World.Storage.dayEarnTotal > 0;
        this.progressBar.progress = (diffTime % 3) / 3;
    };
    JackpotController.prototype._takeIt = function (num) {
        console.log("【video】6 多倍金币【click】JackpotController _takeIt", num);
        if (num == 1) {
            this.takeId1();
        }
        else {
            this.takeIt3();
        }
    };
    JackpotController.prototype.takeId1 = function () {
        World_1.World.Storage.goldCount += World_1.World.Storage.dayEarnTotal * 1;
        Facade_1.default.executeCommand('ShowTipsCommand', "\u91D1\u5E01 +" + Extend_1.ext.shortFormat(World_1.World.Storage.dayEarnTotal * 1));
        World_1.World.Storage.dayEarnTotal = 0;
        World_1.World.Storage.dayEarnExpireTime = World_1.World.My.serverTime + 24 * 60 * 60 * 1000;
        this.updateDayEarnCD();
        if (NetworkConfig_1.NetworkConfig.connectServer) {
            Network_1.default.pushStorage();
        }
    };
    JackpotController.prototype.takeIt3 = function () {
        World_1.World.Storage._videoSign = 6;
        World_1.World.Storage.videoAd_show();
    };
    JackpotController.prototype.takeIt3Do = function () {
        World_1.World.Storage.goldCount += World_1.World.Storage.dayEarnTotal * 3;
        Facade_1.default.executeCommand('ShowTipsCommand', "\u91D1\u5E01 +" + Extend_1.ext.shortFormat(World_1.World.Storage.dayEarnTotal * 3));
        World_1.World.Storage.dayEarnTotal = 0;
        World_1.World.Storage.dayEarnExpireTime = World_1.World.My.serverTime + 24 * 60 * 60 * 1000;
        this.updateDayEarnCD();
        if (NetworkConfig_1.NetworkConfig.connectServer) {
            Network_1.default.pushStorage();
        }
    };
    __decorate([
        property(cc.ProgressBar)
    ], JackpotController.prototype, "progressBar", void 0);
    __decorate([
        property(cc.Label)
    ], JackpotController.prototype, "goldLabel", void 0);
    __decorate([
        property(cc.Label)
    ], JackpotController.prototype, "takeLabel", void 0);
    __decorate([
        property(cc.Button)
    ], JackpotController.prototype, "button", void 0);
    JackpotController = __decorate([
        ccclass
    ], JackpotController);
    return JackpotController;
}(cc.Component));
exports.default = JackpotController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/InviteItem.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '618ecW0IVZD/IS6hmiplscv', 'InviteItem');
// script/app/home/InviteItem.ts

Object.defineProperty(exports, "__esModule", { value: true });
var AbstractTableItem_1 = require("../../../framework/tableview/AbstractTableItem");
var Extend_1 = require("../../../framework/extend/Extend");
var Network_1 = require("../network/Network");
var World_1 = require("../info/World");
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var rewardNum = 30;
var InviteItem = /** @class */ (function (_super) {
    __extends(InviteItem, _super);
    function InviteItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.idLabel = null;
        _this.iconSprite = null;
        _this.rewardLabel = null;
        _this.takenNode = null;
        _this.willTakeNode = null;
        _this.data = null;
        return _this;
    }
    InviteItem.prototype.upadteItem = function (data, index) {
        console.log(data, "share1===>upadteItem");
        this.data = data;
        this.idLabel.string = (index + 1).toString();
        this.rewardLabel.string = rewardNum.toString();
        Extend_1.ext.wxCreateImageToSprite(this.iconSprite, data['headUrl']);
        this.takenNode.active = data['receive'];
        this.willTakeNode.active = !this.takenNode.active;
    };
    InviteItem.prototype.onClickTakeReward = function (event, data) {
        var _this = this;
        console.log("【click】InviteItem TakeReward");
        if (this.data) {
            this.willTakeNode.getComponent(cc.Button).interactable = false;
            Network_1.default.takeShareReward("share1", this.data["playerId"]).then(function (res) {
                World_1.World.Storage.diamondCount += rewardNum;
                Facade_1.default.executeCommand('ShowTipsCommand', "\u94BB\u77F3 +" + rewardNum);
                _this.takenNode.active = true;
                _this.willTakeNode.active = !_this.takenNode.active;
            });
        }
    };
    __decorate([
        property(cc.Label)
    ], InviteItem.prototype, "idLabel", void 0);
    __decorate([
        property(cc.Sprite)
    ], InviteItem.prototype, "iconSprite", void 0);
    __decorate([
        property(cc.Label)
    ], InviteItem.prototype, "rewardLabel", void 0);
    __decorate([
        property(cc.Node)
    ], InviteItem.prototype, "takenNode", void 0);
    __decorate([
        property(cc.Node)
    ], InviteItem.prototype, "willTakeNode", void 0);
    InviteItem = __decorate([
        ccclass
    ], InviteItem);
    return InviteItem;
}(AbstractTableItem_1.default));
exports.default = InviteItem;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvSW52aXRlSXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0Esb0ZBQStFO0FBQy9FLDJEQUFxRDtBQUNyRCw4Q0FBeUM7QUFDekMsdUNBQW9DO0FBQ3BDLDJEQUFzRDtBQUVoRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUxQyxJQUFNLFNBQVMsR0FBRyxFQUFFLENBQUM7QUFHckI7SUFBd0MsOEJBQWlCO0lBQXpEO1FBQUEscUVBMkNDO1FBeENHLGFBQU8sR0FBWSxJQUFJLENBQUM7UUFHeEIsZ0JBQVUsR0FBYSxJQUFJLENBQUM7UUFHNUIsaUJBQVcsR0FBWSxJQUFJLENBQUM7UUFHNUIsZUFBUyxHQUFXLElBQUksQ0FBQztRQUd6QixrQkFBWSxHQUFXLElBQUksQ0FBQztRQUdwQixVQUFJLEdBQUcsSUFBSSxDQUFDOztJQXlCeEIsQ0FBQztJQXZCRywrQkFBVSxHQUFWLFVBQVcsSUFBUyxFQUFFLEtBQWE7UUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEtBQUssR0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUMzQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDL0MsWUFBRyxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7UUFDNUQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7SUFDdEQsQ0FBQztJQUVELHNDQUFpQixHQUFqQixVQUFrQixLQUFLLEVBQUUsSUFBSTtRQUE3QixpQkFZQztRQVhHLE9BQU8sQ0FBQyxHQUFHLENBQUMsOEJBQThCLENBQUMsQ0FBQTtRQUUzQyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUM7WUFDVixJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztZQUMvRCxpQkFBTyxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLEdBQUc7Z0JBQzdELGFBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxJQUFJLFNBQVMsQ0FBQztnQkFDeEMsZ0JBQU0sQ0FBQyxjQUFjLENBQUMsaUJBQWlCLEVBQUUsbUJBQU8sU0FBVyxDQUFDLENBQUM7Z0JBQzdELEtBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztnQkFDN0IsS0FBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQztZQUN0RCxDQUFDLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQXZDRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOytDQUNLO0lBR3hCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7a0RBQ1E7SUFHNUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzttREFDUztJQUc1QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO2lEQUNPO0lBR3pCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7b0RBQ1U7SUFmWCxVQUFVO1FBRDlCLE9BQU87T0FDYSxVQUFVLENBMkM5QjtJQUFELGlCQUFDO0NBM0NELEFBMkNDLENBM0N1QywyQkFBaUIsR0EyQ3hEO2tCQTNDb0IsVUFBVSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgQWJzdHJhY3RUYWJsZUl0ZW0gZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay90YWJsZXZpZXcvQWJzdHJhY3RUYWJsZUl0ZW1cIjtcclxuaW1wb3J0IHtleHR9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvZXh0ZW5kL0V4dGVuZFwiO1xyXG5pbXBvcnQgTmV0d29yayBmcm9tIFwiLi4vbmV0d29yay9OZXR3b3JrXCI7XHJcbmltcG9ydCB7V29ybGR9IGZyb20gXCIuLi9pbmZvL1dvcmxkXCI7XHJcbmltcG9ydCBGYWNhZGUgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9mYWNhZGUvRmFjYWRlXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbmNvbnN0IHJld2FyZE51bSA9IDMwO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW52aXRlSXRlbSBleHRlbmRzIEFic3RyYWN0VGFibGVJdGVtIHtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXHJcbiAgICBpZExhYmVsOmNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKVxyXG4gICAgaWNvblNwcml0ZTpjYy5TcHJpdGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIHJld2FyZExhYmVsOmNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIHRha2VuTm9kZTpjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIHdpbGxUYWtlTm9kZTpjYy5Ob2RlID0gbnVsbDtcclxuXHJcblxyXG4gICAgcHJpdmF0ZSBkYXRhID0gbnVsbDtcclxuXHJcbiAgICB1cGFkdGVJdGVtKGRhdGE6IGFueSwgaW5kZXg6IG51bWJlcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEsIFwic2hhcmUxPT09PnVwYWR0ZUl0ZW1cIik7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgICB0aGlzLmlkTGFiZWwuc3RyaW5nID0gKGluZGV4KzEpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy5yZXdhcmRMYWJlbC5zdHJpbmcgPSByZXdhcmROdW0udG9TdHJpbmcoKTtcclxuICAgICAgICBleHQud3hDcmVhdGVJbWFnZVRvU3ByaXRlKHRoaXMuaWNvblNwcml0ZSwgZGF0YVsnaGVhZFVybCddKTtcclxuICAgICAgICB0aGlzLnRha2VuTm9kZS5hY3RpdmUgPSBkYXRhWydyZWNlaXZlJ107XHJcbiAgICAgICAgdGhpcy53aWxsVGFrZU5vZGUuYWN0aXZlID0gIXRoaXMudGFrZW5Ob2RlLmFjdGl2ZTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsaWNrVGFrZVJld2FyZChldmVudCwgZGF0YSl7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLjgJBjbGlja+OAkUludml0ZUl0ZW0gVGFrZVJld2FyZFwiKVxyXG5cclxuICAgICAgICBpZiAodGhpcy5kYXRhKXtcclxuICAgICAgICAgICAgdGhpcy53aWxsVGFrZU5vZGUuZ2V0Q29tcG9uZW50KGNjLkJ1dHRvbikuaW50ZXJhY3RhYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIE5ldHdvcmsudGFrZVNoYXJlUmV3YXJkKFwic2hhcmUxXCIsIHRoaXMuZGF0YVtcInBsYXllcklkXCJdKS50aGVuKHJlcz0+e1xyXG4gICAgICAgICAgICAgICAgV29ybGQuU3RvcmFnZS5kaWFtb25kQ291bnQgKz0gcmV3YXJkTnVtO1xyXG4gICAgICAgICAgICAgICAgRmFjYWRlLmV4ZWN1dGVDb21tYW5kKCdTaG93VGlwc0NvbW1hbmQnLCBg6ZK755+zICske3Jld2FyZE51bX1gKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudGFrZW5Ob2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLndpbGxUYWtlTm9kZS5hY3RpdmUgPSAhdGhpcy50YWtlbk5vZGUuYWN0aXZlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/PropsItemController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd06a8YvgQJJG4ULGjMJqc1Z', 'PropsItemController');
// script/app/home/PropsItemController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var AbstractTableItem_1 = require("../../../framework/tableview/AbstractTableItem");
var PropsController_1 = require("./PropsController");
var World_1 = require("../info/World");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PropsItemController = /** @class */ (function (_super) {
    __extends(PropsItemController, _super);
    function PropsItemController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.propsController = null;
        _this.bgFrameSprite = null;
        _this.iconSprite = null;
        _this.nameLabel = null;
        _this.useNode = null;
        _this.usingNode = null;
        _this.foreverNode = null;
        _this.cdLabel = null;
        _this.iconSpriteFrames = [];
        _this._data = null;
        _this._index = null;
        return _this;
    }
    PropsItemController.prototype.onLoad = function () {
        var _this = this;
        this.schedule(function () {
            if (_this.node.active && _this.usingNode.active && _this._data) {
                var id = _this._data['id'];
                if (World_1.World.My.propInfo.beUsing(id)) {
                    _this.updateCD();
                }
                else {
                    _this.foreverNode.active = false;
                    _this.useNode.active = true;
                    _this.usingNode.active = false;
                }
            }
        }, 0.99);
        cc.game.on("video_2", function () {
            _this.onClickUseDo();
        }, this);
    };
    PropsItemController.prototype.updateCD = function () {
        var cd = Math.floor((World_1.World.My.propInfo.expireTime(this._data['id']) - new Date().getTime()) / 1000);
        var min = Math.floor(cd / 60);
        var sec = cd % 60;
        this.cdLabel.string = "\u5269\u4F59\u8BA1\u65F6 " + (("000" + min).substr(-2) + ":" + ("000" + sec).substr(-2));
    };
    PropsItemController.prototype.upadteItem = function (data, index) {
        this._data = data;
        this._index = index;
        // console.log(data, index);
        var id = data['id'];
        this.iconSprite.spriteFrame = this.iconSpriteFrames[id - 1];
        this.nameLabel.string = data['prop_name'];
        if (data['unlock'] == 0) {
            this.foreverNode.active = true;
            this.useNode.active = false;
            this.usingNode.active = false;
        }
        else if (!World_1.World.My.propInfo.beUsing(id)) {
            this.foreverNode.active = false;
            this.useNode.active = true;
            this.usingNode.active = false;
        }
        else {
            this.foreverNode.active = false;
            this.useNode.active = false;
            this.usingNode.active = true;
            this.updateCD();
        }
    };
    PropsItemController.prototype.onClickDetail = function () {
        console.log("【click】PropsItemController Detail");
        this.propsController.detailLabel.string = this._data['description'];
        this.propsController.detailNode.active = true;
    };
    PropsItemController.prototype.onClickUse = function () {
        console.log("【video】2 道具使用 【click】PropsItemController Use");
        World_1.World.Storage._videoSign = 2;
        World_1.World.Storage.videoAd_show();
    };
    PropsItemController.prototype.onClickUseDo = function () {
        World_1.World.My.propInfo.use(this._data['id']);
        this.upadteItem(this._data, this._index);
    };
    __decorate([
        property(PropsController_1.default)
    ], PropsItemController.prototype, "propsController", void 0);
    __decorate([
        property(cc.Sprite)
    ], PropsItemController.prototype, "bgFrameSprite", void 0);
    __decorate([
        property(cc.Sprite)
    ], PropsItemController.prototype, "iconSprite", void 0);
    __decorate([
        property(cc.Label)
    ], PropsItemController.prototype, "nameLabel", void 0);
    __decorate([
        property(cc.Node)
    ], PropsItemController.prototype, "useNode", void 0);
    __decorate([
        property(cc.Node)
    ], PropsItemController.prototype, "usingNode", void 0);
    __decorate([
        property(cc.Node)
    ], PropsItemController.prototype, "foreverNode", void 0);
    __decorate([
        property(cc.Label)
    ], PropsItemController.prototype, "cdLabel", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], PropsItemController.prototype, "iconSpriteFrames", void 0);
    PropsItemController = __decorate([
        ccclass
    ], PropsItemController);
    return PropsItemController;
}(AbstractTableItem_1.default));
exports.default = PropsItemController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/InvitesController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0e6831yPJtIjo1qDNuGnPS0', 'InvitesController');
// script/app/home/InvitesController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var TableViewMediator_1 = require("../../../framework/tableview/TableViewMediator");
var NetworkConfig_1 = require("../config/NetworkConfig");
var Network_1 = require("../network/Network");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var InvitesController = /** @class */ (function (_super) {
    __extends(InvitesController, _super);
    function InvitesController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableviewMediator = null;
        return _this;
    }
    // LIFE-CYCLE CALLBACKS:
    InvitesController.prototype.onLoad = function () {
        var _this = this;
        if (NetworkConfig_1.NetworkConfig.connectServer) {
            Network_1.default.getShareList("share1").then(function (list) {
                console.log(list, "share1===>");
                _this.tableviewMediator.datas = list;
            });
        }
    };
    __decorate([
        property(TableViewMediator_1.default)
    ], InvitesController.prototype, "tableviewMediator", void 0);
    InvitesController = __decorate([
        ccclass
    ], InvitesController);
    return InvitesController;
}(cc.Component));
exports.default = InvitesController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvSW52aXRlc0NvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLG9GQUErRTtBQUMvRSx5REFBc0Q7QUFDdEQsOENBQXlDO0FBRW5DLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQStDLHFDQUFZO0lBQTNEO1FBQUEscUVBZ0JDO1FBYkcsdUJBQWlCLEdBQXFCLElBQUksQ0FBQzs7SUFhL0MsQ0FBQztJQVZHLHdCQUF3QjtJQUN4QixrQ0FBTSxHQUFOO1FBQUEsaUJBT0M7UUFORyxJQUFJLDZCQUFhLENBQUMsYUFBYSxFQUFDO1lBQzVCLGlCQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLElBQUk7Z0JBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxDQUFDO2dCQUNoQyxLQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztZQUN4QyxDQUFDLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQVhEO1FBREMsUUFBUSxDQUFDLDJCQUFpQixDQUFDO2dFQUNlO0lBSDFCLGlCQUFpQjtRQURyQyxPQUFPO09BQ2EsaUJBQWlCLENBZ0JyQztJQUFELHdCQUFDO0NBaEJELEFBZ0JDLENBaEI4QyxFQUFFLENBQUMsU0FBUyxHQWdCMUQ7a0JBaEJvQixpQkFBaUIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IFRhYmxlVmlld01lZGlhdG9yIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvdGFibGV2aWV3L1RhYmxlVmlld01lZGlhdG9yXCI7XHJcbmltcG9ydCB7TmV0d29ya0NvbmZpZ30gZnJvbSBcIi4uL2NvbmZpZy9OZXR3b3JrQ29uZmlnXCI7XHJcbmltcG9ydCBOZXR3b3JrIGZyb20gXCIuLi9uZXR3b3JrL05ldHdvcmtcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW52aXRlc0NvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShUYWJsZVZpZXdNZWRpYXRvcilcclxuICAgIHRhYmxldmlld01lZGlhdG9yOlRhYmxlVmlld01lZGlhdG9yID0gbnVsbDtcclxuXHJcblxyXG4gICAgLy8gTElGRS1DWUNMRSBDQUxMQkFDS1M6XHJcbiAgICBvbkxvYWQgKCkge1xyXG4gICAgICAgIGlmIChOZXR3b3JrQ29uZmlnLmNvbm5lY3RTZXJ2ZXIpe1xyXG4gICAgICAgICAgICBOZXR3b3JrLmdldFNoYXJlTGlzdChcInNoYXJlMVwiKS50aGVuKGxpc3Q9PntcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGxpc3QsIFwic2hhcmUxPT09PlwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudGFibGV2aWV3TWVkaWF0b3IuZGF0YXMgPSBsaXN0O1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/RecommendController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '14d59qg1Z9N5JJ+Z0KRq+TC', 'RecommendController');
// script/app/home/RecommendController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitterShouQiang_1 = require("../entities/bulletEmitter/BulletEmitterShouQiang");
var BulletEmitterJuJiQiang_1 = require("../entities/bulletEmitter/BulletEmitterJuJiQiang");
var BulletEmitterJiaTeLin_1 = require("../entities/bulletEmitter/BulletEmitterJiaTeLin");
var BulletEmitterJiGuang_1 = require("../entities/bulletEmitter/BulletEmitterJiGuang");
var BulletEmitterHuoYan_1 = require("../entities/bulletEmitter/BulletEmitterHuoYan");
var BulletEmitterHuoJianTong_1 = require("../entities/bulletEmitter/BulletEmitterHuoJianTong");
var BulletEmitterLiZiPao_1 = require("../entities/bulletEmitter/BulletEmitterLiZiPao");
var BulletEmitterPenZi_1 = require("../entities/bulletEmitter/BulletEmitterPenZi");
var BulletEmitterSanDanQiang_1 = require("../entities/bulletEmitter/BulletEmitterSanDanQiang");
var BulletEmitterShanDianQiu_1 = require("../entities/bulletEmitter/BulletEmitterShanDianQiu");
var BulletEmitter_1 = require("../entities/bulletEmitter/BulletEmitter");
var Role_1 = require("../entities/role/Role");
var Actions_1 = require("../../../framework/actions/Actions");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var World_1 = require("../info/World");
var Facade_1 = require("../../../framework/facade/Facade");
var HomeController_1 = require("./HomeController");
var GameProxy_1 = require("../game/GameProxy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var RecommendController = /** @class */ (function (_super) {
    __extends(RecommendController, _super);
    function RecommendController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.role = null;
        _this.useNode = null;
        _this.noUseNode = null;
        _this._fireCD = 0;
        _this._gunId = 1;
        return _this;
    }
    RecommendController.prototype.onLoad = function () {
        var _this = this;
        cc.game.on("video_3", function () {
            _this.onClickUseDo();
        }, this);
    };
    RecommendController.prototype.start = function () {
        var _this = this;
        this.noUseNode.on(cc.Node.EventType.POSITION_CHANGED, function () {
            _this.useNode.position = _this.noUseNode.position.add(cc.v2(0, 87));
        });
        var gameBulletsController = window['GameBulletsController'];
        gameBulletsController.bulletLayer.on(cc.Node.EventType.CHILD_ADDED, function (bulletNode) {
            bulletNode.group = "ui";
        });
        var bulletEmitter = null;
        var bulletEmitterType = 2;
        var weaponConfig = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon).filter(function (value) { return value['id'] != 1; }).sort((function (a, b) { return b['unlock'] - a['unlock']; }));
        for (var _i = 0, weaponConfig_1 = weaponConfig; _i < weaponConfig_1.length; _i++) {
            var item = weaponConfig_1[_i];
            if (World_1.World.Storage.gameLevel >= item['unlock']) {
                bulletEmitterType = item['id'];
                break;
            }
        }
        if (bulletEmitterType > 7) {
            bulletEmitterType = 7;
        }
        this._gunId = bulletEmitterType;
        var promises = [];
        promises.push(cc.loader.loadResAwait('prefab/entities/bullet/bullet' + bulletEmitterType));
        if (bulletEmitterType == BulletEmitter_1.default.TYPES.LiZiPao) {
            promises.push(cc.loader.loadResAwait('prefab/entities/bullet/bullet108'));
        }
        else if (bulletEmitterType == BulletEmitter_1.default.TYPES.HuoJianTong) {
            promises.push(cc.loader.loadResAwait('prefab/entities/explosive/explosive9'));
        }
        else if (bulletEmitterType == BulletEmitter_1.default.TYPES.JuJiQiang) {
            promises.push(cc.loader.loadResAwait('prefab/entities/bullet/fire7'));
        }
        Promise.all(promises).then(function () {
            switch (bulletEmitterType) {
                case BulletEmitter_1.default.TYPES.ShouQiang:
                    bulletEmitter = new BulletEmitterShouQiang_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.PenZi:
                    bulletEmitter = new BulletEmitterPenZi_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.JiaTeLin:
                    bulletEmitter = new BulletEmitterJiaTeLin_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.SanDanQiang:
                    bulletEmitter = new BulletEmitterSanDanQiang_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.JuJiQiang:
                    bulletEmitter = new BulletEmitterJuJiQiang_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.LiZiPao:
                    bulletEmitter = new BulletEmitterLiZiPao_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.HuoJianTong:
                    bulletEmitter = new BulletEmitterHuoJianTong_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.ShanDianQiu:
                    bulletEmitter = new BulletEmitterShanDianQiu_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.JiGuang:
                    bulletEmitter = new BulletEmitterJiGuang_1.default(gameBulletsController);
                    break;
                case BulletEmitter_1.default.TYPES.HuoYan:
                    bulletEmitter = new BulletEmitterHuoYan_1.default(gameBulletsController);
                    break;
            }
            bulletEmitter.init(bulletEmitterType);
            if (bulletEmitterType == BulletEmitter_1.default.TYPES.JiGuang) {
                var bullet_1 = bulletEmitter.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JiGuang);
                bullet_1.collider.enabled = false;
                var ske_1 = bullet_1.getComponent(sp.Skeleton);
                ske_1.setStartListener(function (trackEntry, loopCount) {
                    var name = trackEntry.animation ? trackEntry.animation.name : '';
                    if (name === "jiguang") {
                        bullet_1.collider.enabled = true;
                    }
                });
                ske_1.setCompleteListener(function (trackEntry, loopCount) {
                    var name = trackEntry.animation ? trackEntry.animation.name : '';
                    if (name === "xuneng") {
                        ske_1.setAnimation(0, "jiguang", false);
                    }
                    else if (name === "jiguang") {
                        bulletEmitter.bulletCount--;
                        bullet_1.collider.enabled = false;
                        bullet_1.node.runAction(cc.sequence(cc.delayTime(0), cc.callFunc(function () {
                            if (!bullet_1.collider.enabled) {
                                bullet_1.node.active = false;
                            }
                        })));
                    }
                });
                bulletEmitter._bulletJiGuangSke = ske_1;
                bulletEmitter._bulletJiGuang = bullet_1;
                bulletEmitter._bulletJiGuang.node.rotation = _this.role.node.rotation;
                bulletEmitter._bulletJiGuang.node.position = _this.role.node.position.add(cc.v2(0, 1).rotate(cc.misc.degreesToRadians(-_this.role.node.rotation)).normalize().mul(_this.role.gunTopNode.y + 20));
            }
            var dir = cc.v2(0, 1000).sub(_this.role.node.position).normalize();
            _this.node.runAction(Actions_1.default.update(function (dt) {
                if (_this._fireCD > 0) {
                    _this._fireCD -= dt;
                }
                else {
                    _this._fireCD = bulletEmitter.interval;
                    if (bulletEmitterType == BulletEmitter_1.default.TYPES.JuJiQiang) {
                        var bulletStrikePrefab = cc.loader.getRes("prefab/entities/bullet/fire7");
                        var bulletStrikeNode_1 = cc.instantiate(bulletStrikePrefab);
                        gameBulletsController.bulletLayer.addChild(bulletStrikeNode_1, 0);
                        bulletStrikeNode_1.position = _this.role.node.position.add(dir.mul(_this.role.gunTopNode.y));
                        bulletStrikeNode_1.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
                        bulletStrikeNode_1.getComponent(sp.Skeleton).setCompleteListener(function () {
                            bulletStrikeNode_1.destroy();
                        });
                    }
                    else if (bulletEmitterType !== BulletEmitter_1.default.TYPES.JiGuang && bulletEmitterType !== BulletEmitter_1.default.TYPES.PenZi) {
                        _this.role.fireSprite.node.scale = 1;
                        _this.role.fireSprite.node.active = true;
                        _this.role.fireSprite.node.runAction(cc.sequence(cc.scaleTo(0.05, 0.5), cc.callFunc(function () {
                            _this.role.fireSprite.node.active = false;
                        })));
                    }
                    bulletEmitter.fire(_this.role.node.position.add(dir.mul(_this.role.gunTopNode.y)), dir);
                }
            }));
        });
    };
    RecommendController.prototype.onClickUse = function (event, data) {
        console.log("【video】3 装备推荐【click】RecommendController Use");
        World_1.World.Storage._videoSign = 3;
        World_1.World.Storage.videoAd_show();
    };
    RecommendController.prototype.onClickUseDo = function () {
        GameProxy_1.GameProxy.prepareGun = this._gunId;
        Facade_1.default.findComponent("HomeScene", HomeController_1.default).playExit();
        this.node.destroy();
    };
    RecommendController.prototype.onClickNoUse = function (event, data) {
        console.log("【click】RecommendController NoUse");
        Facade_1.default.findComponent("HomeScene", HomeController_1.default).playExit();
        this.node.destroy();
    };
    __decorate([
        property(Role_1.default)
    ], RecommendController.prototype, "role", void 0);
    __decorate([
        property(cc.Node)
    ], RecommendController.prototype, "useNode", void 0);
    __decorate([
        property(cc.Node)
    ], RecommendController.prototype, "noUseNode", void 0);
    RecommendController = __decorate([
        ccclass
    ], RecommendController);
    return RecommendController;
}(cc.Component));
exports.default = RecommendController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/PropsController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ce3c5l6ZAlLkpyTmNdI0qJX', 'PropsController');
// script/app/home/PropsController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var TableViewMediator_1 = require("../../../framework/tableview/TableViewMediator");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PropsController = /** @class */ (function (_super) {
    __extends(PropsController, _super);
    function PropsController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tableViewMediator = null;
        _this.detailNode = null;
        _this.detailLabel = null;
        return _this;
    }
    PropsController.prototype.start = function () {
        var _this = this;
        this.detailNode.on(cc.Node.EventType.TOUCH_START, function () {
            _this.detailNode.active = false;
        });
        this.tableViewMediator.datas = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop).filter(function (value) { return value['id'] != 7 && value['id'] != 8 && value['id'] != 10; }).sort(function (a, b) { return a['order'] - b['order']; });
    };
    __decorate([
        property(TableViewMediator_1.default)
    ], PropsController.prototype, "tableViewMediator", void 0);
    __decorate([
        property(cc.Node)
    ], PropsController.prototype, "detailNode", void 0);
    __decorate([
        property(cc.Label)
    ], PropsController.prototype, "detailLabel", void 0);
    PropsController = __decorate([
        ccclass
    ], PropsController);
    return PropsController;
}(cc.Component));
exports.default = PropsController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvUHJvcHNDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxvRkFBK0U7QUFDL0UscUVBQWtFO0FBQ2xFLDZEQUEwRDtBQUVwRCxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUE2QyxtQ0FBWTtJQUF6RDtRQUFBLHFFQW1CQztRQWhCRyx1QkFBaUIsR0FBcUIsSUFBSSxDQUFDO1FBRzNDLGdCQUFVLEdBQVcsSUFBSSxDQUFDO1FBRzFCLGlCQUFXLEdBQVksSUFBSSxDQUFDOztJQVVoQyxDQUFDO0lBUkcsK0JBQUssR0FBTDtRQUFBLGlCQUtDO1FBSkcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFO1lBQzlDLEtBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNuQyxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLEdBQUcseUJBQVcsQ0FBQyxhQUFhLENBQUMsaUNBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBekQsQ0FBeUQsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFyQixDQUFxQixDQUFDLENBQUM7SUFDcE0sQ0FBQztJQWJEO1FBREMsUUFBUSxDQUFDLDJCQUFpQixDQUFDOzhEQUNlO0lBRzNDO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7dURBQ1E7SUFHMUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzt3REFDUztJQVRYLGVBQWU7UUFEbkMsT0FBTztPQUNhLGVBQWUsQ0FtQm5DO0lBQUQsc0JBQUM7Q0FuQkQsQUFtQkMsQ0FuQjRDLEVBQUUsQ0FBQyxTQUFTLEdBbUJ4RDtrQkFuQm9CLGVBQWUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IFRhYmxlVmlld01lZGlhdG9yIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvdGFibGV2aWV3L1RhYmxlVmlld01lZGlhdG9yXCI7XHJcbmltcG9ydCB7RXhjZWxDb25maWd9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvY29uZmlnL0V4Y2VsQ29uZmlnXCI7XHJcbmltcG9ydCB7RXhjZWxUYWJsZU5hbWVzfSBmcm9tIFwiLi4vY29uZmlnL0V4Y2VsVGFibGVOYW1lc1wiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9wc0NvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShUYWJsZVZpZXdNZWRpYXRvcilcclxuICAgIHRhYmxlVmlld01lZGlhdG9yOlRhYmxlVmlld01lZGlhdG9yID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIGRldGFpbE5vZGU6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxyXG4gICAgZGV0YWlsTGFiZWw6Y2MuTGFiZWwgPSBudWxsO1xyXG5cclxuICAgIHN0YXJ0KCl7XHJcbiAgICAgICAgdGhpcy5kZXRhaWxOb2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX1NUQVJULCAoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLmRldGFpbE5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy50YWJsZVZpZXdNZWRpYXRvci5kYXRhcyA9IEV4Y2VsQ29uZmlnLmdldEV4Y2VsVGFibGUoRXhjZWxUYWJsZU5hbWVzLlByb3ApLmZpbHRlcih2YWx1ZSA9PiB2YWx1ZVsnaWQnXSAhPSA3ICYmIHZhbHVlWydpZCddICE9IDggJiYgdmFsdWVbJ2lkJ10gIT0gMTApLnNvcnQoKGEsIGIpID0+IGFbJ29yZGVyJ10tYlsnb3JkZXInXSk7XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/ExchangeController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '095cbB1T3BGjYPbnwd2ta5g', 'ExchangeController');
// script/app/home/ExchangeController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("../info/World");
var Extend_1 = require("../../../framework/extend/Extend");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ExchangeController = /** @class */ (function (_super) {
    __extends(ExchangeController, _super);
    function ExchangeController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.exchangeButton = null;
        _this.diamondLabel = null;
        _this.exchangeLabel = null;
        _this.exchangeSprite = null;
        _this.exchangeSpriteFrames = [];
        _this._diamondCount = 0;
        _this._type = 1;
        return _this;
    }
    Object.defineProperty(ExchangeController.prototype, "diamondCount", {
        get: function () {
            return this._diamondCount;
        },
        set: function (value) {
            this._diamondCount = value;
            if (this._type == 1) {
                this.exchangeLabel.string = Extend_1.ext.shortFormat(this.getGoldCount());
            }
            else {
                this.exchangeLabel.string = "" + this.getPowerCount();
            }
            this.updateView();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExchangeController.prototype, "type", {
        set: function (value) {
            this._type = value;
            this.exchangeSprite.spriteFrame = this.exchangeSpriteFrames[this._type - 1];
            this.diamondCount = World_1.World.Storage.diamondCount;
        },
        enumerable: false,
        configurable: true
    });
    ExchangeController.prototype.getGoldCount = function () {
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
        return cfg[World_1.World.Storage.goldLv - 1]['diamond_ex'] * this._diamondCount;
    };
    ExchangeController.prototype.getPowerCount = function () {
        return 5 * this._diamondCount;
    };
    ExchangeController.prototype.updateView = function () {
        this.exchangeButton.interactable = this._diamondCount > 0;
        this.diamondLabel.string = "" + this._diamondCount;
    };
    ExchangeController.prototype.onDiamondPlus = function () {
        if (this._diamondCount < World_1.World.Storage.diamondCount) {
            this.diamondCount++;
        }
    };
    ExchangeController.prototype.onDiamondMinus = function () {
        if (this._diamondCount > 0) {
            this.diamondCount--;
        }
    };
    ExchangeController.prototype.onExchange = function () {
        if (this._type == 1) {
            World_1.World.Storage.goldCount += this.getGoldCount();
        }
        else {
            World_1.World.Storage.power += this.getPowerCount();
        }
        this.node.destroy();
    };
    __decorate([
        property(cc.Button)
    ], ExchangeController.prototype, "exchangeButton", void 0);
    __decorate([
        property(cc.Label)
    ], ExchangeController.prototype, "diamondLabel", void 0);
    __decorate([
        property(cc.Label)
    ], ExchangeController.prototype, "exchangeLabel", void 0);
    __decorate([
        property(cc.Sprite)
    ], ExchangeController.prototype, "exchangeSprite", void 0);
    __decorate([
        property(cc.SpriteFrame)
    ], ExchangeController.prototype, "exchangeSpriteFrames", void 0);
    ExchangeController = __decorate([
        ccclass
    ], ExchangeController);
    return ExchangeController;
}(cc.Component));
exports.default = ExchangeController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvRXhjaGFuZ2VDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSx1Q0FBb0M7QUFDcEMsMkRBQXFEO0FBQ3JELHFFQUFrRTtBQUNsRSw2REFBMEQ7QUFFcEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBZ0Qsc0NBQVk7SUFBNUQ7UUFBQSxxRUE2RUM7UUExRUcsb0JBQWMsR0FBYSxJQUFJLENBQUM7UUFHaEMsa0JBQVksR0FBYSxJQUFJLENBQUM7UUFHOUIsbUJBQWEsR0FBYSxJQUFJLENBQUM7UUFHL0Isb0JBQWMsR0FBYSxJQUFJLENBQUM7UUFHaEMsMEJBQW9CLEdBQW9CLEVBQUUsQ0FBQztRQUVuQyxtQkFBYSxHQUFHLENBQUMsQ0FBQztRQWlCbEIsV0FBSyxHQUFHLENBQUMsQ0FBQzs7SUEyQ3RCLENBQUM7SUF6REcsc0JBQUksNENBQVk7YUFBaEI7WUFDSSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDOUIsQ0FBQzthQUVELFVBQWlCLEtBQWE7WUFDMUIsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7WUFDM0IsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsRUFBQztnQkFDaEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsWUFBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQzthQUNwRTtpQkFBSztnQkFDRixJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxLQUFHLElBQUksQ0FBQyxhQUFhLEVBQUksQ0FBQzthQUN6RDtZQUNELElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUN0QixDQUFDOzs7T0FWQTtJQWVELHNCQUFJLG9DQUFJO2FBQVIsVUFBUyxLQUFhO1lBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ25CLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzFFLElBQUksQ0FBQyxZQUFZLEdBQUcsYUFBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7UUFDbkQsQ0FBQzs7O09BQUE7SUFFRCx5Q0FBWSxHQUFaO1FBQ0ksSUFBSSxHQUFHLEdBQUcseUJBQVcsQ0FBQyxhQUFhLENBQUMsaUNBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1RCxPQUFPLEdBQUcsQ0FBQyxhQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsR0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQ3hFLENBQUM7SUFFRCwwQ0FBYSxHQUFiO1FBQ0ksT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUNsQyxDQUFDO0lBRUQsdUNBQVUsR0FBVjtRQUNJLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUFHLEtBQUcsSUFBSSxDQUFDLGFBQWUsQ0FBQztJQUN2RCxDQUFDO0lBRUQsMENBQWEsR0FBYjtRQUNJLElBQUksSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBQztZQUNoRCxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDdkI7SUFDTCxDQUFDO0lBRUQsMkNBQWMsR0FBZDtRQUNJLElBQUksSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLEVBQUM7WUFDdkIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3ZCO0lBQ0wsQ0FBQztJQUVELHVDQUFVLEdBQVY7UUFDSSxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxFQUFDO1lBQ2hCLGFBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztTQUNsRDthQUFLO1lBQ0YsYUFBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1NBQy9DO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBekVEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7OERBQ1k7SUFHaEM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzs0REFDVztJQUc5QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOzZEQUNZO0lBRy9CO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7OERBQ1k7SUFHaEM7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQztvRUFDa0I7SUFmMUIsa0JBQWtCO1FBRHRDLE9BQU87T0FDYSxrQkFBa0IsQ0E2RXRDO0lBQUQseUJBQUM7Q0E3RUQsQUE2RUMsQ0E3RStDLEVBQUUsQ0FBQyxTQUFTLEdBNkUzRDtrQkE3RW9CLGtCQUFrQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQge1dvcmxkfSBmcm9tIFwiLi4vaW5mby9Xb3JsZFwiO1xyXG5pbXBvcnQge2V4dH0gZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9leHRlbmQvRXh0ZW5kXCI7XHJcbmltcG9ydCB7RXhjZWxDb25maWd9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvY29uZmlnL0V4Y2VsQ29uZmlnXCI7XHJcbmltcG9ydCB7RXhjZWxUYWJsZU5hbWVzfSBmcm9tIFwiLi4vY29uZmlnL0V4Y2VsVGFibGVOYW1lc1wiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeGNoYW5nZUNvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXHJcbiAgICBleGNoYW5nZUJ1dHRvbjpjYy5CdXR0b24gPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIGRpYW1vbmRMYWJlbDogY2MuTGFiZWwgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIGV4Y2hhbmdlTGFiZWw6IGNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKVxyXG4gICAgZXhjaGFuZ2VTcHJpdGU6Y2MuU3ByaXRlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlRnJhbWUpXHJcbiAgICBleGNoYW5nZVNwcml0ZUZyYW1lczpbY2MuU3ByaXRlRnJhbWVdID0gW107XHJcblxyXG4gICAgcHJpdmF0ZSBfZGlhbW9uZENvdW50ID0gMDtcclxuXHJcblxyXG4gICAgZ2V0IGRpYW1vbmRDb3VudCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kaWFtb25kQ291bnQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IGRpYW1vbmRDb3VudCh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5fZGlhbW9uZENvdW50ID0gdmFsdWU7XHJcbiAgICAgICAgaWYgKHRoaXMuX3R5cGUgPT0gMSl7XHJcbiAgICAgICAgICAgIHRoaXMuZXhjaGFuZ2VMYWJlbC5zdHJpbmcgPSBleHQuc2hvcnRGb3JtYXQodGhpcy5nZXRHb2xkQ291bnQoKSk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLmV4Y2hhbmdlTGFiZWwuc3RyaW5nID0gYCR7dGhpcy5nZXRQb3dlckNvdW50KCl9YDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy51cGRhdGVWaWV3KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBfdHlwZSA9IDE7XHJcblxyXG5cclxuICAgIHNldCB0eXBlKHZhbHVlOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl90eXBlID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5leGNoYW5nZVNwcml0ZS5zcHJpdGVGcmFtZSA9IHRoaXMuZXhjaGFuZ2VTcHJpdGVGcmFtZXNbdGhpcy5fdHlwZS0xXTtcclxuICAgICAgICB0aGlzLmRpYW1vbmRDb3VudCA9IFdvcmxkLlN0b3JhZ2UuZGlhbW9uZENvdW50O1xyXG4gICAgfVxyXG5cclxuICAgIGdldEdvbGRDb3VudCgpe1xyXG4gICAgICAgIGxldCBjZmcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5Hb2xkVXApO1xyXG4gICAgICAgIHJldHVybiBjZmdbV29ybGQuU3RvcmFnZS5nb2xkTHYtMV1bJ2RpYW1vbmRfZXgnXSp0aGlzLl9kaWFtb25kQ291bnQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0UG93ZXJDb3VudCgpe1xyXG4gICAgICAgIHJldHVybiA1ICogdGhpcy5fZGlhbW9uZENvdW50O1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVZpZXcoKXtcclxuICAgICAgICB0aGlzLmV4Y2hhbmdlQnV0dG9uLmludGVyYWN0YWJsZSA9IHRoaXMuX2RpYW1vbmRDb3VudCA+IDA7XHJcbiAgICAgICAgdGhpcy5kaWFtb25kTGFiZWwuc3RyaW5nID0gYCR7dGhpcy5fZGlhbW9uZENvdW50fWA7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaWFtb25kUGx1cygpe1xyXG4gICAgICAgIGlmICh0aGlzLl9kaWFtb25kQ291bnQgPCBXb3JsZC5TdG9yYWdlLmRpYW1vbmRDb3VudCl7XHJcbiAgICAgICAgICAgIHRoaXMuZGlhbW9uZENvdW50Kys7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uRGlhbW9uZE1pbnVzKCl7XHJcbiAgICAgICAgaWYgKHRoaXMuX2RpYW1vbmRDb3VudCA+IDApe1xyXG4gICAgICAgICAgICB0aGlzLmRpYW1vbmRDb3VudC0tO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbkV4Y2hhbmdlKCl7XHJcbiAgICAgICAgaWYgKHRoaXMuX3R5cGUgPT0gMSl7XHJcbiAgICAgICAgICAgIFdvcmxkLlN0b3JhZ2UuZ29sZENvdW50ICs9IHRoaXMuZ2V0R29sZENvdW50KCk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICBXb3JsZC5TdG9yYWdlLnBvd2VyICs9IHRoaXMuZ2V0UG93ZXJDb3VudCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm5vZGUuZGVzdHJveSgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/RecommendPropsController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bb6edVloYVAk6hnOKWOg07b', 'RecommendPropsController');
// script/app/home/RecommendPropsController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Role_1 = require("../entities/role/Role");
var World_1 = require("../info/World");
var Extend_1 = require("../../../framework/extend/Extend");
var BulletOfJianGuangSi_1 = require("../entities/bullet/BulletOfJianGuangSi");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/** 侯选列表 */
var candidateList = [3, 4, 5];
var RecommendPropsController = /** @class */ (function (_super) {
    __extends(RecommendPropsController, _super);
    function RecommendPropsController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.role = null;
        _this.fangHuDunSke = null;
        _this.useNode = null;
        _this.noUseNode = null;
        /**
         * 道具id
         * */
        _this._propId = 0;
        return _this;
    }
    RecommendPropsController.prototype.onLoad = function () {
        var _this = this;
        this.fangHuDunSke.node.active = false;
        this.noUseNode.on(cc.Node.EventType.POSITION_CHANGED, function () {
            _this.useNode.position = _this.noUseNode.position.add(cc.v2(0, 87));
        });
        var gameBulletsController = window['GameBulletsController'];
        gameBulletsController.bulletLayer.on(cc.Node.EventType.CHILD_ADDED, function (bulletNode) {
            bulletNode.group = "ui";
        });
        var list = candidateList.filter(function (value) { return !World_1.World.My.propInfo.beUsing(value); });
        if (list.length == 0) {
            list = candidateList;
        }
        this._propId = Extend_1.ext.randomElement(list);
        var prefabPath = 'prefab/entities/bullet/propBullet' + this._propId;
        cc.loader.loadRes(prefabPath, cc.Prefab, function (error, resource) {
            if (error == null) {
                _this.updateShown();
            }
        });
        cc.game.on("video_1", function () {
            _this.onClickUseDo();
        }, this);
    };
    RecommendPropsController.prototype.updateShown = function () {
        var _this = this;
        console.log("updateShown===>", this._propId);
        switch (this._propId) {
            case 3:
                {
                    /** 发出12个地雷 怪物踩到就会爆炸 地雷持续20S */
                    var num = 6;
                    var onceDegree_1 = 360 / 6;
                    var onceTime = 0.05;
                    var moveLen_1 = 80;
                    var moveSpeed = 1000;
                    var moveDuration_1 = moveLen_1 / moveSpeed;
                    var time_1 = 20;
                    var startPos_1 = cc.v2(this.role.node.x, this.role.node.y);
                    var _loop_1 = function (i) {
                        this_1.node.runAction(cc.sequence(cc.delayTime(i * onceTime), cc.callFunc(function () {
                            var bullet = window['GameBulletsController'].getInactivePropBullet(3);
                            bullet.node.active = true;
                            var degree = 30 + i * onceDegree_1;
                            bullet.node.rotation = degree - 90;
                            var dir = cc.v2(0, 1).rotateSelf(cc.misc.degreesToRadians(-degree)).normalizeSelf();
                            bullet.node.position = startPos_1;
                            bullet.node.scale = 0;
                            bullet.node.runAction(cc.scaleTo(moveDuration_1, 1));
                            bullet.collider.enabled = false;
                            bullet.node.runAction(cc.sequence(cc.moveBy(moveDuration_1, dir.mul(moveLen_1)), cc.callFunc(function () {
                                bullet.collider.enabled = true;
                                bullet.node.runAction(cc.sequence(cc.delayTime(time_1), cc.callFunc(function () {
                                    bullet.node.active = false;
                                })));
                            })));
                        })));
                    };
                    var this_1 = this;
                    for (var i = 0; i < num; i++) {
                        _loop_1(i);
                    }
                    var _loop_2 = function (i) {
                        this_2.node.runAction(cc.sequence(cc.delayTime((i + num) * onceTime), cc.callFunc(function () {
                            var bullet = window['GameBulletsController'].getInactivePropBullet(3);
                            bullet.node.active = true;
                            var degree = 60 + i * onceDegree_1;
                            bullet.node.rotation = degree - 90;
                            var dir = cc.v2(0, 1).rotateSelf(cc.misc.degreesToRadians(-degree)).normalizeSelf();
                            bullet.node.position = startPos_1;
                            bullet.node.scale = 0;
                            bullet.node.runAction(cc.scaleTo(moveDuration_1, 1));
                            bullet.collider.enabled = false;
                            bullet.node.runAction(cc.sequence(cc.moveBy(moveDuration_1, dir.mul(moveLen_1 + 60)), cc.callFunc(function () {
                                bullet.collider.enabled = true;
                                bullet.node.runAction(cc.sequence(cc.delayTime(time_1), cc.callFunc(function () {
                                    bullet.node.active = false;
                                })));
                            })));
                        })));
                    };
                    var this_2 = this;
                    for (var i = 0; i < num; i++) {
                        _loop_2(i);
                    }
                    this.node.runAction(cc.sequence(cc.delayTime(time_1 + 1), cc.callFunc(function () {
                        _this.updateShown();
                    })));
                }
                break;
            case 4:
                {
                    /** 播放见光死的动画 */
                    var bullet = window['GameBulletsController'].getInactivePropBullet(4);
                    bullet.node.position = this.role.node.position;
                    bullet.node.active = true;
                    bullet.getComponent(sp.Skeleton).setAnimation(0, "614", true);
                    bullet.getComponent(sp.Skeleton).setCompleteListener(function () { });
                    bullet.node.removeComponent(BulletOfJianGuangSi_1.default);
                }
                break;
            case 5:
                this.fangHuDunSke.node.active = true;
                this.fangHuDunSke.setAnimation(0, "start", false);
                this.fangHuDunSke.setCompleteListener(function (trackEntry, loopCount) {
                    var name = trackEntry.animation ? trackEntry.animation.name : '';
                    // console.log("=============>completeLis..", name);
                    if (name == "start" || name == "transition") {
                        _this.fangHuDunSke.setAnimation(0, "loops", false);
                        if (!_this.node.getActionByTag(114)) {
                            var speedAction = cc.speed(cc.repeatForever(cc.rotateBy(1.25, 720)), 0);
                            speedAction.setTag(114);
                            _this.fangHuDunSke.node.runAction(speedAction);
                            cc.tween(speedAction)
                                .to(1, { _speed: 1 }, { easing: 'sineIn' })
                                .start();
                        }
                    }
                });
                break;
        }
    };
    RecommendPropsController.prototype.onClickUse = function (event, data) {
        console.log("【video】1 道具推荐【click】RecommendPropsController Use");
        World_1.World.Storage._videoSign = 1;
        World_1.World.Storage.videoAd_show();
    };
    RecommendPropsController.prototype.onClickUseDo = function () {
        World_1.World.My.propInfo.use(this._propId);
        this.node.destroy();
    };
    RecommendPropsController.prototype.onClickNoUse = function (event, data) {
        console.log("【click】RecommendPropsController NoUse");
        this.node.destroy();
    };
    __decorate([
        property(Role_1.default)
    ], RecommendPropsController.prototype, "role", void 0);
    __decorate([
        property(sp.Skeleton)
    ], RecommendPropsController.prototype, "fangHuDunSke", void 0);
    __decorate([
        property(cc.Node)
    ], RecommendPropsController.prototype, "useNode", void 0);
    __decorate([
        property(cc.Node)
    ], RecommendPropsController.prototype, "noUseNode", void 0);
    RecommendPropsController = __decorate([
        ccclass
    ], RecommendPropsController);
    return RecommendPropsController;
}(cc.Component));
exports.default = RecommendPropsController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/ShadowLayerController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6fe32R8NilNCJIY/KYNM8S+', 'ShadowLayerController');
// script/app/home/ShadowLayerController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ShadowLayerController = /** @class */ (function (_super) {
    __extends(ShadowLayerController, _super);
    function ShadowLayerController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.shadowCamera = null;
        _this.sprite = null;
        return _this;
    }
    ShadowLayerController.prototype.onLoad = function () {
        /** 设置影子(角色和敌人) */
        var texture = new cc.RenderTexture();
        texture.initWithSize(cc.visibleRect.width, cc.visibleRect.height);
        this.shadowCamera.targetTexture = texture;
        // texture['_premultiplyAlpha'] = true;
        this.sprite.spriteFrame = new cc.SpriteFrame(texture);
        // this.sprite.spriteFrame.srcBlendFactor = cc.macro.BlendFactor.ONE;
        // this.sprite.setState(cc.Sprite.State.GRAY);
        this.sprite.node.color = cc.Color.BLACK;
        this.sprite.node.opacity = 100;
    };
    __decorate([
        property(cc.Camera)
    ], ShadowLayerController.prototype, "shadowCamera", void 0);
    __decorate([
        property(cc.Sprite)
    ], ShadowLayerController.prototype, "sprite", void 0);
    ShadowLayerController = __decorate([
        ccclass
    ], ShadowLayerController);
    return ShadowLayerController;
}(cc.Component));
exports.default = ShadowLayerController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvU2hhZG93TGF5ZXJDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFtRCx5Q0FBWTtJQUEvRDtRQUFBLHFFQXFCQztRQWxCRyxrQkFBWSxHQUFhLElBQUksQ0FBQztRQUc5QixZQUFNLEdBQWEsSUFBSSxDQUFDOztJQWU1QixDQUFDO0lBWkcsc0NBQU0sR0FBTjtRQUNJLGtCQUFrQjtRQUNsQixJQUFJLE9BQU8sR0FBRyxJQUFJLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLEdBQUcsT0FBTyxDQUFDO1FBQzFDLHVDQUF1QztRQUN2QyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdEQscUVBQXFFO1FBQ3JFLDhDQUE4QztRQUM5QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDdkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztJQUNuQyxDQUFDO0lBakJEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7K0RBQ1U7SUFHOUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzt5REFDSTtJQU5QLHFCQUFxQjtRQUR6QyxPQUFPO09BQ2EscUJBQXFCLENBcUJ6QztJQUFELDRCQUFDO0NBckJELEFBcUJDLENBckJrRCxFQUFFLENBQUMsU0FBUyxHQXFCOUQ7a0JBckJvQixxQkFBcUIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTaGFkb3dMYXllckNvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5DYW1lcmEpXHJcbiAgICBzaGFkb3dDYW1lcmE6Y2MuQ2FtZXJhID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuU3ByaXRlKVxyXG4gICAgc3ByaXRlOmNjLlNwcml0ZSA9IG51bGw7XHJcblxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgLyoqIOiuvue9ruW9seWtkCjop5LoibLlkozmlYzkuropICovXHJcbiAgICAgICAgbGV0IHRleHR1cmUgPSBuZXcgY2MuUmVuZGVyVGV4dHVyZSgpO1xyXG4gICAgICAgIHRleHR1cmUuaW5pdFdpdGhTaXplKGNjLnZpc2libGVSZWN0LndpZHRoLCBjYy52aXNpYmxlUmVjdC5oZWlnaHQpO1xyXG4gICAgICAgIHRoaXMuc2hhZG93Q2FtZXJhLnRhcmdldFRleHR1cmUgPSB0ZXh0dXJlO1xyXG4gICAgICAgIC8vIHRleHR1cmVbJ19wcmVtdWx0aXBseUFscGhhJ10gPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLnNwcml0ZUZyYW1lID0gbmV3IGNjLlNwcml0ZUZyYW1lKHRleHR1cmUpO1xyXG4gICAgICAgIC8vIHRoaXMuc3ByaXRlLnNwcml0ZUZyYW1lLnNyY0JsZW5kRmFjdG9yID0gY2MubWFjcm8uQmxlbmRGYWN0b3IuT05FO1xyXG4gICAgICAgIC8vIHRoaXMuc3ByaXRlLnNldFN0YXRlKGNjLlNwcml0ZS5TdGF0ZS5HUkFZKTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5ub2RlLmNvbG9yPSBjYy5Db2xvci5CTEFDSztcclxuICAgICAgICB0aGlzLnNwcml0ZS5ub2RlLm9wYWNpdHkgPSAxMDA7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/RoleLayerController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f61265lNHFLoLCiFgJtZAnX', 'RoleLayerController');
// script/app/home/RoleLayerController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("../info/World");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var Extend_1 = require("../../../framework/extend/Extend");
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var RoleLayerController = /** @class */ (function (_super) {
    __extends(RoleLayerController, _super);
    function RoleLayerController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hpLvLabel = null;
        _this.adLvLabel = null;
        _this.hpCostLabel = null;
        _this.adCostLabel = null;
        _this.hpWorthLabel = null;
        _this.adWorthLabel = null;
        _this.hpLvButton = null;
        _this.adButton = null;
        _this._AdUpCount = 0;
        return _this;
    }
    RoleLayerController.prototype.onLoad = function () {
        this.updateHpUp();
        this.updateAdUp();
        cc.find('Canvas').on("UpdateStorage", this.onUpdateStorageEvent, this);
    };
    RoleLayerController.prototype.onDestroy = function () {
        cc.find('Canvas').off("UpdateStorage", this.onUpdateStorageEvent, this);
    };
    RoleLayerController.prototype.onUpdateStorageEvent = function (key) {
        if (key == "goldCount") {
            var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
            if (World_1.World.Storage.HpLv < config['lv_limit']) {
                var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.HpLv - 1]['life_expend'];
                this.hpLvButton.interactable = World_1.World.Storage.goldCount >= needCost;
                this.hpCostLabel.node.color = this.hpLvButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
            }
            if (World_1.World.Storage.ADLv < config['lv_limit']) {
                var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.ADLv - 1]['fight_expend'];
                this.adButton.interactable = World_1.World.Storage.goldCount >= needCost;
                this.adCostLabel.node.color = this.adButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
            }
        }
    };
    RoleLayerController.prototype.updateHpUp = function () {
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
        this.hpLvLabel.string = "<b><outline color=#1e1e1e width=4>\u751F\u547D\u529BLv." + World_1.World.Storage.HpLv + "</outline></b>";
        if (World_1.World.Storage.HpLv >= config['lv_limit']) {
            this.hpCostLabel.string = "<b><outline color=#1e1e1e width=3>\u6EE1\u7EA7</outline></b>";
            this.hpLvButton.interactable = false;
        }
        else {
            var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.HpLv - 1]['life_expend'];
            this.hpCostLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(needCost) + "</outline></b>";
            this.hpLvButton.interactable = World_1.World.Storage.goldCount >= needCost;
        }
        this.hpCostLabel.node.color = this.hpLvButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
        var life = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.HpLv - 1]['life'];
        this.hpWorthLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(life) + "</outline></b>";
    };
    RoleLayerController.prototype.updateAdUp = function () {
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
        this.adLvLabel.string = "<b><outline color=#1e1e1e width=4>\u6218\u529BLv." + World_1.World.Storage.ADLv + "</outline></b>";
        if (World_1.World.Storage.ADLv >= config['lv_limit']) {
            this.adCostLabel.string = "<b><outline color=#1e1e1e width=3>\u6EE1\u7EA7</outline></b>";
            this.adButton.interactable = false;
        }
        else {
            var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.ADLv - 1]['fight_expend'];
            this.adCostLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(needCost) + "</outline></b>";
            this.adButton.interactable = World_1.World.Storage.goldCount >= needCost;
        }
        this.adCostLabel.node.color = this.adButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
        var fight = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.ADLv - 1]['fight'];
        this.adWorthLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(fight) + "</outline></b>";
    };
    RoleLayerController.prototype.onClickUpHpLv = function (event, data) {
        console.log("【click】RoleLayerController UpHpLv");
        var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.HpLv - 1]['life_expend'];
        World_1.World.Storage.goldCount -= needCost;
        World_1.World.Storage.HpLv++;
        this.updateHpUp();
        Facade_1.default.canvasNode.emit("RoleUp");
    };
    RoleLayerController.prototype.onClickUpADLv = function (event, data) {
        console.log("【click】RoleLayerController UpADLv");
        var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[World_1.World.Storage.ADLv - 1]['fight_expend'];
        World_1.World.Storage.goldCount -= needCost;
        World_1.World.Storage.ADLv++;
        this.updateAdUp();
        Facade_1.default.canvasNode.emit("RoleUp");
        this._AdUpCount++;
        var newbieNode = cc.director.getScene().getChildByName("newbieNode");
        if (newbieNode && (!this.adButton.interactable || this._AdUpCount > 2)) {
            newbieNode.destroy();
            World_1.World.My.newbies.finish("FirstRoleUp");
        }
    };
    __decorate([
        property(cc.RichText)
    ], RoleLayerController.prototype, "hpLvLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], RoleLayerController.prototype, "adLvLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], RoleLayerController.prototype, "hpCostLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], RoleLayerController.prototype, "adCostLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], RoleLayerController.prototype, "hpWorthLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], RoleLayerController.prototype, "adWorthLabel", void 0);
    __decorate([
        property(cc.Button)
    ], RoleLayerController.prototype, "hpLvButton", void 0);
    __decorate([
        property(cc.Button)
    ], RoleLayerController.prototype, "adButton", void 0);
    RoleLayerController = __decorate([
        ccclass
    ], RoleLayerController);
    return RoleLayerController;
}(cc.Component));
exports.default = RoleLayerController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/TakeJackpotController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '714fcJtcJtP9q86lkg3hnXM', 'TakeJackpotController');
// script/app/home/TakeJackpotController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../../../framework/facade/Facade");
var Extend_1 = require("../../../framework/extend/Extend");
var World_1 = require("../info/World");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TakeJackpotController = /** @class */ (function (_super) {
    __extends(TakeJackpotController, _super);
    function TakeJackpotController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.oneLabel = null;
        _this.threeLabel = null;
        _this.oneButtonNode = null;
        return _this;
    }
    // LIFE-CYCLE CALLBACKS:
    TakeJackpotController.prototype.onLoad = function () {
        this.updateView();
        Facade_1.default.canvasNode.on('UpdateStorage', this.onUpdateStorage, this);
        // this.oneBackgroundSprite.setMaterial(0, this.oneBackgroundSprite.getMaterial(1));
        // this.oneBackgroundSprite.setMaterial(0, cc.Material.getBuiltinMaterial("2d-gray-sprite"));
        // this.oneButtonNode.active = false;
        // this.scheduleOnce(()=>this.oneButtonNode.active = true, 3);
    };
    TakeJackpotController.prototype.onDestroy = function () {
        Facade_1.default.canvasNode.off('UpdateStorage', this.onUpdateStorage, this);
    };
    TakeJackpotController.prototype.onUpdateStorage = function (key) {
        if (key == "dayEarnTotal") {
            this.updateView();
        }
    };
    TakeJackpotController.prototype.updateView = function () {
        this.oneLabel.string = Extend_1.ext.shortFormat(World_1.World.Storage.dayEarnTotal);
        this.threeLabel.string = Extend_1.ext.shortFormat(World_1.World.Storage.dayEarnTotal * 3);
    };
    TakeJackpotController.prototype.onTakeIt = function (event, data) {
        data = parseInt(data);
        if (data == 1) {
            this.node.destroy();
            Facade_1.default.canvasNode.emit("TakeJackpot", 1);
        }
        else {
            /** 看广告 */
            this.node.destroy();
            Facade_1.default.canvasNode.emit("TakeJackpot", 3);
        }
    };
    __decorate([
        property(cc.Label)
    ], TakeJackpotController.prototype, "oneLabel", void 0);
    __decorate([
        property(cc.Label)
    ], TakeJackpotController.prototype, "threeLabel", void 0);
    __decorate([
        property(cc.Node)
    ], TakeJackpotController.prototype, "oneButtonNode", void 0);
    TakeJackpotController = __decorate([
        ccclass
    ], TakeJackpotController);
    return TakeJackpotController;
}(cc.Component));
exports.default = TakeJackpotController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvVGFrZUphY2twb3RDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSwyREFBc0Q7QUFDdEQsMkRBQXFEO0FBQ3JELHVDQUFvQztBQUs5QixJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFtRCx5Q0FBWTtJQUEvRDtRQUFBLHFFQWlEQztRQTlDRyxjQUFRLEdBQWEsSUFBSSxDQUFDO1FBRzFCLGdCQUFVLEdBQWEsSUFBSSxDQUFDO1FBRzVCLG1CQUFhLEdBQVcsSUFBSSxDQUFDOztJQXdDakMsQ0FBQztJQXRDRyx3QkFBd0I7SUFFeEIsc0NBQU0sR0FBTjtRQUNJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNsQixnQkFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDbEUsb0ZBQW9GO1FBQ3BGLDZGQUE2RjtRQUM3RixxQ0FBcUM7UUFDckMsOERBQThEO0lBQ2xFLENBQUM7SUFFRCx5Q0FBUyxHQUFUO1FBQ0ksZ0JBQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCwrQ0FBZSxHQUFmLFVBQWdCLEdBQVU7UUFDdEIsSUFBSSxHQUFHLElBQUksY0FBYyxFQUFDO1lBQ3RCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUNyQjtJQUNMLENBQUM7SUFFRCwwQ0FBVSxHQUFWO1FBQ0ksSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsWUFBRyxDQUFDLFdBQVcsQ0FBQyxhQUFLLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLFlBQUcsQ0FBQyxXQUFXLENBQUMsYUFBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLEdBQUMsQ0FBQyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVELHdDQUFRLEdBQVIsVUFBUyxLQUFLLEVBQUUsSUFBSTtRQUNoQixJQUFJLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RCLElBQUksSUFBSSxJQUFJLENBQUMsRUFBQztZQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDcEIsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUM1QzthQUFLO1lBQ0YsVUFBVTtZQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDcEIsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUM1QztJQUNMLENBQUM7SUE1Q0Q7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzsyREFDTztJQUcxQjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOzZEQUNTO0lBRzVCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7Z0VBQ1c7SUFUWixxQkFBcUI7UUFEekMsT0FBTztPQUNhLHFCQUFxQixDQWlEekM7SUFBRCw0QkFBQztDQWpERCxBQWlEQyxDQWpEa0QsRUFBRSxDQUFDLFNBQVMsR0FpRDlEO2tCQWpEb0IscUJBQXFCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBGYWNhZGUgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9mYWNhZGUvRmFjYWRlXCI7XHJcbmltcG9ydCB7ZXh0fSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2V4dGVuZC9FeHRlbmRcIjtcclxuaW1wb3J0IHtXb3JsZH0gZnJvbSBcIi4uL2luZm8vV29ybGRcIjtcclxuaW1wb3J0IHtNdXNpY30gZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9hdWRpby9NdXNpY1wiO1xyXG5pbXBvcnQge05ldHdvcmtDb25maWd9IGZyb20gXCIuLi9jb25maWcvTmV0d29ya0NvbmZpZ1wiO1xyXG5pbXBvcnQgTmV0d29yayBmcm9tIFwiLi4vbmV0d29yay9OZXR3b3JrXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRha2VKYWNrcG90Q29udHJvbGxlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxyXG4gICAgb25lTGFiZWw6IGNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXHJcbiAgICB0aHJlZUxhYmVsOiBjYy5MYWJlbCA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBvbmVCdXR0b25Ob2RlOmNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy51cGRhdGVWaWV3KCk7XHJcbiAgICAgICAgRmFjYWRlLmNhbnZhc05vZGUub24oJ1VwZGF0ZVN0b3JhZ2UnLCB0aGlzLm9uVXBkYXRlU3RvcmFnZSwgdGhpcyk7XHJcbiAgICAgICAgLy8gdGhpcy5vbmVCYWNrZ3JvdW5kU3ByaXRlLnNldE1hdGVyaWFsKDAsIHRoaXMub25lQmFja2dyb3VuZFNwcml0ZS5nZXRNYXRlcmlhbCgxKSk7XHJcbiAgICAgICAgLy8gdGhpcy5vbmVCYWNrZ3JvdW5kU3ByaXRlLnNldE1hdGVyaWFsKDAsIGNjLk1hdGVyaWFsLmdldEJ1aWx0aW5NYXRlcmlhbChcIjJkLWdyYXktc3ByaXRlXCIpKTtcclxuICAgICAgICAvLyB0aGlzLm9uZUJ1dHRvbk5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgLy8gdGhpcy5zY2hlZHVsZU9uY2UoKCk9PnRoaXMub25lQnV0dG9uTm9kZS5hY3RpdmUgPSB0cnVlLCAzKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRlc3Ryb3koKXtcclxuICAgICAgICBGYWNhZGUuY2FudmFzTm9kZS5vZmYoJ1VwZGF0ZVN0b3JhZ2UnLCB0aGlzLm9uVXBkYXRlU3RvcmFnZSwgdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGVTdG9yYWdlKGtleTpzdHJpbmcpe1xyXG4gICAgICAgIGlmIChrZXkgPT0gXCJkYXlFYXJuVG90YWxcIil7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlVmlldygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVWaWV3KCl7XHJcbiAgICAgICAgdGhpcy5vbmVMYWJlbC5zdHJpbmcgPSBleHQuc2hvcnRGb3JtYXQoV29ybGQuU3RvcmFnZS5kYXlFYXJuVG90YWwpO1xyXG4gICAgICAgIHRoaXMudGhyZWVMYWJlbC5zdHJpbmcgPSBleHQuc2hvcnRGb3JtYXQoV29ybGQuU3RvcmFnZS5kYXlFYXJuVG90YWwqMyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25UYWtlSXQoZXZlbnQsIGRhdGEpe1xyXG4gICAgICAgIGRhdGEgPSBwYXJzZUludChkYXRhKTtcclxuICAgICAgICBpZiAoZGF0YSA9PSAxKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgRmFjYWRlLmNhbnZhc05vZGUuZW1pdChcIlRha2VKYWNrcG90XCIsIDEpO1xyXG4gICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgLyoqIOeci+W5v+WRiiAqL1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICBGYWNhZGUuY2FudmFzTm9kZS5lbWl0KFwiVGFrZUphY2twb3RcIiwgMyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/GameOverLucky.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '43341ZZ4pdLh4MK2doeqynQ', 'GameOverLucky');
// script/app/game/GameOverLucky.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var GameOverLucky = /** @class */ (function (_super) {
    __extends(GameOverLucky, _super);
    function GameOverLucky() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.contentNode = null;
        _this.templateLabel = null;
        _this.mask = null;
        return _this;
    }
    GameOverLucky.prototype.run = function (num, callback) {
        var min = 3;
        var offsetY = 0;
        var height = this.mask.node.height / 2 + this.templateLabel.node.height / 2;
        // let height = this.mask.node.height;
        for (var i = 0; i < 1; i++) {
            for (var j = 10; j >= min; j--) {
                var node = cc.instantiate(this.templateLabel.node);
                node.getComponent(cc.Label).string = "x" + j;
                node.x = 0;
                node.y = offsetY;
                offsetY += height;
                this.contentNode.addChild(node);
            }
        }
        for (var j = 10; j >= num; j--) {
            var node = cc.instantiate(this.templateLabel.node);
            node.getComponent(cc.Label).string = "x" + j;
            node.x = 0;
            node.y = offsetY;
            offsetY += height;
            this.contentNode.addChild(node);
        }
        this.templateLabel.node.active = false;
        offsetY -= height;
        var duration = offsetY / 1250;
        console.log(duration, offsetY, this.mask.node.height);
        this.contentNode.runAction(cc.sequence(cc.moveTo(duration, cc.v2(0, -offsetY)).easing(cc.easeSineInOut()), cc.delayTime(1), cc.callFunc(function () {
            console.log("finish.");
            callback();
        })));
    };
    __decorate([
        property(cc.Node)
    ], GameOverLucky.prototype, "contentNode", void 0);
    __decorate([
        property(cc.Label)
    ], GameOverLucky.prototype, "templateLabel", void 0);
    __decorate([
        property(cc.Mask)
    ], GameOverLucky.prototype, "mask", void 0);
    GameOverLucky = __decorate([
        ccclass
    ], GameOverLucky);
    return GameOverLucky;
}(cc.Component));
exports.default = GameOverLucky;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2dhbWUvR2FtZU92ZXJMdWNreS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ00sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBMkMsaUNBQVk7SUFBdkQ7UUFBQSxxRUEyQ0M7UUF4Q0csaUJBQVcsR0FBWSxJQUFJLENBQUM7UUFHNUIsbUJBQWEsR0FBYSxJQUFJLENBQUM7UUFHL0IsVUFBSSxHQUFZLElBQUksQ0FBQzs7SUFrQ3pCLENBQUM7SUFoQ0csMkJBQUcsR0FBSCxVQUFJLEdBQVcsRUFBRSxRQUFpQjtRQUM5QixJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDWixJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUM7UUFDaEIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUMsQ0FBQyxDQUFDO1FBQ3hFLHNDQUFzQztRQUN0QyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3hCLEtBQUssSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzVCLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDbkQsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxHQUFHLE1BQUksQ0FBRyxDQUFDO2dCQUM3QyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQztnQkFDakIsT0FBTyxJQUFJLE1BQU0sQ0FBQztnQkFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDbkM7U0FDSjtRQUNELEtBQUssSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDNUIsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25ELElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sR0FBRyxNQUFJLENBQUcsQ0FBQztZQUM3QyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNYLElBQUksQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDO1lBQ2pCLE9BQU8sSUFBSSxNQUFNLENBQUM7WUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbkM7UUFDRCxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3ZDLE9BQU8sSUFBSSxNQUFNLENBQUM7UUFDbEIsSUFBSSxRQUFRLEdBQUcsT0FBTyxHQUFHLElBQUksQ0FBQztRQUM5QixPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUNwSSxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3ZCLFFBQVEsRUFBRSxDQUFDO1FBQ2YsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1QsQ0FBQztJQXZDRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO3NEQUNVO0lBRzVCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7d0RBQ1k7SUFHL0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzsrQ0FDRztJQVRKLGFBQWE7UUFEakMsT0FBTztPQUNhLGFBQWEsQ0EyQ2pDO0lBQUQsb0JBQUM7Q0EzQ0QsQUEyQ0MsQ0EzQzBDLEVBQUUsQ0FBQyxTQUFTLEdBMkN0RDtrQkEzQ29CLGFBQWEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lT3Zlckx1Y2t5IGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTm9kZSlcclxuICAgIGNvbnRlbnROb2RlOiBjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXHJcbiAgICB0ZW1wbGF0ZUxhYmVsOiBjYy5MYWJlbCA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk1hc2spXHJcbiAgICBtYXNrOiBjYy5NYXNrID0gbnVsbDtcclxuXHJcbiAgICBydW4obnVtOiBudW1iZXIsIGNhbGxiYWNrOigpPT52b2lkKSB7XHJcbiAgICAgICAgbGV0IG1pbiA9IDM7XHJcbiAgICAgICAgbGV0IG9mZnNldFkgPSAwO1xyXG4gICAgICAgIGxldCBoZWlnaHQgPSB0aGlzLm1hc2subm9kZS5oZWlnaHQvMiArIHRoaXMudGVtcGxhdGVMYWJlbC5ub2RlLmhlaWdodC8yO1xyXG4gICAgICAgIC8vIGxldCBoZWlnaHQgPSB0aGlzLm1hc2subm9kZS5oZWlnaHQ7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxOyBpKyspIHtcclxuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDEwOyBqID49IG1pbjsgai0tKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMudGVtcGxhdGVMYWJlbC5ub2RlKTtcclxuICAgICAgICAgICAgICAgIG5vZGUuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSBgeCR7an1gO1xyXG4gICAgICAgICAgICAgICAgbm9kZS54ID0gMDtcclxuICAgICAgICAgICAgICAgIG5vZGUueSA9IG9mZnNldFk7XHJcbiAgICAgICAgICAgICAgICBvZmZzZXRZICs9IGhlaWdodDtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGVudE5vZGUuYWRkQ2hpbGQobm9kZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yIChsZXQgaiA9IDEwOyBqID49IG51bTsgai0tKSB7XHJcbiAgICAgICAgICAgIGxldCBub2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy50ZW1wbGF0ZUxhYmVsLm5vZGUpO1xyXG4gICAgICAgICAgICBub2RlLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gYHgke2p9YDtcclxuICAgICAgICAgICAgbm9kZS54ID0gMDtcclxuICAgICAgICAgICAgbm9kZS55ID0gb2Zmc2V0WTtcclxuICAgICAgICAgICAgb2Zmc2V0WSArPSBoZWlnaHQ7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGVudE5vZGUuYWRkQ2hpbGQobm9kZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudGVtcGxhdGVMYWJlbC5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIG9mZnNldFkgLT0gaGVpZ2h0O1xyXG4gICAgICAgIGxldCBkdXJhdGlvbiA9IG9mZnNldFkgLyAxMjUwO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGR1cmF0aW9uLCBvZmZzZXRZLCB0aGlzLm1hc2subm9kZS5oZWlnaHQpO1xyXG4gICAgICAgIHRoaXMuY29udGVudE5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLm1vdmVUbyhkdXJhdGlvbiwgY2MudjIoMCwgLW9mZnNldFkpKS5lYXNpbmcoY2MuZWFzZVNpbmVJbk91dCgpKSwgY2MuZGVsYXlUaW1lKDEpLCBjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImZpbmlzaC5cIik7XHJcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XHJcbiAgICAgICAgfSkpKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/UpEffectController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'de3b1rlVrNDVqI1fkc5g6jI', 'UpEffectController');
// script/app/home/UpEffectController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var UpEffectController = /** @class */ (function (_super) {
    __extends(UpEffectController, _super);
    function UpEffectController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.eventName = "";
        _this.ske = null;
        return _this;
    }
    UpEffectController.prototype.onShowEffect = function () {
        this.ske.node.active = true;
        this.ske.setAnimation(0, "vfxAll", false);
    };
    UpEffectController.prototype.onLoad = function () {
        var _this = this;
        if (this.eventName !== "") {
            Facade_1.default.canvasNode.on(this.eventName, this.onShowEffect, this);
        }
        this.ske.setCompleteListener(function () {
            if (cc.isValid(_this) && cc.isValid(_this.ske)) {
                _this.ske.node.active = false;
            }
        });
        this.ske.node.active = false;
    };
    UpEffectController.prototype.onDestroy = function () {
        Facade_1.default.canvasNode.off(this.eventName, this.onShowEffect, this);
    };
    __decorate([
        property
    ], UpEffectController.prototype, "eventName", void 0);
    __decorate([
        property(sp.Skeleton)
    ], UpEffectController.prototype, "ske", void 0);
    UpEffectController = __decorate([
        ccclass
    ], UpEffectController);
    return UpEffectController;
}(cc.Component));
exports.default = UpEffectController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvVXBFZmZlY3RDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSwyREFBc0Q7QUFFaEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBZ0Qsc0NBQVk7SUFBNUQ7UUFBQSxxRUE2QkM7UUExQkcsZUFBUyxHQUFHLEVBQUUsQ0FBQztRQUdmLFNBQUcsR0FBZSxJQUFJLENBQUM7O0lBdUIzQixDQUFDO0lBcEJHLHlDQUFZLEdBQVo7UUFDSSxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQzVCLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELG1DQUFNLEdBQU47UUFBQSxpQkFVQztRQVRHLElBQUksSUFBSSxDQUFDLFNBQVMsS0FBSyxFQUFFLEVBQUM7WUFDdEIsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNqRTtRQUNELElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUM7WUFDekIsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSSxDQUFDLEdBQUcsQ0FBQyxFQUFDO2dCQUN6QyxLQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO2FBQ2hDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxzQ0FBUyxHQUFUO1FBQ0ksZ0JBQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNuRSxDQUFDO0lBekJEO1FBREMsUUFBUTt5REFDTTtJQUdmO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUM7bURBQ0M7SUFOTixrQkFBa0I7UUFEdEMsT0FBTztPQUNhLGtCQUFrQixDQTZCdEM7SUFBRCx5QkFBQztDQTdCRCxBQTZCQyxDQTdCK0MsRUFBRSxDQUFDLFNBQVMsR0E2QjNEO2tCQTdCb0Isa0JBQWtCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBGYWNhZGUgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9mYWNhZGUvRmFjYWRlXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVwRWZmZWN0Q29udHJvbGxlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5XHJcbiAgICBldmVudE5hbWUgPSBcIlwiO1xyXG5cclxuICAgIEBwcm9wZXJ0eShzcC5Ta2VsZXRvbilcclxuICAgIHNrZTpzcC5Ta2VsZXRvbiA9IG51bGw7XHJcblxyXG5cclxuICAgIG9uU2hvd0VmZmVjdCgpe1xyXG4gICAgICAgIHRoaXMuc2tlLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnNrZS5zZXRBbmltYXRpb24oMCwgXCJ2ZnhBbGxcIiwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZXZlbnROYW1lICE9PSBcIlwiKXtcclxuICAgICAgICAgICAgRmFjYWRlLmNhbnZhc05vZGUub24odGhpcy5ldmVudE5hbWUsIHRoaXMub25TaG93RWZmZWN0LCB0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5za2Uuc2V0Q29tcGxldGVMaXN0ZW5lcigoKT0+e1xyXG4gICAgICAgICAgICBpZiAoY2MuaXNWYWxpZCh0aGlzKSAmJiBjYy5pc1ZhbGlkKHRoaXMuc2tlKSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNrZS5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5za2Uubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRlc3Ryb3koKXtcclxuICAgICAgICBGYWNhZGUuY2FudmFzTm9kZS5vZmYodGhpcy5ldmVudE5hbWUsIHRoaXMub25TaG93RWZmZWN0LCB0aGlzKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/EarningsLayerController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e78aaJwDKBPIZdjvZdl4ywW', 'EarningsLayerController');
// script/app/home/EarningsLayerController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("../info/World");
var Extend_1 = require("../../../framework/extend/Extend");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var EarningsLayerController = /** @class */ (function (_super) {
    __extends(EarningsLayerController, _super);
    function EarningsLayerController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.goldLvLabel = null;
        _this.dayEarnLvLabel = null;
        _this.goldCostLabel = null;
        _this.dayEarnCostLabel = null;
        _this.goldWorthLabel = null;
        _this.dayEarnWorthLabel = null;
        _this.goldLvButton = null;
        _this.dayEarnButton = null;
        return _this;
    }
    EarningsLayerController.prototype.onLoad = function () {
        this.updateGoldUp();
        this.updateDayEarnUp();
        cc.find('Canvas').on("UpdateStorage", this.onUpdateStorageEvent, this);
    };
    EarningsLayerController.prototype.onDestroy = function () {
        cc.find('Canvas').off("UpdateStorage", this.onUpdateStorageEvent, this);
    };
    EarningsLayerController.prototype.onUpdateStorageEvent = function (key) {
        if (key == "goldCount") {
            var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
            if (World_1.World.Storage.goldLv < cfg.length) {
                var needCost = cfg[World_1.World.Storage.goldLv - 1]['gvalue_expend'];
                this.goldLvButton.interactable = World_1.World.Storage.goldCount >= needCost;
                this.goldCostLabel.node.color = this.goldLvButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
            }
            if (World_1.World.Storage.dayEarnLv < cfg.length) {
                var needCost = cfg[World_1.World.Storage.dayEarnLv - 1]['on_hook_expend'];
                this.dayEarnButton.interactable = World_1.World.Storage.goldCount >= needCost;
                this.dayEarnCostLabel.node.color = this.dayEarnButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
            }
        }
    };
    EarningsLayerController.prototype.updateGoldUp = function () {
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
        this.goldLvLabel.string = "<b><outline color=#1e1e1e width=4>\u91D1\u5E01\u4EF7\u503CLv." + World_1.World.Storage.goldLv + "</outline></b>";
        if (World_1.World.Storage.goldLv >= cfg.length) {
            this.goldCostLabel.string = "<b><outline color=#1e1e1e width=3>\u6EE1\u7EA7</outline></b>";
            this.goldLvButton.interactable = false;
        }
        else {
            var needCost = cfg[World_1.World.Storage.goldLv - 1]['gvalue_expend'];
            this.goldCostLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(needCost) + "</outline></b>";
            this.goldLvButton.interactable = World_1.World.Storage.goldCount >= needCost;
        }
        this.goldCostLabel.node.color = this.goldLvButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
        this.goldWorthLabel.string = "<b><outline color=#1e1e1e width=3>" + Math.floor(cfg[World_1.World.Storage.goldLv - 1]['gvalue'] * 100) + "%</outline></b>";
    };
    EarningsLayerController.prototype.updateDayEarnUp = function () {
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
        this.dayEarnLvLabel.string = "<b><outline color=#1e1e1e width=4>\u65E5\u5E38\u6536\u76CALv." + World_1.World.Storage.dayEarnLv + "</outline></b>";
        if (World_1.World.Storage.dayEarnLv >= cfg.length) {
            this.dayEarnCostLabel.string = "<b><outline color=#1e1e1e width=3>\u6EE1\u7EA7</outline></b>";
            this.dayEarnButton.interactable = false;
        }
        else {
            var needCost = cfg[World_1.World.Storage.dayEarnLv - 1]['on_hook_expend'];
            this.dayEarnCostLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(needCost) + "</outline></b>";
            this.dayEarnButton.interactable = World_1.World.Storage.goldCount >= needCost;
        }
        this.dayEarnCostLabel.node.color = this.dayEarnButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
        this.dayEarnWorthLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(cfg[World_1.World.Storage.dayEarnLv - 1]['on_hook']) + "</outline></b>";
    };
    EarningsLayerController.prototype.onClickUpGoldLv = function (event, data) {
        console.log("【click】EarningsLayerController UpGoldLv");
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
        var needCost = cfg[World_1.World.Storage.goldLv - 1]['gvalue_expend'];
        World_1.World.Storage.goldCount -= needCost;
        World_1.World.Storage.goldLv++;
        this.updateGoldUp();
        Facade_1.default.canvasNode.emit("GoldWorthUp");
    };
    EarningsLayerController.prototype.onClickUpDayEarnLv = function (event, data) {
        console.log("【click】EarningsLayerController UpDayEarnLv");
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.GoldUp);
        var needCost = cfg[World_1.World.Storage.dayEarnLv - 1]['on_hook_expend'];
        World_1.World.Storage.dayEarnLv++;
        World_1.World.Storage.goldCount -= needCost;
        this.updateDayEarnUp();
        Facade_1.default.canvasNode.emit("GoldDayEarnUp");
    };
    __decorate([
        property(cc.RichText)
    ], EarningsLayerController.prototype, "goldLvLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], EarningsLayerController.prototype, "dayEarnLvLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], EarningsLayerController.prototype, "goldCostLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], EarningsLayerController.prototype, "dayEarnCostLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], EarningsLayerController.prototype, "goldWorthLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], EarningsLayerController.prototype, "dayEarnWorthLabel", void 0);
    __decorate([
        property(cc.Button)
    ], EarningsLayerController.prototype, "goldLvButton", void 0);
    __decorate([
        property(cc.Button)
    ], EarningsLayerController.prototype, "dayEarnButton", void 0);
    EarningsLayerController = __decorate([
        ccclass
    ], EarningsLayerController);
    return EarningsLayerController;
}(cc.Component));
exports.default = EarningsLayerController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/info/Task.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '763c02OmEBA5Yyyt0WowwAG', 'Task');
// script/app/info/Task.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("./World");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Task = /** @class */ (function () {
    function Task() {
    }
    Task.initCurrentLvData = function () {
        this._taskItemsOfCurrentLv = this._taskProxy.list.map(function (value) { return ({ id: value.id, num: 0, take: false }); });
    };
    Task.mergeCurrentLvData = function () {
        var _this = this;
        console.log("mergeCurrentLvData==>");
        console.log(this._taskItemsOfCurrentLv, "this._taskItemsOfCurrentLv");
        var update = false;
        this._taskItemsOfCurrentLv.forEach(function (value, index) {
            var line = ExcelConfig_1.ExcelConfig.getExcelLine(ExcelTableNames_1.ExcelTableNames.task, "id", value.id);
            if (value.num > 0 && _this._taskProxy.list[index].num < line['num']) {
                _this._taskProxy.list[index].num += value.num;
                if (_this._taskProxy.list[index].num >= line['num']) {
                    _this._taskProxy.list[index].num = line['num'];
                }
                update = true;
            }
        });
        if (update) {
            this.write();
        }
    };
    Task.write = function () {
        World_1.World.Storage.task = JSON.stringify(this._taskProxy);
    };
    Task.addNum = function (taskId, num) {
        console.log("======>addNum", taskId, num);
        var find = this._taskItemsOfCurrentLv.find(function (value) { return value.id == taskId; });
        if (find) {
            find.num += num;
        }
        console.log(this._taskItemsOfCurrentLv, "----");
    };
    /** 任务只增不减 */
    /** 击碎靶子 */
    Task.killEnemy = function () {
        this.addNum(1, 1);
    };
    /** 击碎幸运转盘 */
    Task.killLuckyEnemy = function () {
        this.addNum(2, 1);
    };
    /** 触发疯狂模式 */
    Task.triggerCrazy = function () {
        this.addNum(3, 1);
    };
    /** 打败Boss */
    Task.killBoss = function () {
        this.addNum(4, 1);
    };
    /** 使用道具 */
    Task.useTool = function () {
        this.addNum(5, 1);
    };
    Task.init = function () {
        console.log("Task.initBullet===>");
        /** 初始每日任务表 */
        var task = JSON.parse(World_1.World.Storage.task);
        if (!task || !task.expireTime || task.expireTime <= World_1.World.My.serverTime) {
            /** 更新任务 */
            task = {};
            /** 计算今天的时分秒 */
            var date = new Date(World_1.World.My.serverTime);
            console.log(date.getFullYear() + "\u5E74" + date.getMonth() + "\u6708" + date.getDay() + "\u65E5" + date.getHours() + "\u65F6" + date.getMinutes() + "\u5206" + date.getSeconds() + "\u79D2" + date.getMilliseconds() + "\u6BEB\u79D2");
            var cd = 24 * 60 * 60 - (date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds());
            var h = Math.floor(cd / 3600);
            var m = Math.floor((cd - h * 3600) / 60);
            var s = cd % 60;
            console.log(h + "\u65F6" + m + "\u5206" + s + "\u79D2-----------");
            task.expireTime = World_1.World.My.serverTime + cd * 1000 - date.getMilliseconds();
            task.box = false;
            task.list = [];
            /** 随机三个任务 */
            var taskDatas = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.task).filter(function (value) { return value['type'] == 1; });
            for (var i = 0; i < 3; i++) {
                var index = Math.floor(Math.random() * 100) % taskDatas.length;
                var item = taskDatas[index];
                console.log(index, item['id'], "=====");
                task.list.push({ id: parseInt(item['id']), num: 0, take: false });
                taskDatas.splice(index, 1);
            }
            World_1.World.Storage.task = JSON.stringify(task);
        }
        else if (task && !task.list) {
            this._taskProxy.list = [];
            for (var key in this._taskProxy) {
                if (key != 'expireTime' && key != 'box' && key != 'list') {
                    var id = parseInt(key);
                    var num = this._taskProxy[key];
                    var line = ExcelConfig_1.ExcelConfig.getExcelLine(ExcelTableNames_1.ExcelTableNames.task, "id", id);
                    if (line['num']) {
                        var take = num >= line['num'];
                        this._taskProxy.list.push({ id: id, num: num, take: take });
                    }
                }
            }
        }
        this._taskProxy = task;
        this.initCurrentLvData();
    };
    Object.defineProperty(Task, "taskProxy", {
        get: function () {
            return this._taskProxy;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Task, "taskItemsOfCurrentLv", {
        get: function () {
            return this._taskItemsOfCurrentLv;
        },
        enumerable: false,
        configurable: true
    });
    Task = __decorate([
        ccclass
    ], Task);
    return Task;
}());
exports.default = Task;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/WeaponLayerController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f0699YuuRlMApvOLWG3FOLt', 'WeaponLayerController');
// script/app/home/WeaponLayerController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("../info/World");
var Extend_1 = require("../../../framework/extend/Extend");
var Toast_1 = require("../../../framework/extend/Toast");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var WeaponLayerController = /** @class */ (function (_super) {
    __extends(WeaponLayerController, _super);
    function WeaponLayerController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.firePowerLvLabel = null;
        _this.powerLvLabel = null;
        _this.firePowerCostLabel = null;
        _this.powerCostLabel = null;
        _this.firePowerWorthLabel = null;
        _this.powerWorthLabel = null;
        _this.firePowerButton = null;
        _this.powerButton = null;
        _this.scrollView = null;
        _this.upEffectNode = null;
        _this.trialNode = null;
        _this.weaponButtons = [];
        _this._weaponFocus = -1;
        _this._orders = [];
        return _this;
    }
    WeaponLayerController.prototype.focusGunID = function () {
        return this._orders[this._weaponFocus]['id'];
    };
    Object.defineProperty(WeaponLayerController.prototype, "weaponFocus", {
        set: function (value) {
            var _this = this;
            if (this._weaponFocus != value) {
                this.upEffectNode.removeFromParent(false);
                this.weaponButtons[value].node.addChild(this.upEffectNode);
                this._weaponFocus = value;
                this.weaponButtons.forEach(function (value, index) { return value.target.getComponent(cc.Sprite).enabled = index == _this._weaponFocus; });
                this.updateWeaponAttr();
            }
        },
        enumerable: false,
        configurable: true
    });
    WeaponLayerController.prototype.updateWeaponAttr = function () {
        this.updateFirePower();
        this.updatePower();
    };
    WeaponLayerController.prototype.onLoad = function () {
        var _this = this;
        this.trialNode.active = false;
        this.weaponButtons = this.scrollView.content.children.map(function (value) { return value.getComponent(cc.Button); });
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon);
        this._orders = config.filter(function (value) { return value['id'] != 1; }).sort((function (a, b) {
            return a['order'] - b['order'];
        }));
        this.weaponButtons.forEach(function (value) {
            var id = parseInt(value.node.name);
            var cfg = _this._orders[id - 2];
            value.node.getChildByName("Background").getChildByName("Label").getComponent(cc.Label).string = cfg['gun_name'];
            // let weaponSke = value.node.getChildByName("Background").getChildByName("weapon").getComponent(sp.Skeleton);
            // weaponSke.setSkin(("000"+cfg['id']).substr(-3));
            // weaponSke.setAnimation(0, "gun", false);
            value.node.getChildByName("Background").getChildByName("weapon").active = false;
            var sprite = value.node.getChildByName("Background").getChildByName("weaponSprite").getComponent(cc.Sprite);
            var bLock = World_1.World.Storage.gameLevel < cfg['unlock'];
            sprite.setMaterial(0, cc.Material.getBuiltinMaterial(bLock ? "2d-gray-sprite" : "2d-sprite"));
            sprite.node.opacity = bLock ? 128 : 255;
        });
        cc.find('Canvas').on("UpdateStorage", this.onUpdateStorageEvent, this);
    };
    WeaponLayerController.prototype.start = function () {
        /** 选中最新解锁的武器 */
        var num = 0;
        for (var _i = 0, _a = this._orders; _i < _a.length; _i++) {
            var item = _a[_i];
            if (World_1.World.Storage.gameLevel >= item['unlock']) {
                num++;
            }
            else {
                break;
            }
        }
        if (num <= 3) {
            this.scrollView.scrollToLeft();
        }
        else if (num >= this._orders.length - 1) {
            this.scrollView.scrollToRight();
        }
        else {
            var x = (num - 3) * this.weaponButtons[0].node.width;
            this.scrollView.scrollToOffset(cc.v2(x, this.scrollView.content.y));
        }
        this.weaponFocus = num - 1;
        if (World_1.World.Storage.unlockGun > 0) {
            var index = this._orders.findIndex(function (value) { return value['id'] == World_1.World.Storage.unlockGun; });
            if (typeof index == "undefined") {
                console.error("not found gun for id===>", World_1.World.Storage.unlockGun);
            }
            else {
                this.trialNode.removeFromParent(false);
                this.trialNode.active = true;
                this.weaponButtons[index].node.addChild(this.trialNode);
            }
        }
    };
    WeaponLayerController.prototype.onDestroy = function () {
        cc.find('Canvas').off("UpdateStorage", this.onUpdateStorageEvent, this);
    };
    WeaponLayerController.prototype.onUpdateStorageEvent = function (key) {
        if (key == "goldCount") {
            var cfg = this._orders[this._weaponFocus];
            var id = cfg['id'];
            var firePowerLv = World_1.World.My.armory.levelOfEmitterFirePower(id);
            if (firePowerLv < cfg['lv_limit']) {
                var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[firePowerLv - 1]['fire_expend'];
                this.firePowerButton.interactable = World_1.World.Storage.goldCount >= needCost;
                this.firePowerCostLabel.node.color = this.firePowerButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
            }
            var powerLv = World_1.World.My.armory.levelOfEmitterPower(id);
            if (powerLv < cfg['lv_limit']) {
                var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[powerLv - 1]['power_expend'];
                this.powerButton.interactable = World_1.World.Storage.goldCount >= needCost;
                this.powerCostLabel.node.color = this.powerButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
            }
        }
    };
    WeaponLayerController.prototype.updateFirePower = function () {
        var cfg = this._orders[this._weaponFocus];
        var id = cfg['id'];
        var firePowerLv = World_1.World.My.armory.levelOfEmitterFirePower(id);
        this.firePowerLvLabel.string = "<b><outline color=#1e1e1e width=4>\u5F39\u91CF [Lv." + firePowerLv + "]</outline></b>";
        if (firePowerLv >= cfg['lv_limit']) {
            this.firePowerCostLabel.string = "<b><outline color=#1e1e1e width=3>\u6EE1\u7EA7</outline></b>";
            this.firePowerButton.interactable = false;
        }
        else {
            var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[firePowerLv - 1]['fire_expend'];
            this.firePowerCostLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(needCost) + "</outline></b>";
            this.firePowerButton.interactable = World_1.World.Storage.goldCount >= needCost;
        }
        this.firePowerCostLabel.node.color = this.firePowerButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
        this.firePowerWorthLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(World_1.World.My.armory.payloadAddOf(id)) + "</outline></b>";
    };
    WeaponLayerController.prototype.updatePower = function () {
        var cfg = this._orders[this._weaponFocus];
        var id = cfg['id'];
        var powerLv = World_1.World.My.armory.levelOfEmitterPower(id);
        this.powerLvLabel.string = "<b><outline color=#1e1e1e width=4>\u706B\u529B [Lv." + powerLv + "]</outline></b>";
        if (powerLv >= cfg['lv_limit']) {
            this.powerCostLabel.string = "<b><outline color=#1e1e1e width=3>\u6EE1\u7EA7</outline></b>";
            this.powerButton.interactable = false;
        }
        else {
            var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[powerLv - 1]['power_expend'];
            this.powerCostLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(needCost) + "</outline></b>";
            this.powerButton.interactable = World_1.World.Storage.goldCount >= needCost;
        }
        this.powerCostLabel.node.color = this.powerButton.interactable ? cc.Color.WHITE : cc.Color.RED.fromHEX("#924338");
        var hurt_add = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[powerLv - 1]['hurt_add'];
        this.powerWorthLabel.string = "<b><outline color=#1e1e1e width=3>" + Math.floor(hurt_add * 100) + "%</outline></b>";
    };
    WeaponLayerController.prototype.onClickWeapon = function (event, data) {
        console.log("【click】WeaponLayerController Weapon");
        data = parseInt(data);
        var cfg = this._orders[data - 2];
        var bLock = World_1.World.Storage.gameLevel < cfg['unlock'];
        if (bLock) {
            Toast_1.default.flutter({ string: "<color=#faffff><b><outline color=#1e1e1e width=4>\u7B2C" + cfg['unlock'] + "\u5173\u89E3\u9501\u8BE5\u6B66\u5668</outline></b></color>", fontSize: 30, y: cc.visibleRect.center.y });
        }
        else {
            this.weaponButtons[this._weaponFocus].node.getChildByName("Background").getChildByName("weaponSprite").active = true;
            this.weaponButtons[this._weaponFocus].node.getChildByName("Background").getChildByName("weapon").active = false;
            this.weaponFocus = data - 2;
        }
    };
    WeaponLayerController.prototype.onClickUpWeaponFirePower = function (event, data) {
        console.log("【click】WeaponLayerController UpWeaponFirePower");
        var cfg = this._orders[this._weaponFocus];
        var id = cfg['id'];
        var firePowerLv = World_1.World.My.armory.levelOfEmitterFirePower(id);
        if (firePowerLv >= World_1.World.Storage.ADLv) {
            Toast_1.default.flutter({ string: "<color=#faffff><b><outline color=#1e1e1e width=4>等级不得高于基础战斗力</outline></b></color>", fontSize: 30, y: cc.visibleRect.center.y });
            return;
        }
        var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[firePowerLv - 1]['fire_expend'];
        World_1.World.Storage.goldCount -= needCost;
        World_1.World.My.armory.addLevelOfEmitterFirePower(id, 1);
        this.updateFirePower();
        Facade_1.default.canvasNode.emit("WeaponUp");
    };
    WeaponLayerController.prototype.onClickUpWeaponPower = function (event, data) {
        console.log("【click】WeaponLayerController UpWeaponPower");
        var cfg = this._orders[this._weaponFocus];
        var id = cfg['id'];
        var powerLv = World_1.World.My.armory.levelOfEmitterPower(id);
        if (powerLv >= World_1.World.Storage.ADLv) {
            Toast_1.default.flutter({ string: "<color=#faffff><b><outline color=#1e1e1e width=4>等级不得高于基础战斗力</outline></b></color>", fontSize: 30, y: cc.visibleRect.center.y });
            return;
        }
        var needCost = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp)[powerLv - 1]['power_expend'];
        World_1.World.Storage.goldCount -= needCost;
        World_1.World.My.armory.addLevelOfEmitterPower(id, 1);
        this.updatePower();
        Facade_1.default.canvasNode.emit("WeaponUp");
    };
    WeaponLayerController.prototype.onClickToggle = function (toggle, data) {
        console.log("【click】WeaponLayerController Toggle");
        if (toggle.isChecked) {
            if (World_1.World.Storage.unlockGun > 0) {
                /** 切换focus */
                var index = this._orders.findIndex(function (value) { return value['id'] == World_1.World.Storage.unlockGun; });
                console.log("index===>", index);
                if (typeof index == "undefined") {
                    console.error("not found gun for id===>", World_1.World.Storage.unlockGun);
                }
                else {
                    this.weaponFocus = index;
                    /** 播放流光动画 */
                    this.weaponButtons[index].node.getChildByName("Background").getChildByName("weaponSprite").active = false;
                    this.weaponButtons[index].node.getChildByName("Background").getChildByName("weapon").active = true;
                    this.weaponButtons[index].node.getChildByName("Background").getChildByName("weapon").getComponent(sp.Skeleton).setAnimation(0, "gun_002", true);
                }
            }
        }
    };
    __decorate([
        property(cc.RichText)
    ], WeaponLayerController.prototype, "firePowerLvLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], WeaponLayerController.prototype, "powerLvLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], WeaponLayerController.prototype, "firePowerCostLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], WeaponLayerController.prototype, "powerCostLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], WeaponLayerController.prototype, "firePowerWorthLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], WeaponLayerController.prototype, "powerWorthLabel", void 0);
    __decorate([
        property(cc.Button)
    ], WeaponLayerController.prototype, "firePowerButton", void 0);
    __decorate([
        property(cc.Button)
    ], WeaponLayerController.prototype, "powerButton", void 0);
    __decorate([
        property(cc.ScrollView)
    ], WeaponLayerController.prototype, "scrollView", void 0);
    __decorate([
        property(cc.Node)
    ], WeaponLayerController.prototype, "upEffectNode", void 0);
    __decorate([
        property(cc.Node)
    ], WeaponLayerController.prototype, "trialNode", void 0);
    WeaponLayerController = __decorate([
        ccclass
    ], WeaponLayerController);
    return WeaponLayerController;
}(cc.Component));
exports.default = WeaponLayerController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/info/Newbies.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '21af4u3ilxCeqEbsCgLln+k', 'Newbies');
// script/app/info/Newbies.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("./World");
var Newbies = /** @class */ (function () {
    function Newbies(map) {
        this._map = null;
        this._map = map;
    }
    Newbies.prototype.state = function (key) {
        var val = this._map[key];
        return !!val;
    };
    Newbies.prototype.finish = function (key) {
        this._map[key] = 1;
        World_1.World.Storage.newbies = this.toJson();
    };
    Newbies.prototype.toJson = function () {
        return JSON.stringify(this._map);
    };
    return Newbies;
}());
exports.default = Newbies;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2luZm8vTmV3Ymllcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsaUNBQThCO0FBRTlCO0lBQ0ksaUJBQVksR0FBRztRQUdQLFNBQUksR0FBb0IsSUFBSSxDQUFDO1FBRmpDLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO0lBQ3BCLENBQUM7SUFHRCx1QkFBSyxHQUFMLFVBQU0sR0FBVTtRQUNaLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDekIsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQ2pCLENBQUM7SUFFRCx3QkFBTSxHQUFOLFVBQU8sR0FBVTtRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUksQ0FBQyxDQUFDO1FBQ3BCLGFBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUMxQyxDQUFDO0lBRUQsd0JBQU0sR0FBTjtRQUNJLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUNMLGNBQUM7QUFBRCxDQW5CQSxBQW1CQyxJQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7V29ybGR9IGZyb20gXCIuL1dvcmxkXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXdiaWVze1xyXG4gICAgY29uc3RydWN0b3IobWFwKXtcclxuICAgICAgICB0aGlzLl9tYXAgPSBtYXA7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIF9tYXA6W3N0cmluZywgbnVtYmVyXSA9IG51bGw7XHJcblxyXG4gICAgc3RhdGUoa2V5OnN0cmluZyk6Ym9vbGVhbntcclxuICAgICAgICBsZXQgdmFsID0gdGhpcy5fbWFwW2tleV07XHJcbiAgICAgICAgcmV0dXJuICEhdmFsO1xyXG4gICAgfVxyXG5cclxuICAgIGZpbmlzaChrZXk6c3RyaW5nKXtcclxuICAgICAgICB0aGlzLl9tYXBba2V5XSA9ICAxO1xyXG4gICAgICAgIFdvcmxkLlN0b3JhZ2UubmV3YmllcyA9IHRoaXMudG9Kc29uKCk7XHJcbiAgICB9XHJcblxyXG4gICAgdG9Kc29uKCl7XHJcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMuX21hcCk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/info/PropInfo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3fd2b3Z2YFPp7jX7jvk4yqf', 'PropInfo');
// script/app/info/PropInfo.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("./World");
var PropInfo = /** @class */ (function () {
    function PropInfo(map) {
        this._map = null;
        this._map = map;
    }
    /** 过期时间 */
    PropInfo.prototype.expireTime = function (id) {
        return this._map[id];
    };
    /** 是否在使用中 */
    PropInfo.prototype.beUsing = function (id) {
        return this._map[id] && this._map[id] > new Date().getTime();
    };
    /** 使用 */
    PropInfo.prototype.use = function (id) {
        this._map[id] = new Date().getTime() + 60 * 60 * 1000;
        World_1.World.Storage.props = this.toJson();
    };
    PropInfo.prototype.toJson = function () {
        return JSON.stringify(this._map);
    };
    return PropInfo;
}());
exports.default = PropInfo;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2luZm8vUHJvcEluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLGlDQUE4QjtBQUU5QjtJQUNJLGtCQUFZLEdBQUc7UUFJUCxTQUFJLEdBQXVCLElBQUksQ0FBQztRQUhwQyxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztJQUNwQixDQUFDO0lBSUQsV0FBVztJQUNYLDZCQUFVLEdBQVYsVUFBVyxFQUFTO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsYUFBYTtJQUNiLDBCQUFPLEdBQVAsVUFBUSxFQUFTO1FBQ2QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNoRSxDQUFDO0lBRUQsU0FBUztJQUNULHNCQUFHLEdBQUgsVUFBSSxFQUFTO1FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsR0FBQyxFQUFFLEdBQUMsSUFBSSxDQUFDO1FBQ2xELGFBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUN4QyxDQUFDO0lBRUQseUJBQU0sR0FBTjtRQUNJLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUNMLGVBQUM7QUFBRCxDQTFCQSxBQTBCQyxJQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7V29ybGR9IGZyb20gXCIuL1dvcmxkXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9wSW5mb3tcclxuICAgIGNvbnN0cnVjdG9yKG1hcCl7XHJcbiAgICAgICAgdGhpcy5fbWFwID0gbWFwO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX21hcDpNYXA8bnVtYmVyLCBudW1iZXI+ID0gbnVsbDtcclxuXHJcbiAgICAvKiog6L+H5pyf5pe26Ze0ICovXHJcbiAgICBleHBpcmVUaW1lKGlkOm51bWJlcil7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21hcFtpZF07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOaYr+WQpuWcqOS9v+eUqOS4rSAqL1xyXG4gICAgYmVVc2luZyhpZDpudW1iZXIpOmJvb2xlYW57XHJcbiAgICAgICByZXR1cm4gdGhpcy5fbWFwW2lkXSAmJiB0aGlzLl9tYXBbaWRdID4gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOS9v+eUqCAqL1xyXG4gICAgdXNlKGlkOm51bWJlcil7XHJcbiAgICAgICAgdGhpcy5fbWFwW2lkXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgNjAqNjAqMTAwMDtcclxuICAgICAgICBXb3JsZC5TdG9yYWdlLnByb3BzID0gdGhpcy50b0pzb24oKTtcclxuICAgIH1cclxuXHJcbiAgICB0b0pzb24oKXtcclxuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy5fbWFwKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/info/Armory.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd4529RQIIBPsYekmld/nMb5', 'Armory');
// script/app/info/Armory.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("./World");
var ExcelConfig_1 = require("../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../config/ExcelTableNames");
var EMITTER_POWER_LEVEL = "powerLv";
var EMITTER_FIRE_POWER_LEVEL = "firePowerLv";
// const POWER_MULS = [1,2,2,4,2,4,6,6,6,6,6];
var PAYLOAD_MULS = [1, 1, 10, 2, 5, 10, 1, 1, 1, 1, 1];
/** 试用加50级 */
var TRIAL_ADD = 50;
/** 武器库 */
var Armory = /** @class */ (function () {
    function Armory(map) {
        this._map = null;
        this._weaponUpCfg = null;
        this._bulletUpCfg = null;
        this._map = map;
        this._weaponUpCfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp);
        this._bulletUpCfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.BulletUp);
    }
    /** 伤害加成 */
    Armory.prototype.hurtMulOf = function (emitter) {
        var baseMul = this._weaponUpCfg[World_1.World.Storage.ADLv - 1]['fight'];
        if (emitter == 1) {
            return baseMul;
        }
        var lv = this.levelOfEmitterPower(emitter);
        if (emitter == World_1.World.Storage.unlockGun) {
            lv += TRIAL_ADD;
            if (lv > this._weaponUpCfg.length) {
                lv = this._weaponUpCfg.length;
            }
        }
        return this._weaponUpCfg[lv - 1]['hurt_add'] * baseMul;
    };
    /** 弹容量累加 */
    Armory.prototype.payloadAddOf = function (emitter) {
        if (emitter == 1)
            return 0;
        var lv = this.levelOfEmitterFirePower(emitter);
        if (emitter == World_1.World.Storage.unlockGun) {
            lv += TRIAL_ADD;
            if (lv > this._weaponUpCfg.length) {
                lv = this._weaponUpCfg.length;
            }
        }
        return this._bulletUpCfg[lv - 1]["gun_" + ("000" + emitter).substr(-3)];
    };
    /** 发射频率加成 */
    Armory.prototype.freMulOf = function (emitter) {
        var index = 0;
        if (emitter == 1) {
            index = World_1.World.Storage.ADLv - 1;
        }
        else {
            var lv = this.levelOfEmitterFirePower(emitter);
            if (emitter == World_1.World.Storage.unlockGun) {
                lv += TRIAL_ADD;
                if (lv > this._weaponUpCfg.length) {
                    lv = this._weaponUpCfg.length;
                }
            }
            index = lv - 1;
        }
        return this._weaponUpCfg[index]['fre'];
    };
    /** 射程加成 */
    Armory.prototype.rangeMulOf = function (emitter) {
        if (emitter == 4 || emitter == 5) {
            var lv = this.levelOfEmitterPower(emitter);
            if (emitter == World_1.World.Storage.unlockGun) {
                lv += TRIAL_ADD;
                if (lv > this._weaponUpCfg.length) {
                    lv = this._weaponUpCfg.length;
                }
            }
            return this._weaponUpCfg[lv - 1]['range_add'];
        }
        else {
            return 1;
        }
    };
    /** 放大加成 */
    Armory.prototype.magnifyMul = function (emitter) {
        if (emitter == 2 || emitter == 9 || emitter == 10) {
            var lv = this.levelOfEmitterPower(emitter);
            if (emitter == World_1.World.Storage.unlockGun) {
                lv += TRIAL_ADD;
                if (lv > this._weaponUpCfg.length) {
                    lv = this._weaponUpCfg.length;
                }
            }
            return this._weaponUpCfg[lv - 1]['amp_add'];
        }
        else {
            return 1;
        }
    };
    /** 获取武器的威力加成 */
    Armory.prototype.levelOfEmitterPower = function (emitter) {
        var data = this._map[emitter];
        if (data) {
            return data[EMITTER_POWER_LEVEL];
        }
        else {
            return 1;
        }
    };
    /** 获取武器的火力加成 */
    Armory.prototype.levelOfEmitterFirePower = function (emitter) {
        var data = this._map[emitter];
        if (data) {
            return data[EMITTER_FIRE_POWER_LEVEL];
        }
        else {
            return 1;
        }
    };
    Armory.prototype.addLevelOfEmitterPower = function (emitter, add) {
        var data = this._map[emitter];
        if (!data) {
            data = {};
            data[EMITTER_POWER_LEVEL] = 1;
            data[EMITTER_FIRE_POWER_LEVEL] = 1;
            this._map[emitter] = data;
        }
        data[EMITTER_POWER_LEVEL] = data[EMITTER_POWER_LEVEL] + add;
        World_1.World.Storage.armory = this.toJson();
    };
    Armory.prototype.addLevelOfEmitterFirePower = function (emitter, add) {
        var data = this._map[emitter];
        if (!data) {
            data = {};
            data[EMITTER_POWER_LEVEL] = 1;
            data[EMITTER_FIRE_POWER_LEVEL] = 1;
            this._map[emitter] = data;
        }
        data[EMITTER_FIRE_POWER_LEVEL] = data[EMITTER_FIRE_POWER_LEVEL] + add;
        World_1.World.Storage.armory = this.toJson();
    };
    Armory.prototype.toJson = function () {
        return JSON.stringify(this._map);
    };
    return Armory;
}());
exports.default = Armory;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/info/World.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1fe1d3cS4ZOUpBrBhZxt6l/', 'World');
// script/app/info/World.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.World = void 0;
var LocalStorage_1 = require("../../../framework/persistence/LocalStorage");
var Network_1 = require("../network/Network");
var NetworkConfig_1 = require("../config/NetworkConfig");
var Armory_1 = require("./Armory");
var PropInfo_1 = require("./PropInfo");
var Newbies_1 = require("./Newbies");
var GameSupply_1 = require("../game/GameSupply");
var RecommendPropsController_1 = require("../home/RecommendPropsController");
var RecommendController_1 = require("../home/RecommendController");
var PropsItemController_1 = require("../home/PropsItemController");
var GameOver_1 = require("../game/GameOver");
var JackpotController_1 = require("../home/JackpotController");
var GameRelive_1 = require("../game/GameRelive");
var HomeController_1 = require("../home/HomeController");
/*
    视频事件记录
    1、道具推荐 【click】RecommendPropsController Use
    2、道具使用 【click】PropsItemController Use
    3、装备推荐 【click】RecommendController Use
    4、装备补给 【click】GameSupply UseSupply
    5、幸运大奖 【Click】GameOver onGameOverTake
    6、多倍金币 【click】JackpotController _takeIt     3
    7、复活 【click】GameRelive Relive
    8、高爆武器开局  【click】HomeController WeaponStart
*/
var World;
(function (World) {
    /** 能量最高值 */
    World.POWER_MAX = 999;
    /** 金币最高等级 */
    World.GOLDLV_MAX = 999;
    /** 日常收益最高等级 */
    World.DAYEARN_MAX = 999;
    /** 分享上限 */
    World.SHARE_REWARD_MAX = 100;
    // 调用方法
    var gameSupply = new GameSupply_1.default();
    var recommendPropsController = new RecommendPropsController_1.default();
    var recommendController = new RecommendController_1.default();
    var propsItemController = new PropsItemController_1.default();
    var gameOver = new GameOver_1.default();
    var jackpotController = new JackpotController_1.default();
    var gameRelive = new GameRelive_1.default();
    var homeController = new HomeController_1.default();
    var My = /** @class */ (function () {
        function My() {
        }
        Object.defineProperty(My, "serverTime", {
            get: function () {
                var t = new Date().getTime();
                return this._serverTime + t - this._localTime;
            },
            set: function (value) {
                this._localTime = new Date().getTime();
                this._serverTime = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(My, "armory", {
            get: function () {
                if (!this._armory) {
                    this._armory = new Armory_1.default(JSON.parse(World.Storage.armory));
                }
                return this._armory;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(My, "propInfo", {
            get: function () {
                if (!this._propInfo) {
                    this._propInfo = new PropInfo_1.default(JSON.parse(World.Storage.props));
                }
                return this._propInfo;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(My, "newbies", {
            get: function () {
                if (!this._newbies) {
                    this._newbies = new Newbies_1.default(JSON.parse(World.Storage.newbies));
                }
                return this._newbies;
            },
            enumerable: false,
            configurable: true
        });
        /** 玩家id */
        My.playerId = 0;
        /** 皮肤id */
        My.skinId = 1;
        /** 道具数量 */
        // public static diamond:number = 0;
        // /** 最高分 */
        // public static bestScore:number = 0;
        //
        // /** 当前关卡 */
        // public static level = 30;
        /** 本地时间 */
        My._localTime = 0;
        /** 服务器时间 */
        My._serverTime = 0;
        /** 武器库 */
        My._armory = null;
        /** 道具库 */
        My._propInfo = null;
        /** 新手引导 */
        My._newbies = null;
        return My;
    }());
    World.My = My;
    /** 更新Storage的key */
    World.updateStorageKeys = [];
    World.pushStorageKeys = [];
    /******************* 以下数据为客户端自己管理，初始值就是默认值 **********************/
    var Storage = /** @class */ (function () {
        function Storage() {
        }
        Storage.init = function () {
            var _this = this;
            var updataKVData = LocalStorage_1.LocalStorage.getString("updateKVData");
            if (updataKVData != null && updataKVData != "") {
                World.updateStorageKeys = JSON.parse(updataKVData);
                World.updateStorageKeys.forEach(function (value) {
                    if (typeof _this["_" + value] == "number") {
                        _this["_" + value] = LocalStorage_1.LocalStorage.getNumber(value);
                    }
                    else if (typeof _this["_" + value] == "string") {
                        _this["_" + value] = LocalStorage_1.LocalStorage.getString(value);
                    }
                    else if (typeof _this["_" + value] == "boolean") {
                        _this["_" + value] = LocalStorage_1.LocalStorage.getBoolean(value);
                    }
                    else {
                        console.error("key=" + value + " type=" + typeof _this["_" + value]);
                    }
                });
            }
            // 测试
            gameSupply.onTest();
            this.initVideoAd();
        };
        // 初始化激励视频
        Storage.initVideoAd = function () {
            var _this = this;
            console.log("initVideoAd");
            this._videoAd = wx.createRewardedVideoAd({
                adUnitId: "adunit-82fe18506461f029"
            });
            this._videoAd.onError(function (res) {
                console.log("videoAd onError", res);
            });
            this._videoAd.onClose(function (res) {
                if (res && res.isEnded || res === undefined) {
                    _this.videoAd_do();
                }
                else {
                    // 关闭
                }
            });
        };
        // 展示激励视频
        Storage.videoAd_show = function () {
            var _this = this;
            console.log("videoAd_show");
            this._videoAd.show().catch(function () {
                // 失败重试
                _this._videoAd.load()
                    .then(function () { return _this._videoAd.show(); })
                    .catch(function (err) {
                    _this.videoAd_do();
                    console.log('激励视频 广告显示失败', err);
                });
            });
            this._videoAd.load();
        };
        // 视频处理事件
        Storage.videoAd_do = function () {
            console.log("videoAd_do:", this._videoSign);
            if (this._videoSign == 1) {
                cc.game.emit("video_1");
            }
            else if (this._videoSign == 2) {
                cc.game.emit("video_2");
            }
            else if (this._videoSign == 3) {
                cc.game.emit("video_3");
            }
            else if (this._videoSign == 4) {
                cc.game.emit("video_4");
            }
            else if (this._videoSign == 5) {
                cc.game.emit("video_5");
            }
            else if (this._videoSign == 6) {
                cc.game.emit("video_6");
            }
            else if (this._videoSign == 7) {
                cc.game.emit("video_7");
            }
            else if (this._videoSign == 8) {
                cc.game.emit("video_8");
            }
            this._videoSign = 0;
        };
        Storage.allKeys = function () {
            var keys = [];
            for (var key in Storage) {
                if (key.startsWith('_')) {
                    var k = key.substring(1);
                    keys.push(k);
                }
            }
            return keys;
        };
        Storage.updateKVData = function (key, value) {
            if (!World.updateStorageKeys.includes(key)) {
                World.updateStorageKeys.push(key);
            }
            if (typeof value == "number") {
                LocalStorage_1.LocalStorage.setNumber(key, value);
            }
            else if (typeof value == "boolean") {
                LocalStorage_1.LocalStorage.setBoolean(key, value);
            }
            else if (typeof value == "string") {
                LocalStorage_1.LocalStorage.setString(key, value);
            }
            LocalStorage_1.LocalStorage.setString("updateKVData", JSON.stringify(World.updateStorageKeys.concat(World.pushStorageKeys.filter(function (value1) { return !World.updateStorageKeys.includes(value1); }))));
            cc.find('Canvas').emit("UpdateStorage", key);
            if (NetworkConfig_1.NetworkConfig.connectServer) {
                this.modifyCount++;
                if (this.modifyCount > this.maxModify) {
                    this.modifyCount = 0;
                    Network_1.default.pushStorage();
                }
            }
        };
        Object.defineProperty(Storage, "gameLevel", {
            /** getter */
            get: function () {
                return this._gameLevel;
            },
            set: function (value) {
                if (this._gameLevel != value) {
                    this._gameLevel = value;
                    this.updateKVData("gameLevel", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "goldCount", {
            get: function () {
                return this._goldCount;
            },
            /**  setter  */
            set: function (value) {
                if (this._goldCount != value) {
                    this._goldCount = value;
                    this.updateKVData("goldCount", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "diamondCount", {
            get: function () {
                return this._diamondCount;
            },
            set: function (value) {
                if (this._diamondCount != value) {
                    this._diamondCount = value;
                    this.updateKVData("diamondCount", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "goldLv", {
            get: function () {
                return this._goldLv;
            },
            set: function (value) {
                if (this._goldLv != value) {
                    this._goldLv = value;
                    this.updateKVData("goldLv", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "dayEarnLv", {
            get: function () {
                return this._dayEarnLv;
            },
            set: function (value) {
                if (this._dayEarnLv != value) {
                    this._dayEarnLv = value;
                    this.updateKVData("dayEarnLv", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "power", {
            get: function () {
                return this._power;
            },
            set: function (value) {
                if (this._power != value) {
                    if (value > World.POWER_MAX) {
                        value = World.POWER_MAX;
                    }
                    this._power = value;
                    this.updateKVData("power", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "powerModifyTime", {
            get: function () {
                return this._powerModifyTime;
            },
            set: function (value) {
                if (this._powerModifyTime != value) {
                    this._powerModifyTime = value;
                    this.updateKVData("powerModifyTime", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "dayEarnTotalModifyTime", {
            get: function () {
                return this._dayEarnTotalModifyTime;
            },
            set: function (value) {
                if (this._dayEarnTotalModifyTime != value) {
                    this._dayEarnTotalModifyTime = value;
                    this.updateKVData("dayEarnTotalModifyTime", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "dayEarnExpireTime", {
            get: function () {
                return this._dayEarnExpireTime;
            },
            set: function (value) {
                if (this._dayEarnExpireTime != value) {
                    this._dayEarnExpireTime = value;
                    this.updateKVData("dayEarnExpireTime", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "dayEarnTotal", {
            get: function () {
                return this._dayEarnTotal;
            },
            set: function (value) {
                if (this._dayEarnTotal != value) {
                    this._dayEarnTotal = value;
                    this.dayEarnTotalModifyTime = World.My.serverTime;
                    this.updateKVData("dayEarnTotal", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "task", {
            get: function () {
                return this._task;
            },
            set: function (value) {
                if (this._task != value) {
                    this._task = value;
                    this.updateKVData("task", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "gameLucky", {
            get: function () {
                return this._gameLucky;
            },
            set: function (value) {
                if (this._gameLucky != value) {
                    this._gameLucky = value;
                    this.updateKVData("gameLucky", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "gameEnergy", {
            get: function () {
                return this._gameEnergy;
            },
            set: function (value) {
                if (this._gameEnergy != value) {
                    this._gameEnergy = value;
                    this.updateKVData("gameEnergy", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "shakeOpen", {
            get: function () {
                return this._shakeOpen;
            },
            set: function (value) {
                if (this._shakeOpen != value) {
                    this._shakeOpen = value;
                    this.updateKVData("shakeOpen", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "armory", {
            get: function () {
                return this._armory;
            },
            set: function (value) {
                if (this._armory != value) {
                    this._armory = value;
                    this.updateKVData("armory", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "HpLv", {
            get: function () {
                return this._HpLv;
            },
            set: function (value) {
                if (this._HpLv != value) {
                    this._HpLv = value;
                    this.updateKVData("HpLv", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "ADLv", {
            get: function () {
                return this._ADLv;
            },
            set: function (value) {
                if (this._ADLv != value) {
                    this._ADLv = value;
                    this.updateKVData("ADLv", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "passLuckyCount", {
            get: function () {
                return this._passLuckyCount;
            },
            set: function (value) {
                if (this._passLuckyCount != value) {
                    this._passLuckyCount = value;
                    this.updateKVData("passLuckyCount", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "props", {
            get: function () {
                return this._props;
            },
            set: function (value) {
                if (this._props != value) {
                    this._props = value;
                    this.updateKVData("props", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "newbies", {
            get: function () {
                return this._newbies;
            },
            set: function (value) {
                if (this._newbies != value) {
                    this._newbies = value;
                    this.updateKVData("newbies", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(Storage, "unlockGun", {
            get: function () {
                return this._unlockGun;
            },
            set: function (value) {
                if (this._unlockGun != value) {
                    this._unlockGun = value;
                    this.updateKVData("unlockGun", value);
                }
            },
            enumerable: false,
            configurable: true
        });
        /** 关卡 */
        Storage._gameLevel = 1;
        /** 金币数量 */
        Storage._goldCount = 0;
        /** 钻石数量 */
        Storage._diamondCount = 0;
        /** 金币价值等级 */
        Storage._goldLv = 1;
        /** 日常收益等级 */
        Storage._dayEarnLv = 1;
        /** 体力 */
        Storage._power = 120;
        /** 体力结算时间 */
        Storage._powerModifyTime = 0;
        /** 日常收益结算时间　*/
        Storage._dayEarnTotalModifyTime = 0;
        /** 日常收益到期时间 */
        Storage._dayEarnExpireTime = 0;
        /** 日常总收益 */
        Storage._dayEarnTotal = 0;
        /** 任务 */
        Storage._task = "{}";
        /**　游戏中转盘数据 */
        Storage._gameLucky = "{\"time\":0,\"num\":0}";
        /** 游戏中的能量 */
        Storage._gameEnergy = 0;
        /** 震动开关 */
        Storage._shakeOpen = true;
        /** 新手引导开关 */
        Storage._newbies = "{}";
        Storage.modifyCount = 0;
        Storage.maxModify = 10;
        /** 生命力 */
        Storage._HpLv = 1;
        /** 战斗力 */
        Storage._ADLv = 1;
        /** 武器库 */
        Storage._armory = "{}";
        /** lucky进度条 */
        Storage._passLuckyCount = 0;
        /** 道具有效时间 */
        Storage._props = "{}";
        /** 解锁新枪(正数表示解锁新枪，负数表示已经解锁过的新枪，0表示初始状态) */
        Storage._unlockGun = 0;
        /* 激励视频 */
        Storage._videoAd = null;
        /* 视频事件标记 */
        Storage._videoSign = 0;
        return Storage;
    }());
    World.Storage = Storage;
})(World = exports.World || (exports.World = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/TopController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '60d27bwvCFAMqFkoQdcCoGl', 'TopController');
// script/app/home/TopController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var World_1 = require("../info/World");
var Extend_1 = require("../../../framework/extend/Extend");
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var TopController = /** @class */ (function (_super) {
    __extends(TopController, _super);
    function TopController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.goldLabel = null;
        _this.lvLabels = [];
        return _this;
    }
    TopController.prototype.init = function () {
        this.lvLabels.forEach(function (value, index) { return value.string = "<b><outline color=#1e1e1e width=3>" + (World_1.World.Storage.gameLevel - 1 + index) + "</outline></b>"; });
        if (World_1.World.Storage.gameLevel < 2) {
            this.lvLabels[0].node.getParent().active = false;
        }
        this.updateView();
    };
    TopController.prototype.onLoad = function () {
        Facade_1.default.canvasNode.on("UpdateStorage", this.onUpdateStorageEvent, this);
        this.init();
    };
    TopController.prototype.onDestroy = function () {
        Facade_1.default.canvasNode.off("UpdateStorage", this.onUpdateStorageEvent, this);
    };
    TopController.prototype.onUpdateStorageEvent = function (key) {
        if (key == "power") {
        }
        else if (key == "goldCount") {
            this.goldLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(World_1.World.Storage.goldCount) + "</outline></b>";
        }
        else if (key == "diamondCount") {
        }
    };
    TopController.prototype.updateView = function () {
        this.goldLabel.string = "<b><outline color=#1e1e1e width=3>" + Extend_1.ext.shortFormat(World_1.World.Storage.goldCount) + "</outline></b>";
    };
    TopController.prototype.onClickPlus = function (vent, data) {
        return __awaiter(this, void 0, void 0, function () {
            var node, exchangeController;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log("【click】TopController Plus");
                        data = parseInt(data);
                        return [4 /*yield*/, Facade_1.default.executeCommand("OpenViewCommand", "prefab/exchange")];
                    case 1:
                        node = (_a.sent())[0];
                        exchangeController = node.getComponent("ExchangeController");
                        exchangeController.type = data;
                        return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        property(cc.RichText)
    ], TopController.prototype, "goldLabel", void 0);
    __decorate([
        property(cc.RichText)
    ], TopController.prototype, "lvLabels", void 0);
    TopController = __decorate([
        ccclass
    ], TopController);
    return TopController;
}(cc.Component));
exports.default = TopController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvVG9wQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsdUNBQW9DO0FBQ3BDLDJEQUFxRDtBQUNyRCwyREFBc0Q7QUFJaEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBMkMsaUNBQVk7SUFBdkQ7UUFBQSxxRUE2Q0M7UUExQ0csZUFBUyxHQUFlLElBQUksQ0FBQztRQUc3QixjQUFRLEdBQWtCLEVBQUUsQ0FBQzs7SUF1Q2pDLENBQUM7SUFyQ0csNEJBQUksR0FBSjtRQUNJLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQUMsS0FBSyxFQUFFLEtBQUssSUFBSyxPQUFBLEtBQUssQ0FBQyxNQUFNLEdBQUcsd0NBQXFDLGFBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFDLENBQUMsR0FBQyxLQUFLLG9CQUFnQixFQUFuRyxDQUFtRyxDQUFDLENBQUM7UUFDN0ksSUFBSSxhQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxDQUFDLEVBQUM7WUFDNUIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztTQUNwRDtRQUNELElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsOEJBQU0sR0FBTjtRQUNJLGdCQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRUQsaUNBQVMsR0FBVDtRQUNJLGdCQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCw0Q0FBb0IsR0FBcEIsVUFBcUIsR0FBVTtRQUMzQixJQUFJLEdBQUcsSUFBSSxPQUFPLEVBQUM7U0FDbEI7YUFBTSxJQUFJLEdBQUcsSUFBSSxXQUFXLEVBQUM7WUFDMUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsdUNBQXFDLFlBQUcsQ0FBQyxXQUFXLENBQUMsYUFBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsbUJBQWdCLENBQUM7U0FDekg7YUFBTSxJQUFJLEdBQUcsSUFBSSxjQUFjLEVBQUM7U0FDaEM7SUFDTCxDQUFDO0lBRUQsa0NBQVUsR0FBVjtRQUNJLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLHVDQUFxQyxZQUFHLENBQUMsV0FBVyxDQUFDLGFBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLG1CQUFnQixDQUFDO0lBQzFILENBQUM7SUFFSyxtQ0FBVyxHQUFqQixVQUFrQixJQUFJLEVBQUUsSUFBSTs7Ozs7O3dCQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDLENBQUE7d0JBRXhDLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ1QscUJBQU0sZ0JBQU0sQ0FBQyxjQUFjLENBQUMsaUJBQWlCLEVBQUUsaUJBQWlCLENBQUMsRUFBQTs7d0JBQXpFLElBQUksR0FBSSxDQUFBLFNBQWlFLENBQUEsR0FBckU7d0JBQ0wsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO3dCQUNqRSxrQkFBa0IsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDOzs7OztLQUNsQztJQXpDRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDO29EQUNPO0lBRzdCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUM7bURBQ087SUFOWixhQUFhO1FBRGpDLE9BQU87T0FDYSxhQUFhLENBNkNqQztJQUFELG9CQUFDO0NBN0NELEFBNkNDLENBN0MwQyxFQUFFLENBQUMsU0FBUyxHQTZDdEQ7a0JBN0NvQixhQUFhIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7V29ybGR9IGZyb20gXCIuLi9pbmZvL1dvcmxkXCI7XHJcbmltcG9ydCB7ZXh0fSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2V4dGVuZC9FeHRlbmRcIjtcclxuaW1wb3J0IEZhY2FkZSBmcm9tIFwiLi4vLi4vLi4vZnJhbWV3b3JrL2ZhY2FkZS9GYWNhZGVcIjtcclxuaW1wb3J0IEV4Y2hhbmdlQ29udHJvbGxlciBmcm9tIFwiLi9FeGNoYW5nZUNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IExvYWRpbmdDb21tYW5kIGZyb20gXCIuL0xvYWRpbmdDb21tYW5kXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvcENvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5SaWNoVGV4dClcclxuICAgIGdvbGRMYWJlbDpjYy5SaWNoVGV4dCA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLlJpY2hUZXh0KVxyXG4gICAgbHZMYWJlbHM6IFtjYy5SaWNoVGV4dF0gPSBbXTtcclxuXHJcbiAgICBpbml0KCl7XHJcbiAgICAgICAgdGhpcy5sdkxhYmVscy5mb3JFYWNoKCh2YWx1ZSwgaW5kZXgpID0+IHZhbHVlLnN0cmluZyA9IGA8Yj48b3V0bGluZSBjb2xvcj0jMWUxZTFlIHdpZHRoPTM+JHtXb3JsZC5TdG9yYWdlLmdhbWVMZXZlbC0xK2luZGV4fTwvb3V0bGluZT48L2I+YCk7XHJcbiAgICAgICAgaWYgKFdvcmxkLlN0b3JhZ2UuZ2FtZUxldmVsIDwgMil7XHJcbiAgICAgICAgICAgIHRoaXMubHZMYWJlbHNbMF0ubm9kZS5nZXRQYXJlbnQoKS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy51cGRhdGVWaWV3KCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICBGYWNhZGUuY2FudmFzTm9kZS5vbihcIlVwZGF0ZVN0b3JhZ2VcIiwgdGhpcy5vblVwZGF0ZVN0b3JhZ2VFdmVudCwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5pbml0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EZXN0cm95KCl7XHJcbiAgICAgICAgRmFjYWRlLmNhbnZhc05vZGUub2ZmKFwiVXBkYXRlU3RvcmFnZVwiLCB0aGlzLm9uVXBkYXRlU3RvcmFnZUV2ZW50LCB0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZVN0b3JhZ2VFdmVudChrZXk6c3RyaW5nKXtcclxuICAgICAgICBpZiAoa2V5ID09IFwicG93ZXJcIil7XHJcbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT0gXCJnb2xkQ291bnRcIil7XHJcbiAgICAgICAgICAgIHRoaXMuZ29sZExhYmVsLnN0cmluZyA9IGA8Yj48b3V0bGluZSBjb2xvcj0jMWUxZTFlIHdpZHRoPTM+JHtleHQuc2hvcnRGb3JtYXQoV29ybGQuU3RvcmFnZS5nb2xkQ291bnQpfTwvb3V0bGluZT48L2I+YDtcclxuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PSBcImRpYW1vbmRDb3VudFwiKXtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlVmlldygpIHtcclxuICAgICAgICB0aGlzLmdvbGRMYWJlbC5zdHJpbmcgPSBgPGI+PG91dGxpbmUgY29sb3I9IzFlMWUxZSB3aWR0aD0zPiR7ZXh0LnNob3J0Rm9ybWF0KFdvcmxkLlN0b3JhZ2UuZ29sZENvdW50KX08L291dGxpbmU+PC9iPmA7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgb25DbGlja1BsdXModmVudCwgZGF0YSl7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLjgJBjbGlja+OAkVRvcENvbnRyb2xsZXIgUGx1c1wiKVxyXG5cclxuICAgICAgICBkYXRhID0gcGFyc2VJbnQoZGF0YSk7XHJcbiAgICAgICAgbGV0IFtub2RlXSA9IGF3YWl0IEZhY2FkZS5leGVjdXRlQ29tbWFuZChcIk9wZW5WaWV3Q29tbWFuZFwiLCBcInByZWZhYi9leGNoYW5nZVwiKTtcclxuICAgICAgICBsZXQgZXhjaGFuZ2VDb250cm9sbGVyID0gbm9kZS5nZXRDb21wb25lbnQoXCJFeGNoYW5nZUNvbnRyb2xsZXJcIik7XHJcbiAgICAgICAgZXhjaGFuZ2VDb250cm9sbGVyLnR5cGUgPSBkYXRhO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/interceptor/OpenViewInterceptor.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '27753peuxhLZrjjPlvjamxu', 'OpenViewInterceptor');
// script/app/interceptor/OpenViewInterceptor.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../../../framework/facade/Facade");
var LifeCycle_1 = require("../../../framework/component/LifeCycle");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BLOCK_LAYER_NAME_PREV = "blockLayer==>";
var OpenViewInterceptor = /** @class */ (function () {
    function OpenViewInterceptor() {
    }
    OpenViewInterceptor_1 = OpenViewInterceptor;
    OpenViewInterceptor.onceAwait = function (viewPath, event) {
        return __awaiter(this, void 0, void 0, function () {
            var blockLayer;
            return __generator(this, function (_a) {
                blockLayer = Facade_1.default.canvasNode.getChildByName("" + (BLOCK_LAYER_NAME_PREV + viewPath));
                if (blockLayer) {
                    return [2 /*return*/, blockLayer.onceAwait(event)];
                }
                else {
                    console.error("not found view==>" + viewPath);
                }
                return [2 /*return*/];
            });
        });
    };
    /**
     * 打开view之前处理
     * @param args 打窗口的参数
     *
     * 说明：
     * 1.如果要给阻塞层添加灰色的背景，则可以在preHandle中给this.blockLayer.addComponent(cc.Sprite);
     * 2.如果要在两个界面间插入一个界面，则可以在此处拦截并阻塞消息，直到插入的界面关闭(await Facade.canvasNode.onceAwait(xxx));
     * 3.如果要在打开窗口和其他事件同时进行的任务。比如打开窗口的同时请求网络数据，等网络数据到达时刷新界面。(Promise.all([p1, p2]));
     * */
    OpenViewInterceptor.prototype.preHandle = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var colorPrefab, blockLayer, colorSpriteFrame;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, cc.loader.loadResAwait("prefab/color", cc.Prefab)];
                                case 1:
                                    colorPrefab = _a.sent();
                                    blockLayer = new cc.Node("" + (BLOCK_LAYER_NAME_PREV + args[0]));
                                    blockLayer.on(cc.Node.EventType.TOUCH_START, function (event) {
                                        console.log("\u70B9\u51FB\u4E86\u963B\u585E\u5C42touch start=>" + blockLayer.name);
                                    });
                                    blockLayer.addComponent(cc.BlockInputEvents);
                                    colorSpriteFrame = cc.instantiate(colorPrefab).getComponent(cc.Sprite).spriteFrame;
                                    blockLayer.addComponent(cc.Sprite).spriteFrame = colorSpriteFrame;
                                    blockLayer.color = cc.Color.BLACK;
                                    blockLayer.opacity = 0;
                                    blockLayer.setContentSize(cc.view.getVisibleSize());
                                    Facade_1.default.canvasNode.addChild(blockLayer);
                                    blockLayer.runAction(cc.fadeTo(1, 150));
                                    resolve(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    /**
     * 打开view之后处理
     * @param node 打开窗口的node
     * @param args 打开窗口的参数
     *
     * 说明：
     * 1.如果要处理点击阻塞层就关闭窗口，则在postHandle中监听this.blockLayer的Touch事件即可处理.
     * 2.如果要添加打开窗口的动画，则在postHandle中处理，如调用this.moveDownToFocus(res)等方法
     * */
    OpenViewInterceptor.prototype.postHandle = function (node) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var blockLayer, lifeCycle;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    blockLayer = Facade_1.default.canvasNode.getChildByName("" + (BLOCK_LAYER_NAME_PREV + args[0]));
                                    blockLayer.emit(OpenViewInterceptor_1.BlockLayerEvent.viewCreateFinish, node);
                                    lifeCycle = node.addComponent(LifeCycle_1.default);
                                    lifeCycle.addCall("onDestroy", function () {
                                        blockLayer.emit(OpenViewInterceptor_1.BlockLayerEvent.destroy);
                                        blockLayer.destroy();
                                    });
                                    if (!(args[0] == "prefab/task")) return [3 /*break*/, 2];
                                    cc.director.getScene().getChildByName('top').active = true;
                                    return [4 /*yield*/, this.moveDownToFocus(node)];
                                case 1:
                                    _a.sent();
                                    return [3 /*break*/, 3];
                                case 2:
                                    if (args[0] == 'prefab/gameover') {
                                        cc.director.getScene().getChildByName('top').active = true;
                                    }
                                    _a.label = 3;
                                case 3:
                                    blockLayer.emit(OpenViewInterceptor_1.BlockLayerEvent.viewDisplayFinish, node);
                                    resolve();
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    /** 打开窗口的特效 */
    /** 从屏幕下方弹出 */
    OpenViewInterceptor.prototype.moveDownToFocus = function (node) {
        return __awaiter(this, void 0, void 0, function () {
            var x, y;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        x = node.x;
                        y = node.y;
                        node.y = y - cc.view.getVisibleSize().height;
                        return [4 /*yield*/, node.runActionAwait(cc.moveTo(1.2, x, y).easing(cc.easeElasticOut(0.6)))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    var OpenViewInterceptor_1;
    OpenViewInterceptor.BlockLayerEvent = {
        destroy: "destroy",
        viewCreateFinish: "viewCreateFinish",
        viewDisplayFinish: "viewDisplayFinish",
    };
    OpenViewInterceptor = OpenViewInterceptor_1 = __decorate([
        ccclass
    ], OpenViewInterceptor);
    return OpenViewInterceptor;
}());
exports.default = OpenViewInterceptor;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/home/SettingsController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '70d0e19OftKZJUlHUMeABhq', 'SettingsController');
// script/app/home/SettingsController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Music_1 = require("../../../framework/audio/Music");
var World_1 = require("../info/World");
var View_1 = require("../../../framework/component/View");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var SettingsController = /** @class */ (function (_super) {
    __extends(SettingsController, _super);
    function SettingsController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.soundToggle = null;
        _this.shakeToggle = null;
        return _this;
    }
    // LIFE-CYCLE CALLBACKS:
    SettingsController.prototype.onLoad = function () {
        this.soundToggle.isChecked = Music_1.Music.getMusicOpen();
        this.shakeToggle.isChecked = World_1.World.Storage.shakeOpen;
        var sfxCheckEventHandler = new cc.Component.EventHandler();
        sfxCheckEventHandler.target = this.node; //这个 node 节点是你的事件处理代码组件所属的节点
        sfxCheckEventHandler.component = "SettingsController";
        sfxCheckEventHandler.handler = "sfxToggleCallback";
        sfxCheckEventHandler.customEventData = "";
        this.soundToggle.checkEvents.push(sfxCheckEventHandler);
        var shakeCheckEventHandler = new cc.Component.EventHandler();
        shakeCheckEventHandler.target = this.node; //这个 node 节点是你的事件处理代码组件所属的节点
        shakeCheckEventHandler.component = "SettingsController";
        shakeCheckEventHandler.handler = "shakeToggleCallback";
        shakeCheckEventHandler.customEventData = "";
        this.shakeToggle.checkEvents.push(shakeCheckEventHandler);
    };
    SettingsController.prototype.sfxToggleCallback = function (event, data) {
        if (this.soundToggle.isChecked != Music_1.Music.getMusicOpen()) {
            View_1.default.executeClickSoundCommand(event, data);
            Music_1.Music.setMusicOpen(!Music_1.Music.getMusicOpen());
            Music_1.Music.sfxOpen = Music_1.Music.getMusicOpen();
            Music_1.Music.persistence();
            // Facade.canvasNode.emit("SwitchMusic", Music.getMusicOpen());
        }
    };
    SettingsController.prototype.shakeToggleCallback = function (event, data) {
        if (this.shakeToggle.isChecked != World_1.World.Storage.shakeOpen) {
            View_1.default.executeClickSoundCommand(event, data);
            World_1.World.Storage.shakeOpen = !World_1.World.Storage.shakeOpen;
        }
    };
    __decorate([
        property(cc.Toggle)
    ], SettingsController.prototype, "soundToggle", void 0);
    __decorate([
        property(cc.Toggle)
    ], SettingsController.prototype, "shakeToggle", void 0);
    SettingsController = __decorate([
        ccclass
    ], SettingsController);
    return SettingsController;
}(cc.Component));
exports.default = SettingsController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2hvbWUvU2V0dGluZ3NDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSx3REFBcUQ7QUFDckQsdUNBQW9DO0FBQ3BDLDBEQUFxRDtBQUcvQyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFnRCxzQ0FBWTtJQUE1RDtRQUFBLHFFQStDQztRQTVDRyxpQkFBVyxHQUFhLElBQUksQ0FBQztRQUc3QixpQkFBVyxHQUFhLElBQUksQ0FBQzs7SUF5Q2pDLENBQUM7SUF2Q0csd0JBQXdCO0lBRXhCLG1DQUFNLEdBQU47UUFDSSxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsR0FBRyxhQUFLLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDbEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEdBQUcsYUFBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDckQsSUFBSSxvQkFBb0IsR0FBRyxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDM0Qsb0JBQW9CLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyw0QkFBNEI7UUFDckUsb0JBQW9CLENBQUMsU0FBUyxHQUFHLG9CQUFvQixDQUFDO1FBQ3RELG9CQUFvQixDQUFDLE9BQU8sR0FBRyxtQkFBbUIsQ0FBQztRQUNuRCxvQkFBb0IsQ0FBQyxlQUFlLEdBQUcsRUFBRSxDQUFDO1FBRTFDLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBR3hELElBQUksc0JBQXNCLEdBQUcsSUFBSSxFQUFFLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQzdELHNCQUFzQixDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsNEJBQTRCO1FBQ3ZFLHNCQUFzQixDQUFDLFNBQVMsR0FBRyxvQkFBb0IsQ0FBQztRQUN4RCxzQkFBc0IsQ0FBQyxPQUFPLEdBQUcscUJBQXFCLENBQUM7UUFDdkQsc0JBQXNCLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQztRQUU1QyxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsOENBQWlCLEdBQWpCLFVBQWtCLEtBQUssRUFBRSxJQUFJO1FBQ3pCLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLElBQUksYUFBSyxDQUFDLFlBQVksRUFBRSxFQUFDO1lBQ25ELGNBQUksQ0FBQyx3QkFBd0IsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDM0MsYUFBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLGFBQUssQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO1lBQzFDLGFBQUssQ0FBQyxPQUFPLEdBQUcsYUFBSyxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQ3JDLGFBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNwQiwrREFBK0Q7U0FDbEU7SUFDTCxDQUFDO0lBRUQsZ0RBQW1CLEdBQW5CLFVBQW9CLEtBQUssRUFBRSxJQUFJO1FBQzNCLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLElBQUksYUFBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUM7WUFDdEQsY0FBSSxDQUFDLHdCQUF3QixDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztZQUMzQyxhQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxDQUFDLGFBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1NBQ3REO0lBQ0wsQ0FBQztJQTNDRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOzJEQUNTO0lBRzdCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7MkRBQ1M7SUFOWixrQkFBa0I7UUFEdEMsT0FBTztPQUNhLGtCQUFrQixDQStDdEM7SUFBRCx5QkFBQztDQS9DRCxBQStDQyxDQS9DK0MsRUFBRSxDQUFDLFNBQVMsR0ErQzNEO2tCQS9Db0Isa0JBQWtCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7TXVzaWN9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvYXVkaW8vTXVzaWNcIjtcclxuaW1wb3J0IHtXb3JsZH0gZnJvbSBcIi4uL2luZm8vV29ybGRcIjtcclxuaW1wb3J0IFZpZXcgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9jb21wb25lbnQvVmlld1wiO1xyXG5pbXBvcnQgRmFjYWRlIGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvZmFjYWRlL0ZhY2FkZVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXR0aW5nc0NvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ub2dnbGUpXHJcbiAgICBzb3VuZFRvZ2dsZTpjYy5Ub2dnbGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ub2dnbGUpXHJcbiAgICBzaGFrZVRvZ2dsZTpjYy5Ub2dnbGUgPSBudWxsO1xyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy5zb3VuZFRvZ2dsZS5pc0NoZWNrZWQgPSBNdXNpYy5nZXRNdXNpY09wZW4oKTtcclxuICAgICAgICB0aGlzLnNoYWtlVG9nZ2xlLmlzQ2hlY2tlZCA9IFdvcmxkLlN0b3JhZ2Uuc2hha2VPcGVuO1xyXG4gICAgICAgIGxldCBzZnhDaGVja0V2ZW50SGFuZGxlciA9IG5ldyBjYy5Db21wb25lbnQuRXZlbnRIYW5kbGVyKCk7XHJcbiAgICAgICAgc2Z4Q2hlY2tFdmVudEhhbmRsZXIudGFyZ2V0ID0gdGhpcy5ub2RlOyAvL+i/meS4qiBub2RlIOiKgueCueaYr+S9oOeahOS6i+S7tuWkhOeQhuS7o+eggee7hOS7tuaJgOWxnueahOiKgueCuVxyXG4gICAgICAgIHNmeENoZWNrRXZlbnRIYW5kbGVyLmNvbXBvbmVudCA9IFwiU2V0dGluZ3NDb250cm9sbGVyXCI7XHJcbiAgICAgICAgc2Z4Q2hlY2tFdmVudEhhbmRsZXIuaGFuZGxlciA9IFwic2Z4VG9nZ2xlQ2FsbGJhY2tcIjtcclxuICAgICAgICBzZnhDaGVja0V2ZW50SGFuZGxlci5jdXN0b21FdmVudERhdGEgPSBcIlwiO1xyXG5cclxuICAgICAgICB0aGlzLnNvdW5kVG9nZ2xlLmNoZWNrRXZlbnRzLnB1c2goc2Z4Q2hlY2tFdmVudEhhbmRsZXIpO1xyXG5cclxuXHJcbiAgICAgICAgbGV0IHNoYWtlQ2hlY2tFdmVudEhhbmRsZXIgPSBuZXcgY2MuQ29tcG9uZW50LkV2ZW50SGFuZGxlcigpO1xyXG4gICAgICAgIHNoYWtlQ2hlY2tFdmVudEhhbmRsZXIudGFyZ2V0ID0gdGhpcy5ub2RlOyAvL+i/meS4qiBub2RlIOiKgueCueaYr+S9oOeahOS6i+S7tuWkhOeQhuS7o+eggee7hOS7tuaJgOWxnueahOiKgueCuVxyXG4gICAgICAgIHNoYWtlQ2hlY2tFdmVudEhhbmRsZXIuY29tcG9uZW50ID0gXCJTZXR0aW5nc0NvbnRyb2xsZXJcIjtcclxuICAgICAgICBzaGFrZUNoZWNrRXZlbnRIYW5kbGVyLmhhbmRsZXIgPSBcInNoYWtlVG9nZ2xlQ2FsbGJhY2tcIjtcclxuICAgICAgICBzaGFrZUNoZWNrRXZlbnRIYW5kbGVyLmN1c3RvbUV2ZW50RGF0YSA9IFwiXCI7XHJcblxyXG4gICAgICAgIHRoaXMuc2hha2VUb2dnbGUuY2hlY2tFdmVudHMucHVzaChzaGFrZUNoZWNrRXZlbnRIYW5kbGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBzZnhUb2dnbGVDYWxsYmFjayhldmVudCwgZGF0YSl7XHJcbiAgICAgICAgaWYgKHRoaXMuc291bmRUb2dnbGUuaXNDaGVja2VkICE9IE11c2ljLmdldE11c2ljT3BlbigpKXtcclxuICAgICAgICAgICAgVmlldy5leGVjdXRlQ2xpY2tTb3VuZENvbW1hbmQoZXZlbnQsIGRhdGEpO1xyXG4gICAgICAgICAgICBNdXNpYy5zZXRNdXNpY09wZW4oIU11c2ljLmdldE11c2ljT3BlbigpKTtcclxuICAgICAgICAgICAgTXVzaWMuc2Z4T3BlbiA9IE11c2ljLmdldE11c2ljT3BlbigpO1xyXG4gICAgICAgICAgICBNdXNpYy5wZXJzaXN0ZW5jZSgpO1xyXG4gICAgICAgICAgICAvLyBGYWNhZGUuY2FudmFzTm9kZS5lbWl0KFwiU3dpdGNoTXVzaWNcIiwgTXVzaWMuZ2V0TXVzaWNPcGVuKCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzaGFrZVRvZ2dsZUNhbGxiYWNrKGV2ZW50LCBkYXRhKXtcclxuICAgICAgICBpZiAodGhpcy5zaGFrZVRvZ2dsZS5pc0NoZWNrZWQgIT0gV29ybGQuU3RvcmFnZS5zaGFrZU9wZW4pe1xyXG4gICAgICAgICAgICBWaWV3LmV4ZWN1dGVDbGlja1NvdW5kQ29tbWFuZChldmVudCwgZGF0YSk7XHJcbiAgICAgICAgICAgIFdvcmxkLlN0b3JhZ2Uuc2hha2VPcGVuID0gIVdvcmxkLlN0b3JhZ2Uuc2hha2VPcGVuO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/game/FirstAidController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4257bH2VnpGgpQA0t4A+GQi', 'FirstAidController');
// script/app/game/FirstAidController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var FirstAidController = /** @class */ (function (_super) {
    __extends(FirstAidController, _super);
    function FirstAidController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirstAidController = __decorate([
        ccclass
    ], FirstAidController);
    return FirstAidController;
}(cc.Component));
exports.default = FirstAidController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2dhbWUvRmlyc3RBaWRDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFnRCxzQ0FBWTtJQUE1RDs7SUE0RkEsQ0FBQztJQTVGb0Isa0JBQWtCO1FBRHRDLE9BQU87T0FDYSxrQkFBa0IsQ0E0RnRDO0lBQUQseUJBQUM7Q0E1RkQsQUE0RkMsQ0E1RitDLEVBQUUsQ0FBQyxTQUFTLEdBNEYzRDtrQkE1Rm9CLGtCQUFrQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpcnN0QWlkQ29udHJvbGxlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgLypAcHJvcGVydHkoY2MuU3ByaXRlRnJhbWUpXHJcbiAgICBndW5TcHJpdGVGcmFtZXM6W2NjLlNwcml0ZUZyYW1lXSA9IFtdO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGUpXHJcbiAgICBndW5TcHJpdGU6Y2MuU3ByaXRlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXHJcbiAgICBidWxsZXRMYWJlbDpjYy5MYWJlbCA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLlByb2dyZXNzQmFyKVxyXG4gICAgcHJvZ3Jlc3NCYXI6Y2MuUHJvZ3Jlc3NCYXIgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5CdXR0b24pXHJcbiAgICBidXR0b246Y2MuQnV0dG9uID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoQmFubmVyQ29tcG9uZW50KVxyXG4gICAgYmFubmVyQ29tcDpCYW5uZXJDb21wb25lbnQgPSBudWxsO1xyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIC8vIG9uTG9hZCAoKSB7fVxyXG4gICAgcHJpdmF0ZSBtYXhDbGljayA9IDc7XHJcblxyXG4gICAgcHJpdmF0ZSBjbGlja051bSA9IDA7XHJcblxyXG5cclxuICAgIHByaXZhdGUgX2N1clRpbWUgPSA4MDtcclxuXHJcbiAgICBnZXQgY3VyVGltZSgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jdXJUaW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBjdXJUaW1lKHZhbHVlOiBudW1iZXIpIHtcclxuICAgICAgICBpZiAodmFsdWUgPj0gdGhpcy5tYXhUaW1lKXtcclxuICAgICAgICAgICAgdmFsdWUgPSB0aGlzLm1heFRpbWU7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0Jhbm5lcigpO1xyXG4gICAgICAgIH1lbHNlIGlmICh2YWx1ZSA8IDApe1xyXG4gICAgICAgICAgICB2YWx1ZSA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2N1clRpbWUgPSB2YWx1ZTtcclxuICAgICAgICB0aGlzLnVwZGF0ZVByb2dyZXNzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBtYXhUaW1lID0gMTAwO1xyXG5cclxuICAgIHByaXZhdGUgdXBkYXRlUHJvZ3Jlc3MoKXtcclxuICAgICAgICB0aGlzLnByb2dyZXNzQmFyLnByb2dyZXNzID0gdGhpcy5fY3VyVGltZSAvIHRoaXMubWF4VGltZTtcclxuICAgIH1cclxuXHJcbiAgICBvbkVuYWJsZSAoKSB7XHJcbiAgICAgICAgdGhpcy5iYW5uZXJDb21wLmVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBHYW1lUHJveHkucGF1c2VHYW1lID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICBsZXQgd2VhcG9uQ29uZmlnID0gRXhjZWxDb25maWcuZ2V0RXhjZWxUYWJsZShFeGNlbFRhYmxlTmFtZXMuV2VhcG9uKS5maWx0ZXIodmFsdWUgPT4gdmFsdWVbJ2lkJ10gIT0gMSkuc29ydCgoKGEsIGIpID0+IGJbJ3VubG9jayddIC0gYVsndW5sb2NrJ10pKTtcclxuICAgICAgICBmb3IgKGxldCBpdGVtIG9mIHdlYXBvbkNvbmZpZyl7XHJcbiAgICAgICAgICAgIGlmIChHYW1lUHJveHkubGV2ZWwgPj0gaXRlbVsndW5sb2NrJ10pe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ndW5TcHJpdGUuc3ByaXRlRnJhbWUgPSB0aGlzLmd1blNwcml0ZUZyYW1lc1tpdGVtWydpZCddIC0gMV07XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ1bGxldExhYmVsLnN0cmluZyA9IGDlrZDlvLkgJHtXb3JsZC5NeS5hcm1vcnkucGF5bG9hZEFkZE9mKGl0ZW1bJ2lkJ10pICogM314M2A7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnVwZGF0ZVByb2dyZXNzKCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja0J1dHRvbihldmVudCwgZGF0YSl7XHJcbiAgICAgICAgaWYgKCF0aGlzLmJhbm5lckNvbXAuZW5hYmxlZCl7XHJcbiAgICAgICAgICAgIHRoaXMuY2xpY2tOdW0rKztcclxuICAgICAgICAgICAgdGhpcy5jdXJUaW1lICs9IDEwO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5jbGlja051bSA9PSB0aGlzLm1heENsaWNrKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0Jhbm5lcigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIEdhbWVQcm94eS5wYXVzZUdhbWUgPSBmYWxzZTtcclxuICAgICAgICAgICAgR2FtZVByb3h5LmVtaXQoR2FtZVByb3h5LkV2ZW50LlJlbGl2ZUdhbWUpO1xyXG4gICAgICAgICAgICBHYW1lUHJveHkuZmlyc3RBaWRGbGFnID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNob3dCYW5uZXIoKXtcclxuICAgICAgICB0aGlzLnByb2dyZXNzQmFyLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5idXR0b24ubm9kZS55ICs9IDI1MDtcclxuICAgICAgICB0aGlzLmJhbm5lckNvbXAuZW5hYmxlZCA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKGR0Om51bWJlcil7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvZ3Jlc3NCYXIubm9kZS5hY3RpdmUpe1xyXG4gICAgICAgICAgICB0aGlzLmN1clRpbWUgLT0gMC4zO1xyXG4gICAgICAgIH1cclxuICAgIH0qL1xyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/interceptor/CloseViewInterceptor.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '70f4ci32X1CS5X5s4ooQJYZ', 'CloseViewInterceptor');
// script/app/interceptor/CloseViewInterceptor.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
Object.defineProperty(exports, "__esModule", { value: true });
var Facade_1 = require("../../../framework/facade/Facade");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var CloseViewInterceptor = /** @class */ (function () {
    function CloseViewInterceptor() {
    }
    /**
     * 关闭view之前处理
     * */
    CloseViewInterceptor.prototype.preHandle = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var str, node;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    str = args[0];
                                    if (typeof str != "string") {
                                        str = str.name;
                                    }
                                    if (!(str == "task")) return [3 /*break*/, 2];
                                    node = typeof args[0] == "string" ? Facade_1.default.canvasNode.getChildByName(str) : args[0];
                                    return [4 /*yield*/, this.moveFocusToDown(node)];
                                case 1:
                                    _a.sent();
                                    _a.label = 2;
                                case 2:
                                    resolve(true);
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    /**
     * 关闭view之后处理
     * */
    CloseViewInterceptor.prototype.postHandle = function (res) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return __awaiter(this, void 0, Promise, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var str = args[0];
                        if (typeof str != "string") {
                            str = str.name;
                        }
                        if (str == "task") {
                        }
                        resolve();
                    })];
            });
        });
    };
    /** 关闭窗口的特效 */
    /** 从下方移出 */
    CloseViewInterceptor.prototype.moveFocusToDown = function (node) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: 
                    // await node.runActionAwait(cc.moveBy(1.5, 0, -cc.view.getVisibleSize().height).easing(cc.easeElasticIn(0.6)));
                    return [4 /*yield*/, node.runActionAwait(cc.moveBy(0.5, 0, -cc.view.getVisibleSize().height).easing(cc.easeBackIn()))];
                    case 1:
                        // await node.runActionAwait(cc.moveBy(1.5, 0, -cc.view.getVisibleSize().height).easing(cc.easeElasticIn(0.6)));
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    CloseViewInterceptor = __decorate([
        ccclass
    ], CloseViewInterceptor);
    return CloseViewInterceptor;
}());
exports.default = CloseViewInterceptor;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2ludGVyY2VwdG9yL0Nsb3NlVmlld0ludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNwQixpRkFBaUY7QUFDakYseUZBQXlGO0FBQ3pGLG1CQUFtQjtBQUNuQiwyRkFBMkY7QUFDM0YsbUdBQW1HO0FBQ25HLDhCQUE4QjtBQUM5QiwyRkFBMkY7QUFDM0YsbUdBQW1HOztBQUduRywyREFBc0Q7QUFFaEQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBQTtJQTBDQSxDQUFDO0lBeENHOztTQUVLO0lBQ0Msd0NBQVMsR0FBZjtRQUFnQixjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOzt1Q0FBRyxPQUFPOzs7Z0JBQzdCLHNCQUFPLElBQUksT0FBTyxDQUFVLFVBQU8sT0FBTyxFQUFFLE1BQU07Ozs7O29DQUMxQyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO29DQUNsQixJQUFJLE9BQU8sR0FBRyxJQUFJLFFBQVEsRUFBRTt3Q0FDeEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7cUNBQ2xCO3lDQUNHLENBQUEsR0FBRyxJQUFJLE1BQU0sQ0FBQSxFQUFiLHdCQUFhO29DQUNULElBQUksR0FBRyxPQUFPLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLGdCQUFNLENBQUMsVUFBVSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO29DQUN4RixxQkFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFBOztvQ0FBaEMsU0FBZ0MsQ0FBQzs7O29DQUVyQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7Ozs7eUJBQ2pCLENBQUMsRUFBQzs7O0tBQ047SUFHRDs7U0FFSztJQUNDLHlDQUFVLEdBQWhCLFVBQWlCLEdBQVE7UUFBRSxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLDZCQUFPOzt1Q0FBRyxPQUFPOztnQkFDeEMsc0JBQU8sSUFBSSxPQUFPLENBQUMsVUFBQyxPQUFPLEVBQUUsTUFBTTt3QkFDL0IsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNsQixJQUFJLE9BQU8sR0FBRyxJQUFJLFFBQVEsRUFBRTs0QkFDeEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7eUJBQ2xCO3dCQUNELElBQUksR0FBRyxJQUFJLE1BQU0sRUFBRTt5QkFDbEI7d0JBQ0QsT0FBTyxFQUFFLENBQUM7b0JBQ2QsQ0FBQyxDQUFDLEVBQUM7OztLQUNOO0lBRUQsY0FBYztJQUVkLFlBQVk7SUFDTiw4Q0FBZSxHQUFyQixVQUFzQixJQUFhOzs7OztvQkFDL0IsZ0hBQWdIO29CQUNoSCxxQkFBTSxJQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDLEVBQUE7O3dCQUR0RyxnSEFBZ0g7d0JBQ2hILFNBQXNHLENBQUM7Ozs7O0tBQzFHO0lBekNnQixvQkFBb0I7UUFEeEMsT0FBTztPQUNhLG9CQUFvQixDQTBDeEM7SUFBRCwyQkFBQztDQTFDRCxBQTBDQyxJQUFBO2tCQTFDb0Isb0JBQW9CIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vICAtIFtFbmdsaXNoXSBodHRwOi8vd3d3LmNvY29zMmQteC5vcmcvZG9jcy9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gW0NoaW5lc2VdIGh0dHA6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC96aC9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyAgLSBbRW5nbGlzaF0gaHR0cDovL3d3dy5jb2NvczJkLXgub3JnL2RvY3MvY3JlYXRvci9tYW51YWwvZW4vc2NyaXB0aW5nL3JlZmVyZW5jZS9hdHRyaWJ1dGVzLmh0bWxcclxuLy8gTGVhcm4gbGlmZS1jeWNsZSBjYWxsYmFja3M6XHJcbi8vICAtIFtDaGluZXNlXSBodHRwOi8vZG9jcy5jb2Nvcy5jb20vY3JlYXRvci9tYW51YWwvemgvc2NyaXB0aW5nL2xpZmUtY3ljbGUtY2FsbGJhY2tzLmh0bWxcclxuLy8gIC0gW0VuZ2xpc2hdIGh0dHA6Ly93d3cuY29jb3MyZC14Lm9yZy9kb2NzL2NyZWF0b3IvbWFudWFsL2VuL3NjcmlwdGluZy9saWZlLWN5Y2xlLWNhbGxiYWNrcy5odG1sXHJcblxyXG5pbXBvcnQge0lDb21tYW5kSW50ZXJjZXB0b3J9IGZyb20gXCIuLi8uLi8uLi9mcmFtZXdvcmsvaW50ZXJjZXB0b3IvQ29tbWFuZEludGVyY2VwdG9yXCI7XHJcbmltcG9ydCBGYWNhZGUgZnJvbSBcIi4uLy4uLy4uL2ZyYW1ld29yay9mYWNhZGUvRmFjYWRlXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENsb3NlVmlld0ludGVyY2VwdG9yIGltcGxlbWVudHMgSUNvbW1hbmRJbnRlcmNlcHRvciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlhbPpl612aWV35LmL5YmN5aSE55CGXHJcbiAgICAgKiAqL1xyXG4gICAgYXN5bmMgcHJlSGFuZGxlKC4uLmFyZ3MpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2U8Ym9vbGVhbj4oYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgc3RyID0gYXJnc1swXTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBzdHIgIT0gXCJzdHJpbmdcIikge1xyXG4gICAgICAgICAgICAgICAgc3RyID0gc3RyLm5hbWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHN0ciA9PSBcInRhc2tcIikge1xyXG4gICAgICAgICAgICAgICAgbGV0IG5vZGUgPSB0eXBlb2YgYXJnc1swXSA9PSBcInN0cmluZ1wiID8gRmFjYWRlLmNhbnZhc05vZGUuZ2V0Q2hpbGRCeU5hbWUoc3RyKSA6IGFyZ3NbMF07XHJcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLm1vdmVGb2N1c1RvRG93bihub2RlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXNvbHZlKHRydWUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFs+mXrXZpZXfkuYvlkI7lpITnkIZcclxuICAgICAqICovXHJcbiAgICBhc3luYyBwb3N0SGFuZGxlKHJlczogYW55LCAuLi5hcmdzKTogUHJvbWlzZSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgbGV0IHN0ciA9IGFyZ3NbMF07XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygc3RyICE9IFwic3RyaW5nXCIpIHtcclxuICAgICAgICAgICAgICAgIHN0ciA9IHN0ci5uYW1lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChzdHIgPT0gXCJ0YXNrXCIpIHtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOWFs+mXreeql+WPo+eahOeJueaViCAqL1xyXG5cclxuICAgIC8qKiDku47kuIvmlrnnp7vlh7ogKi9cclxuICAgIGFzeW5jIG1vdmVGb2N1c1RvRG93bihub2RlOiBjYy5Ob2RlKSB7XHJcbiAgICAgICAgLy8gYXdhaXQgbm9kZS5ydW5BY3Rpb25Bd2FpdChjYy5tb3ZlQnkoMS41LCAwLCAtY2Mudmlldy5nZXRWaXNpYmxlU2l6ZSgpLmhlaWdodCkuZWFzaW5nKGNjLmVhc2VFbGFzdGljSW4oMC42KSkpO1xyXG4gICAgICAgIGF3YWl0IG5vZGUucnVuQWN0aW9uQXdhaXQoY2MubW92ZUJ5KDAuNSwgMCwgLWNjLnZpZXcuZ2V0VmlzaWJsZVNpemUoKS5oZWlnaHQpLmVhc2luZyhjYy5lYXNlQmFja0luKCkpKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletJiGuang.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5191cP2MvJAj5S4Mn/Tj0r2', 'BulletJiGuang');
// script/app/entities/bullet/BulletJiGuang.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletJiGuang = /** @class */ (function (_super) {
    __extends(BulletJiGuang, _super);
    function BulletJiGuang() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletJiGuang.prototype.fly = function (dir, distance, speed) {
    };
    BulletJiGuang.prototype.onCollisionEnter = function (other, self) {
        var _this = this;
        _super.prototype.onCollisionEnter.call(this, other, self);
        var action = cc.repeatForever(cc.sequence(cc.delayTime(0.3), cc.callFunc(function () {
            _super.prototype.onCollisionEnter.call(_this, other, self);
        })));
        action.setTag(1333);
        other.node.stopActionByTag(1333);
        other.node.runAction(action);
    };
    BulletJiGuang.prototype.onCollisionExit = function (other, self) {
        other.node.stopActionByTag(1333);
    };
    BulletJiGuang = __decorate([
        ccclass
    ], BulletJiGuang);
    return BulletJiGuang;
}(Bullet_1.default));
exports.default = BulletJiGuang;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRKaUd1YW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxtQ0FBOEI7QUFDeEIsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBMkMsaUNBQU07SUFBakQ7O0lBb0JBLENBQUM7SUFqQkcsMkJBQUcsR0FBSCxVQUFJLEdBQVksRUFBRSxRQUFnQixFQUFFLEtBQWE7SUFDakQsQ0FBQztJQUdELHdDQUFnQixHQUFoQixVQUFpQixLQUFLLEVBQUUsSUFBSTtRQUE1QixpQkFRQztRQVBHLGlCQUFNLGdCQUFnQixZQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNwQyxJQUFJLE1BQU0sR0FBRyxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDO1lBQ3JFLGlCQUFNLGdCQUFnQixhQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN4QyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDTCxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BCLEtBQUssQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCx1Q0FBZSxHQUFmLFVBQWdCLEtBQUssRUFBRSxJQUFJO1FBQ3ZCLEtBQUssQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFuQmdCLGFBQWE7UUFEakMsT0FBTztPQUNhLGFBQWEsQ0FvQmpDO0lBQUQsb0JBQUM7Q0FwQkQsQUFvQkMsQ0FwQjBDLGdCQUFNLEdBb0JoRDtrQkFwQm9CLGFBQWEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEJ1bGxldCBmcm9tIFwiLi9CdWxsZXRcIjtcclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRKaUd1YW5nIGV4dGVuZHMgQnVsbGV0IHtcclxuXHJcblxyXG4gICAgZmx5KGRpcjogY2MuVmVjMiwgZGlzdGFuY2U6IG51bWJlciwgc3BlZWQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBvbkNvbGxpc2lvbkVudGVyKG90aGVyLCBzZWxmKSB7XHJcbiAgICAgICAgc3VwZXIub25Db2xsaXNpb25FbnRlcihvdGhlciwgc2VsZik7XHJcbiAgICAgICAgbGV0IGFjdGlvbiA9IGNjLnJlcGVhdEZvcmV2ZXIoY2Muc2VxdWVuY2UoY2MuZGVsYXlUaW1lKDAuMyksIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgIHN1cGVyLm9uQ29sbGlzaW9uRW50ZXIob3RoZXIsIHNlbGYpO1xyXG4gICAgICAgIH0pKSk7XHJcbiAgICAgICAgYWN0aW9uLnNldFRhZygxMzMzKTtcclxuICAgICAgICBvdGhlci5ub2RlLnN0b3BBY3Rpb25CeVRhZygxMzMzKTtcclxuICAgICAgICBvdGhlci5ub2RlLnJ1bkFjdGlvbihhY3Rpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ29sbGlzaW9uRXhpdChvdGhlciwgc2VsZil7XHJcbiAgICAgICAgb3RoZXIubm9kZS5zdG9wQWN0aW9uQnlUYWcoMTMzMyk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletJuJiDan.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'aabefjCqDVKqrglQB8l3ylo', 'BulletJuJiDan');
// script/app/entities/bullet/BulletJuJiDan.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletJuJiDan = /** @class */ (function (_super) {
    __extends(BulletJuJiDan, _super);
    function BulletJuJiDan() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletJuJiDan.prototype.fly = function (dir, distance, speed) {
        var _this = this;
        this.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
        this.node.runAction(cc.sequence(cc.moveBy(distance / speed, dir.mul(distance)).easing(cc.easeCubicActionOut()), cc.callFunc(function () {
            _this.node.active = false;
        })));
    };
    BulletJuJiDan = __decorate([
        ccclass
    ], BulletJuJiDan);
    return BulletJuJiDan;
}(Bullet_1.default));
exports.default = BulletJuJiDan;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRKdUppRGFuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxtQ0FBOEI7QUFFeEIsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBMkMsaUNBQU07SUFBakQ7O0lBU0EsQ0FBQztJQU5HLDJCQUFHLEdBQUgsVUFBSSxHQUFZLEVBQUUsUUFBZ0IsRUFBRSxLQUFhO1FBQWpELGlCQUtDO1FBSkcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEdBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLGtCQUFrQixFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDO1lBQ3RILEtBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDVCxDQUFDO0lBUmdCLGFBQWE7UUFEakMsT0FBTztPQUNhLGFBQWEsQ0FTakM7SUFBRCxvQkFBQztDQVRELEFBU0MsQ0FUMEMsZ0JBQU0sR0FTaEQ7a0JBVG9CLGFBQWEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEJ1bGxldCBmcm9tIFwiLi9CdWxsZXRcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0SnVKaURhbiBleHRlbmRzIEJ1bGxldCB7XHJcblxyXG5cclxuICAgIGZseShkaXI6IGNjLlZlYzIsIGRpc3RhbmNlOiBudW1iZXIsIHNwZWVkOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm5vZGUucm90YXRpb24gPSA5MCAtIGNjLm1pc2MucmFkaWFuc1RvRGVncmVlcyhNYXRoLmF0YW4yKGRpci55LCBkaXIueCkpO1xyXG4gICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MubW92ZUJ5KGRpc3RhbmNlL3NwZWVkLCBkaXIubXVsKGRpc3RhbmNlKSkuZWFzaW5nKGNjLmVhc2VDdWJpY0FjdGlvbk91dCgpKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH0pKSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletLiZiPao.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd49a3xULQFGQaanbQQSAKQb', 'BulletLiZiPao');
// script/app/entities/bullet/BulletLiZiPao.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var BulletEmitter_1 = require("../bulletEmitter/BulletEmitter");
var World_1 = require("../../info/World");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletLiZiPao = /** @class */ (function (_super) {
    __extends(BulletLiZiPao, _super);
    function BulletLiZiPao() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._distance = 0;
        _this._speed = 0;
        return _this;
    }
    BulletLiZiPao.prototype.boom = function () {
        var powerLv = World_1.World.My.armory.levelOfEmitterPower(this.bulletId);
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp);
        var add = config[powerLv - 1]['bullet_split'];
        var num = 4 + 2 * add;
        var _loop_1 = function (i) {
            var degree = i * 360 / num;
            var newBullet = window['GameBulletsController'].getInactiveBullet(BulletEmitter_1.default.TYPES.LiZiPao + 100);
            newBullet.node.rotation = this_1.node.rotation + degree;
            var dir = cc.v2(0, 1).normalize().rotate(cc.misc.degreesToRadians(-newBullet.node.rotation));
            newBullet.node.position = this_1.node.position.add(dir.mul(130));
            newBullet.node.active = true;
            newBullet.node.runAction(cc.sequence(cc.moveBy(this_1._distance / this_1._speed, dir.mul(this_1._distance)), cc.callFunc(function () {
                newBullet.node.active = false;
            })));
        };
        var this_1 = this;
        for (var i = 0; i < num; i++) {
            _loop_1(i);
        }
    };
    BulletLiZiPao.prototype.fly = function (dir, distance, speed) {
        var _this = this;
        this._distance = distance;
        this._speed = speed;
        this.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
        this.node.runAction(cc.sequence(cc.moveBy(distance / speed, dir.mul(distance)), cc.callFunc(function () {
            _this.node.active = false;
        })));
    };
    BulletLiZiPao.prototype.collisionEnemy = function (other, self) {
        _super.prototype.collisionEnemy.call(this, other, self);
        this.boom();
    };
    BulletLiZiPao = __decorate([
        ccclass
    ], BulletLiZiPao);
    return BulletLiZiPao;
}(Bullet_1.default));
exports.default = BulletLiZiPao;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRMaVppUGFvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxtQ0FBOEI7QUFDOUIsZ0VBQTJEO0FBQzNELDBDQUF1QztBQUN2Qyx3RUFBcUU7QUFDckUsZ0VBQTZEO0FBRXZELElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQTJDLGlDQUFNO0lBQWpEO1FBQUEscUVBc0NDO1FBcENXLGVBQVMsR0FBRyxDQUFDLENBQUM7UUFDZCxZQUFNLEdBQUcsQ0FBQyxDQUFDOztJQW1DdkIsQ0FBQztJQWpDRyw0QkFBSSxHQUFKO1FBQ0ksSUFBSSxPQUFPLEdBQUcsYUFBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2pFLElBQUksTUFBTSxHQUFHLHlCQUFXLENBQUMsYUFBYSxDQUFDLGlDQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakUsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM1QyxJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztnQ0FDYixDQUFDO1lBQ04sSUFBSSxNQUFNLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBQyxHQUFHLENBQUM7WUFDekIsSUFBSSxTQUFTLEdBQUcsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUMsaUJBQWlCLENBQUMsdUJBQWEsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQ3JHLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQUssSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUM7WUFDdEQsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDN0YsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDL0QsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBRTdCLFNBQVMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFLLFNBQVMsR0FBQyxPQUFLLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQUssU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDO2dCQUM3RyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDbEMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7UUFWVCxLQUFLLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBRSxDQUFDLEdBQUMsR0FBRyxFQUFFLENBQUMsRUFBRTtvQkFBZixDQUFDO1NBV1Q7SUFDTCxDQUFDO0lBRUQsMkJBQUcsR0FBSCxVQUFJLEdBQVksRUFBRSxRQUFnQixFQUFFLEtBQWE7UUFBakQsaUJBT0M7UUFORyxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztRQUMxQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsR0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUM7WUFDdEYsS0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNULENBQUM7SUFFUyxzQ0FBYyxHQUF4QixVQUF5QixLQUFLLEVBQUUsSUFBSTtRQUNoQyxpQkFBTSxjQUFjLFlBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBcENnQixhQUFhO1FBRGpDLE9BQU87T0FDYSxhQUFhLENBc0NqQztJQUFELG9CQUFDO0NBdENELEFBc0NDLENBdEMwQyxnQkFBTSxHQXNDaEQ7a0JBdENvQixhQUFhIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXQgZnJvbSBcIi4vQnVsbGV0XCI7XHJcbmltcG9ydCBCdWxsZXRFbWl0dGVyIGZyb20gXCIuLi9idWxsZXRFbWl0dGVyL0J1bGxldEVtaXR0ZXJcIjtcclxuaW1wb3J0IHtXb3JsZH0gZnJvbSBcIi4uLy4uL2luZm8vV29ybGRcIjtcclxuaW1wb3J0IHtFeGNlbENvbmZpZ30gZnJvbSBcIi4uLy4uLy4uLy4uL2ZyYW1ld29yay9jb25maWcvRXhjZWxDb25maWdcIjtcclxuaW1wb3J0IHtFeGNlbFRhYmxlTmFtZXN9IGZyb20gXCIuLi8uLi9jb25maWcvRXhjZWxUYWJsZU5hbWVzXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldExpWmlQYW8gZXh0ZW5kcyBCdWxsZXQge1xyXG5cclxuICAgIHByaXZhdGUgX2Rpc3RhbmNlID0gMDtcclxuICAgIHByaXZhdGUgX3NwZWVkID0gMDtcclxuXHJcbiAgICBib29tKCl7XHJcbiAgICAgICAgbGV0IHBvd2VyTHYgPSBXb3JsZC5NeS5hcm1vcnkubGV2ZWxPZkVtaXR0ZXJQb3dlcih0aGlzLmJ1bGxldElkKTtcclxuICAgICAgICBsZXQgY29uZmlnID0gRXhjZWxDb25maWcuZ2V0RXhjZWxUYWJsZShFeGNlbFRhYmxlTmFtZXMuV2VhcG9uVXApO1xyXG4gICAgICAgIGxldCBhZGQgPSBjb25maWdbcG93ZXJMdi0xXVsnYnVsbGV0X3NwbGl0J107XHJcbiAgICAgICAgbGV0IG51bSA9IDQgKyAyICogYWRkO1xyXG4gICAgICAgIGZvciAobGV0IGk9MDsgaTxudW07IGkrKyl7XHJcbiAgICAgICAgICAgIGxldCBkZWdyZWUgPSBpICogMzYwL251bTtcclxuICAgICAgICAgICAgbGV0IG5ld0J1bGxldCA9IHdpbmRvd1snR2FtZUJ1bGxldHNDb250cm9sbGVyJ10uZ2V0SW5hY3RpdmVCdWxsZXQoQnVsbGV0RW1pdHRlci5UWVBFUy5MaVppUGFvICsgMTAwKTtcclxuICAgICAgICAgICAgbmV3QnVsbGV0Lm5vZGUucm90YXRpb24gPSB0aGlzLm5vZGUucm90YXRpb24gKyBkZWdyZWU7XHJcbiAgICAgICAgICAgIGxldCBkaXIgPSBjYy52MigwLCAxKS5ub3JtYWxpemUoKS5yb3RhdGUoY2MubWlzYy5kZWdyZWVzVG9SYWRpYW5zKC1uZXdCdWxsZXQubm9kZS5yb3RhdGlvbikpO1xyXG4gICAgICAgICAgICBuZXdCdWxsZXQubm9kZS5wb3NpdGlvbiA9IHRoaXMubm9kZS5wb3NpdGlvbi5hZGQoZGlyLm11bCgxMzApKTtcclxuICAgICAgICAgICAgbmV3QnVsbGV0Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgIG5ld0J1bGxldC5ub2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5tb3ZlQnkodGhpcy5fZGlzdGFuY2UvdGhpcy5fc3BlZWQsIGRpci5tdWwodGhpcy5fZGlzdGFuY2UpKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgICAgIG5ld0J1bGxldC5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9KSkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmbHkoZGlyOiBjYy5WZWMyLCBkaXN0YW5jZTogbnVtYmVyLCBzcGVlZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fZGlzdGFuY2UgPSBkaXN0YW5jZTtcclxuICAgICAgICB0aGlzLl9zcGVlZCA9IHNwZWVkO1xyXG4gICAgICAgIHRoaXMubm9kZS5yb3RhdGlvbiA9IDkwIC0gY2MubWlzYy5yYWRpYW5zVG9EZWdyZWVzKE1hdGguYXRhbjIoZGlyLnksIGRpci54KSk7XHJcbiAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5tb3ZlQnkoZGlzdGFuY2Uvc3BlZWQsIGRpci5tdWwoZGlzdGFuY2UpKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH0pKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGNvbGxpc2lvbkVuZW15KG90aGVyLCBzZWxmKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuY29sbGlzaW9uRW5lbXkob3RoZXIsIHNlbGYpO1xyXG4gICAgICAgIHRoaXMuYm9vbSgpO1xyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/framework/tableview/TableViewMediator.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '579ceeOw5xKP6NamQb0EmS/', 'TableViewMediator');
// framework/tableview/TableViewMediator.ts

// Learn TypeScript:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html
//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html
/**
 * 使用TableView注意事项:
 * 1.设置mask 设置锚点(0, 1)  添加widget并设置top bottom left right都为0
 * 2.设置content 设置锚点(0, 1)  添加widget并设置top left right都为0
 * 3.设置itemNode  设置大小(w,h)　设置锚点(0, 0.5)
 * **/
Object.defineProperty(exports, "__esModule", { value: true });
var AbstractTableItem_1 = require("./AbstractTableItem");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, menu = _a.menu, requireComponent = _a.requireComponent, disallowMultiple = _a.disallowMultiple, executionOrder = _a.executionOrder;
var TableViewMediator = /** @class */ (function (_super) {
    __extends(TableViewMediator, _super);
    function TableViewMediator() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scrollView = null;
        _this.template = null;
        _this.marginTop = 0;
        _this.marginBottom = 0;
        _this.margin = 0;
        _this.testNum = 0;
        _this.itemAction = false;
        _this.itemHeight = 0;
        _this.list = [];
        _this.firstIndex = 0;
        _this.firstIndexMax = 0;
        _this._datas = [];
        // LIFE-CYCLE CALLBACKS:
        _this.createNodesFinish = false;
        return _this;
    }
    TableViewMediator.prototype.createNodesListener = function (listener) {
        if (this.createNodesFinish) {
            listener();
        }
        else {
            this.node.on("CreateNodesSuccess", function () {
                listener();
            });
        }
    };
    Object.defineProperty(TableViewMediator.prototype, "datas", {
        get: function () {
            return this._datas;
        },
        set: function (value) {
            var _this = this;
            /** 计算最大firstIndexMax */
            this.createNodesListener(function () {
                var num = Math.ceil((_this.scrollView.node.getContentSize().height - _this.marginTop - _this.marginBottom + _this.margin) / (_this.itemHeight + _this.margin));
                _this.firstIndexMax = value.length - num - 1;
                // console.log(this.firstIndexMax,datas.length, this.list.length, num, "wxSub this.firstIndexMax************");
                _this._datas = value.slice(0);
                // this.datas = [1,2,3,4,5,6,7,8,9];
                _this.scrollView.content.height = _this.marginTop + _this.marginBottom + _this.itemHeight * _this._datas.length + _this.margin * (_this._datas.length - 1);
                _this.firstIndex = 0;
                _this.scrollView.scrollToTop();
                _this.list.forEach(function (value1, index) {
                    value1.y = -_this.marginTop - value1.height / 2 - index * (value1.height + _this.margin);
                    if (index >= _this._datas.length) {
                        value1.active = false;
                    }
                });
                _this.updateData();
                if (_this.itemAction) {
                    _this.showAction();
                }
            });
        },
        enumerable: false,
        configurable: true
    });
    TableViewMediator.prototype.createNode = function () {
        var node = cc.instantiate(this.template.node);
        node.active = false;
        this.itemHeight = node.getContentSize().height;
        node.x = 0;
        node.setParent(this.scrollView.content);
        this.list.push(node);
        return node;
    };
    TableViewMediator.prototype.addNode = function (height) {
        var _this = this;
        if (height <= this.scrollView.node.getContentSize().height) {
            this.node.runAction(cc.sequence(cc.delayTime(0), cc.callFunc(function () {
                var node = _this.createNode();
                node.y = -height - _this.itemHeight / 2;
                height += _this.itemHeight + _this.margin;
                _this.addNode(height);
            })));
        }
        else {
            var node = this.createNode();
            node.y = -height - this.itemHeight / 2;
            var eventHandler = new cc.Component.EventHandler();
            eventHandler.target = this.node; //这个 node 节点是你的事件处理代码组件所属的节点
            eventHandler.component = "TableViewMediator";
            eventHandler.handler = "onScrollEvent";
            eventHandler.customEventData = "";
            this.scrollView.scrollEvents.push(eventHandler);
            if (!this.createNodesFinish) {
                this.createNodesFinish = true;
                this.node.emit("CreateNodesSuccess");
            }
        }
    };
    TableViewMediator.prototype.onLoad = function () {
        this.scrollView = this.node.getComponent(cc.ScrollView);
        // let eventHandler = new cc.Component.EventHandler();
        // eventHandler.target = this.node; //这个 node 节点是你的事件处理代码组件所属的节点
        // eventHandler.component = "TableViewMediator";
        // eventHandler.handler = "onScrollEvent";
        // eventHandler.customEventData = "";
        // this.scrollView.scrollEvents.push(eventHandler);
        // let itemNode = cc.instantiate(this.template.node);
        // itemNode.active = false;
        // this.itemHeight = itemNode.getContentSize().height;
        // let itemHeightHalf = this.itemHeight/2;
        // /** 计算出view能装下多少个item */
        // let viewSize = this.scrollView.node.getContentSize();
        // let content = this.scrollView.content;
        //
        // let height = this.marginTop;
        // while (true){
        //     if (height > viewSize.height){
        //         break;
        //     }
        //
        //     let node = cc.instantiate(itemNode);
        //     node.x = 0;
        //     node.y = -height - itemHeightHalf;
        //     node.setParent(content);
        //     this.list.push(node);
        //     height += this.itemHeight + this.margin;
        //     // console.log("wx sub===>node.y", node.y);
        // }
        //
        // itemNode.x = 0;
        // itemNode.y = -height - itemHeightHalf;
        // itemNode.setParent(content);
        // this.list.push(itemNode);
        this.addNode(this.marginTop);
        /** 延迟判断 */
        // let self = this;
        // this.scheduleOnce(function () {
        //     self._adjustList();
        // }, 0.1);
        if (this.testNum > 0) {
            var test = [];
            for (var i = 0; i < this.testNum; i++) {
                test.push(i + 1);
            }
            this.datas = test;
        }
    };
    TableViewMediator.prototype._adjustList = function () {
        var viewSize = this.scrollView.node.getContentSize();
        var content = this.scrollView.content;
        var itemHeightHalf = this.itemHeight / 2;
        var height = this.marginTop + (this.itemHeight + this.margin) * this.list.length - this.margin;
        while (height < viewSize.height + this.itemHeight) {
            var node = cc.instantiate(this.template.node);
            node.active = false;
            node.x = 0;
            node.y = -height - itemHeightHalf;
            node.setParent(content);
            this.list.push(node);
            height += this.itemHeight + this.margin;
            if (this._datas.length >= this.list.length) {
                var index = this.list.length - 1;
                var value = this.list[index];
                value.active = true;
                this.updateItem(value, index);
            }
        }
        if (this._datas.length > 0) {
            var num = Math.ceil((viewSize.height - this.marginTop - this.marginBottom + this.margin) / (this.itemHeight + this.margin));
            this.firstIndexMax = this._datas.length - num - 1;
        }
    };
    TableViewMediator.prototype.updateData = function () {
        var arr = this.list.slice(0, Math.min(this._datas.length, this.list.length));
        this.updateItems(arr, 0);
    };
    TableViewMediator.prototype.showAction = function () {
        this.list.slice(0, Math.min(this._datas.length, this.list.length)).forEach(function (value, index) {
            value.scaleX = 0;
            if (value.active) {
                value.runAction(cc.scaleTo(0.3 + (0.08 * index), 1).easing(cc.easeCubicActionInOut()));
            }
            else {
                var comp_1 = value.addComponent(cc.Component);
                comp_1['onEnable'] = function () {
                    value.runAction(cc.scaleTo(0.3 + (0.08 * index), 1).easing(cc.easeCubicActionInOut()));
                };
                comp_1['onDisable'] = function () {
                    comp_1.destroy();
                };
            }
        });
    };
    TableViewMediator.prototype.updateItems = function (arr, index) {
        var _this = this;
        if (index < arr.length) {
            this.node.runAction(cc.sequence(cc.delayTime(0), cc.callFunc(function () {
                var node = arr[index];
                node.active = true;
                _this.updateItem(node, _this.firstIndex + index);
                _this.updateItems(arr, index + 1);
            })));
        }
    };
    TableViewMediator.prototype.updateItem = function (node, index) {
        var value = this._datas[index];
        var itemMediator = node.getComponent(AbstractTableItem_1.default);
        itemMediator.upadteItem(value, index);
    };
    TableViewMediator.prototype.onScrollEvent = function (event) {
        // console.log(event, "event");
        var content = this.scrollView.content;
        // let contentHeight = content.getContentSize().height;
        var viewHeight = this.scrollView.node.getContentSize().height;
        /*if ((!this.scrollView.isAutoScrolling() && !this.scrollView.isScrolling()) || content.y < 0 || content.y >= contentHeight - viewHeight){
            return;
        }*/
        var contentY = content.y;
        // console.log(contentY, "contentY");
        /** 判断第1个元素 和 倒数第1个元素的位置 */
        /** 上边界 */
        var itemHeightHalf = this.itemHeight / 2;
        /** 头插入 */
        while (this.firstIndex > 0 && this.list[0].y + this.marginTop + itemHeightHalf < -contentY) {
            var last = this.list.pop();
            last.y = this.list[0].y + this.itemHeight + this.margin;
            this.list.unshift(last);
            this.firstIndex--;
            // console.log("===========>尾移头");
            this.updateItem(last, this.firstIndex);
        }
        /** 尾插入 */
        while (this.firstIndex < this.firstIndexMax && this.list[this.list.length - 1].y - itemHeightHalf - this.marginBottom > -contentY - viewHeight) {
            var first = this.list.shift();
            first.y = this.list[this.list.length - 1].y - this.itemHeight - this.margin;
            this.list.push(first);
            this.firstIndex++;
            // console.log("===========>头移尾", this.list[this.list.length-1].y);
            this.updateItem(first, this.firstIndex + this.list.length - 1);
        }
    };
    __decorate([
        property(AbstractTableItem_1.default)
    ], TableViewMediator.prototype, "template", void 0);
    __decorate([
        property({ type: cc.Integer })
    ], TableViewMediator.prototype, "marginTop", void 0);
    __decorate([
        property({ type: cc.Integer })
    ], TableViewMediator.prototype, "marginBottom", void 0);
    __decorate([
        property({ type: cc.Integer })
    ], TableViewMediator.prototype, "margin", void 0);
    __decorate([
        property
    ], TableViewMediator.prototype, "testNum", void 0);
    __decorate([
        property
    ], TableViewMediator.prototype, "itemAction", void 0);
    TableViewMediator = __decorate([
        ccclass,
        menu("自定义/TableViewMediator"),
        requireComponent(cc.ScrollView),
        disallowMultiple,
        executionOrder(-10)
    ], TableViewMediator);
    return TableViewMediator;
}(cc.Component));
exports.default = TableViewMediator;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletOfSpider.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3c259gWcuxDorUu2dpLcxFV', 'BulletOfSpider');
// script/app/entities/bullet/BulletOfSpider.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletOfEnemy_1 = require("./BulletOfEnemy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletOfSpider = /** @class */ (function (_super) {
    __extends(BulletOfSpider, _super);
    function BulletOfSpider() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ske = null;
        return _this;
    }
    BulletOfSpider.prototype.init = function (id) {
        var _this = this;
        _super.prototype.init.call(this, id);
        this.bThrought = true;
        this.ske = this.getComponent(sp.Skeleton);
        this.ske.setCompleteListener(function () {
            _this.node.active = false;
        });
    };
    BulletOfSpider.prototype.boom = function () {
        this.ske.setAnimation(0, "slow", false);
    };
    BulletOfSpider = __decorate([
        ccclass
    ], BulletOfSpider);
    return BulletOfSpider;
}(BulletOfEnemy_1.default));
exports.default = BulletOfSpider;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRPZlNwaWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsaURBQTRDO0FBRXRDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQTRDLGtDQUFhO0lBQXpEO1FBQUEscUVBaUJDO1FBZkcsU0FBRyxHQUFlLElBQUksQ0FBQzs7SUFlM0IsQ0FBQztJQVpHLDZCQUFJLEdBQUosVUFBSyxFQUFVO1FBQWYsaUJBT0M7UUFORyxpQkFBTSxJQUFJLFlBQUMsRUFBRSxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUM7WUFDekIsS0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELDZCQUFJLEdBQUo7UUFDSSxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFoQmdCLGNBQWM7UUFEbEMsT0FBTztPQUNhLGNBQWMsQ0FpQmxDO0lBQUQscUJBQUM7Q0FqQkQsQUFpQkMsQ0FqQjJDLHVCQUFhLEdBaUJ4RDtrQkFqQm9CLGNBQWMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEJ1bGxldE9mRW5lbXkgZnJvbSBcIi4vQnVsbGV0T2ZFbmVteVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRPZlNwaWRlciBleHRlbmRzIEJ1bGxldE9mRW5lbXkge1xyXG5cclxuICAgIHNrZTpzcC5Ta2VsZXRvbiA9IG51bGw7XHJcblxyXG5cclxuICAgIGluaXQoaWQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLmluaXQoaWQpO1xyXG4gICAgICAgIHRoaXMuYlRocm91Z2h0ID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnNrZSA9IHRoaXMuZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKTtcclxuICAgICAgICB0aGlzLnNrZS5zZXRDb21wbGV0ZUxpc3RlbmVyKCgpPT57XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGJvb20oKXtcclxuICAgICAgICB0aGlzLnNrZS5zZXRBbmltYXRpb24oMCwgXCJzbG93XCIsIGZhbHNlKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletOfDiLei.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ea76fcmuIdJV6eQoHlSHVSh', 'BulletOfDiLei');
// script/app/entities/bullet/BulletOfDiLei.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var Facade_1 = require("../../../../framework/facade/Facade");
var GameProxy_1 = require("../../game/GameProxy");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var World_1 = require("../../info/World");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletOfDiLei = /** @class */ (function (_super) {
    __extends(BulletOfDiLei, _super);
    function BulletOfDiLei() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._gameExplosivesController = null;
        return _this;
    }
    BulletOfDiLei.prototype.strike = function (other, self) {
        // super.strike(other, self);
    };
    BulletOfDiLei.prototype.init = function (id) {
        this.bulletId = id;
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop)[this.bulletId - 1];
        this.bThrought = cfg['pierce'] === 1;
        this.repel = cfg['repel'];
        this.stiff = cfg['stiff'];
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
        this.hurt = Math.floor(config['hurt'] * World_1.World.My.armory.hurtMulOf(1)) * cfg['hurt'];
    };
    BulletOfDiLei.prototype.onLoad = function () {
        _super.prototype.onLoad.call(this);
        this._gameExplosivesController = Facade_1.default.findComponent("GameScene", "GameExplosivesController");
    };
    BulletOfDiLei.prototype.onCollisionEnter = function (other, self) {
        /** 爆炸 */
        this.node.active = false;
        this.boom();
    };
    BulletOfDiLei.prototype.boom = function () {
        var explosiveHuoJianTong = this._gameExplosivesController.getInactiveExplosive(9);
        explosiveHuoJianTong.node.position = this.node.position;
        explosiveHuoJianTong.node.active = true;
        explosiveHuoJianTong.node.scale = 0.5;
        explosiveHuoJianTong.node.rotation = Math.random() * 360;
        explosiveHuoJianTong.boom();
        GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.ShakeScreen, 0.08, 2, 2);
    };
    BulletOfDiLei = __decorate([
        ccclass
    ], BulletOfDiLei);
    return BulletOfDiLei;
}(Bullet_1.default));
exports.default = BulletOfDiLei;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRPZkRpTGVpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxtQ0FBOEI7QUFDOUIsOERBQXlEO0FBQ3pELGtEQUErQztBQUMvQyx3RUFBcUU7QUFDckUsZ0VBQTZEO0FBQzdELDBDQUF1QztBQUVqQyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUEyQyxpQ0FBTTtJQUFqRDtRQUFBLHFFQTBDQztRQXhDVywrQkFBeUIsR0FBRyxJQUFJLENBQUM7O0lBd0M3QyxDQUFDO0lBckNHLDhCQUFNLEdBQU4sVUFBTyxLQUFLLEVBQUUsSUFBSTtRQUNkLDZCQUE2QjtJQUNqQyxDQUFDO0lBRUQsNEJBQUksR0FBSixVQUFLLEVBQVU7UUFDWCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNuQixJQUFJLEdBQUcsR0FBRyx5QkFBVyxDQUFDLGFBQWEsQ0FBQyxpQ0FBZSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLElBQUksTUFBTSxHQUFHLHlCQUFXLENBQUMsYUFBYSxDQUFDLGlDQUFlLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBQyxhQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEYsQ0FBQztJQUdELDhCQUFNLEdBQU47UUFDSSxpQkFBTSxNQUFNLFdBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyx5QkFBeUIsR0FBRyxnQkFBTSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztJQUNuRyxDQUFDO0lBSUQsd0NBQWdCLEdBQWhCLFVBQWlCLEtBQUssRUFBRSxJQUFJO1FBQ3hCLFNBQVM7UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRCw0QkFBSSxHQUFKO1FBQ0ksSUFBSSxvQkFBb0IsR0FBRyxJQUFJLENBQUMseUJBQXlCLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEYsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN4RCxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUN4QyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztRQUN0QyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBQyxHQUFHLENBQUM7UUFDdkQsb0JBQW9CLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDNUIscUJBQVMsQ0FBQyxJQUFJLENBQUMscUJBQVMsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDNUQsQ0FBQztJQXpDZ0IsYUFBYTtRQURqQyxPQUFPO09BQ2EsYUFBYSxDQTBDakM7SUFBRCxvQkFBQztDQTFDRCxBQTBDQyxDQTFDMEMsZ0JBQU0sR0EwQ2hEO2tCQTFDb0IsYUFBYSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgQnVsbGV0IGZyb20gXCIuL0J1bGxldFwiO1xyXG5pbXBvcnQgRmFjYWRlIGZyb20gXCIuLi8uLi8uLi8uLi9mcmFtZXdvcmsvZmFjYWRlL0ZhY2FkZVwiO1xyXG5pbXBvcnQge0dhbWVQcm94eX0gZnJvbSBcIi4uLy4uL2dhbWUvR2FtZVByb3h5XCI7XHJcbmltcG9ydCB7RXhjZWxDb25maWd9IGZyb20gXCIuLi8uLi8uLi8uLi9mcmFtZXdvcmsvY29uZmlnL0V4Y2VsQ29uZmlnXCI7XHJcbmltcG9ydCB7RXhjZWxUYWJsZU5hbWVzfSBmcm9tIFwiLi4vLi4vY29uZmlnL0V4Y2VsVGFibGVOYW1lc1wiO1xyXG5pbXBvcnQge1dvcmxkfSBmcm9tIFwiLi4vLi4vaW5mby9Xb3JsZFwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRPZkRpTGVpIGV4dGVuZHMgQnVsbGV0IHtcclxuXHJcbiAgICBwcml2YXRlIF9nYW1lRXhwbG9zaXZlc0NvbnRyb2xsZXIgPSBudWxsO1xyXG5cclxuXHJcbiAgICBzdHJpa2Uob3RoZXIsIHNlbGYpOiB2b2lkIHtcclxuICAgICAgICAvLyBzdXBlci5zdHJpa2Uob3RoZXIsIHNlbGYpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXQoaWQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYnVsbGV0SWQgPSBpZDtcclxuICAgICAgICBsZXQgY2ZnID0gRXhjZWxDb25maWcuZ2V0RXhjZWxUYWJsZShFeGNlbFRhYmxlTmFtZXMuUHJvcClbdGhpcy5idWxsZXRJZC0xXTtcclxuICAgICAgICB0aGlzLmJUaHJvdWdodCA9IGNmZ1sncGllcmNlJ10gPT09IDE7XHJcbiAgICAgICAgdGhpcy5yZXBlbCA9IGNmZ1sncmVwZWwnXTtcclxuICAgICAgICB0aGlzLnN0aWZmID0gY2ZnWydzdGlmZiddO1xyXG4gICAgICAgIGxldCBjb25maWcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5XZWFwb24pWzBdO1xyXG4gICAgICAgIHRoaXMuaHVydCA9IE1hdGguZmxvb3IoY29uZmlnWydodXJ0J10qV29ybGQuTXkuYXJtb3J5Lmh1cnRNdWxPZigxKSkqY2ZnWydodXJ0J107XHJcbiAgICB9XHJcblxyXG5cclxuICAgIG9uTG9hZCgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5vbkxvYWQoKTtcclxuICAgICAgICB0aGlzLl9nYW1lRXhwbG9zaXZlc0NvbnRyb2xsZXIgPSBGYWNhZGUuZmluZENvbXBvbmVudChcIkdhbWVTY2VuZVwiLCBcIkdhbWVFeHBsb3NpdmVzQ29udHJvbGxlclwiKTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIG9uQ29sbGlzaW9uRW50ZXIob3RoZXIsIHNlbGYpOiB2b2lkIHtcclxuICAgICAgICAvKiog54iG54K4ICovXHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuYm9vbSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGJvb20oKXtcclxuICAgICAgICBsZXQgZXhwbG9zaXZlSHVvSmlhblRvbmcgPSB0aGlzLl9nYW1lRXhwbG9zaXZlc0NvbnRyb2xsZXIuZ2V0SW5hY3RpdmVFeHBsb3NpdmUoOSk7XHJcbiAgICAgICAgZXhwbG9zaXZlSHVvSmlhblRvbmcubm9kZS5wb3NpdGlvbiA9IHRoaXMubm9kZS5wb3NpdGlvbjtcclxuICAgICAgICBleHBsb3NpdmVIdW9KaWFuVG9uZy5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgZXhwbG9zaXZlSHVvSmlhblRvbmcubm9kZS5zY2FsZSA9IDAuNTtcclxuICAgICAgICBleHBsb3NpdmVIdW9KaWFuVG9uZy5ub2RlLnJvdGF0aW9uID0gTWF0aC5yYW5kb20oKSozNjA7XHJcbiAgICAgICAgZXhwbG9zaXZlSHVvSmlhblRvbmcuYm9vbSgpO1xyXG4gICAgICAgIEdhbWVQcm94eS5lbWl0KEdhbWVQcm94eS5FdmVudC5TaGFrZVNjcmVlbiwgMC4wOCwgMiwgMik7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletOfXuanFengHuoPao.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e66bcwOmhtNi6ipYqY6Dey8', 'BulletOfXuanFengHuoPao');
// script/app/entities/bullet/BulletOfXuanFengHuoPao.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var World_1 = require("../../info/World");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletOfXuanFengHuoPao = /** @class */ (function (_super) {
    __extends(BulletOfXuanFengHuoPao, _super);
    function BulletOfXuanFengHuoPao() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletOfXuanFengHuoPao.prototype.strike = function (other, self) {
        // super.strike(other, self);
    };
    BulletOfXuanFengHuoPao.prototype.init = function (id) {
        this.bulletId = id;
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop)[this.bulletId - 1];
        this.bThrought = cfg['pierce'] === 1;
        this.repel = cfg['repel'];
        this.stiff = cfg['stiff'];
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
        this.hurt = Math.floor(config['hurt'] * World_1.World.My.armory.hurtMulOf(1)) * cfg['hurt'];
    };
    BulletOfXuanFengHuoPao = __decorate([
        ccclass
    ], BulletOfXuanFengHuoPao);
    return BulletOfXuanFengHuoPao;
}(Bullet_1.default));
exports.default = BulletOfXuanFengHuoPao;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRPZlh1YW5GZW5nSHVvUGFvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxtQ0FBOEI7QUFDOUIsd0VBQXFFO0FBQ3JFLGdFQUE2RDtBQUM3RCwwQ0FBdUM7QUFFakMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBb0QsMENBQU07SUFBMUQ7O0lBZ0JBLENBQUM7SUFiRyx1Q0FBTSxHQUFOLFVBQU8sS0FBSyxFQUFFLElBQUk7UUFDZCw2QkFBNkI7SUFDakMsQ0FBQztJQUVELHFDQUFJLEdBQUosVUFBSyxFQUFVO1FBQ1gsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7UUFDbkIsSUFBSSxHQUFHLEdBQUcseUJBQVcsQ0FBQyxhQUFhLENBQUMsaUNBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNFLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxQixJQUFJLE1BQU0sR0FBRyx5QkFBVyxDQUFDLGFBQWEsQ0FBQyxpQ0FBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xFLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUMsYUFBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3BGLENBQUM7SUFmZ0Isc0JBQXNCO1FBRDFDLE9BQU87T0FDYSxzQkFBc0IsQ0FnQjFDO0lBQUQsNkJBQUM7Q0FoQkQsQUFnQkMsQ0FoQm1ELGdCQUFNLEdBZ0J6RDtrQkFoQm9CLHNCQUFzQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgQnVsbGV0IGZyb20gXCIuL0J1bGxldFwiO1xyXG5pbXBvcnQge0V4Y2VsQ29uZmlnfSBmcm9tIFwiLi4vLi4vLi4vLi4vZnJhbWV3b3JrL2NvbmZpZy9FeGNlbENvbmZpZ1wiO1xyXG5pbXBvcnQge0V4Y2VsVGFibGVOYW1lc30gZnJvbSBcIi4uLy4uL2NvbmZpZy9FeGNlbFRhYmxlTmFtZXNcIjtcclxuaW1wb3J0IHtXb3JsZH0gZnJvbSBcIi4uLy4uL2luZm8vV29ybGRcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0T2ZYdWFuRmVuZ0h1b1BhbyBleHRlbmRzIEJ1bGxldCB7XHJcblxyXG5cclxuICAgIHN0cmlrZShvdGhlciwgc2VsZik6IHZvaWQge1xyXG4gICAgICAgIC8vIHN1cGVyLnN0cmlrZShvdGhlciwgc2VsZik7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdChpZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5idWxsZXRJZCA9IGlkO1xyXG4gICAgICAgIGxldCBjZmcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5Qcm9wKVt0aGlzLmJ1bGxldElkLTFdO1xyXG4gICAgICAgIHRoaXMuYlRocm91Z2h0ID0gY2ZnWydwaWVyY2UnXSA9PT0gMTtcclxuICAgICAgICB0aGlzLnJlcGVsID0gY2ZnWydyZXBlbCddO1xyXG4gICAgICAgIHRoaXMuc3RpZmYgPSBjZmdbJ3N0aWZmJ107XHJcbiAgICAgICAgbGV0IGNvbmZpZyA9IEV4Y2VsQ29uZmlnLmdldEV4Y2VsVGFibGUoRXhjZWxUYWJsZU5hbWVzLldlYXBvbilbMF07XHJcbiAgICAgICAgdGhpcy5odXJ0ID0gTWF0aC5mbG9vcihjb25maWdbJ2h1cnQnXSpXb3JsZC5NeS5hcm1vcnkuaHVydE11bE9mKDEpKSpjZmdbJ2h1cnQnXTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletOfJianGuangSi.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c0d80OY65BAjLn62n5cq+8P', 'BulletOfJianGuangSi');
// script/app/entities/bullet/BulletOfJianGuangSi.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var World_1 = require("../../info/World");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletOfJianGuangSi = /** @class */ (function (_super) {
    __extends(BulletOfJianGuangSi, _super);
    function BulletOfJianGuangSi() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._ske = null;
        return _this;
    }
    BulletOfJianGuangSi.prototype.init = function (id) {
        this.bulletId = id;
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop)[this.bulletId - 1];
        this.bThrought = cfg['pierce'] === 1;
        this.repel = cfg['repel'];
        this.stiff = cfg['stiff'];
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
        this.hurt = Math.floor(config['hurt'] * World_1.World.My.armory.hurtMulOf(1)) * cfg['hurt'];
    };
    BulletOfJianGuangSi.prototype.onLoad = function () {
        var _this = this;
        _super.prototype.onLoad.call(this);
        this._ske = this.getComponent(sp.Skeleton);
        this._ske.setCompleteListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            _this.node.active = false;
        });
    };
    BulletOfJianGuangSi.prototype.onCollisionEnter = function (other, self) {
    };
    BulletOfJianGuangSi.prototype.execute = function () {
        var _this = this;
        this._ske.setAnimation(0, "614", false);
        this.node.runAction(cc.sequence(cc.delayTime(2), cc.callFunc(function () {
            /** 对所有敌人造成伤害 */
            // console.log("对所有敌人造成伤害");
            window['GameEnemysController'].allAliveEnemy().forEach(function (value) { return value.hp -= _this.hurt; });
        })));
    };
    BulletOfJianGuangSi = __decorate([
        ccclass
    ], BulletOfJianGuangSi);
    return BulletOfJianGuangSi;
}(Bullet_1.default));
exports.default = BulletOfJianGuangSi;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRPZkppYW5HdWFuZ1NpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxtQ0FBOEI7QUFFOUIsMENBQXVDO0FBQ3ZDLHdFQUFxRTtBQUNyRSxnRUFBNkQ7QUFFdkQsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBaUQsdUNBQU07SUFBdkQ7UUFBQSxxRUFxQ0M7UUFuQ1csVUFBSSxHQUFlLElBQUksQ0FBQzs7SUFtQ3BDLENBQUM7SUFoQ0csa0NBQUksR0FBSixVQUFLLEVBQVU7UUFDWCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNuQixJQUFJLEdBQUcsR0FBRyx5QkFBVyxDQUFDLGFBQWEsQ0FBQyxpQ0FBZSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzFCLElBQUksTUFBTSxHQUFHLHlCQUFXLENBQUMsYUFBYSxDQUFDLGlDQUFlLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbEUsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBQyxhQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEYsQ0FBQztJQUdELG9DQUFNLEdBQU47UUFBQSxpQkFPQztRQU5HLGlCQUFNLE1BQU0sV0FBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFVBQUMsVUFBVSxFQUFFLFNBQVM7WUFDaEQsSUFBSSxJQUFJLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztZQUNqRSxLQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBR0QsOENBQWdCLEdBQWhCLFVBQWlCLEtBQUssRUFBRSxJQUFJO0lBQzVCLENBQUM7SUFFRCxxQ0FBTyxHQUFQO1FBQUEsaUJBT0M7UUFORyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDO1lBQ3pELGdCQUFnQjtZQUNoQiw0QkFBNEI7WUFDNUIsTUFBTSxDQUFDLHNCQUFzQixDQUFDLENBQUMsYUFBYSxFQUFFLENBQUMsT0FBTyxDQUFDLFVBQUEsS0FBSyxJQUFFLE9BQUEsS0FBSyxDQUFDLEVBQUUsSUFBSSxLQUFJLENBQUMsSUFBSSxFQUFyQixDQUFxQixDQUFDLENBQUM7UUFDekYsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1QsQ0FBQztJQXBDZ0IsbUJBQW1CO1FBRHZDLE9BQU87T0FDYSxtQkFBbUIsQ0FxQ3ZDO0lBQUQsMEJBQUM7Q0FyQ0QsQUFxQ0MsQ0FyQ2dELGdCQUFNLEdBcUN0RDtrQkFyQ29CLG1CQUFtQiIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgQnVsbGV0IGZyb20gXCIuL0J1bGxldFwiO1xyXG5pbXBvcnQgRmFjYWRlIGZyb20gXCIuLi8uLi8uLi8uLi9mcmFtZXdvcmsvZmFjYWRlL0ZhY2FkZVwiO1xyXG5pbXBvcnQge1dvcmxkfSBmcm9tIFwiLi4vLi4vaW5mby9Xb3JsZFwiO1xyXG5pbXBvcnQge0V4Y2VsQ29uZmlnfSBmcm9tIFwiLi4vLi4vLi4vLi4vZnJhbWV3b3JrL2NvbmZpZy9FeGNlbENvbmZpZ1wiO1xyXG5pbXBvcnQge0V4Y2VsVGFibGVOYW1lc30gZnJvbSBcIi4uLy4uL2NvbmZpZy9FeGNlbFRhYmxlTmFtZXNcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0T2ZKaWFuR3VhbmdTaSBleHRlbmRzIEJ1bGxldCB7XHJcblxyXG4gICAgcHJpdmF0ZSBfc2tlOnNwLlNrZWxldG9uID0gbnVsbDtcclxuXHJcblxyXG4gICAgaW5pdChpZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5idWxsZXRJZCA9IGlkO1xyXG4gICAgICAgIGxldCBjZmcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5Qcm9wKVt0aGlzLmJ1bGxldElkLTFdO1xyXG4gICAgICAgIHRoaXMuYlRocm91Z2h0ID0gY2ZnWydwaWVyY2UnXSA9PT0gMTtcclxuICAgICAgICB0aGlzLnJlcGVsID0gY2ZnWydyZXBlbCddO1xyXG4gICAgICAgIHRoaXMuc3RpZmYgPSBjZmdbJ3N0aWZmJ107XHJcbiAgICAgICAgbGV0IGNvbmZpZyA9IEV4Y2VsQ29uZmlnLmdldEV4Y2VsVGFibGUoRXhjZWxUYWJsZU5hbWVzLldlYXBvbilbMF07XHJcbiAgICAgICAgdGhpcy5odXJ0ID0gTWF0aC5mbG9vcihjb25maWdbJ2h1cnQnXSpXb3JsZC5NeS5hcm1vcnkuaHVydE11bE9mKDEpKSpjZmdbJ2h1cnQnXTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgb25Mb2FkKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLm9uTG9hZCgpO1xyXG4gICAgICAgIHRoaXMuX3NrZSA9IHRoaXMuZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKTtcclxuICAgICAgICB0aGlzLl9za2Uuc2V0Q29tcGxldGVMaXN0ZW5lcigodHJhY2tFbnRyeSwgbG9vcENvdW50KSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBuYW1lID0gdHJhY2tFbnRyeS5hbmltYXRpb24gPyB0cmFja0VudHJ5LmFuaW1hdGlvbi5uYW1lIDogJyc7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgb25Db2xsaXNpb25FbnRlcihvdGhlciwgc2VsZik6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIGV4ZWN1dGUoKXtcclxuICAgICAgICB0aGlzLl9za2Uuc2V0QW5pbWF0aW9uKDAsIFwiNjE0XCIsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLmRlbGF5VGltZSgyKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgLyoqIOWvueaJgOacieaVjOS6uumAoOaIkOS8pOWusyAqL1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIuWvueaJgOacieaVjOS6uumAoOaIkOS8pOWus1wiKTtcclxuICAgICAgICAgICAgd2luZG93WydHYW1lRW5lbXlzQ29udHJvbGxlciddLmFsbEFsaXZlRW5lbXkoKS5mb3JFYWNoKHZhbHVlPT52YWx1ZS5ocCAtPSB0aGlzLmh1cnQpO1xyXG4gICAgICAgIH0pKSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletOfLighting.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5a245PWUhJNNYI42/j5E9XP', 'BulletOfLighting');
// script/app/entities/bullet/BulletOfLighting.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var Enemy_1 = require("../enemy/Enemy");
var World_1 = require("../../info/World");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletOfLighting = /** @class */ (function (_super) {
    __extends(BulletOfLighting, _super);
    function BulletOfLighting() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._ske = null;
        _this._lightEnemys = [];
        return _this;
    }
    BulletOfLighting.prototype.onDisable = function () {
        _super.prototype.onDisable.call(this);
        this._lightEnemys.length = 0;
    };
    BulletOfLighting.prototype.strike = function (other, self) {
        var gameBulletsController = window['GameBulletsController'];
        this._lightEnemys.push(other.getComponent(Enemy_1.default));
        var bulletStrike = gameBulletsController.getInactiveBulletStrike(10);
        bulletStrike.node.active = true;
        bulletStrike.node.position = cc.v2();
        bulletStrike.node.rotation = this.node.rotation;
        bulletStrike.node.setContentSize(other.node.getContentSize());
        bulletStrike.node.removeFromParent(false);
        bulletStrike.node.setParent(other.node);
        var spriteNode = bulletStrike.spriteNode;
        bulletStrike.node.rotation = Math.random() * 360;
        bulletStrike.node.runAction(cc.sequence(cc.repeat(cc.sequence(cc.delayTime(0.05), cc.callFunc(function () {
            spriteNode.active = !spriteNode.active;
            // bulletStrike.node.rotation = Math.random()*360;
        })), 6), cc.callFunc(function () {
            bulletStrike.node.stopAllActions();
            bulletStrike.node.active = false;
            bulletStrike.node.removeFromParent(false);
            bulletStrike.node.setParent(gameBulletsController.bulletLayer);
        })));
    };
    BulletOfLighting.prototype.init = function (id) {
        this.bulletId = id;
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop)[this.bulletId - 1];
        this.bThrought = cfg['pierce'] === 1;
        this.repel = cfg['repel'];
        this.stiff = cfg['stiff'];
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
        this.hurt = Math.floor(config['hurt'] * World_1.World.My.armory.hurtMulOf(1)) * cfg['hurt'];
    };
    BulletOfLighting.prototype.onLoad = function () {
        var _this = this;
        _super.prototype.onLoad.call(this);
        this._ske = this.getComponent(sp.Skeleton);
        this._ske.setCompleteListener(function (trackEntry, loopCount) {
            var _a;
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            /** 寻找新的怪物攻击 */
            /** 找最近的怪生成闪电 */
            if (_this._lightEnemys.length > 0 && _this._lightEnemys.length < 6) {
                var list = window['GameEnemysController'].allAliveAndInScreenEnemy().filter(function (value) { return !_this._lightEnemys.includes(value); });
                if (list.length > 0) {
                    var minDistance_1 = -1;
                    var enemy_1 = null;
                    list.forEach(function (value) {
                        var distance = _this.node.position.sub(value.node.position).mag();
                        if (minDistance_1 < 0 || distance < minDistance_1) {
                            minDistance_1 = distance;
                            enemy_1 = value;
                        }
                    });
                    /** 生成闪电 */
                    var bullet = window['GameBulletsController'].getInactivePropBullet(6);
                    bullet.node.position = _this._lightEnemys[_this._lightEnemys.length - 1].node.position;
                    (_a = bullet._lightEnemys).push.apply(_a, _this._lightEnemys);
                    bullet.joint(enemy_1.node.position);
                }
            }
            _this.node.active = false;
        });
    };
    BulletOfLighting.prototype.joint = function (pos) {
        var sub = pos.sub(this.node.position);
        var distance = sub.mag();
        this.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(sub.y, sub.x));
        this.node.scaleY = distance / 380;
        this.node.active = true;
        this._ske.setAnimation(0, "animation", false);
    };
    BulletOfLighting = __decorate([
        ccclass
    ], BulletOfLighting);
    return BulletOfLighting;
}(Bullet_1.default));
exports.default = BulletOfLighting;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletOfFangHuDun.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd6cb29kVNJHs4dOm8wuufsN', 'BulletOfFangHuDun');
// script/app/entities/bullet/BulletOfFangHuDun.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var World_1 = require("../../info/World");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletOfFangHuDun = /** @class */ (function (_super) {
    __extends(BulletOfFangHuDun, _super);
    function BulletOfFangHuDun() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._ske = null;
        return _this;
    }
    BulletOfFangHuDun.prototype.strike = function (other, self) {
        this._ske.setAnimation(0, "transition", false);
    };
    BulletOfFangHuDun.prototype.init = function (id) {
        this.bulletId = id;
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop)[this.bulletId - 1];
        this.bThrought = cfg['pierce'] === 1;
        this.repel = cfg['repel'];
        this.stiff = cfg['stiff'];
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
        this.hurt = Math.floor(config['hurt'] * World_1.World.My.armory.hurtMulOf(1)) * cfg['hurt'];
    };
    BulletOfFangHuDun.prototype.onLoad = function () {
        var _this = this;
        _super.prototype.onLoad.call(this);
        this.init(5);
        this._ske = this.getComponent(sp.Skeleton);
        this._ske.setCompleteListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            // console.log("=============>completeLis..", name);
            if (name == "start" || name == "transition") {
                _this._ske.setAnimation(0, "loops", false);
                if (!_this.node.getActionByTag(114)) {
                    var speedAction = cc.speed(cc.repeatForever(cc.rotateBy(1.25, 720)), 0);
                    speedAction.setTag(114);
                    _this.node.runAction(speedAction);
                    cc.tween(speedAction)
                        .to(1, { _speed: 1 }, { easing: 'sineIn' })
                        .start();
                }
            }
        });
        window['GameRoleController'].role.node.on(cc.Node.EventType.POSITION_CHANGED, function () {
            _this.node.position = window['GameRoleController'].role.node.position;
        });
    };
    BulletOfFangHuDun.prototype.blink = function () {
        this.unblink();
        var action = cc.repeatForever(cc.sequence(cc.fadeTo(0.1, 0), cc.fadeTo(0.1, 255)));
        action.setTag(485);
        this.node.runAction(action);
    };
    BulletOfFangHuDun.prototype.unblink = function () {
        this.node.stopActionByTag(485);
        this.node.opacity = 255;
    };
    BulletOfFangHuDun.prototype.onDisable = function () {
        this.unblink();
        _super.prototype.onDisable.call(this);
        window['GameRoleController'].role.spaceCircleCollider.radius = 25;
    };
    BulletOfFangHuDun.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
        window['GameRoleController'].role.spaceCircleCollider.radius = 80;
        this.node.position = window['GameRoleController'].role.node.position;
        this.node.stopAllActions();
        this._ske.setAnimation(0, "start", false);
    };
    /*update(dt:number){
        if (GameProxy.pauseGame)return;
        if (this.node.color.getR() < 255){
            this.node.color.setR(this.node.color.getR() + 1);
        }
        if (this.node.color.getG() < 255){
            this.node.color.setG(this.node.color.getG() + 1);
        }
        if (this.node.color.getB() < 255){
            this.node.color.setB(this.node.color.getB() + 1);
        }
        this._impenetrableDefenceCD -= dt;
        if (this._impenetrableDefenceCD <= 0){
            this.node.active = false;
        }
    }*/
    BulletOfFangHuDun.prototype.onCollisionStay = function (other, self) {
        this.strike(other, self);
    };
    BulletOfFangHuDun.prototype.collisionEnemy = function (other, self) {
        this.strike(other, self);
        var enemy = other.getComponent('Enemy');
        /** 僵硬 */
        if (this.stiff > 0) {
            enemy.doStiff(this.stiff);
        }
        /** 减速 */
        enemy.doSpeedcut();
        /** 击退效果 */
        this.doRepeal(enemy, this.repel);
        /** 飘血效果 */
        var damage = this.hurt;
        if (damage > 0) {
            enemy.hp -= damage;
        }
    };
    BulletOfFangHuDun.prototype.doRepeal = function (enemy, repel) {
        enemy.doRepel(enemy.node.position.sub(this.node.position).normalize(), repel);
    };
    BulletOfFangHuDun = __decorate([
        ccclass
    ], BulletOfFangHuDun);
    return BulletOfFangHuDun;
}(Bullet_1.default));
exports.default = BulletOfFangHuDun;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletOfEnemy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'be01bjDEqJBnot/Ow1MalHA', 'BulletOfEnemy');
// script/app/entities/bullet/BulletOfEnemy.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var GameProxy_1 = require("../../game/GameProxy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletOfEnemy = /** @class */ (function (_super) {
    __extends(BulletOfEnemy, _super);
    function BulletOfEnemy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletOfEnemy.prototype.init = function (id) {
        this.bulletId = id;
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Enemy)[id % 100 - 1];
        this.bThrought = false;
        this.hurt = Math.floor(config['hurt'] * GameProxy_1.GameProxy.enemyHurtMulOf(config['id']));
        this.repel = 0;
        this.stiff = 0;
    };
    BulletOfEnemy.prototype.onEnable = function () {
        window['GameBulletsController'].enemyBullets.push(this);
    };
    BulletOfEnemy.prototype.onDisable = function () {
        this.node.stopAllActions();
        this._contacts.length = 0;
        var gameBulletsController = window['GameBulletsController'];
        gameBulletsController.enemyBullets.splice(gameBulletsController.enemyBullets.indexOf(this), 1);
    };
    BulletOfEnemy.prototype.onCollisionEnter = function (other, self) {
        console.log("角色被子弹击中");
        window['GameRoleController'].hp -= this.hurt;
        if (!this.bThrought) {
            this.node.active = false;
        }
    };
    BulletOfEnemy.prototype.onCollisionStay = function (other, self) {
        // super.onCollisionStay(other, self);
    };
    BulletOfEnemy.prototype.onCollisionExit = function (other, self) {
        // super.onCollisionExit(other, self);
    };
    BulletOfEnemy = __decorate([
        ccclass
    ], BulletOfEnemy);
    return BulletOfEnemy;
}(Bullet_1.default));
exports.default = BulletOfEnemy;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRPZkVuZW15LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxtQ0FBOEI7QUFDOUIsZ0VBQTZEO0FBQzdELHdFQUFxRTtBQUNyRSxrREFBK0M7QUFFekMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBMkMsaUNBQU07SUFBakQ7O0lBc0NBLENBQUM7SUFuQ0csNEJBQUksR0FBSixVQUFLLEVBQVU7UUFDWCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNuQixJQUFJLE1BQU0sR0FBRyx5QkFBVyxDQUFDLGFBQWEsQ0FBQyxpQ0FBZSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsR0FBQyxHQUFHLEdBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFDdkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxxQkFBUyxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hGLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDbkIsQ0FBQztJQUVELGdDQUFRLEdBQVI7UUFDSSxNQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRCxpQ0FBUyxHQUFUO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDMUIsSUFBSSxxQkFBcUIsR0FBRyxNQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUM1RCxxQkFBcUIsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLHFCQUFxQixDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDbkcsQ0FBQztJQUVELHdDQUFnQixHQUFoQixVQUFpQixLQUFLLEVBQUUsSUFBSTtRQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFDO1lBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztTQUM1QjtJQUNMLENBQUM7SUFFRCx1Q0FBZSxHQUFmLFVBQWdCLEtBQUssRUFBRSxJQUFJO1FBQ3ZCLHNDQUFzQztJQUMxQyxDQUFDO0lBRUQsdUNBQWUsR0FBZixVQUFnQixLQUFLLEVBQUUsSUFBSTtRQUN2QixzQ0FBc0M7SUFDMUMsQ0FBQztJQXJDZ0IsYUFBYTtRQURqQyxPQUFPO09BQ2EsYUFBYSxDQXNDakM7SUFBRCxvQkFBQztDQXRDRCxBQXNDQyxDQXRDMEMsZ0JBQU0sR0FzQ2hEO2tCQXRDb0IsYUFBYSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgQnVsbGV0IGZyb20gXCIuL0J1bGxldFwiO1xyXG5pbXBvcnQge0V4Y2VsVGFibGVOYW1lc30gZnJvbSBcIi4uLy4uL2NvbmZpZy9FeGNlbFRhYmxlTmFtZXNcIjtcclxuaW1wb3J0IHtFeGNlbENvbmZpZ30gZnJvbSBcIi4uLy4uLy4uLy4uL2ZyYW1ld29yay9jb25maWcvRXhjZWxDb25maWdcIjtcclxuaW1wb3J0IHtHYW1lUHJveHl9IGZyb20gXCIuLi8uLi9nYW1lL0dhbWVQcm94eVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRPZkVuZW15IGV4dGVuZHMgQnVsbGV0IHtcclxuXHJcblxyXG4gICAgaW5pdChpZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5idWxsZXRJZCA9IGlkO1xyXG4gICAgICAgIGxldCBjb25maWcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5FbmVteSlbaWQlMTAwLTFdO1xyXG4gICAgICAgIHRoaXMuYlRocm91Z2h0ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5odXJ0ID0gTWF0aC5mbG9vcihjb25maWdbJ2h1cnQnXSAqIEdhbWVQcm94eS5lbmVteUh1cnRNdWxPZihjb25maWdbJ2lkJ10pKTtcclxuICAgICAgICB0aGlzLnJlcGVsID0gMDtcclxuICAgICAgICB0aGlzLnN0aWZmID0gMDtcclxuICAgIH1cclxuXHJcbiAgICBvbkVuYWJsZSgpe1xyXG4gICAgICAgIHdpbmRvd1snR2FtZUJ1bGxldHNDb250cm9sbGVyJ10uZW5lbXlCdWxsZXRzLnB1c2godGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCl7XHJcbiAgICAgICAgdGhpcy5ub2RlLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICAgICAgdGhpcy5fY29udGFjdHMubGVuZ3RoID0gMDtcclxuICAgICAgICBsZXQgZ2FtZUJ1bGxldHNDb250cm9sbGVyID0gd2luZG93WydHYW1lQnVsbGV0c0NvbnRyb2xsZXInXTtcclxuICAgICAgICBnYW1lQnVsbGV0c0NvbnRyb2xsZXIuZW5lbXlCdWxsZXRzLnNwbGljZShnYW1lQnVsbGV0c0NvbnRyb2xsZXIuZW5lbXlCdWxsZXRzLmluZGV4T2YodGhpcyksIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ29sbGlzaW9uRW50ZXIob3RoZXIsIHNlbGYpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIuinkuiJsuiiq+WtkOW8ueWHu+S4rVwiKTtcclxuICAgICAgICB3aW5kb3dbJ0dhbWVSb2xlQ29udHJvbGxlciddLmhwIC09IHRoaXMuaHVydDtcclxuICAgICAgICBpZiAoIXRoaXMuYlRocm91Z2h0KXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbkNvbGxpc2lvblN0YXkob3RoZXIsIHNlbGYpIHtcclxuICAgICAgICAvLyBzdXBlci5vbkNvbGxpc2lvblN0YXkob3RoZXIsIHNlbGYpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ29sbGlzaW9uRXhpdChvdGhlciwgc2VsZikge1xyXG4gICAgICAgIC8vIHN1cGVyLm9uQ29sbGlzaW9uRXhpdChvdGhlciwgc2VsZik7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletOfShouLei.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '083284vH5tL8raqVw3y/gbv', 'BulletOfShouLei');
// script/app/entities/bullet/BulletOfShouLei.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var Facade_1 = require("../../../../framework/facade/Facade");
var GameProxy_1 = require("../../game/GameProxy");
var World_1 = require("../../info/World");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletOfShouLei = /** @class */ (function (_super) {
    __extends(BulletOfShouLei, _super);
    function BulletOfShouLei() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._ske = null;
        _this._bounds = cc.rect();
        _this._gameExplosivesController = null;
        return _this;
    }
    BulletOfShouLei.prototype.strike = function (other, self) {
        // super.strike(other, self);
    };
    BulletOfShouLei.prototype.init = function (id) {
        this.bulletId = id;
        var cfg = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Prop)[this.bulletId - 1];
        this.bThrought = cfg['pierce'] === 1;
        this.repel = cfg['repel'];
        this.stiff = cfg['stiff'];
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[0];
        this.hurt = Math.floor(config['hurt'] * World_1.World.My.armory.hurtMulOf(1)) * cfg['hurt'];
        var bgNode = cc.find('Canvas').getChildByName('GameScene').getChildByName('shakeNode').getChildByName('bg');
        this._bounds.x = -bgNode.width / 2;
        this._bounds.y = -bgNode.height / 2;
        this._bounds.width = bgNode.width;
        this._bounds.height = bgNode.height;
    };
    BulletOfShouLei.prototype.onLoad = function () {
        _super.prototype.onLoad.call(this);
        this._ske = this.getComponent(sp.Skeleton);
        this._gameExplosivesController = Facade_1.default.findComponent("GameScene", "GameExplosivesController");
    };
    BulletOfShouLei.prototype.move = function (dir) {
        var _this = this;
        if (this.node.x <= this._bounds.xMin || this.node.x >= this._bounds.xMax || this.node.y <= this._bounds.yMin || this.node.y >= this._bounds.yMax) {
            this.node.active = false;
            return;
        }
        this._ske.setAnimation(0, "animation", true);
        /** 计算终点 */
        var destPos = dir.mul(this._bounds.height + this._bounds.width);
        var intersections = [];
        if (dir.x > 0) {
            //右边界
            if (destPos.x >= this._bounds.xMax) {
                var point = cc.v2();
                if (cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMax, this._bounds.yMin), cc.v2(this._bounds.xMax, this._bounds.yMax), point)) {
                    intersections.push(point);
                }
            }
        }
        else if (dir.x < 0) {
            //左边界
            if (destPos.x <= this._bounds.xMin) {
                var point = cc.v2();
                if (cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMin), cc.v2(this._bounds.xMin, this._bounds.yMax), point)) {
                    intersections.push(point);
                }
            }
        }
        if (dir.y > 0) {
            //上边界
            if (destPos.y >= this._bounds.yMax) {
                var point = cc.v2();
                if (cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMax), cc.v2(this._bounds.xMax, this._bounds.yMax), point)) {
                    intersections.push(point);
                }
            }
        }
        else if (dir.y < 0) {
            //上边界
            if (destPos.y <= this._bounds.yMin) {
                var point = cc.v2();
                if (cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMin), cc.v2(this._bounds.xMax, this._bounds.yMin), point)) {
                    intersections.push(point);
                }
            }
        }
        if (intersections.length > 0) {
            // console.log("重新计算destPos===>intersections", intersections);
            /** 重新计算destPos */
            if (intersections.length == 1) {
                destPos = intersections[0];
            }
            else {
                /** 取距离怪物最近的那个点 */
                var p = intersections[0];
                var minDistance = p.sub(this.node.position).mag();
                for (var i = 1; i < intersections.length; i++) {
                    var mag = intersections[i].sub(this.node.position).mag();
                    if (mag < minDistance) {
                        p = intersections[i];
                        minDistance = mag;
                    }
                }
                destPos = p;
            }
        }
        var distance = destPos.sub(this.node.position).mag();
        var speed = 50;
        var action = cc.sequence(cc.moveTo(distance / speed, destPos), cc.callFunc(function () {
            _this.node.active = false;
        }));
        this.node.runAction(action);
    };
    BulletOfShouLei.prototype.onCollisionEnter = function (other, self) {
        /** 爆炸 */
        this.node.active = false;
        this.boom();
    };
    BulletOfShouLei.prototype.boom = function () {
        var explosiveHuoJianTong = this._gameExplosivesController.getInactiveExplosive(9);
        explosiveHuoJianTong.node.position = this.node.position;
        explosiveHuoJianTong.node.active = true;
        explosiveHuoJianTong.node.scale = 0.5;
        explosiveHuoJianTong.node.rotation = Math.random() * 360;
        explosiveHuoJianTong.boom();
        GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.ShakeScreen, 0.08, 2, 2);
    };
    BulletOfShouLei = __decorate([
        ccclass
    ], BulletOfShouLei);
    return BulletOfShouLei;
}(Bullet_1.default));
exports.default = BulletOfShouLei;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletShanDianQiu.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd6485tJEkdMoIplWDIZNrRd', 'BulletShanDianQiu');
// script/app/entities/bullet/BulletShanDianQiu.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletShanDianQiu = /** @class */ (function (_super) {
    __extends(BulletShanDianQiu, _super);
    function BulletShanDianQiu() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletShanDianQiu.prototype.strike = function (other, self) {
        var gameBulletsController = window['GameBulletsController'];
        var bulletStrike = gameBulletsController.getInactiveBulletStrike(this.bulletId);
        bulletStrike.node.active = true;
        bulletStrike.node.position = cc.v2();
        bulletStrike.node.rotation = this.node.rotation;
        bulletStrike.node.setContentSize(other.node.getContentSize());
        bulletStrike.node.removeFromParent(false);
        bulletStrike.node.setParent(other.node);
        var spriteNode = bulletStrike.spriteNode;
        bulletStrike.node.rotation = Math.random() * 360;
        bulletStrike.node.runAction(cc.sequence(cc.repeat(cc.sequence(cc.delayTime(0.05), cc.callFunc(function () {
            spriteNode.active = !spriteNode.active;
            // bulletStrike.node.rotation = Math.random()*360;
        })), 6), cc.callFunc(function () {
            bulletStrike.node.stopAllActions();
            bulletStrike.node.active = false;
            bulletStrike.node.removeFromParent(false);
            bulletStrike.node.setParent(gameBulletsController.bulletLayer);
        })));
    };
    BulletShanDianQiu.prototype.fly = function (dir, distance, speed) {
        _super.prototype.fly.call(this, dir, distance, speed);
        this.node.scale = 0.3;
        this.node.runAction(cc.scaleTo(distance / speed, distance / 300));
    };
    BulletShanDianQiu = __decorate([
        ccclass
    ], BulletShanDianQiu);
    return BulletShanDianQiu;
}(Bullet_1.default));
exports.default = BulletShanDianQiu;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRTaGFuRGlhblFpdS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsbUNBQThCO0FBR3hCLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQStDLHFDQUFNO0lBQXJEOztJQXFDQSxDQUFDO0lBbkNHLGtDQUFNLEdBQU4sVUFBTyxLQUFLLEVBQUUsSUFBSTtRQUNkLElBQUkscUJBQXFCLEdBQUcsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUM7UUFDNUQsSUFBSSxZQUFZLEdBQUcscUJBQXFCLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hGLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNoQyxZQUFZLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDckMsWUFBWSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDaEQsWUFBWSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFDO1FBQzlELFlBQVksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUMsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRXhDLElBQUksVUFBVSxHQUEyQixZQUFhLENBQUMsVUFBVSxDQUFDO1FBQ2xFLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBQyxHQUFHLENBQUM7UUFDL0MsWUFBWSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FDbkMsRUFBRSxDQUFDLE1BQU0sQ0FDTCxFQUFFLENBQUMsUUFBUSxDQUNQLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQ2xCLEVBQUUsQ0FBQyxRQUFRLENBQUM7WUFDUixVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztZQUN2QyxrREFBa0Q7UUFDdEQsQ0FBQyxDQUFDLENBQ0wsRUFBRSxDQUFDLENBQUMsRUFDVCxFQUFFLENBQUMsUUFBUSxDQUFDO1lBQ1IsWUFBWSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUNuQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDakMsWUFBWSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMxQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxxQkFBcUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNuRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDYixDQUFDO0lBR0QsK0JBQUcsR0FBSCxVQUFJLEdBQVksRUFBRSxRQUFnQixFQUFFLEtBQWE7UUFDN0MsaUJBQU0sR0FBRyxZQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFDLEtBQUssRUFBRSxRQUFRLEdBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBcENnQixpQkFBaUI7UUFEckMsT0FBTztPQUNhLGlCQUFpQixDQXFDckM7SUFBRCx3QkFBQztDQXJDRCxBQXFDQyxDQXJDOEMsZ0JBQU0sR0FxQ3BEO2tCQXJDb0IsaUJBQWlCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXQgZnJvbSBcIi4vQnVsbGV0XCI7XHJcbmltcG9ydCBCdWxsZXRTdHJpa2VMaWdodG5pbmcgZnJvbSBcIi4uL2J1bGxldFN0cmlrZS9CdWxsZXRTdHJpa2VMaWdodG5pbmdcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0U2hhbkRpYW5RaXUgZXh0ZW5kcyBCdWxsZXQge1xyXG5cclxuICAgIHN0cmlrZShvdGhlciwgc2VsZik6IHZvaWQge1xyXG4gICAgICAgIGxldCBnYW1lQnVsbGV0c0NvbnRyb2xsZXIgPSB3aW5kb3dbJ0dhbWVCdWxsZXRzQ29udHJvbGxlciddO1xyXG4gICAgICAgIGxldCBidWxsZXRTdHJpa2UgPSBnYW1lQnVsbGV0c0NvbnRyb2xsZXIuZ2V0SW5hY3RpdmVCdWxsZXRTdHJpa2UodGhpcy5idWxsZXRJZCk7XHJcbiAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBidWxsZXRTdHJpa2Uubm9kZS5wb3NpdGlvbiA9IGNjLnYyKCk7XHJcbiAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUucm90YXRpb24gPSB0aGlzLm5vZGUucm90YXRpb247XHJcbiAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUuc2V0Q29udGVudFNpemUob3RoZXIubm9kZS5nZXRDb250ZW50U2l6ZSgpKTtcclxuICAgICAgICBidWxsZXRTdHJpa2Uubm9kZS5yZW1vdmVGcm9tUGFyZW50KGZhbHNlKTtcclxuICAgICAgICBidWxsZXRTdHJpa2Uubm9kZS5zZXRQYXJlbnQob3RoZXIubm9kZSk7XHJcblxyXG4gICAgICAgIGxldCBzcHJpdGVOb2RlID0gKDxCdWxsZXRTdHJpa2VMaWdodG5pbmc+YnVsbGV0U3RyaWtlKS5zcHJpdGVOb2RlO1xyXG4gICAgICAgIGJ1bGxldFN0cmlrZS5ub2RlLnJvdGF0aW9uID0gTWF0aC5yYW5kb20oKSozNjA7XHJcbiAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKFxyXG4gICAgICAgICAgICBjYy5yZXBlYXQoXHJcbiAgICAgICAgICAgICAgICBjYy5zZXF1ZW5jZShcclxuICAgICAgICAgICAgICAgICAgICBjYy5kZWxheVRpbWUoMC4wNSksXHJcbiAgICAgICAgICAgICAgICAgICAgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3ByaXRlTm9kZS5hY3RpdmUgPSAhc3ByaXRlTm9kZS5hY3RpdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGJ1bGxldFN0cmlrZS5ub2RlLnJvdGF0aW9uID0gTWF0aC5yYW5kb20oKSozNjA7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICksIDYpLFxyXG4gICAgICAgICAgICBjYy5jYWxsRnVuYygoKT0+e1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICAgICAgICAgIGJ1bGxldFN0cmlrZS5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0U3RyaWtlLm5vZGUucmVtb3ZlRnJvbVBhcmVudChmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICBidWxsZXRTdHJpa2Uubm9kZS5zZXRQYXJlbnQoZ2FtZUJ1bGxldHNDb250cm9sbGVyLmJ1bGxldExheWVyKTtcclxuICAgICAgICAgICAgfSkpKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgZmx5KGRpcjogY2MuVmVjMiwgZGlzdGFuY2U6IG51bWJlciwgc3BlZWQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLmZseShkaXIsIGRpc3RhbmNlLCBzcGVlZCk7XHJcbiAgICAgICAgdGhpcy5ub2RlLnNjYWxlID0gMC4zO1xyXG4gICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2NhbGVUbyhkaXN0YW5jZS9zcGVlZCwgZGlzdGFuY2UvMzAwKSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterJiGuang.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c2450ByS4xJTppJiZNkPck4', 'BulletEmitterJiGuang');
// script/app/entities/bulletEmitter/BulletEmitterJiGuang.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var BulletEmitterJiGuang = /** @class */ (function (_super) {
    __extends(BulletEmitterJiGuang, _super);
    function BulletEmitterJiGuang(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._bulletJiGuang = null;
        _this._bulletJiGuangSke = null;
        _this._role = null;
        _this._firingRange = 800;
        _this._interval = 0.05;
        _this._speed = 1500;
        return _this;
    }
    BulletEmitterJiGuang.prototype.onEnter = function () {
        var _this = this;
        var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JiGuang);
        bullet.collider.enabled = false;
        var ske = bullet.getComponent(sp.Skeleton);
        ske.setStartListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            if (name === "jiguang") {
                bullet.collider.enabled = true;
            }
        });
        ske.setCompleteListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            if (name === "xuneng") {
                ske.setAnimation(0, "jiguang", false);
            }
            else if (name === "jiguang") {
                _this.bulletCount--;
                bullet.collider.enabled = false;
                bullet.node.runAction(cc.sequence(cc.delayTime(0), cc.callFunc(function () {
                    if (!bullet.collider.enabled) {
                        bullet.node.active = false;
                    }
                })));
            }
        });
        this._bulletJiGuangSke = ske;
        this._bulletJiGuang = bullet;
        this._role = window['GameRoleController'].role;
        this.changeBulletPosition();
        this._role.node.on(cc.Node.EventType.POSITION_CHANGED, this.changeBulletPosition, this);
        this._role.node.on(cc.Node.EventType.ROTATION_CHANGED, this.changeBulletPosition, this);
    };
    BulletEmitterJiGuang.prototype.onExit = function () {
        this._bulletJiGuang.node.active = false;
        this._role.node.off(cc.Node.EventType.POSITION_CHANGED, this.changeBulletPosition, this);
        this._role.node.off(cc.Node.EventType.ROTATION_CHANGED, this.changeBulletPosition, this);
    };
    BulletEmitterJiGuang.prototype.changeBulletPosition = function () {
        this._bulletJiGuang.node.rotation = this._role.node.rotation;
        this._bulletJiGuang.node.position = this._role.node.position.add(cc.v2(0, 1).rotate(cc.misc.degreesToRadians(-this._role.node.rotation)).normalize().mul(this._role.gunTopNode.y + 20));
    };
    BulletEmitterJiGuang.prototype.fire = function (start, dir) {
        if (!this._bulletJiGuang.node.active) {
            this._bulletJiGuang.node.active = true;
            this._bulletJiGuangSke.setAnimation(0, "xuneng", false);
        }
        else if (this._bulletJiGuangSke.animation === "jiguang" && !this._bulletJiGuang.collider.enabled) {
            this._bulletJiGuangSke.setAnimation(0, "jiguang", false);
        }
    };
    return BulletEmitterJiGuang;
}(BulletEmitter_1.default));
exports.default = BulletEmitterJiGuang;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterPenZi.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ff0edq6VF9JqK8aSEOQPcB3', 'BulletEmitterPenZi');
// script/app/entities/bulletEmitter/BulletEmitterPenZi.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var World_1 = require("../../info/World");
var magnify = 1;
var BulletEmitterPenZi = /** @class */ (function (_super) {
    __extends(BulletEmitterPenZi, _super);
    function BulletEmitterPenZi(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._firingRange = 800;
        _this._interval = 0.05;
        _this._speed = 1500;
        return _this;
    }
    BulletEmitterPenZi.prototype.fire = function (start, dir) {
        this.bulletCount--;
        var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.PenZi);
        var ske = bullet.getComponent(sp.Skeleton);
        ske.setCompleteListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            bullet.node.active = false;
        });
        bullet.node.active = true;
        bullet.node.position = start;
        bullet.node.scale = magnify * World_1.World.My.armory.magnifyMul(bullet.bulletId);
        bullet.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
        ske.setAnimation(0, "animation", false);
    };
    return BulletEmitterPenZi;
}(BulletEmitter_1.default));
exports.default = BulletEmitterPenZi;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlclBlblppLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxpREFBNEM7QUFFNUMsMENBQXVDO0FBRXZDLElBQU0sT0FBTyxHQUFHLENBQUMsQ0FBQztBQUVsQjtJQUFnRCxzQ0FBYTtJQUV6RCw0QkFBWSxxQkFBMkM7UUFBdkQsWUFDSSxrQkFBTSxxQkFBcUIsQ0FBQyxTQUkvQjtRQUhHLEtBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDO1FBQ3hCLEtBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLEtBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDOztJQUN2QixDQUFDO0lBRUQsaUNBQUksR0FBSixVQUFLLEtBQWMsRUFBRSxHQUFZO1FBQzdCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsdUJBQWEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckYsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDM0MsR0FBRyxDQUFDLG1CQUFtQixDQUFDLFVBQUMsVUFBVSxFQUFFLFNBQVM7WUFDMUMsSUFBSSxJQUFJLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztZQUNqRSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUM7UUFDSCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDMUIsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sR0FBRyxhQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMvRSxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVMLHlCQUFDO0FBQUQsQ0F4QkEsQUF3QkMsQ0F4QitDLHVCQUFhLEdBd0I1RCIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgQnVsbGV0RW1pdHRlciBmcm9tIFwiLi9CdWxsZXRFbWl0dGVyXCI7XHJcbmltcG9ydCBHYW1lQnVsbGV0c0NvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2dhbWUvR2FtZUJ1bGxldHNDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7V29ybGR9IGZyb20gXCIuLi8uLi9pbmZvL1dvcmxkXCI7XHJcblxyXG5jb25zdCBtYWduaWZ5ID0gMTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldEVtaXR0ZXJQZW5aaSBleHRlbmRzIEJ1bGxldEVtaXR0ZXIge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGdhbWVCdWxsZXRzQ29udHJvbGxlcjpHYW1lQnVsbGV0c0NvbnRyb2xsZXIpe1xyXG4gICAgICAgIHN1cGVyKGdhbWVCdWxsZXRzQ29udHJvbGxlcik7XHJcbiAgICAgICAgdGhpcy5fZmlyaW5nUmFuZ2UgPSA4MDA7XHJcbiAgICAgICAgdGhpcy5faW50ZXJ2YWwgPSAwLjA1O1xyXG4gICAgICAgIHRoaXMuX3NwZWVkID0gMTUwMDtcclxuICAgIH1cclxuXHJcbiAgICBmaXJlKHN0YXJ0OiBjYy5WZWMyLCBkaXI6IGNjLlZlYzIpIHtcclxuICAgICAgICB0aGlzLmJ1bGxldENvdW50LS07XHJcbiAgICAgICAgbGV0IGJ1bGxldCA9IHRoaXMuZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0KEJ1bGxldEVtaXR0ZXIuVFlQRVMuUGVuWmkpO1xyXG4gICAgICAgIGxldCBza2UgPSBidWxsZXQuZ2V0Q29tcG9uZW50KHNwLlNrZWxldG9uKTtcclxuICAgICAgICBza2Uuc2V0Q29tcGxldGVMaXN0ZW5lcigodHJhY2tFbnRyeSwgbG9vcENvdW50KSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBuYW1lID0gdHJhY2tFbnRyeS5hbmltYXRpb24gPyB0cmFja0VudHJ5LmFuaW1hdGlvbi5uYW1lIDogJyc7XHJcbiAgICAgICAgICAgIGJ1bGxldC5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgYnVsbGV0Lm5vZGUucG9zaXRpb24gPSBzdGFydDtcclxuICAgICAgICBidWxsZXQubm9kZS5zY2FsZSA9IG1hZ25pZnkgKiBXb3JsZC5NeS5hcm1vcnkubWFnbmlmeU11bChidWxsZXQuYnVsbGV0SWQpO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLnJvdGF0aW9uID0gOTAgLSBjYy5taXNjLnJhZGlhbnNUb0RlZ3JlZXMoTWF0aC5hdGFuMihkaXIueSwgZGlyLngpKTtcclxuICAgICAgICBza2Uuc2V0QW5pbWF0aW9uKDAsIFwiYW5pbWF0aW9uXCIsIGZhbHNlKTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterJuJiQiang.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7e91aqtLv1DgokxbtjCsUYR', 'BulletEmitterJuJiQiang');
// script/app/entities/bulletEmitter/BulletEmitterJuJiQiang.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var BulletEmitterJuJiQiang = /** @class */ (function (_super) {
    __extends(BulletEmitterJuJiQiang, _super);
    function BulletEmitterJuJiQiang(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._firingRange = 2000;
        _this._interval = 0.5;
        _this._speed = 2000;
        return _this;
    }
    BulletEmitterJuJiQiang.prototype.fire = function (start, dir) {
        this.bulletCount--;
        var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JuJiQiang);
        bullet.node.active = true;
        bullet.node.position = start;
        bullet.fly(dir, this._firingRange, this._speed);
    };
    return BulletEmitterJuJiQiang;
}(BulletEmitter_1.default));
exports.default = BulletEmitterJuJiQiang;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlckp1SmlRaWFuZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsaURBQTRDO0FBRzVDO0lBQW9ELDBDQUFhO0lBRTdELGdDQUFZLHFCQUEyQztRQUF2RCxZQUNJLGtCQUFNLHFCQUFxQixDQUFDLFNBSS9CO1FBSEcsS0FBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDekIsS0FBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7UUFDckIsS0FBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7O0lBQ3ZCLENBQUM7SUFFRCxxQ0FBSSxHQUFKLFVBQUssS0FBYyxFQUFFLEdBQVk7UUFDN0IsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25CLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxpQkFBaUIsQ0FBQyx1QkFBYSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN6RixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDMUIsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQzdCLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFDTCw2QkFBQztBQUFELENBaEJBLEFBZ0JDLENBaEJtRCx1QkFBYSxHQWdCaEUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEJ1bGxldEVtaXR0ZXIgZnJvbSBcIi4vQnVsbGV0RW1pdHRlclwiO1xyXG5pbXBvcnQgR2FtZUJ1bGxldHNDb250cm9sbGVyIGZyb20gXCIuLi8uLi9nYW1lL0dhbWVCdWxsZXRzQ29udHJvbGxlclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0RW1pdHRlckp1SmlRaWFuZyBleHRlbmRzIEJ1bGxldEVtaXR0ZXIge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGdhbWVCdWxsZXRzQ29udHJvbGxlcjpHYW1lQnVsbGV0c0NvbnRyb2xsZXIpe1xyXG4gICAgICAgIHN1cGVyKGdhbWVCdWxsZXRzQ29udHJvbGxlcik7XHJcbiAgICAgICAgdGhpcy5fZmlyaW5nUmFuZ2UgPSAyMDAwO1xyXG4gICAgICAgIHRoaXMuX2ludGVydmFsID0gMC41O1xyXG4gICAgICAgIHRoaXMuX3NwZWVkID0gMjAwMDtcclxuICAgIH1cclxuXHJcbiAgICBmaXJlKHN0YXJ0OiBjYy5WZWMyLCBkaXI6IGNjLlZlYzIpIHtcclxuICAgICAgICB0aGlzLmJ1bGxldENvdW50LS07XHJcbiAgICAgICAgbGV0IGJ1bGxldCA9IHRoaXMuZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0KEJ1bGxldEVtaXR0ZXIuVFlQRVMuSnVKaVFpYW5nKTtcclxuICAgICAgICBidWxsZXQubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLnBvc2l0aW9uID0gc3RhcnQ7XHJcbiAgICAgICAgYnVsbGV0LmZseShkaXIsIHRoaXMuX2ZpcmluZ1JhbmdlLCB0aGlzLl9zcGVlZCk7XHJcbiAgICB9XHJcbn1cclxuXHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterShouQiang.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f0d58H7ssBLXIO9MZmgW0N8', 'BulletEmitterShouQiang');
// script/app/entities/bulletEmitter/BulletEmitterShouQiang.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var BulletEmitterShouQiang = /** @class */ (function (_super) {
    __extends(BulletEmitterShouQiang, _super);
    function BulletEmitterShouQiang(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._firingRange = 800;
        _this._interval = 0.05;
        _this._speed = 1500;
        return _this;
    }
    BulletEmitterShouQiang.prototype.fire = function (start, dir) {
        var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.ShouQiang);
        bullet.node.active = true;
        bullet.node.position = start;
        bullet.fly(dir, this._firingRange, this._speed);
    };
    return BulletEmitterShouQiang;
}(BulletEmitter_1.default));
exports.default = BulletEmitterShouQiang;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlclNob3VRaWFuZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsaURBQTRDO0FBSzVDO0lBQW9ELDBDQUFhO0lBRTdELGdDQUFZLHFCQUEyQztRQUF2RCxZQUNJLGtCQUFNLHFCQUFxQixDQUFDLFNBSS9CO1FBSEcsS0FBSSxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUM7UUFDeEIsS0FBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsS0FBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7O0lBQ3ZCLENBQUM7SUFFRCxxQ0FBSSxHQUFKLFVBQUssS0FBYyxFQUFFLEdBQVk7UUFDN0IsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLHVCQUFhLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3pGLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUNMLDZCQUFDO0FBQUQsQ0FmQSxBQWVDLENBZm1ELHVCQUFhLEdBZWhFIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXRFbWl0dGVyIGZyb20gXCIuL0J1bGxldEVtaXR0ZXJcIjtcclxuaW1wb3J0IEdhbWVCdWxsZXRzQ29udHJvbGxlciBmcm9tIFwiLi4vLi4vZ2FtZS9HYW1lQnVsbGV0c0NvbnRyb2xsZXJcIjtcclxuXHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0RW1pdHRlclNob3VRaWFuZyBleHRlbmRzIEJ1bGxldEVtaXR0ZXIge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGdhbWVCdWxsZXRzQ29udHJvbGxlcjpHYW1lQnVsbGV0c0NvbnRyb2xsZXIpe1xyXG4gICAgICAgIHN1cGVyKGdhbWVCdWxsZXRzQ29udHJvbGxlcik7XHJcbiAgICAgICAgdGhpcy5fZmlyaW5nUmFuZ2UgPSA4MDA7XHJcbiAgICAgICAgdGhpcy5faW50ZXJ2YWwgPSAwLjA1O1xyXG4gICAgICAgIHRoaXMuX3NwZWVkID0gMTUwMDtcclxuICAgIH1cclxuXHJcbiAgICBmaXJlKHN0YXJ0OiBjYy5WZWMyLCBkaXI6IGNjLlZlYzIpIHtcclxuICAgICAgICBsZXQgYnVsbGV0ID0gdGhpcy5nYW1lQnVsbGV0c0NvbnRyb2xsZXIuZ2V0SW5hY3RpdmVCdWxsZXQoQnVsbGV0RW1pdHRlci5UWVBFUy5TaG91UWlhbmcpO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgYnVsbGV0Lm5vZGUucG9zaXRpb24gPSBzdGFydDtcclxuICAgICAgICBidWxsZXQuZmx5KGRpciwgdGhpcy5fZmlyaW5nUmFuZ2UsIHRoaXMuX3NwZWVkKTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterSanDanQiang.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fb678niczNL5ILsd5k556at', 'BulletEmitterSanDanQiang');
// script/app/entities/bulletEmitter/BulletEmitterSanDanQiang.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var World_1 = require("../../info/World");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var BulletEmitterSanDanQiang = /** @class */ (function (_super) {
    __extends(BulletEmitterSanDanQiang, _super);
    function BulletEmitterSanDanQiang(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._firingRange = 900;
        _this._interval = 0.1;
        _this._speed = 1500;
        return _this;
    }
    BulletEmitterSanDanQiang.prototype.fire = function (start, dir) {
        var _this = this;
        this.bulletCount--;
        var powerLv = World_1.World.My.armory.levelOfEmitterPower(this._bulletEmitterID);
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.WeaponUp);
        var add = config[powerLv - 1]['bullet_split'];
        var num = 3 + 2 * add;
        var angle = 10 + 5 * add;
        var degrees = [];
        var half = Math.floor(num / 2);
        for (var i = 0; i < half; i++) {
            var a = (i + 1) * angle / half;
            degrees.push(a);
            degrees.push(-a);
        }
        if (num % 2 == 1) {
            degrees.push(0);
        }
        degrees.forEach(function (value) {
            var bullet = _this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.SanDanQiang);
            bullet.node.active = true;
            bullet.node.position = start;
            bullet.fly(dir.rotate(cc.misc.degreesToRadians(value)), _this._firingRange, _this._speed);
        });
    };
    return BulletEmitterSanDanQiang;
}(BulletEmitter_1.default));
exports.default = BulletEmitterSanDanQiang;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlclNhbkRhblFpYW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxpREFBNEM7QUFDNUMsMENBQXVDO0FBQ3ZDLHdFQUFxRTtBQUNyRSxnRUFBNkQ7QUFJN0Q7SUFBc0QsNENBQWE7SUFFL0Qsa0NBQVkscUJBQTJDO1FBQXZELFlBQ0ksa0JBQU0scUJBQXFCLENBQUMsU0FJL0I7UUFIRyxLQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQztRQUN4QixLQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQztRQUNyQixLQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQzs7SUFDdkIsQ0FBQztJQUVELHVDQUFJLEdBQUosVUFBSyxLQUFjLEVBQUUsR0FBWTtRQUFqQyxpQkF1QkM7UUF0QkcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ25CLElBQUksT0FBTyxHQUFHLGFBQUssQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3pFLElBQUksTUFBTSxHQUFHLHlCQUFXLENBQUMsYUFBYSxDQUFDLGlDQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakUsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLE9BQU8sR0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM1QyxJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztRQUN0QixJQUFJLEtBQUssR0FBRyxFQUFFLEdBQUMsQ0FBQyxHQUFDLEdBQUcsQ0FBQztRQUNyQixJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsS0FBSyxJQUFJLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBQztZQUN4QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBQyxDQUFDLENBQUMsR0FBQyxLQUFLLEdBQUMsSUFBSSxDQUFDO1lBQ3pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3BCO1FBQ0QsSUFBSSxHQUFHLEdBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQztZQUNYLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbkI7UUFDRCxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUEsS0FBSztZQUNqQixJQUFJLE1BQU0sR0FBRyxLQUFJLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsdUJBQWEsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDM0YsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztZQUM3QixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEtBQUksQ0FBQyxZQUFZLEVBQUUsS0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVGLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNMLCtCQUFDO0FBQUQsQ0FqQ0EsQUFpQ0MsQ0FqQ3FELHVCQUFhLEdBaUNsRSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgR2FtZUJ1bGxldHNDb250cm9sbGVyIGZyb20gXCIuLi8uLi9nYW1lL0dhbWVCdWxsZXRzQ29udHJvbGxlclwiO1xyXG5pbXBvcnQgQnVsbGV0RW1pdHRlciBmcm9tIFwiLi9CdWxsZXRFbWl0dGVyXCI7XHJcbmltcG9ydCB7V29ybGR9IGZyb20gXCIuLi8uLi9pbmZvL1dvcmxkXCI7XHJcbmltcG9ydCB7RXhjZWxDb25maWd9IGZyb20gXCIuLi8uLi8uLi8uLi9mcmFtZXdvcmsvY29uZmlnL0V4Y2VsQ29uZmlnXCI7XHJcbmltcG9ydCB7RXhjZWxUYWJsZU5hbWVzfSBmcm9tIFwiLi4vLi4vY29uZmlnL0V4Y2VsVGFibGVOYW1lc1wiO1xyXG5cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRFbWl0dGVyU2FuRGFuUWlhbmcgZXh0ZW5kcyBCdWxsZXRFbWl0dGVyIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihnYW1lQnVsbGV0c0NvbnRyb2xsZXI6R2FtZUJ1bGxldHNDb250cm9sbGVyKXtcclxuICAgICAgICBzdXBlcihnYW1lQnVsbGV0c0NvbnRyb2xsZXIpO1xyXG4gICAgICAgIHRoaXMuX2ZpcmluZ1JhbmdlID0gOTAwO1xyXG4gICAgICAgIHRoaXMuX2ludGVydmFsID0gMC4xO1xyXG4gICAgICAgIHRoaXMuX3NwZWVkID0gMTUwMDtcclxuICAgIH1cclxuXHJcbiAgICBmaXJlKHN0YXJ0OiBjYy5WZWMyLCBkaXI6IGNjLlZlYzIpIHtcclxuICAgICAgICB0aGlzLmJ1bGxldENvdW50LS07XHJcbiAgICAgICAgbGV0IHBvd2VyTHYgPSBXb3JsZC5NeS5hcm1vcnkubGV2ZWxPZkVtaXR0ZXJQb3dlcih0aGlzLl9idWxsZXRFbWl0dGVySUQpO1xyXG4gICAgICAgIGxldCBjb25maWcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5XZWFwb25VcCk7XHJcbiAgICAgICAgbGV0IGFkZCA9IGNvbmZpZ1twb3dlckx2LTFdWydidWxsZXRfc3BsaXQnXTtcclxuICAgICAgICBsZXQgbnVtID0gMyArIDIgKiBhZGQ7XHJcbiAgICAgICAgbGV0IGFuZ2xlID0gMTArNSphZGQ7XHJcbiAgICAgICAgbGV0IGRlZ3JlZXMgPSBbXTtcclxuICAgICAgICBsZXQgaGFsZiA9IE1hdGguZmxvb3IobnVtLzIpO1xyXG4gICAgICAgIGZvciAobGV0IGk9MDsgaSA8IGhhbGY7IGkrKyl7XHJcbiAgICAgICAgICAgIGxldCBhID0gKGkrMSkqYW5nbGUvaGFsZjtcclxuICAgICAgICAgICAgZGVncmVlcy5wdXNoKGEpO1xyXG4gICAgICAgICAgICBkZWdyZWVzLnB1c2goLWEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobnVtJTIgPT0gMSl7XHJcbiAgICAgICAgICAgIGRlZ3JlZXMucHVzaCgwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZGVncmVlcy5mb3JFYWNoKHZhbHVlID0+IHtcclxuICAgICAgICAgICAgbGV0IGJ1bGxldCA9IHRoaXMuZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0KEJ1bGxldEVtaXR0ZXIuVFlQRVMuU2FuRGFuUWlhbmcpO1xyXG4gICAgICAgICAgICBidWxsZXQubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICBidWxsZXQubm9kZS5wb3NpdGlvbiA9IHN0YXJ0O1xyXG4gICAgICAgICAgICBidWxsZXQuZmx5KGRpci5yb3RhdGUoY2MubWlzYy5kZWdyZWVzVG9SYWRpYW5zKHZhbHVlKSksIHRoaXMuX2ZpcmluZ1JhbmdlLCB0aGlzLl9zcGVlZCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterShanDianQiu.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1d278R1B3RH6KmJMSOmnfUe', 'BulletEmitterShanDianQiu');
// script/app/entities/bulletEmitter/BulletEmitterShanDianQiu.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var World_1 = require("../../info/World");
var magnify = 1;
var BulletEmitterShanDianQiu = /** @class */ (function (_super) {
    __extends(BulletEmitterShanDianQiu, _super);
    function BulletEmitterShanDianQiu(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._firingRange = 1000;
        _this._interval = 0.45;
        _this._speed = 300;
        return _this;
    }
    BulletEmitterShanDianQiu.prototype.fire = function (start, dir) {
        this.bulletCount--;
        var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.ShanDianQiu);
        bullet.node.active = true;
        bullet.node.position = start /*.add(dir.mul((<cc.CircleCollider>bullet.collider).radius))*/;
        bullet.node.scale = magnify * World_1.World.My.armory.magnifyMul(bullet.bulletId);
        bullet.fly(dir, this._firingRange, this._speed);
    };
    return BulletEmitterShanDianQiu;
}(BulletEmitter_1.default));
exports.default = BulletEmitterShanDianQiu;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlclNoYW5EaWFuUWl1LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxpREFBNEM7QUFFNUMsMENBQXVDO0FBRXZDLElBQU0sT0FBTyxHQUFHLENBQUMsQ0FBQztBQUVsQjtJQUFzRCw0Q0FBYTtJQUUvRCxrQ0FBWSxxQkFBMkM7UUFBdkQsWUFDSSxrQkFBTSxxQkFBcUIsQ0FBQyxTQUkvQjtRQUhHLEtBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLEtBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLEtBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDOztJQUN0QixDQUFDO0lBRUQsdUNBQUksR0FBSixVQUFLLEtBQWMsRUFBRSxHQUFZO1FBQzdCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsdUJBQWEsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDM0YsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQSw4REFBOEQsQ0FBQztRQUMzRixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxPQUFPLEdBQUcsYUFBSyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMxRSxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBQ0wsK0JBQUM7QUFBRCxDQWpCQSxBQWlCQyxDQWpCcUQsdUJBQWEsR0FpQmxFIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXRFbWl0dGVyIGZyb20gXCIuL0J1bGxldEVtaXR0ZXJcIjtcclxuaW1wb3J0IEdhbWVCdWxsZXRzQ29udHJvbGxlciBmcm9tIFwiLi4vLi4vZ2FtZS9HYW1lQnVsbGV0c0NvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHtXb3JsZH0gZnJvbSBcIi4uLy4uL2luZm8vV29ybGRcIjtcclxuXHJcbmNvbnN0IG1hZ25pZnkgPSAxO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0RW1pdHRlclNoYW5EaWFuUWl1IGV4dGVuZHMgQnVsbGV0RW1pdHRlciB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZ2FtZUJ1bGxldHNDb250cm9sbGVyOkdhbWVCdWxsZXRzQ29udHJvbGxlcil7XHJcbiAgICAgICAgc3VwZXIoZ2FtZUJ1bGxldHNDb250cm9sbGVyKTtcclxuICAgICAgICB0aGlzLl9maXJpbmdSYW5nZSA9IDEwMDA7XHJcbiAgICAgICAgdGhpcy5faW50ZXJ2YWwgPSAwLjQ1O1xyXG4gICAgICAgIHRoaXMuX3NwZWVkID0gMzAwO1xyXG4gICAgfVxyXG5cclxuICAgIGZpcmUoc3RhcnQ6IGNjLlZlYzIsIGRpcjogY2MuVmVjMikge1xyXG4gICAgICAgIHRoaXMuYnVsbGV0Q291bnQtLTtcclxuICAgICAgICBsZXQgYnVsbGV0ID0gdGhpcy5nYW1lQnVsbGV0c0NvbnRyb2xsZXIuZ2V0SW5hY3RpdmVCdWxsZXQoQnVsbGV0RW1pdHRlci5UWVBFUy5TaGFuRGlhblFpdSk7XHJcbiAgICAgICAgYnVsbGV0Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBidWxsZXQubm9kZS5wb3NpdGlvbiA9IHN0YXJ0LyouYWRkKGRpci5tdWwoKDxjYy5DaXJjbGVDb2xsaWRlcj5idWxsZXQuY29sbGlkZXIpLnJhZGl1cykpKi87XHJcbiAgICAgICAgYnVsbGV0Lm5vZGUuc2NhbGUgPSBtYWduaWZ5ICogV29ybGQuTXkuYXJtb3J5Lm1hZ25pZnlNdWwoYnVsbGV0LmJ1bGxldElkKTtcclxuICAgICAgICBidWxsZXQuZmx5KGRpciwgdGhpcy5fZmlyaW5nUmFuZ2UsIHRoaXMuX3NwZWVkKTtcclxuICAgIH1cclxufVxyXG5cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletStrike/BulletStrikeScale.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a91eflkUmlHFK31B+j3oPQW', 'BulletStrikeScale');
// script/app/entities/bulletStrike/BulletStrikeScale.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletStrike_1 = require("./BulletStrike");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletStrikeScale = /** @class */ (function (_super) {
    __extends(BulletStrikeScale, _super);
    function BulletStrikeScale() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletStrikeScale.prototype.init = function (id) {
    };
    BulletStrikeScale.prototype.strike = function () {
        var _this = this;
        this.node.rotation = Math.random() * 360;
        this.node.scale = 0;
        this.node.runAction(cc.sequence(cc.scaleTo(0.2, 1), cc.callFunc(function () {
            _this.node.stopAllActions();
            _this.node.active = false;
        })));
    };
    BulletStrikeScale = __decorate([
        ccclass
    ], BulletStrikeScale);
    return BulletStrikeScale;
}(BulletStrike_1.default));
exports.default = BulletStrikeScale;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldFN0cmlrZS9CdWxsZXRTdHJpa2VTY2FsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsK0NBQTBDO0FBRXBDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQStDLHFDQUFZO0lBQTNEOztJQWVBLENBQUM7SUFkRyxnQ0FBSSxHQUFKLFVBQUssRUFBRTtJQUNQLENBQUM7SUFHRCxrQ0FBTSxHQUFOO1FBQUEsaUJBT0M7UUFORyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUMsR0FBRyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUM7WUFDNUQsS0FBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUMzQixLQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ1IsQ0FBQztJQVpnQixpQkFBaUI7UUFEckMsT0FBTztPQUNhLGlCQUFpQixDQWVyQztJQUFELHdCQUFDO0NBZkQsQUFlQyxDQWY4QyxzQkFBWSxHQWUxRDtrQkFmb0IsaUJBQWlCIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXRTdHJpa2UgZnJvbSBcIi4vQnVsbGV0U3RyaWtlXCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldFN0cmlrZVNjYWxlIGV4dGVuZHMgQnVsbGV0U3RyaWtlIHtcclxuICAgIGluaXQoaWQpIHtcclxuICAgIH1cclxuXHJcblxyXG4gICAgc3RyaWtlKCkge1xyXG4gICAgICAgIHRoaXMubm9kZS5yb3RhdGlvbiA9IE1hdGgucmFuZG9tKCkqMzYwO1xyXG4gICAgICAgIHRoaXMubm9kZS5zY2FsZSA9IDA7XHJcbiAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5zY2FsZVRvKDAuMiwgMSksIGNjLmNhbGxGdW5jKCgpPT57XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgfSkpKVxyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterHuoYan.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b0708OLqc1I7JmsZsEiOmlz', 'BulletEmitterHuoYan');
// script/app/entities/bulletEmitter/BulletEmitterHuoYan.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var BulletEmitterHuoYan = /** @class */ (function (_super) {
    __extends(BulletEmitterHuoYan, _super);
    function BulletEmitterHuoYan(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._list = [];
        _this._firingRange = 600;
        _this._interval = 0.15;
        _this._speed = 300;
        return _this;
    }
    BulletEmitterHuoYan.prototype.fire = function (start, dir) {
        this.bulletCount--;
        var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.HuoYan);
        bullet.node.active = true;
        bullet.node.position = start;
        bullet.fly(dir, this._firingRange, this._speed);
        this._list.unshift(bullet);
        this._list = this._list.filter(function (value) { return value.node.active == true; });
        // let p = start;
        // for (let i=0; i<3; i++){
        //     let bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter.TYPES.HuoYan);
        //     bullet.node.active = true;
        //     bullet.node.position = p.add(dir.mul((3-i)*30));
        //     bullet.fly(dir, this._firingRange, this._speed);
        //     this._list.unshift(bullet);
        // }
        this._list.forEach(function (value, index) { return value.node.zIndex = index; });
    };
    return BulletEmitterHuoYan;
}(BulletEmitter_1.default));
exports.default = BulletEmitterHuoYan;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlckh1b1lhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsaURBQTRDO0FBRTVDO0lBQWlELHVDQUFhO0lBSTFELDZCQUFZLHFCQUEyQztRQUF2RCxZQUNJLGtCQUFNLHFCQUFxQixDQUFDLFNBSS9CO1FBUE8sV0FBSyxHQUFTLEVBQUUsQ0FBQztRQUlyQixLQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQztRQUN4QixLQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixLQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQzs7SUFDdEIsQ0FBQztJQUVELGtDQUFJLEdBQUosVUFBSyxLQUFjLEVBQUUsR0FBWTtRQUM3QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLHVCQUFhLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3RGLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksRUFBekIsQ0FBeUIsQ0FBQyxDQUFDO1FBQ25FLGlCQUFpQjtRQUNqQiwyQkFBMkI7UUFDM0IsNkZBQTZGO1FBQzdGLGlDQUFpQztRQUNqQyx1REFBdUQ7UUFDdkQsdURBQXVEO1FBQ3ZELGtDQUFrQztRQUNsQyxJQUFJO1FBQ0osSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBQyxLQUFLLEVBQUUsS0FBSyxJQUFLLE9BQUEsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxFQUF6QixDQUF5QixDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUNMLDBCQUFDO0FBQUQsQ0E3QkEsQUE2QkMsQ0E3QmdELHVCQUFhLEdBNkI3RCIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgR2FtZUJ1bGxldHNDb250cm9sbGVyIGZyb20gXCIuLi8uLi9nYW1lL0dhbWVCdWxsZXRzQ29udHJvbGxlclwiO1xyXG5pbXBvcnQgQnVsbGV0RW1pdHRlciBmcm9tIFwiLi9CdWxsZXRFbWl0dGVyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRFbWl0dGVySHVvWWFuIGV4dGVuZHMgQnVsbGV0RW1pdHRlciB7XHJcblxyXG4gICAgcHJpdmF0ZSBfbGlzdDpBcnJheSA9IFtdO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGdhbWVCdWxsZXRzQ29udHJvbGxlcjpHYW1lQnVsbGV0c0NvbnRyb2xsZXIpe1xyXG4gICAgICAgIHN1cGVyKGdhbWVCdWxsZXRzQ29udHJvbGxlcik7XHJcbiAgICAgICAgdGhpcy5fZmlyaW5nUmFuZ2UgPSA2MDA7XHJcbiAgICAgICAgdGhpcy5faW50ZXJ2YWwgPSAwLjE1O1xyXG4gICAgICAgIHRoaXMuX3NwZWVkID0gMzAwO1xyXG4gICAgfVxyXG5cclxuICAgIGZpcmUoc3RhcnQ6IGNjLlZlYzIsIGRpcjogY2MuVmVjMikge1xyXG4gICAgICAgIHRoaXMuYnVsbGV0Q291bnQtLTtcclxuICAgICAgICBsZXQgYnVsbGV0ID0gdGhpcy5nYW1lQnVsbGV0c0NvbnRyb2xsZXIuZ2V0SW5hY3RpdmVCdWxsZXQoQnVsbGV0RW1pdHRlci5UWVBFUy5IdW9ZYW4pO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgYnVsbGV0Lm5vZGUucG9zaXRpb24gPSBzdGFydDtcclxuICAgICAgICBidWxsZXQuZmx5KGRpciwgdGhpcy5fZmlyaW5nUmFuZ2UsIHRoaXMuX3NwZWVkKTtcclxuICAgICAgICB0aGlzLl9saXN0LnVuc2hpZnQoYnVsbGV0KTtcclxuICAgICAgICB0aGlzLl9saXN0ID0gdGhpcy5fbGlzdC5maWx0ZXIodmFsdWUgPT4gdmFsdWUubm9kZS5hY3RpdmUgPT0gdHJ1ZSk7XHJcbiAgICAgICAgLy8gbGV0IHAgPSBzdGFydDtcclxuICAgICAgICAvLyBmb3IgKGxldCBpPTA7IGk8MzsgaSsrKXtcclxuICAgICAgICAvLyAgICAgbGV0IGJ1bGxldCA9IHRoaXMuZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0KEJ1bGxldEVtaXR0ZXIuVFlQRVMuSHVvWWFuKTtcclxuICAgICAgICAvLyAgICAgYnVsbGV0Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAvLyAgICAgYnVsbGV0Lm5vZGUucG9zaXRpb24gPSBwLmFkZChkaXIubXVsKCgzLWkpKjMwKSk7XHJcbiAgICAgICAgLy8gICAgIGJ1bGxldC5mbHkoZGlyLCB0aGlzLl9maXJpbmdSYW5nZSwgdGhpcy5fc3BlZWQpO1xyXG4gICAgICAgIC8vICAgICB0aGlzLl9saXN0LnVuc2hpZnQoYnVsbGV0KTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgdGhpcy5fbGlzdC5mb3JFYWNoKCh2YWx1ZSwgaW5kZXgpID0+IHZhbHVlLm5vZGUuekluZGV4ID0gaW5kZXgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitter.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '20d59hobkVP7p8yXkmyYW5w', 'BulletEmitter');
// script/app/entities/bulletEmitter/BulletEmitter.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var GameProxy_1 = require("../../game/GameProxy");
var World_1 = require("../../info/World");
/**
 * 子弹发射器只负责发射子弹
 * 控制一次发射的子弹个数及每一颗子弹的发射
 */
var BulletEmitter = /** @class */ (function () {
    function BulletEmitter(gameBulletsController) {
        this._gameBulletsController = null;
        /** 射程 */
        this._firingRange = 0;
        /** 发射间隔 */
        this._interval = 0;
        /** 子弹的速度 */
        this._speed = 0;
        /** 弹容量 */
        this._payload = 0;
        /** 剩余弹量 */
        this._bulletCount = 0;
        this._bulletEmitterID = 0;
        this._gameBulletsController = gameBulletsController;
    }
    Object.defineProperty(BulletEmitter.prototype, "firingRange", {
        get: function () {
            return this._firingRange;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BulletEmitter.prototype, "interval", {
        get: function () {
            return this._interval;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BulletEmitter.prototype, "speed", {
        get: function () {
            return this._speed;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BulletEmitter.prototype, "payload", {
        get: function () {
            return this._payload;
        },
        set: function (value) {
            this._payload = value;
            this.bulletCount = this._payload;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BulletEmitter.prototype, "bulletCount", {
        get: function () {
            return this._bulletCount;
        },
        set: function (value) {
            this._bulletCount = value;
            GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.UpdateBulletCount);
        },
        enumerable: false,
        configurable: true
    });
    /** 是否子弹用尽 */
    BulletEmitter.prototype.isUseUp = function () {
        return this._payload != 0 && this._bulletCount < 1;
    };
    Object.defineProperty(BulletEmitter.prototype, "gameBulletsController", {
        get: function () {
            return this._gameBulletsController;
        },
        enumerable: false,
        configurable: true
    });
    BulletEmitter.prototype.init = function (id) {
        this._bulletEmitterID = id;
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[this._bulletEmitterID - 1];
        this._speed = config['speed'];
        this._firingRange = config['range'] * World_1.World.My.armory.rangeMulOf(this._bulletEmitterID);
        this._interval = config['fre'] * World_1.World.My.armory.freMulOf(this._bulletEmitterID);
        this.payload = World_1.World.My.armory.payloadAddOf(this._bulletEmitterID);
        console.log('payload===>', this._payload);
    };
    BulletEmitter.prototype.onEnter = function () { };
    BulletEmitter.prototype.onExit = function () { };
    BulletEmitter.TYPES = {
        ShouQiang: 1,
        PenZi: 2,
        JiaTeLin: 3,
        SanDanQiang: 4,
        HuoYan: 5,
        JiGuang: 6,
        JuJiQiang: 7,
        LiZiPao: 8,
        HuoJianTong: 9,
        ShanDianQiu: 10,
    };
    return BulletEmitter;
}());
exports.default = BulletEmitter;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsZ0VBQTZEO0FBQzdELHdFQUFxRTtBQUNyRSxrREFBK0M7QUFDL0MsMENBQXVDO0FBRXZDOzs7R0FHRztBQUdIO0lBZUksdUJBQXNCLHFCQUEyQztRQUd6RCwyQkFBc0IsR0FBeUIsSUFBSSxDQUFDO1FBRzVELFNBQVM7UUFDQyxpQkFBWSxHQUFHLENBQUMsQ0FBQztRQU0zQixXQUFXO1FBQ0QsY0FBUyxHQUFHLENBQUMsQ0FBQztRQU94QixZQUFZO1FBQ0YsV0FBTSxHQUFHLENBQUMsQ0FBQztRQU9yQixVQUFVO1FBQ0YsYUFBUSxHQUFHLENBQUMsQ0FBQztRQVdyQixXQUFXO1FBQ0gsaUJBQVksR0FBRyxDQUFDLENBQUM7UUF1QmYscUJBQWdCLEdBQUcsQ0FBQyxDQUFDO1FBaEUzQixJQUFJLENBQUMsc0JBQXNCLEdBQUcscUJBQXFCLENBQUM7SUFDeEQsQ0FBQztJQU9ELHNCQUFJLHNDQUFXO2FBQWY7WUFDSSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDN0IsQ0FBQzs7O09BQUE7SUFNRCxzQkFBSSxtQ0FBUTthQUFaO1lBQ0ksT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQzFCLENBQUM7OztPQUFBO0lBTUQsc0JBQUksZ0NBQUs7YUFBVDtZQUNJLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN2QixDQUFDOzs7T0FBQTtJQUtELHNCQUFJLGtDQUFPO2FBQVg7WUFDSSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDekIsQ0FBQzthQUVELFVBQVksS0FBYTtZQUNyQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztZQUN0QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDckMsQ0FBQzs7O09BTEE7SUFXRCxzQkFBSSxzQ0FBVzthQUFmO1lBQ0ksT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQzdCLENBQUM7YUFHRCxVQUFnQixLQUFhO1lBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBQzFCLHFCQUFTLENBQUMsSUFBSSxDQUFDLHFCQUFTLENBQUMsS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDdEQsQ0FBQzs7O09BTkE7SUFRRCxhQUFhO0lBQ2IsK0JBQU8sR0FBUDtRQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVELHNCQUFJLGdEQUFxQjthQUF6QjtZQUNJLE9BQU8sSUFBSSxDQUFDLHNCQUFzQixDQUFDO1FBQ3ZDLENBQUM7OztPQUFBO0lBS0QsNEJBQUksR0FBSixVQUFLLEVBQVM7UUFDVixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQzNCLElBQUksTUFBTSxHQUFHLHlCQUFXLENBQUMsYUFBYSxDQUFDLGlDQUFlLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixHQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hGLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxZQUFZLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFDLGFBQUssQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUN0RixJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBQyxhQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDL0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxhQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDbkUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFJRCwrQkFBTyxHQUFQLGNBQVUsQ0FBQztJQUNYLDhCQUFNLEdBQU4sY0FBUyxDQUFDO0lBN0ZILG1CQUFLLEdBQUc7UUFDWCxTQUFTLEVBQUcsQ0FBQztRQUNiLEtBQUssRUFBRyxDQUFDO1FBQ1QsUUFBUSxFQUFHLENBQUM7UUFDWixXQUFXLEVBQUcsQ0FBQztRQUNmLE1BQU0sRUFBRyxDQUFDO1FBQ1YsT0FBTyxFQUFHLENBQUM7UUFDWCxTQUFTLEVBQUcsQ0FBQztRQUNiLE9BQU8sRUFBRyxDQUFDO1FBQ1gsV0FBVyxFQUFHLENBQUM7UUFDZixXQUFXLEVBQUcsRUFBRTtLQUNuQixDQUFDO0lBbUZOLG9CQUFDO0NBaEdELEFBZ0dDLElBQUE7a0JBaEc2QixhQUFhIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVCdWxsZXRzQ29udHJvbGxlciBmcm9tIFwiLi4vLi4vZ2FtZS9HYW1lQnVsbGV0c0NvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHtFeGNlbFRhYmxlTmFtZXN9IGZyb20gXCIuLi8uLi9jb25maWcvRXhjZWxUYWJsZU5hbWVzXCI7XHJcbmltcG9ydCB7RXhjZWxDb25maWd9IGZyb20gXCIuLi8uLi8uLi8uLi9mcmFtZXdvcmsvY29uZmlnL0V4Y2VsQ29uZmlnXCI7XHJcbmltcG9ydCB7R2FtZVByb3h5fSBmcm9tIFwiLi4vLi4vZ2FtZS9HYW1lUHJveHlcIjtcclxuaW1wb3J0IHtXb3JsZH0gZnJvbSBcIi4uLy4uL2luZm8vV29ybGRcIjtcclxuXHJcbi8qKlxyXG4gKiDlrZDlvLnlj5HlsITlmajlj6rotJ/otKPlj5HlsITlrZDlvLlcclxuICog5o6n5Yi25LiA5qyh5Y+R5bCE55qE5a2Q5by55Liq5pWw5Y+K5q+P5LiA6aKX5a2Q5by555qE5Y+R5bCEXHJcbiAqL1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIEJ1bGxldEVtaXR0ZXIge1xyXG5cclxuICAgIHN0YXRpYyBUWVBFUyA9IHtcclxuICAgICAgICBTaG91UWlhbmcgOiAxLFxyXG4gICAgICAgIFBlblppIDogMixcclxuICAgICAgICBKaWFUZUxpbiA6IDMsXHJcbiAgICAgICAgU2FuRGFuUWlhbmcgOiA0LFxyXG4gICAgICAgIEh1b1lhbiA6IDUsXHJcbiAgICAgICAgSmlHdWFuZyA6IDYsXHJcbiAgICAgICAgSnVKaVFpYW5nIDogNyxcclxuICAgICAgICBMaVppUGFvIDogOCxcclxuICAgICAgICBIdW9KaWFuVG9uZyA6IDksXHJcbiAgICAgICAgU2hhbkRpYW5RaXUgOiAxMCxcclxuICAgIH07XHJcblxyXG4gICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKGdhbWVCdWxsZXRzQ29udHJvbGxlcjpHYW1lQnVsbGV0c0NvbnRyb2xsZXIpe1xyXG4gICAgICAgIHRoaXMuX2dhbWVCdWxsZXRzQ29udHJvbGxlciA9IGdhbWVCdWxsZXRzQ29udHJvbGxlcjtcclxuICAgIH1cclxuICAgIHByaXZhdGUgX2dhbWVCdWxsZXRzQ29udHJvbGxlcjpHYW1lQnVsbGV0c0NvbnRyb2xsZXIgPSBudWxsO1xyXG5cclxuXHJcbiAgICAvKiog5bCE56iLICovXHJcbiAgICBwcm90ZWN0ZWQgX2ZpcmluZ1JhbmdlID0gMDtcclxuXHJcbiAgICBnZXQgZmlyaW5nUmFuZ2UoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZmlyaW5nUmFuZ2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOWPkeWwhOmXtOmalCAqL1xyXG4gICAgcHJvdGVjdGVkIF9pbnRlcnZhbCA9IDA7XHJcblxyXG5cclxuICAgIGdldCBpbnRlcnZhbCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnRlcnZhbDtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5a2Q5by555qE6YCf5bqmICovXHJcbiAgICBwcm90ZWN0ZWQgX3NwZWVkID0gMDtcclxuXHJcblxyXG4gICAgZ2V0IHNwZWVkKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NwZWVkO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDlvLnlrrnph48gKi9cclxuICAgIHByaXZhdGUgX3BheWxvYWQgPSAwO1xyXG5cclxuICAgIGdldCBwYXlsb2FkKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BheWxvYWQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHBheWxvYWQodmFsdWU6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuX3BheWxvYWQgPSB2YWx1ZTtcclxuICAgICAgICB0aGlzLmJ1bGxldENvdW50ID0gdGhpcy5fcGF5bG9hZDtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5Ymp5L2Z5by56YePICovXHJcbiAgICBwcml2YXRlIF9idWxsZXRDb3VudCA9IDA7XHJcblxyXG5cclxuICAgIGdldCBidWxsZXRDb3VudCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9idWxsZXRDb3VudDtcclxuICAgIH1cclxuXHJcblxyXG4gICAgc2V0IGJ1bGxldENvdW50KHZhbHVlOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLl9idWxsZXRDb3VudCA9IHZhbHVlO1xyXG4gICAgICAgIEdhbWVQcm94eS5lbWl0KEdhbWVQcm94eS5FdmVudC5VcGRhdGVCdWxsZXRDb3VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOaYr+WQpuWtkOW8ueeUqOWwvSAqL1xyXG4gICAgaXNVc2VVcCgpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9wYXlsb2FkICE9IDAgJiYgdGhpcy5fYnVsbGV0Q291bnQgPCAxO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBnYW1lQnVsbGV0c0NvbnRyb2xsZXIoKTogR2FtZUJ1bGxldHNDb250cm9sbGVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZ2FtZUJ1bGxldHNDb250cm9sbGVyO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwcm90ZWN0ZWQgX2J1bGxldEVtaXR0ZXJJRCA9IDA7XHJcblxyXG4gICAgaW5pdChpZDpudW1iZXIpe1xyXG4gICAgICAgIHRoaXMuX2J1bGxldEVtaXR0ZXJJRCA9IGlkO1xyXG4gICAgICAgIGxldCBjb25maWcgPSBFeGNlbENvbmZpZy5nZXRFeGNlbFRhYmxlKEV4Y2VsVGFibGVOYW1lcy5XZWFwb24pW3RoaXMuX2J1bGxldEVtaXR0ZXJJRC0xXTtcclxuICAgICAgICB0aGlzLl9zcGVlZCA9IGNvbmZpZ1snc3BlZWQnXTtcclxuICAgICAgICB0aGlzLl9maXJpbmdSYW5nZSA9IGNvbmZpZ1sncmFuZ2UnXSpXb3JsZC5NeS5hcm1vcnkucmFuZ2VNdWxPZih0aGlzLl9idWxsZXRFbWl0dGVySUQpO1xyXG4gICAgICAgIHRoaXMuX2ludGVydmFsID0gY29uZmlnWydmcmUnXSpXb3JsZC5NeS5hcm1vcnkuZnJlTXVsT2YodGhpcy5fYnVsbGV0RW1pdHRlcklEKTtcclxuICAgICAgICB0aGlzLnBheWxvYWQgPSBXb3JsZC5NeS5hcm1vcnkucGF5bG9hZEFkZE9mKHRoaXMuX2J1bGxldEVtaXR0ZXJJRCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3BheWxvYWQ9PT0+JywgdGhpcy5fcGF5bG9hZCk7XHJcbiAgICB9XHJcblxyXG4gICAgYWJzdHJhY3QgZmlyZShzdGFydDogY2MuVmVjMiwgZGlyOiBjYy5WZWMyKTtcclxuXHJcbiAgICBvbkVudGVyKCl7fVxyXG4gICAgb25FeGl0KCl7fVxyXG59XHJcblxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterLiZiPao.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c5068lByUNDfZVSWj7ABV1y', 'BulletEmitterLiZiPao');
// script/app/entities/bulletEmitter/BulletEmitterLiZiPao.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var BulletEmitterLiZiPao = /** @class */ (function (_super) {
    __extends(BulletEmitterLiZiPao, _super);
    function BulletEmitterLiZiPao(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this._firingRange = 500;
        _this._interval = 0.5;
        _this._speed = 800;
        return _this;
    }
    BulletEmitterLiZiPao.prototype.fire = function (start, dir) {
        this.bulletCount--;
        var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.LiZiPao);
        bullet.node.active = true;
        bullet.node.position = start;
        bullet.fly(dir, this._firingRange, this._speed);
    };
    return BulletEmitterLiZiPao;
}(BulletEmitter_1.default));
exports.default = BulletEmitterLiZiPao;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlckxpWmlQYW8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLGlEQUE0QztBQUc1QztJQUFrRCx3Q0FBYTtJQUUzRCw4QkFBWSxxQkFBMkM7UUFBdkQsWUFDSSxrQkFBTSxxQkFBcUIsQ0FBQyxTQUkvQjtRQUhHLEtBQUksQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDO1FBQ3hCLEtBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQ3JCLEtBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDOztJQUN0QixDQUFDO0lBRUQsbUNBQUksR0FBSixVQUFLLEtBQWMsRUFBRSxHQUFZO1FBQzdCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsaUJBQWlCLENBQUMsdUJBQWEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkYsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUM3QixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUwsMkJBQUM7QUFBRCxDQWpCQSxBQWlCQyxDQWpCaUQsdUJBQWEsR0FpQjlEIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXRFbWl0dGVyIGZyb20gXCIuL0J1bGxldEVtaXR0ZXJcIjtcclxuaW1wb3J0IEdhbWVCdWxsZXRzQ29udHJvbGxlciBmcm9tIFwiLi4vLi4vZ2FtZS9HYW1lQnVsbGV0c0NvbnRyb2xsZXJcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJ1bGxldEVtaXR0ZXJMaVppUGFvIGV4dGVuZHMgQnVsbGV0RW1pdHRlciB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZ2FtZUJ1bGxldHNDb250cm9sbGVyOkdhbWVCdWxsZXRzQ29udHJvbGxlcil7XHJcbiAgICAgICAgc3VwZXIoZ2FtZUJ1bGxldHNDb250cm9sbGVyKTtcclxuICAgICAgICB0aGlzLl9maXJpbmdSYW5nZSA9IDUwMDtcclxuICAgICAgICB0aGlzLl9pbnRlcnZhbCA9IDAuNTtcclxuICAgICAgICB0aGlzLl9zcGVlZCA9IDgwMDtcclxuICAgIH1cclxuXHJcbiAgICBmaXJlKHN0YXJ0OiBjYy5WZWMyLCBkaXI6IGNjLlZlYzIpIHtcclxuICAgICAgICB0aGlzLmJ1bGxldENvdW50LS07XHJcbiAgICAgICAgbGV0IGJ1bGxldCA9IHRoaXMuZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0KEJ1bGxldEVtaXR0ZXIuVFlQRVMuTGlaaVBhbyk7XHJcbiAgICAgICAgYnVsbGV0Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBidWxsZXQubm9kZS5wb3NpdGlvbiA9IHN0YXJ0O1xyXG4gICAgICAgIGJ1bGxldC5mbHkoZGlyLCB0aGlzLl9maXJpbmdSYW5nZSwgdGhpcy5fc3BlZWQpO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletEmitter/BulletEmitterJiaTeLin.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4db758f9P9A8LM9PRXQc7sC', 'BulletEmitterJiaTeLin');
// script/app/entities/bulletEmitter/BulletEmitterJiaTeLin.ts

Object.defineProperty(exports, "__esModule", { value: true });
var BulletEmitter_1 = require("./BulletEmitter");
var BulletEmitterJiaTeLin = /** @class */ (function (_super) {
    __extends(BulletEmitterJiaTeLin, _super);
    function BulletEmitterJiaTeLin(gameBulletsController) {
        var _this = _super.call(this, gameBulletsController) || this;
        _this.degree = 0;
        _this.num = 0;
        _this._firingRange = 1000;
        _this._interval = 0.1;
        _this._speed = 1200;
        return _this;
    }
    BulletEmitterJiaTeLin.prototype.fire = function (start, dir) {
        this.bulletCount--;
        switch (this.num % 4) {
            case 0:
                /** 发射一颗 */
                {
                    var degree = Math.random() * 2;
                    this.degree = this.degree > 0 ? -degree : degree;
                    var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JiaTeLin);
                    bullet.node.active = true;
                    bullet.node.position = start;
                    bullet.fly(dir.rotate(cc.misc.degreesToRadians(this.degree)), this._firingRange, this._speed);
                }
                break;
            case 1:
                /** 小角度同时发射两颗 */
                {
                    var degree = 3 + Math.random() * 5;
                    var bullet1 = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JiaTeLin);
                    bullet1.node.active = true;
                    bullet1.node.position = start.add(dir.mul(Math.random() * -10));
                    bullet1.fly(dir.rotate(cc.misc.degreesToRadians(this.degree + degree)), this._firingRange, this._speed);
                    var bullet2 = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JiaTeLin);
                    bullet2.node.active = true;
                    bullet2.node.position = start.add(dir.mul(Math.random() * 10));
                    bullet2.fly(dir.rotate(cc.misc.degreesToRadians(-this.degree - degree)), this._firingRange, this._speed);
                }
                break;
            case 2:
                /** 发射一颗 */
                {
                    var degree = Math.random() * 2;
                    this.degree = this.degree > 0 ? -degree : degree;
                    var bullet = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JiaTeLin);
                    bullet.node.active = true;
                    bullet.node.position = start;
                    bullet.fly(dir.rotate(cc.misc.degreesToRadians(this.degree)), this._firingRange, this._speed);
                }
                break;
            case 3:
                /** 大角度同时发射两颗 */
                {
                    var degree = 10 + Math.random() * 5;
                    var bullet1 = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JiaTeLin);
                    bullet1.node.active = true;
                    bullet1.node.position = start.add(dir.mul(Math.random() * -15));
                    bullet1.fly(dir.rotate(cc.misc.degreesToRadians(this.degree + degree)), this._firingRange, this._speed);
                    var bullet2 = this.gameBulletsController.getInactiveBullet(BulletEmitter_1.default.TYPES.JiaTeLin);
                    bullet2.node.active = true;
                    bullet2.node.position = start.add(dir.mul(Math.random() * 15));
                    bullet2.fly(dir.rotate(cc.misc.degreesToRadians(-this.degree - degree)), this._firingRange, this._speed);
                }
                break;
        }
        this.num++;
    };
    return BulletEmitterJiaTeLin;
}(BulletEmitter_1.default));
exports.default = BulletEmitterJiaTeLin;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldEVtaXR0ZXIvQnVsbGV0RW1pdHRlckppYVRlTGluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxpREFBNEM7QUFJNUM7SUFBbUQseUNBQWE7SUFNNUQsK0JBQVkscUJBQTJDO1FBQXZELFlBQ0ksa0JBQU0scUJBQXFCLENBQUMsU0FJL0I7UUFUTyxZQUFNLEdBQUcsQ0FBQyxDQUFDO1FBRVgsU0FBRyxHQUFHLENBQUMsQ0FBQztRQUlaLEtBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLEtBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQ3JCLEtBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDOztJQUN2QixDQUFDO0lBRUQsb0NBQUksR0FBSixVQUFLLEtBQWMsRUFBRSxHQUFZO1FBQzdCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixRQUFRLElBQUksQ0FBQyxHQUFHLEdBQUMsQ0FBQyxFQUFDO1lBQ2YsS0FBSyxDQUFDO2dCQUNGLFdBQVc7Z0JBQ2Y7b0JBQ0ksSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFDLENBQUMsQ0FBQztvQkFDN0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztvQkFDakQsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLHVCQUFhLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO29CQUN4RixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7b0JBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztvQkFFN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQ2pHO2dCQUNHLE1BQU07WUFDVixLQUFLLENBQUM7Z0JBQ0YsZ0JBQWdCO2dCQUNwQjtvQkFDSSxJQUFJLE1BQU0sR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztvQkFDbkMsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLHVCQUFhLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO29CQUN6RixPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7b0JBQzNCLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUU5RCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7b0JBRXRHLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxpQkFBaUIsQ0FBQyx1QkFBYSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDekYsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO29CQUMzQixPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0JBRTdELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUMxRztnQkFDRyxNQUFNO1lBQ1YsS0FBSyxDQUFDO2dCQUNGLFdBQVc7Z0JBQ2Y7b0JBQ0ksSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFDLENBQUMsQ0FBQztvQkFDN0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztvQkFDakQsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLHVCQUFhLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO29CQUN4RixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7b0JBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztvQkFFN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQ2pHO2dCQUNHLE1BQU07WUFDVixLQUFLLENBQUM7Z0JBQ0YsZ0JBQWdCO2dCQUNwQjtvQkFDSSxJQUFJLE1BQU0sR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztvQkFDcEMsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLGlCQUFpQixDQUFDLHVCQUFhLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO29CQUN6RixPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7b0JBQzNCLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO29CQUU5RCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7b0JBRXRHLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxpQkFBaUIsQ0FBQyx1QkFBYSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDekYsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO29CQUMzQixPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0JBRTdELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUMxRztnQkFDRyxNQUFNO1NBQ2I7UUFDRCxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDZixDQUFDO0lBQ0wsNEJBQUM7QUFBRCxDQTdFQSxBQTZFQyxDQTdFa0QsdUJBQWEsR0E2RS9EIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXRFbWl0dGVyIGZyb20gXCIuL0J1bGxldEVtaXR0ZXJcIjtcclxuaW1wb3J0IEdhbWVCdWxsZXRzQ29udHJvbGxlciBmcm9tIFwiLi4vLi4vZ2FtZS9HYW1lQnVsbGV0c0NvbnRyb2xsZXJcIjtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXRFbWl0dGVySmlhVGVMaW4gZXh0ZW5kcyBCdWxsZXRFbWl0dGVyIHtcclxuXHJcbiAgICBwcml2YXRlIGRlZ3JlZSA9IDA7XHJcblxyXG4gICAgcHJpdmF0ZSBudW0gPSAwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGdhbWVCdWxsZXRzQ29udHJvbGxlcjpHYW1lQnVsbGV0c0NvbnRyb2xsZXIpe1xyXG4gICAgICAgIHN1cGVyKGdhbWVCdWxsZXRzQ29udHJvbGxlcik7XHJcbiAgICAgICAgdGhpcy5fZmlyaW5nUmFuZ2UgPSAxMDAwO1xyXG4gICAgICAgIHRoaXMuX2ludGVydmFsID0gMC4xO1xyXG4gICAgICAgIHRoaXMuX3NwZWVkID0gMTIwMDtcclxuICAgIH1cclxuXHJcbiAgICBmaXJlKHN0YXJ0OiBjYy5WZWMyLCBkaXI6IGNjLlZlYzIpIHtcclxuICAgICAgICB0aGlzLmJ1bGxldENvdW50LS07XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLm51bSU0KXtcclxuICAgICAgICAgICAgY2FzZSAwOlxyXG4gICAgICAgICAgICAgICAgLyoqIOWPkeWwhOS4gOmilyAqL1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZGVncmVlID0gTWF0aC5yYW5kb20oKSoyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kZWdyZWUgPSB0aGlzLmRlZ3JlZSA+IDAgPyAtZGVncmVlIDogZGVncmVlO1xyXG4gICAgICAgICAgICAgICAgbGV0IGJ1bGxldCA9IHRoaXMuZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0KEJ1bGxldEVtaXR0ZXIuVFlQRVMuSmlhVGVMaW4pO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJ1bGxldC5ub2RlLnBvc2l0aW9uID0gc3RhcnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgYnVsbGV0LmZseShkaXIucm90YXRlKGNjLm1pc2MuZGVncmVlc1RvUmFkaWFucyh0aGlzLmRlZ3JlZSkpLCB0aGlzLl9maXJpbmdSYW5nZSwgdGhpcy5fc3BlZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgLyoqIOWwj+inkuW6puWQjOaXtuWPkeWwhOS4pOmilyAqL1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZGVncmVlID0gMyArIE1hdGgucmFuZG9tKCkgKiA1O1xyXG4gICAgICAgICAgICAgICAgbGV0IGJ1bGxldDEgPSB0aGlzLmdhbWVCdWxsZXRzQ29udHJvbGxlci5nZXRJbmFjdGl2ZUJ1bGxldChCdWxsZXRFbWl0dGVyLlRZUEVTLkppYVRlTGluKTtcclxuICAgICAgICAgICAgICAgIGJ1bGxldDEubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0MS5ub2RlLnBvc2l0aW9uID0gc3RhcnQuYWRkKGRpci5tdWwoTWF0aC5yYW5kb20oKSotMTApKTtcclxuXHJcbiAgICAgICAgICAgICAgICBidWxsZXQxLmZseShkaXIucm90YXRlKGNjLm1pc2MuZGVncmVlc1RvUmFkaWFucyh0aGlzLmRlZ3JlZStkZWdyZWUpKSwgdGhpcy5fZmlyaW5nUmFuZ2UsIHRoaXMuX3NwZWVkKTtcclxuXHJcbiAgICAgICAgICAgICAgICBsZXQgYnVsbGV0MiA9IHRoaXMuZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0KEJ1bGxldEVtaXR0ZXIuVFlQRVMuSmlhVGVMaW4pO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0Mi5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBidWxsZXQyLm5vZGUucG9zaXRpb24gPSBzdGFydC5hZGQoZGlyLm11bChNYXRoLnJhbmRvbSgpKjEwKSk7XHJcblxyXG4gICAgICAgICAgICAgICAgYnVsbGV0Mi5mbHkoZGlyLnJvdGF0ZShjYy5taXNjLmRlZ3JlZXNUb1JhZGlhbnMoLXRoaXMuZGVncmVlLWRlZ3JlZSkpLCB0aGlzLl9maXJpbmdSYW5nZSwgdGhpcy5fc3BlZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgLyoqIOWPkeWwhOS4gOmilyAqL1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZGVncmVlID0gTWF0aC5yYW5kb20oKSoyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kZWdyZWUgPSB0aGlzLmRlZ3JlZSA+IDAgPyAtZGVncmVlIDogZGVncmVlO1xyXG4gICAgICAgICAgICAgICAgbGV0IGJ1bGxldCA9IHRoaXMuZ2FtZUJ1bGxldHNDb250cm9sbGVyLmdldEluYWN0aXZlQnVsbGV0KEJ1bGxldEVtaXR0ZXIuVFlQRVMuSmlhVGVMaW4pO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0Lm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJ1bGxldC5ub2RlLnBvc2l0aW9uID0gc3RhcnQ7XHJcblxyXG4gICAgICAgICAgICAgICAgYnVsbGV0LmZseShkaXIucm90YXRlKGNjLm1pc2MuZGVncmVlc1RvUmFkaWFucyh0aGlzLmRlZ3JlZSkpLCB0aGlzLl9maXJpbmdSYW5nZSwgdGhpcy5fc3BlZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICAgICAgLyoqIOWkp+inkuW6puWQjOaXtuWPkeWwhOS4pOmilyAqL1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsZXQgZGVncmVlID0gMTAgKyBNYXRoLnJhbmRvbSgpICogNTtcclxuICAgICAgICAgICAgICAgIGxldCBidWxsZXQxID0gdGhpcy5nYW1lQnVsbGV0c0NvbnRyb2xsZXIuZ2V0SW5hY3RpdmVCdWxsZXQoQnVsbGV0RW1pdHRlci5UWVBFUy5KaWFUZUxpbik7XHJcbiAgICAgICAgICAgICAgICBidWxsZXQxLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIGJ1bGxldDEubm9kZS5wb3NpdGlvbiA9IHN0YXJ0LmFkZChkaXIubXVsKE1hdGgucmFuZG9tKCkqLTE1KSk7XHJcblxyXG4gICAgICAgICAgICAgICAgYnVsbGV0MS5mbHkoZGlyLnJvdGF0ZShjYy5taXNjLmRlZ3JlZXNUb1JhZGlhbnModGhpcy5kZWdyZWUrZGVncmVlKSksIHRoaXMuX2ZpcmluZ1JhbmdlLCB0aGlzLl9zcGVlZCk7XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IGJ1bGxldDIgPSB0aGlzLmdhbWVCdWxsZXRzQ29udHJvbGxlci5nZXRJbmFjdGl2ZUJ1bGxldChCdWxsZXRFbWl0dGVyLlRZUEVTLkppYVRlTGluKTtcclxuICAgICAgICAgICAgICAgIGJ1bGxldDIubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0Mi5ub2RlLnBvc2l0aW9uID0gc3RhcnQuYWRkKGRpci5tdWwoTWF0aC5yYW5kb20oKSoxNSkpO1xyXG5cclxuICAgICAgICAgICAgICAgIGJ1bGxldDIuZmx5KGRpci5yb3RhdGUoY2MubWlzYy5kZWdyZWVzVG9SYWRpYW5zKC10aGlzLmRlZ3JlZS1kZWdyZWUpKSwgdGhpcy5fZmlyaW5nUmFuZ2UsIHRoaXMuX3NwZWVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubnVtKys7XHJcbiAgICB9XHJcbn1cclxuXHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bulletStrike/BulletStrike.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b5d9awRm+ZLZrIZ/r0dvhir', 'BulletStrike');
// script/app/entities/bulletStrike/BulletStrike.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BulletStrike = /** @class */ (function (_super) {
    __extends(BulletStrike, _super);
    function BulletStrike() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletStrike = __decorate([
        ccclass
    ], BulletStrike);
    return BulletStrike;
}(cc.Component));
exports.default = BulletStrike;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldFN0cmlrZS9CdWxsZXRTdHJpa2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNNLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQW1ELGdDQUFZO0lBQS9EOztJQUlBLENBQUM7SUFKNkIsWUFBWTtRQUR6QyxPQUFPO09BQ3NCLFlBQVksQ0FJekM7SUFBRCxtQkFBQztDQUpELEFBSUMsQ0FKa0QsRUFBRSxDQUFDLFNBQVMsR0FJOUQ7a0JBSjZCLFlBQVkiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBhYnN0cmFjdCBjbGFzcyBCdWxsZXRTdHJpa2UgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIGFic3RyYWN0IGluaXQoaWQpO1xyXG4gICAgYWJzdHJhY3Qgc3RyaWtlKCk7XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/enemy/SpiderEnemy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '944dfHPyTJMzJibewidrYiK', 'SpiderEnemy');
// script/app/entities/enemy/SpiderEnemy.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Music_1 = require("../../../../framework/audio/Music");
var GameProxy_1 = require("../../game/GameProxy");
var Enemy_1 = require("./Enemy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var SpiderEnemy = /** @class */ (function (_super) {
    __extends(SpiderEnemy, _super);
    function SpiderEnemy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.blinkNode = null;
        return _this;
    }
    Object.defineProperty(SpiderEnemy.prototype, "bAcc", {
        set: function (value) {
            this._bAcc = value;
            if (this._bAcc && !this.blinkNode.active) {
                this.blinkNode.active = true;
                this.blinkNode.runAction(cc.repeatForever(cc.blink(1, 3)));
                var duration = 0.5;
                var repeatFunc = function () {
                    if (!GameProxy_1.GameProxy.pauseGame) {
                        Music_1.Music.playSFX("sound/msc_en002");
                    }
                    // this.node.runAction(cc.sequence(cc.delayTime(duration), cc.callFunc(repeatFunc)));
                    // if (duration > 0.3){
                    //     duration -= duration/10;
                    // }
                };
                repeatFunc();
            }
        },
        enumerable: false,
        configurable: true
    });
    SpiderEnemy.prototype.doAttack = function () {
        this.hp = 0;
        console.log("爆炸蜘蛛死掉");
    };
    SpiderEnemy.prototype.playDead = function () {
        _super.prototype.playDead.call(this);
        /** 爆炸 */
        var bullet = window['GameBulletsController'].getInactiveEnemyBullet(this._enemyID);
        bullet.node.position = this.node.position;
        bullet.node.rotation = this.node.rotation;
        bullet.node.active = true;
        bullet.boom();
    };
    SpiderEnemy.prototype.reset = function () {
        _super.prototype.reset.call(this);
        this.blinkNode.stopAllActions();
        this.blinkNode.active = false;
    };
    __decorate([
        property(cc.Node)
    ], SpiderEnemy.prototype, "blinkNode", void 0);
    SpiderEnemy = __decorate([
        ccclass
    ], SpiderEnemy);
    return SpiderEnemy;
}(Enemy_1.default));
exports.default = SpiderEnemy;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2VuZW15L1NwaWRlckVuZW15LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSwyREFBd0Q7QUFDeEQsa0RBQStDO0FBQy9DLGlDQUE0QjtBQUV0QixJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUF5QywrQkFBSztJQUE5QztRQUFBLHFFQWlEQztRQTlDRyxlQUFTLEdBQVcsSUFBSSxDQUFDOztJQThDN0IsQ0FBQztJQTVDRyxzQkFBSSw2QkFBSTthQUFSLFVBQVMsS0FBYztZQUNuQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNuQixJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBQztnQkFDckMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO2dCQUM3QixJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDM0QsSUFBSSxRQUFRLEdBQUcsR0FBRyxDQUFDO2dCQUNuQixJQUFJLFVBQVUsR0FBRztvQkFDYixJQUFJLENBQUMscUJBQVMsQ0FBQyxTQUFTLEVBQUM7d0JBQ3JCLGFBQUssQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztxQkFDcEM7b0JBQ0QscUZBQXFGO29CQUNyRix1QkFBdUI7b0JBQ3ZCLCtCQUErQjtvQkFDL0IsSUFBSTtnQkFDUixDQUFDLENBQUM7Z0JBQ0YsVUFBVSxFQUFFLENBQUM7YUFDaEI7UUFDTCxDQUFDOzs7T0FBQTtJQUdTLDhCQUFRLEdBQWxCO1FBQ0ksSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDWixPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFBO0lBQ3pCLENBQUM7SUFHRCw4QkFBUSxHQUFSO1FBQ0ksaUJBQU0sUUFBUSxXQUFFLENBQUM7UUFDakIsU0FBUztRQUNULElBQUksTUFBTSxHQUFtQixNQUFNLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbkcsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDMUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDMUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQzFCLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBRUQsMkJBQUssR0FBTDtRQUNJLGlCQUFNLEtBQUssV0FBRSxDQUFDO1FBQ2QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUNoQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDbEMsQ0FBQztJQTFDRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDO2tEQUNPO0lBSFIsV0FBVztRQUQvQixPQUFPO09BQ2EsV0FBVyxDQWlEL0I7SUFBRCxrQkFBQztDQWpERCxBQWlEQyxDQWpEd0MsZUFBSyxHQWlEN0M7a0JBakRvQixXQUFXIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXRPZlNwaWRlciBmcm9tIFwiLi4vYnVsbGV0L0J1bGxldE9mU3BpZGVyXCI7XHJcbmltcG9ydCB7TXVzaWN9IGZyb20gXCIuLi8uLi8uLi8uLi9mcmFtZXdvcmsvYXVkaW8vTXVzaWNcIjtcclxuaW1wb3J0IHtHYW1lUHJveHl9IGZyb20gXCIuLi8uLi9nYW1lL0dhbWVQcm94eVwiO1xyXG5pbXBvcnQgRW5lbXkgZnJvbSBcIi4vRW5lbXlcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3BpZGVyRW5lbXkgZXh0ZW5kcyBFbmVteSB7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBibGlua05vZGU6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgc2V0IGJBY2ModmFsdWU6IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLl9iQWNjID0gdmFsdWU7XHJcbiAgICAgICAgaWYgKHRoaXMuX2JBY2MgJiYgIXRoaXMuYmxpbmtOb2RlLmFjdGl2ZSl7XHJcbiAgICAgICAgICAgIHRoaXMuYmxpbmtOb2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuYmxpbmtOb2RlLnJ1bkFjdGlvbihjYy5yZXBlYXRGb3JldmVyKGNjLmJsaW5rKDEsIDMpKSk7XHJcbiAgICAgICAgICAgIGxldCBkdXJhdGlvbiA9IDAuNTtcclxuICAgICAgICAgICAgbGV0IHJlcGVhdEZ1bmMgPSAoKT0+e1xyXG4gICAgICAgICAgICAgICAgaWYgKCFHYW1lUHJveHkucGF1c2VHYW1lKXtcclxuICAgICAgICAgICAgICAgICAgICBNdXNpYy5wbGF5U0ZYKFwic291bmQvbXNjX2VuMDAyXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5ub2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5kZWxheVRpbWUoZHVyYXRpb24pLCBjYy5jYWxsRnVuYyhyZXBlYXRGdW5jKSkpO1xyXG4gICAgICAgICAgICAgICAgLy8gaWYgKGR1cmF0aW9uID4gMC4zKXtcclxuICAgICAgICAgICAgICAgIC8vICAgICBkdXJhdGlvbiAtPSBkdXJhdGlvbi8xMDtcclxuICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgcmVwZWF0RnVuYygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgcHJvdGVjdGVkIGRvQXR0YWNrKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaHAgPSAwO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi54iG54K46JyY6Jub5q275o6JXCIpXHJcbiAgICB9XHJcblxyXG5cclxuICAgIHBsYXlEZWFkKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLnBsYXlEZWFkKCk7XHJcbiAgICAgICAgLyoqIOeIhueCuCAqL1xyXG4gICAgICAgIGxldCBidWxsZXQgPSA8QnVsbGV0T2ZTcGlkZXI+d2luZG93WydHYW1lQnVsbGV0c0NvbnRyb2xsZXInXS5nZXRJbmFjdGl2ZUVuZW15QnVsbGV0KHRoaXMuX2VuZW15SUQpO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLnBvc2l0aW9uID0gdGhpcy5ub2RlLnBvc2l0aW9uO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLnJvdGF0aW9uID0gdGhpcy5ub2RlLnJvdGF0aW9uO1xyXG4gICAgICAgIGJ1bGxldC5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgYnVsbGV0LmJvb20oKTtcclxuICAgIH1cclxuXHJcbiAgICByZXNldCgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5yZXNldCgpO1xyXG4gICAgICAgIHRoaXMuYmxpbmtOb2RlLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICAgICAgdGhpcy5ibGlua05vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/enemy/EnemyAABB.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2fd84qgTxlNla8RAGPr2aOb', 'EnemyAABB');
// script/app/entities/enemy/EnemyAABB.ts

Object.defineProperty(exports, "__esModule", { value: true });
var AABBRegion_1 = require("../../../quad-tree/AABBRegion");
var Enemy_1 = require("./Enemy");
var _a = cc._decorator, ccclass = _a.ccclass, disallowMultiple = _a.disallowMultiple;
var EnemyAABB = /** @class */ (function (_super) {
    __extends(EnemyAABB, _super);
    function EnemyAABB() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._radius = 0;
        _this._enemy = null;
        return _this;
    }
    Object.defineProperty(EnemyAABB.prototype, "enemy", {
        get: function () {
            return this._enemy;
        },
        enumerable: false,
        configurable: true
    });
    EnemyAABB.prototype.onLoad = function () {
        this._radius = this.getComponent(cc.CircleCollider).radius;
        this._enemy = this.getComponent(Enemy_1.default);
    };
    EnemyAABB.prototype.aabb = function () {
        var doubleRadius = this._radius * 2;
        return cc.rect(this.node.x - this._radius, this.node.y - this._radius, doubleRadius, doubleRadius);
    };
    EnemyAABB = __decorate([
        ccclass,
        disallowMultiple
    ], EnemyAABB);
    return EnemyAABB;
}(AABBRegion_1.default));
exports.default = EnemyAABB;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2VuZW15L0VuZW15QUFCQi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsNERBQXVEO0FBQ3ZELGlDQUE0QjtBQUV0QixJQUFBLEtBQThCLEVBQUUsQ0FBQyxVQUFVLEVBQTFDLE9BQU8sYUFBQSxFQUFFLGdCQUFnQixzQkFBaUIsQ0FBQztBQUlsRDtJQUF1Qyw2QkFBVTtJQUFqRDtRQUFBLHFFQW9CQztRQWxCVyxhQUFPLEdBQUcsQ0FBQyxDQUFDO1FBRVosWUFBTSxHQUFTLElBQUksQ0FBQzs7SUFnQmhDLENBQUM7SUFiRyxzQkFBSSw0QkFBSzthQUFUO1lBQ0ksT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3ZCLENBQUM7OztPQUFBO0lBRUQsMEJBQU0sR0FBTjtRQUNJLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQzNELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFLLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsd0JBQUksR0FBSjtRQUNJLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3ZHLENBQUM7SUFuQmdCLFNBQVM7UUFGN0IsT0FBTztRQUNQLGdCQUFnQjtPQUNJLFNBQVMsQ0FvQjdCO0lBQUQsZ0JBQUM7Q0FwQkQsQUFvQkMsQ0FwQnNDLG9CQUFVLEdBb0JoRDtrQkFwQm9CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEFBQkJSZWdpb24gZnJvbSBcIi4uLy4uLy4uL3F1YWQtdHJlZS9BQUJCUmVnaW9uXCI7XHJcbmltcG9ydCBFbmVteSBmcm9tIFwiLi9FbmVteVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIGRpc2FsbG93TXVsdGlwbGV9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbkBkaXNhbGxvd011bHRpcGxlXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVuZW15QUFCQiBleHRlbmRzIEFBQkJSZWdpb24ge1xyXG5cclxuICAgIHByaXZhdGUgX3JhZGl1cyA9IDA7XHJcblxyXG4gICAgcHJpdmF0ZSBfZW5lbXk6RW5lbXkgPSBudWxsO1xyXG5cclxuXHJcbiAgICBnZXQgZW5lbXkoKTogRW5lbXkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9lbmVteTtcclxuICAgIH1cclxuXHJcbiAgICBvbkxvYWQoKXtcclxuICAgICAgICB0aGlzLl9yYWRpdXMgPSB0aGlzLmdldENvbXBvbmVudChjYy5DaXJjbGVDb2xsaWRlcikucmFkaXVzO1xyXG4gICAgICAgIHRoaXMuX2VuZW15ID0gdGhpcy5nZXRDb21wb25lbnQoRW5lbXkpO1xyXG4gICAgfVxyXG5cclxuICAgIGFhYmIoKTogY2MuUmVjdCB7XHJcbiAgICAgICAgbGV0IGRvdWJsZVJhZGl1cyA9IHRoaXMuX3JhZGl1cyAqIDI7XHJcbiAgICAgICAgcmV0dXJuIGNjLnJlY3QodGhpcy5ub2RlLnggLSB0aGlzLl9yYWRpdXMsIHRoaXMubm9kZS55IC0gdGhpcy5fcmFkaXVzLCBkb3VibGVSYWRpdXMsIGRvdWJsZVJhZGl1cyk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/enemy/Enemy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1ab695SfTxHj46gL5xG1BMg', 'Enemy');
// script/app/entities/enemy/Enemy.ts

Object.defineProperty(exports, "__esModule", { value: true });
var EnemyAABB_1 = require("./EnemyAABB");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var GameProxy_1 = require("../../game/GameProxy");
var Music_1 = require("../../../../framework/audio/Music");
var Extend_1 = require("../../../../framework/extend/Extend");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var AttackDelayList = [0.4, 0.4, 0, 0.2, 0.3, 0.3, 0.3, 0.5];
var BASE_TIME_SCALE = 1.5;
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ske = null;
        _this.attackCD = 1;
        _this._gameSlow = false;
        _this._moveSpeed = 0;
        /** 速度的加成 */
        _this._speedAdd = 1;
        _this._bAcc = false;
        _this.accSpeed = 0;
        _this.foundRange = 0;
        _this.attackDistance = 100;
        _this.bulletSpeed = 0;
        _this.unrepel = 0;
        _this.maxHp = 0;
        /** 死后爆汁缩放 */
        _this.humorScale = 1;
        /** 金币数 */
        _this.gold = 0;
        /** 金币图标掉落 */
        _this.goldIconFell = 1;
        _this.speedcut = 0;
        /** 移动标志 */
        _this.moveFlag = false;
        /** 转向角色标志 */
        _this.lookAtRoleFlag = false;
        /** 攻击冷却中 */
        _this.attackCoolingFlag = false;
        /** 逻辑处理标志 */
        _this.logicFlag = false;
        /** 移动方向 */
        _this.moveDir = cc.v2();
        /** 僵硬 */
        _this._stiff = false;
        _this._hp = 0;
        _this.hurt = 0;
        _this.hierarchy = 0;
        /** 综合属性 */
        /** 敏捷度 */
        _this.agility = 0;
        _this._strikeCompleteTime = 0;
        _this._spaceCircleCollider = null;
        _this._defenceBoxCollider = null;
        _this._enemyAABB = null;
        _this._bounds = cc.rect();
        _this._enemyID = 0;
        _this.attackDelayTime = -1;
        return _this;
    }
    Object.defineProperty(Enemy.prototype, "gameSlow", {
        set: function (value) {
            this._gameSlow = value;
            var timeScale = BASE_TIME_SCALE;
            if (this._gameSlow) {
                timeScale *= 0.2;
            }
            this.ske.timeScale = timeScale;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "speedAdd", {
        get: function () {
            return this._speedAdd;
        },
        set: function (value) {
            this._speedAdd = value;
            this.ske.timeScale = BASE_TIME_SCALE * value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "bAcc", {
        set: function (value) {
            this._bAcc = value;
            if (this._bAcc && this.enemyID > 3) {
                Music_1.Music.playSFX("sound/msc_en003", 0.6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "moveSpeed", {
        get: function () {
            return this._moveSpeed * (this._bAcc ? this.accSpeed : 1) * this._speedAdd * (this._gameSlow ? 0.2 : 1);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "stiff", {
        get: function () {
            return this._stiff;
        },
        set: function (value) {
            this._stiff = value;
            this.playStand();
        },
        enumerable: false,
        configurable: true
    });
    Enemy.prototype.doStiff = function (stiff) {
        var _this = this;
        this.stiff = true;
        var action = cc.sequence(cc.delayTime(stiff), cc.callFunc(function () { return _this.stiff = false; }));
        action.setTag(1230);
        this.node.stopActionByTag(1230);
        this.node.runAction(action);
    };
    Enemy.prototype.doSpeedcut = function () {
        var _this = this;
        if (this.speedcut > 0) {
            this.speedAdd = 1 - this.speedcut;
            var action = cc.sequence(cc.delayTime(0.15), cc.callFunc(function () { return _this.speedAdd = 1; }));
            action.setTag(2510);
            this.node.stopActionByTag(2510);
            this.node.runAction(action);
        }
    };
    Enemy.prototype.doRepel = function (dir, repel) {
        var _this = this;
        this.playBeaten();
        /** 计算与边线线段的交点 */
        var delta = dir.mul(repel);
        var destPos = this.node.position.add(delta);
        var intersections = [];
        if (dir.x > 0) {
            //右边界
            if (destPos.x >= this._bounds.xMax) {
                var point = cc.v2();
                if (cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMax, this._bounds.yMin), cc.v2(this._bounds.xMax, this._bounds.yMax), point)) {
                    intersections.push(point);
                }
            }
        }
        else if (dir.x < 0) {
            //左边界
            if (destPos.x <= this._bounds.xMin) {
                var point = cc.v2();
                if (cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMin), cc.v2(this._bounds.xMin, this._bounds.yMax), point)) {
                    intersections.push(point);
                }
            }
        }
        if (dir.y > 0) {
            //上边界
            if (destPos.y >= this._bounds.yMax) {
                var point = cc.v2();
                if (cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMax), cc.v2(this._bounds.xMax, this._bounds.yMax), point)) {
                    intersections.push(point);
                }
            }
        }
        else if (dir.y < 0) {
            //上边界
            if (destPos.y <= this._bounds.yMin) {
                var point = cc.v2();
                if (cc.Intersection.pLineIntersect(this.node.position, destPos, cc.v2(this._bounds.xMin, this._bounds.yMin), cc.v2(this._bounds.xMax, this._bounds.yMin), point)) {
                    intersections.push(point);
                }
            }
        }
        if (intersections.length > 0) {
            // console.log("重新计算destPos===>intersections", intersections);
            /** 重新计算destPos */
            if (intersections.length == 1) {
                destPos = intersections[0].addSelf(dir.neg(cc.v2()));
            }
            else {
                /** 取距离怪物最近的那个点 */
                var p = intersections[0];
                var minDistance = p.sub(this.node.position).mag();
                for (var i = 1; i < intersections.length; i++) {
                    var mag = intersections[i].sub(this.node.position).mag();
                    if (mag < minDistance) {
                        p = intersections[i];
                        minDistance = mag;
                    }
                }
                destPos = p.addSelf(dir.neg(cc.v2()));
            }
        }
        var distance = destPos.sub(this.node.position).mag();
        var speed = 800;
        var action = cc.sequence(cc.moveTo(distance / speed, destPos).easing(cc.easeCircleActionOut()), cc.callFunc(function () {
            _this.playBeatenBack();
        }));
        action.setTag(582);
        this.node.stopActionByTag(582);
        this.node.runAction(action);
    };
    Object.defineProperty(Enemy.prototype, "hp", {
        get: function () {
            return this._hp;
        },
        set: function (value) {
            var _this = this;
            if (this._hp <= 0)
                return;
            var damage = this._hp - value;
            window['GameLabelsController'].fly("-" + Extend_1.ext.shortFormat(damage), this.node.position.add(cc.v2(0, this.spaceCircleCollider.radius)));
            this.ske.node.color = this.ske.node.color.fromHEX("#D85959");
            this.ske.node.runAction(cc.sequence(cc.delayTime(0.05), cc.callFunc(function () { return _this.ske.node.color = cc.Color.WHITE; })));
            this._hp = value;
            if (value <= 0) {
                GameProxy_1.GameProxy.killCount++;
                GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.KillEnemy, this);
                this.node.stopAllActions();
                this._stiff = true;
                this.playDead();
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "strikeCompleteTime", {
        get: function () {
            return this._strikeCompleteTime;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "spaceCircleCollider", {
        get: function () {
            return this._spaceCircleCollider;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "defenceBoxCollider", {
        get: function () {
            return this._defenceBoxCollider;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "enemyAABB", {
        get: function () {
            return this._enemyAABB;
        },
        enumerable: false,
        configurable: true
    });
    Enemy.prototype.reset = function () {
        var _this = this;
        this._hp = this.maxHp;
        this.stiff = false;
        this.speedAdd = 1;
        this.gameSlow = GameProxy_1.GameProxy.slowGame;
        this._bAcc = false;
        if (GameProxy_1.GameProxy.maxEnemyNum - GameProxy_1.GameProxy.enemyList.length >= GameProxy_1.GameProxy.levelConfig.amount_p1 + 1) {
            this.bAcc = true;
        }
        this.ske.timeScale = BASE_TIME_SCALE;
        this.moveFlag = false;
        this.lookAtRoleFlag = false;
        this.attackCoolingFlag = false;
        this.logicFlag = false;
        this.node.on(cc.Node.EventType.ROTATION_CHANGED, function () {
            _this.moveDir = cc.v2(0, 1).normalize().rotate(cc.misc.degreesToRadians(-_this.node.rotation));
        });
        /** 朝向角色 */
        var dir = window['GameRoleController'].role.node.position.sub(this.node.position);
        this.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
        this.playStand();
    };
    Enemy.prototype.onEnable = function () {
        this.reset();
    };
    Enemy.prototype.onDisable = function () {
        this.node.stopAllActions();
    };
    Enemy.prototype.start = function () {
        var bgNode = this.node.getParent().getParent();
        this._bounds.x = -bgNode.width / 2 + this.spaceCircleCollider.radius;
        this._bounds.y = -bgNode.height / 2 + this.spaceCircleCollider.radius;
        this._bounds.width = bgNode.width - this.spaceCircleCollider.radius * 2;
        this._bounds.height = bgNode.height - this.spaceCircleCollider.radius * 2;
    };
    Enemy.prototype.onLoad = function () {
        var _this = this;
        this._spaceCircleCollider = this.getComponent(cc.CircleCollider);
        this._defenceBoxCollider = this.getComponent(cc.BoxCollider);
        this._enemyAABB = this.getComponent(EnemyAABB_1.default);
        this.ske.setMix("strike", "stand", 0.1);
        this.ske.setMix("walk", "strike", 0.1);
        this.ske.setCompleteListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            if (name == "strike") {
                _this.playStand();
                _this._strikeCompleteTime = new Date().getTime();
                _this.attackCoolingFlag = true;
                _this.node.runAction(cc.sequence(cc.delayTime(_this.attackCD), cc.callFunc(function () {
                    _this.attackCoolingFlag = false;
                })));
            }
            else if (name == "beaten") {
                _this.playStand();
            }
            else if (name == "dead") {
                _this.showBlood();
                _this.node.runAction(cc.sequence(cc.delayTime(0), cc.callFunc(function () {
                    _this.node.active = false;
                })));
            }
            else if (name == "stand") {
                _this.playWalk();
            }
        });
    };
    Enemy.prototype.showBlood = function () {
        var bloodNode = window['GameEnemysController'].getInactiveEnemyBloodNode();
        bloodNode.active = true;
        bloodNode.position = this.node.position;
        bloodNode.rotation = Math.random() * 360;
        bloodNode.scale = this.humorScale;
        bloodNode.opacity = 255;
        bloodNode.runAction(cc.sequence(cc.delayTime(1), cc.fadeTo(0.5, 60), cc.callFunc(function () {
            bloodNode.active = false;
        })));
    };
    Enemy.prototype.isInAttackRange = function () {
        var sub = window['GameRoleController'].role.node.position.sub(this.node.position);
        var distance = sub.mag();
        //并且打不到敌人
        if (distance < this.attackDistance + window['GameRoleController'].role.spaceCircleCollider.radius) {
            // console.log("===============>怪物可以攻击了");
            /** 根据攻击距离计算攻击夹角 */
            var attackRadian = Math.atan(window['GameRoleController'].role.spaceCircleCollider.radius / distance);
            if (sub.angle(cc.v2(0, 1).rotate(cc.misc.degreesToRadians(-this.node.rotation))) < attackRadian) {
                return true;
            }
        }
        return false;
    };
    Enemy.prototype.doAttack = function () {
        /** 判断攻击角度与距离，在一定范围内则判断为攻击成功 */
        if (this.isInAttackRange()) {
            Music_1.Music.playSFX("sound/msc_en003");
            window['GameRoleController'].hp -= this.hurt;
        }
    };
    Object.defineProperty(Enemy.prototype, "enemyID", {
        get: function () {
            return this._enemyID;
        },
        enumerable: false,
        configurable: true
    });
    Enemy.prototype.init = function (id) {
        this._enemyID = id;
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Enemy)[id - 1];
        this.unrepel = config['unrepel'];
        this._moveSpeed = config['move'];
        this.accSpeed = config['acc_s'];
        this.foundRange = config['found_rg'];
        this.agility = config['agility'];
        this.attackDistance = config['range'];
        this.attackCD = config['fre'];
        this.bulletSpeed = config['speed'];
        this.maxHp = this._hp = Math.floor(config['health'] * GameProxy_1.GameProxy.enemyHpMulOf(this._enemyID));
        this.hurt = Math.floor(config['hurt'] * GameProxy_1.GameProxy.enemyHurtMulOf(config['id']));
        this.hierarchy = config['hierarchy'];
        this.humorScale = config['humor'];
        this.gold = Math.floor(config['gold_pro'] * GameProxy_1.GameProxy.enemyGoldMulOf(this._enemyID));
        this.goldIconFell = config['gold_fell'];
        this.speedcut = config['speedcut'];
        this.node.zIndex = this.hierarchy;
        this.attackDelayTime = AttackDelayList[id - 1];
        if (id > AttackDelayList.length) {
            console.error("_enemyID > AttackDelayList.length");
        }
    };
    Enemy.prototype.setAnimation = function (trackIndex, name, loop) {
        this.ske.setAnimation(trackIndex, name, loop);
        this.moveFlag = name == "walk";
        this.lookAtRoleFlag = name != "strike";
    };
    Enemy.prototype.stopAttack = function () {
        this.node.stopActionByTag(1199);
    };
    Enemy.prototype.playStand = function () {
        this.setAnimation(0, "stand", true);
    };
    Enemy.prototype.playAttack = function () {
        var _this = this;
        if (this.attackDelayTime >= 0) {
            var action = cc.speed(cc.sequence(cc.delayTime(this.attackDelayTime), cc.callFunc(function () {
                if (!GameProxy_1.GameProxy.pauseGame) {
                    _this.doAttack();
                }
            })), 1);
            action.setTag(1199);
            this.node.runAction(action);
        }
        this.setAnimation(0, "strike", false);
    };
    Enemy.prototype.playWalk = function () {
        this.setAnimation(0, "walk", true);
    };
    Enemy.prototype.playDead = function () {
        this.stopAttack();
        this.ske.timeScale = BASE_TIME_SCALE;
        this.setAnimation(0, "dead", false);
    };
    Enemy.prototype.playBeaten = function () {
        this.stopAttack();
        // console.log("beaten2.....");
        this.setAnimation(0, "beaten2", false);
    };
    Enemy.prototype.playBeatenBack = function () {
        // console.log("beaten.....");
        this.setAnimation(0, "beaten", false);
    };
    Enemy.prototype.isAttacking = function () {
        return this.ske.animation == "strike";
    };
    Enemy.prototype.isBeating = function () {
        return this.ske.animation == "beaten2" || this.ske.animation == "beaten";
    };
    Enemy.prototype.isWalking = function () {
        return this.ske.animation == "walk";
    };
    Enemy.prototype.isStanding = function () {
        return this.ske.animation == "stand";
    };
    Enemy.prototype.isDead = function () {
        return this._hp <= 0;
    };
    Enemy.prototype.turnTo = function (dir) {
        var degree = (90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x))) % 360;
        // console.log("de===>", degree);
        // console.log("dir===>x="+dir.x+" y="+dir.y);
        if (degree < 0) {
            degree += 360;
        }
        var enemyRotation = this.node.rotation % 360;
        if (enemyRotation < 0) {
            enemyRotation += 360;
        }
        var subDegree = Math.abs(degree - enemyRotation);
        // console.log("degree="+degree);
        // console.log("enemyRotation====>"+enemyRotation);
        var speed = this._moveSpeed * this.agility * (this._bAcc ? 0.5 : 1) * this._speedAdd * (this._gameSlow ? 0.2 : 1);
        if (subDegree > 0) {
            var rotation = 0;
            if (subDegree > 180) {
                rotation = Math.sign(enemyRotation - degree) * speed;
                if (Math.abs(rotation) > 360 - subDegree) {
                    rotation = Math.sign(rotation) * (360 - subDegree);
                }
            }
            else {
                rotation = Math.sign(degree - enemyRotation) * speed;
                if (Math.abs(rotation) > subDegree) {
                    rotation = Math.sign(rotation) * subDegree;
                }
            }
            enemyRotation += rotation;
        }
        this.node.rotation = enemyRotation;
    };
    Enemy.prototype.move = function () {
        // console.log("len===>", len);
        var len = this.moveSpeed;
        if (len <= 0)
            return false;
        /** 沿着当前方向移动 */
        var position = this.node.position.add(this.moveDir.mul(len));
        /** 判断与角色的碰撞 */
        // let toRoleDistance = position.sub(window['GameRoleController'].role.node.position).mag();
        // if (toRoleDistance < this.spaceCircleCollider.radius + window['GameRoleController'].role.spaceCircleCollider.radius){
        //     return false;
        // }
        /** 判断边界 */
        if (position.x > this._bounds.xMax || position.x < this._bounds.xMin || position.y > this._bounds.yMax || position.y < this._bounds.yMin) {
            return false;
        }
        if (!this._bAcc && this.foundRange > 0) {
            var toRoleDistance = position.sub(window['GameRoleController'].role.node.position).mag();
            this.bAcc = toRoleDistance - len < this.foundRange;
        }
        /** 判断怪物之间的碰撞 */
        // let arr = [];
        // this._gameCollisionController.looseQuadTree.retrieve(this.enemyAABB.aabb(),arr);
        //
        // for (let aabbRegion of arr){
        //     let enemy = aabbRegion.enemy;
        //     if (enemy !== this && enemy.node.position.sub(position).mag() < enemy.spaceCircleCollider.radius + enemy.spaceCircleCollider.radius){
        //         return false;
        //     }
        // }
        this.node.position = position;
        return true;
    };
    Enemy.prototype.update = function (dt) {
        if (GameProxy_1.GameProxy.pauseGame || this.stiff) {
            return;
        }
        /** 逻辑处理标志--优化策略为每一帧只处理固定数量的怪物逻辑 */
        if (this.logicFlag) {
            /** 是否可以攻击 */
            if ((this.isWalking() || this.isStanding()) && this.isInAttackRange()) {
                this.playAttack();
            }
            /** 旋转 */
            if (this.lookAtRoleFlag) {
                this.turnTo(window['GameRoleController'].role.node.position.sub(this.node.position).normalize());
            }
        }
        /** 移动 */
        if (this.moveFlag) {
            this.move();
        }
    };
    __decorate([
        property(sp.Skeleton)
    ], Enemy.prototype, "ske", void 0);
    Enemy = __decorate([
        ccclass
    ], Enemy);
    return Enemy;
}(cc.Component));
exports.default = Enemy;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/prop/Lightning.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b12ccGunt9H9pBPDrPhutA1', 'Lightning');
// script/app/entities/prop/Lightning.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Lightning = /** @class */ (function (_super) {
    __extends(Lightning, _super);
    function Lightning() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** 默认高度375 */
        _this.ske = null;
        _this.lightEnemys = [];
        return _this;
    }
    Lightning.prototype.onLoad = function () {
        var _this = this;
        this.ske.setCompleteListener(function (trackEntry, loopCount) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            _this.node.active = false;
            /** 生成一个新的 */
            if (_this.lightEnemys.length < 6) {
            }
        });
    };
    Lightning.prototype.joint = function (enemy) {
        this.lightEnemys.push(enemy);
        var sub = enemy.node.position.sub(this.node.position);
        var distance = sub.mag();
        this.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(sub.y, sub.x));
        this.node.scaleY = distance / 375;
        this.node.active = true;
        this.ske.setAnimation(0, "animation", false);
    };
    __decorate([
        property(sp.Skeleton)
    ], Lightning.prototype, "ske", void 0);
    Lightning = __decorate([
        ccclass
    ], Lightning);
    return Lightning;
}(cc.Component));
exports.default = Lightning;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL3Byb3AvTGlnaHRuaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJTSxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUF1Qyw2QkFBWTtJQUFuRDtRQUFBLHFFQTRCQztRQTFCRyxjQUFjO1FBRWQsU0FBRyxHQUFlLElBQUksQ0FBQztRQUVmLGlCQUFXLEdBQWdCLEVBQUUsQ0FBQzs7SUFzQjFDLENBQUM7SUFwQmEsMEJBQU0sR0FBaEI7UUFBQSxpQkFTQztRQVJHLElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsVUFBQyxVQUFVLEVBQUUsU0FBUztZQUMvQyxJQUFJLElBQUksR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQ2pFLEtBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUN6QixhQUFhO1lBQ2IsSUFBSSxLQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUM7YUFFL0I7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCx5QkFBSyxHQUFMLFVBQU0sS0FBVztRQUNiLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdCLElBQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RELElBQUksUUFBUSxHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsUUFBUSxHQUFDLEdBQUcsQ0FBQztRQUNoQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDeEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLFdBQVcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBdkJEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUM7MENBQ0M7SUFKTixTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBNEI3QjtJQUFELGdCQUFDO0NBNUJELEFBNEJDLENBNUJzQyxFQUFFLENBQUMsU0FBUyxHQTRCbEQ7a0JBNUJvQixTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5pbXBvcnQgRW5lbXkgZnJvbSBcIi4uL2VuZW15L0VuZW15XCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpZ2h0bmluZyBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgLyoqIOm7mOiupOmrmOW6pjM3NSAqL1xyXG4gICAgQHByb3BlcnR5KHNwLlNrZWxldG9uKVxyXG4gICAgc2tlOnNwLlNrZWxldG9uID0gbnVsbDtcclxuXHJcbiAgICBwcml2YXRlIGxpZ2h0RW5lbXlzOkFycmF5PEVuZW15PiA9IFtdO1xyXG5cclxuICAgIHByb3RlY3RlZCBvbkxvYWQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5za2Uuc2V0Q29tcGxldGVMaXN0ZW5lcigodHJhY2tFbnRyeSwgbG9vcENvdW50KSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBuYW1lID0gdHJhY2tFbnRyeS5hbmltYXRpb24gPyB0cmFja0VudHJ5LmFuaW1hdGlvbi5uYW1lIDogJyc7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgLyoqIOeUn+aIkOS4gOS4quaWsOeahCAqL1xyXG4gICAgICAgICAgICBpZiAodGhpcy5saWdodEVuZW15cy5sZW5ndGggPCA2KXtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBqb2ludChlbmVteTpFbmVteSl7XHJcbiAgICAgICAgdGhpcy5saWdodEVuZW15cy5wdXNoKGVuZW15KTtcclxuICAgICAgICBsZXQgc3ViID0gZW5lbXkubm9kZS5wb3NpdGlvbi5zdWIodGhpcy5ub2RlLnBvc2l0aW9uKTtcclxuICAgICAgICBsZXQgZGlzdGFuY2UgPSBzdWIubWFnKCk7XHJcbiAgICAgICAgdGhpcy5ub2RlLnJvdGF0aW9uID0gOTAgLSBjYy5taXNjLnJhZGlhbnNUb0RlZ3JlZXMoTWF0aC5hdGFuMihzdWIueSwgc3ViLngpKTtcclxuICAgICAgICB0aGlzLm5vZGUuc2NhbGVZID0gZGlzdGFuY2UvMzc1O1xyXG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuc2tlLnNldEFuaW1hdGlvbigwLCBcImFuaW1hdGlvblwiLCBmYWxzZSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/role/RoleSupply.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '2bd6dTM6NBDwZWsxGIeQ2I/', 'RoleSupply');
// script/app/entities/role/RoleSupply.ts

Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var RoleSupply = /** @class */ (function (_super) {
    __extends(RoleSupply, _super);
    function RoleSupply() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ske = null;
        _this.roleNode = null;
        return _this;
    }
    RoleSupply.prototype.onLoad = function () {
        var _this = this;
        this.ske.setCompleteListener(function () {
            _this.node.destroy();
        });
    };
    RoleSupply.prototype.setSupply = function (id, roleNode) {
        this.roleNode = roleNode;
        this.roleNode.on(cc.Node.EventType.POSITION_CHANGED, this.onFollowRole, this);
        var skinName = "prop_" + ("0000000000" + id).substr(-3);
        this.ske.setSkin(skinName);
        this.ske.setAnimation(0, "supplyLong", false);
    };
    RoleSupply.prototype.onFollowRole = function () {
        this.node.position = this.roleNode.position;
    };
    RoleSupply.prototype.onDestroy = function () {
        if (this.roleNode) {
            this.roleNode.off(cc.Node.EventType.POSITION_CHANGED, this.onFollowRole, this);
        }
    };
    __decorate([
        property(sp.Skeleton)
    ], RoleSupply.prototype, "ske", void 0);
    RoleSupply = __decorate([
        ccclass
    ], RoleSupply);
    return RoleSupply;
}(cc.Component));
exports.default = RoleSupply;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL3JvbGUvUm9sZVN1cHBseS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ00sSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBd0MsOEJBQVk7SUFBcEQ7UUFBQSxxRUErQkM7UUE1QkcsU0FBRyxHQUFlLElBQUksQ0FBQztRQUV2QixjQUFRLEdBQVcsSUFBSSxDQUFDOztJQTBCNUIsQ0FBQztJQXZCRywyQkFBTSxHQUFOO1FBQUEsaUJBSUM7UUFIRyxJQUFJLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDO1lBQ3pCLEtBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDeEIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsOEJBQVMsR0FBVCxVQUFVLEVBQVMsRUFBQyxRQUFnQjtRQUNoQyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzlFLElBQUksUUFBUSxHQUFHLE9BQU8sR0FBQyxDQUFDLFlBQVksR0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUUsWUFBWSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFRCxpQ0FBWSxHQUFaO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUM7SUFDaEQsQ0FBQztJQUVELDhCQUFTLEdBQVQ7UUFDSSxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUM7WUFDZCxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ2xGO0lBQ0wsQ0FBQztJQTNCRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDOzJDQUNDO0lBSE4sVUFBVTtRQUQ5QixPQUFPO09BQ2EsVUFBVSxDQStCOUI7SUFBRCxpQkFBQztDQS9CRCxBQStCQyxDQS9CdUMsRUFBRSxDQUFDLFNBQVMsR0ErQm5EO2tCQS9Cb0IsVUFBVSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvbGVTdXBwbHkgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShzcC5Ta2VsZXRvbilcclxuICAgIHNrZTpzcC5Ta2VsZXRvbiA9IG51bGw7XHJcblxyXG4gICAgcm9sZU5vZGU6Y2MuTm9kZSA9IG51bGw7XHJcblxyXG5cclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy5za2Uuc2V0Q29tcGxldGVMaXN0ZW5lcigoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuZGVzdHJveSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFN1cHBseShpZDpudW1iZXIscm9sZU5vZGU6Y2MuTm9kZSl7XHJcbiAgICAgICAgdGhpcy5yb2xlTm9kZSA9IHJvbGVOb2RlO1xyXG4gICAgICAgIHRoaXMucm9sZU5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuUE9TSVRJT05fQ0hBTkdFRCwgdGhpcy5vbkZvbGxvd1JvbGUsIHRoaXMpO1xyXG4gICAgICAgIGxldCBza2luTmFtZSA9IFwicHJvcF9cIisoXCIwMDAwMDAwMDAwXCIraWQpLnN1YnN0cigtMyk7XHJcbiAgICAgICAgdGhpcy5za2Uuc2V0U2tpbihza2luTmFtZSk7XHJcbiAgICAgICAgdGhpcy5za2Uuc2V0QW5pbWF0aW9uKDAsIFwic3VwcGx5TG9uZ1wiLCBmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Gb2xsb3dSb2xlKCl7XHJcbiAgICAgICAgdGhpcy5ub2RlLnBvc2l0aW9uID0gdGhpcy5yb2xlTm9kZS5wb3NpdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBvbkRlc3Ryb3koKXtcclxuICAgICAgICBpZiAodGhpcy5yb2xlTm9kZSl7XHJcbiAgICAgICAgICAgIHRoaXMucm9sZU5vZGUub2ZmKGNjLk5vZGUuRXZlbnRUeXBlLlBPU0lUSU9OX0NIQU5HRUQsIHRoaXMub25Gb2xsb3dSb2xlLCB0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/enemy/BossEnemy.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c1cc1d82RVB7rbf8Gux/Hri', 'BossEnemy');
// script/app/entities/enemy/BossEnemy.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Enemy_1 = require("./Enemy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var BossEnemy = /** @class */ (function (_super) {
    __extends(BossEnemy, _super);
    function BossEnemy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hpBar = null;
        return _this;
    }
    __decorate([
        property(cc.ProgressBar)
    ], BossEnemy.prototype, "hpBar", void 0);
    BossEnemy = __decorate([
        ccclass
    ], BossEnemy);
    return BossEnemy;
}(Enemy_1.default));
exports.default = BossEnemy;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2VuZW15L0Jvc3NFbmVteS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsaUNBQTRCO0FBRXRCLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQXVDLDZCQUFLO0lBQTVDO1FBQUEscUVBTUM7UUFIRyxXQUFLLEdBQW1CLElBQUksQ0FBQzs7SUFHakMsQ0FBQztJQUhHO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUM7NENBQ0k7SUFIWixTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBTTdCO0lBQUQsZ0JBQUM7Q0FORCxBQU1DLENBTnNDLGVBQUssR0FNM0M7a0JBTm9CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEVuZW15IGZyb20gXCIuL0VuZW15XCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvc3NFbmVteSBleHRlbmRzIEVuZW15IHtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuUHJvZ3Jlc3NCYXIpXHJcbiAgICBocEJhcjogY2MuUHJvZ3Jlc3NCYXIgPSBudWxsO1xyXG5cclxuXHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/BulletHuoJianTong.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f1a9acz1GRFM6HjLvTeZdOh', 'BulletHuoJianTong');
// script/app/entities/bullet/BulletHuoJianTong.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("./Bullet");
var Facade_1 = require("../../../../framework/facade/Facade");
var World_1 = require("../../info/World");
var Music_1 = require("../../../../framework/audio/Music");
var ccclass = cc._decorator.ccclass;
var magnify = 1;
var BulletHuoJianTong = /** @class */ (function (_super) {
    __extends(BulletHuoJianTong, _super);
    function BulletHuoJianTong() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._gameExplosivesController = null;
        return _this;
    }
    BulletHuoJianTong.prototype.onLoad = function () {
        _super.prototype.onLoad.call(this);
        this._gameExplosivesController = Facade_1.default.findComponent("GameScene", "GameExplosivesController");
    };
    BulletHuoJianTong.prototype.init = function (id) {
        this.bulletId = id;
    };
    BulletHuoJianTong.prototype.boom = function () {
        Music_1.Music.playSFX("sound/msc_g002");
        var explosiveHuoJianTong = this._gameExplosivesController.getInactiveExplosive(9);
        explosiveHuoJianTong.node.position = this.node.position;
        explosiveHuoJianTong.node.active = true;
        explosiveHuoJianTong.node.scale = magnify * World_1.World.My.armory.magnifyMul(explosiveHuoJianTong.bulletId);
        explosiveHuoJianTong.node.rotation = Math.random() * 360;
        explosiveHuoJianTong.boom();
    };
    BulletHuoJianTong.prototype.fly = function (dir, distance, speed) {
        var _this = this;
        this.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
        this.node.runAction(cc.sequence(cc.moveBy(distance / speed, dir.mul(distance)).easing(cc.easeQuadraticActionIn()), cc.callFunc(function () {
            _this.node.active = false;
            _this.boom();
        })));
    };
    BulletHuoJianTong.prototype.onCollisionEnter = function (other, self) {
        this.node.active = false;
        this.boom();
    };
    BulletHuoJianTong = __decorate([
        ccclass
    ], BulletHuoJianTong);
    return BulletHuoJianTong;
}(Bullet_1.default));
exports.default = BulletHuoJianTong;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2J1bGxldC9CdWxsZXRIdW9KaWFuVG9uZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsbUNBQThCO0FBQzlCLDhEQUF5RDtBQUN6RCwwQ0FBdUM7QUFDdkMsMkRBQXdEO0FBRWpELElBQUEsT0FBTyxHQUFJLEVBQUUsQ0FBQyxVQUFVLFFBQWpCLENBQWtCO0FBRWhDLElBQU0sT0FBTyxHQUFHLENBQUMsQ0FBQztBQUdsQjtJQUErQyxxQ0FBTTtJQUFyRDtRQUFBLHFFQXVDQztRQXBDVywrQkFBeUIsR0FBRyxJQUFJLENBQUM7O0lBb0M3QyxDQUFDO0lBakNHLGtDQUFNLEdBQU47UUFDSSxpQkFBTSxNQUFNLFdBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyx5QkFBeUIsR0FBRyxnQkFBTSxDQUFDLGFBQWEsQ0FBQyxXQUFXLEVBQUUsMEJBQTBCLENBQUMsQ0FBQztJQUNuRyxDQUFDO0lBRUQsZ0NBQUksR0FBSixVQUFLLEVBQVU7UUFDWCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQsZ0NBQUksR0FBSjtRQUNJLGFBQUssQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNoQyxJQUFJLG9CQUFvQixHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRixvQkFBb0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3hELG9CQUFvQixDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ3hDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxHQUFHLGFBQUssQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN0RyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBQyxHQUFHLENBQUM7UUFDdkQsb0JBQW9CLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUdELCtCQUFHLEdBQUgsVUFBSSxHQUFZLEVBQUUsUUFBZ0IsRUFBRSxLQUFhO1FBQWpELGlCQU1DO1FBTEcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEdBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLHFCQUFxQixFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDO1lBQ3pILEtBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUN6QixLQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDaEIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1QsQ0FBQztJQUdELDRDQUFnQixHQUFoQixVQUFpQixLQUFLLEVBQUUsSUFBSTtRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUF0Q2dCLGlCQUFpQjtRQURyQyxPQUFPO09BQ2EsaUJBQWlCLENBdUNyQztJQUFELHdCQUFDO0NBdkNELEFBdUNDLENBdkM4QyxnQkFBTSxHQXVDcEQ7a0JBdkNvQixpQkFBaUIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IEJ1bGxldCBmcm9tIFwiLi9CdWxsZXRcIjtcclxuaW1wb3J0IEZhY2FkZSBmcm9tIFwiLi4vLi4vLi4vLi4vZnJhbWV3b3JrL2ZhY2FkZS9GYWNhZGVcIjtcclxuaW1wb3J0IHtXb3JsZH0gZnJvbSBcIi4uLy4uL2luZm8vV29ybGRcIjtcclxuaW1wb3J0IHtNdXNpY30gZnJvbSBcIi4uLy4uLy4uLy4uL2ZyYW1ld29yay9hdWRpby9NdXNpY1wiO1xyXG5cclxuY29uc3Qge2NjY2xhc3N9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbmNvbnN0IG1hZ25pZnkgPSAxO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVsbGV0SHVvSmlhblRvbmcgZXh0ZW5kcyBCdWxsZXQge1xyXG5cclxuXHJcbiAgICBwcml2YXRlIF9nYW1lRXhwbG9zaXZlc0NvbnRyb2xsZXIgPSBudWxsO1xyXG5cclxuXHJcbiAgICBvbkxvYWQoKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIub25Mb2FkKCk7XHJcbiAgICAgICAgdGhpcy5fZ2FtZUV4cGxvc2l2ZXNDb250cm9sbGVyID0gRmFjYWRlLmZpbmRDb21wb25lbnQoXCJHYW1lU2NlbmVcIiwgXCJHYW1lRXhwbG9zaXZlc0NvbnRyb2xsZXJcIik7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdChpZDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5idWxsZXRJZCA9IGlkO1xyXG4gICAgfVxyXG5cclxuICAgIGJvb20oKXtcclxuICAgICAgICBNdXNpYy5wbGF5U0ZYKFwic291bmQvbXNjX2cwMDJcIik7XHJcbiAgICAgICAgbGV0IGV4cGxvc2l2ZUh1b0ppYW5Ub25nID0gdGhpcy5fZ2FtZUV4cGxvc2l2ZXNDb250cm9sbGVyLmdldEluYWN0aXZlRXhwbG9zaXZlKDkpO1xyXG4gICAgICAgIGV4cGxvc2l2ZUh1b0ppYW5Ub25nLm5vZGUucG9zaXRpb24gPSB0aGlzLm5vZGUucG9zaXRpb247XHJcbiAgICAgICAgZXhwbG9zaXZlSHVvSmlhblRvbmcubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIGV4cGxvc2l2ZUh1b0ppYW5Ub25nLm5vZGUuc2NhbGUgPSBtYWduaWZ5ICogV29ybGQuTXkuYXJtb3J5Lm1hZ25pZnlNdWwoZXhwbG9zaXZlSHVvSmlhblRvbmcuYnVsbGV0SWQpO1xyXG4gICAgICAgIGV4cGxvc2l2ZUh1b0ppYW5Ub25nLm5vZGUucm90YXRpb24gPSBNYXRoLnJhbmRvbSgpKjM2MDtcclxuICAgICAgICBleHBsb3NpdmVIdW9KaWFuVG9uZy5ib29tKCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGZseShkaXI6IGNjLlZlYzIsIGRpc3RhbmNlOiBudW1iZXIsIHNwZWVkOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLm5vZGUucm90YXRpb24gPSA5MCAtIGNjLm1pc2MucmFkaWFuc1RvRGVncmVlcyhNYXRoLmF0YW4yKGRpci55LCBkaXIueCkpO1xyXG4gICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MubW92ZUJ5KGRpc3RhbmNlL3NwZWVkLCBkaXIubXVsKGRpc3RhbmNlKSkuZWFzaW5nKGNjLmVhc2VRdWFkcmF0aWNBY3Rpb25JbigpKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmJvb20oKTtcclxuICAgICAgICB9KSkpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBvbkNvbGxpc2lvbkVudGVyKG90aGVyLCBzZWxmKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuYm9vbSgpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/role/RoleAABB.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '77d4amxHlhAAaN1LjD+GliJ', 'RoleAABB');
// script/app/entities/role/RoleAABB.ts

Object.defineProperty(exports, "__esModule", { value: true });
var AABBRegion_1 = require("../../../quad-tree/AABBRegion");
var _a = cc._decorator, ccclass = _a.ccclass, disallowMultiple = _a.disallowMultiple;
var RoleAABB = /** @class */ (function (_super) {
    __extends(RoleAABB, _super);
    function RoleAABB() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._radius = 0;
        return _this;
    }
    RoleAABB.prototype.onLoad = function () {
        this._radius = this.getComponent(cc.CircleCollider).radius;
    };
    RoleAABB.prototype.aabb = function () {
        var doubleRadius = this._radius * 2;
        return cc.rect(this.node.x - this._radius, this.node.y - this._radius, doubleRadius, doubleRadius);
    };
    RoleAABB = __decorate([
        ccclass,
        disallowMultiple
    ], RoleAABB);
    return RoleAABB;
}(AABBRegion_1.default));
exports.default = RoleAABB;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL3JvbGUvUm9sZUFBQkIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDREQUF1RDtBQUVqRCxJQUFBLEtBQThCLEVBQUUsQ0FBQyxVQUFVLEVBQTFDLE9BQU8sYUFBQSxFQUFFLGdCQUFnQixzQkFBaUIsQ0FBQztBQUlsRDtJQUFzQyw0QkFBVTtJQUFoRDtRQUFBLHFFQVlDO1FBVlcsYUFBTyxHQUFHLENBQUMsQ0FBQzs7SUFVeEIsQ0FBQztJQVJHLHlCQUFNLEdBQU47UUFDSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUMvRCxDQUFDO0lBRUQsdUJBQUksR0FBSjtRQUNJLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3ZHLENBQUM7SUFYZ0IsUUFBUTtRQUY1QixPQUFPO1FBQ1AsZ0JBQWdCO09BQ0ksUUFBUSxDQVk1QjtJQUFELGVBQUM7Q0FaRCxBQVlDLENBWnFDLG9CQUFVLEdBWS9DO2tCQVpvQixRQUFRIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBBQUJCUmVnaW9uIGZyb20gXCIuLi8uLi8uLi9xdWFkLXRyZWUvQUFCQlJlZ2lvblwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIGRpc2FsbG93TXVsdGlwbGV9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbkBkaXNhbGxvd011bHRpcGxlXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvbGVBQUJCIGV4dGVuZHMgQUFCQlJlZ2lvbiB7XHJcblxyXG4gICAgcHJpdmF0ZSBfcmFkaXVzID0gMDtcclxuXHJcbiAgICBvbkxvYWQoKXtcclxuICAgICAgICB0aGlzLl9yYWRpdXMgPSB0aGlzLmdldENvbXBvbmVudChjYy5DaXJjbGVDb2xsaWRlcikucmFkaXVzO1xyXG4gICAgfVxyXG5cclxuICAgIGFhYmIoKTogY2MuUmVjdCB7XHJcbiAgICAgICAgbGV0IGRvdWJsZVJhZGl1cyA9IHRoaXMuX3JhZGl1cyAqIDI7XHJcbiAgICAgICAgcmV0dXJuIGNjLnJlY3QodGhpcy5ub2RlLnggLSB0aGlzLl9yYWRpdXMsIHRoaXMubm9kZS55IC0gdGhpcy5fcmFkaXVzLCBkb3VibGVSYWRpdXMsIGRvdWJsZVJhZGl1cyk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/prop/Guns.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '054bfjlEYREGJmkW9iT6Xlw', 'Guns');
// script/app/entities/prop/Guns.ts

Object.defineProperty(exports, "__esModule", { value: true });
var PropBase_1 = require("./PropBase");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Guns = /** @class */ (function (_super) {
    __extends(Guns, _super);
    function Guns() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ske = null;
        return _this;
    }
    Guns.prototype.onLoad = function () {
        _super.prototype.onLoad.call(this);
        this.ske = this.getComponent(sp.Skeleton);
    };
    Guns.prototype.init = function (id) {
        _super.prototype.init.call(this, id);
        this.ske.setSkin(("000" + (id - 100)).substr(-3));
    };
    Guns.prototype.display = function () {
        var _this = this;
        this._on_off = false;
        this.node.active = true;
        this.ske.setAnimation(0, "gun_002", true);
        //倒计时
        if (this.cd > 0) {
            this.node.runAction(cc.sequence(cc.delayTime(this.cd - 5), cc.callFunc(function () {
                _this.ske.setAnimation(0, "gun", true);
            }), cc.blink(5, 25), cc.callFunc(function () {
                _this.node.active = false;
            })));
        }
    };
    Guns = __decorate([
        ccclass
    ], Guns);
    return Guns;
}(PropBase_1.default));
exports.default = Guns;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL3Byb3AvR3Vucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsdUNBQWtDO0FBRTVCLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQWtDLHdCQUFRO0lBQTFDO1FBQUEscUVBNEJDO1FBMUJHLFNBQUcsR0FBZSxJQUFJLENBQUM7O0lBMEIzQixDQUFDO0lBeEJHLHFCQUFNLEdBQU47UUFDSSxpQkFBTSxNQUFNLFdBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUdELG1CQUFJLEdBQUosVUFBSyxFQUFVO1FBQ1gsaUJBQU0sSUFBSSxZQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLEdBQUMsQ0FBQyxFQUFFLEdBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFRCxzQkFBTyxHQUFQO1FBQUEsaUJBWUM7UUFYRyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDeEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUMxQyxLQUFLO1FBQ0wsSUFBSSxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBQztZQUNaLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUM7Z0JBQ2pFLEtBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDMUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQztnQkFDN0IsS0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNSO0lBQ0wsQ0FBQztJQTNCZ0IsSUFBSTtRQUR4QixPQUFPO09BQ2EsSUFBSSxDQTRCeEI7SUFBRCxXQUFDO0NBNUJELEFBNEJDLENBNUJpQyxrQkFBUSxHQTRCekM7a0JBNUJvQixJQUFJIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBQcm9wQmFzZSBmcm9tIFwiLi9Qcm9wQmFzZVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHdW5zIGV4dGVuZHMgUHJvcEJhc2Uge1xyXG5cclxuICAgIHNrZTpzcC5Ta2VsZXRvbiA9IG51bGw7XHJcblxyXG4gICAgb25Mb2FkKCl7XHJcbiAgICAgICAgc3VwZXIub25Mb2FkKCk7XHJcbiAgICAgICAgdGhpcy5za2UgPSB0aGlzLmdldENvbXBvbmVudChzcC5Ta2VsZXRvbik7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGluaXQoaWQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLmluaXQoaWQpO1xyXG4gICAgICAgIHRoaXMuc2tlLnNldFNraW4oKFwiMDAwXCIrKGlkLTEwMCkpLnN1YnN0cigtMykpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc3BsYXkoKXtcclxuICAgICAgICB0aGlzLl9vbl9vZmYgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnNrZS5zZXRBbmltYXRpb24oMCwgXCJndW5fMDAyXCIsIHRydWUpO1xyXG4gICAgICAgIC8v5YCS6K6h5pe2XHJcbiAgICAgICAgaWYgKHRoaXMuY2QgPiAwKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5kZWxheVRpbWUodGhpcy5jZC01KSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuc2tlLnNldEFuaW1hdGlvbigwLCBcImd1blwiLCB0cnVlKTtcclxuICAgICAgICAgICAgfSksIGNjLmJsaW5rKDUsIDI1KSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfSkpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/bullet/Bullet.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'be6a0BnFzlAN4b+ds0fdb/L', 'Bullet');
// script/app/entities/bullet/Bullet.ts

Object.defineProperty(exports, "__esModule", { value: true });
var ExcelConfig_1 = require("../../../../framework/config/ExcelConfig");
var ExcelTableNames_1 = require("../../config/ExcelTableNames");
var World_1 = require("../../info/World");
var ccclass = cc._decorator.ccclass;
/**
 * 普通子弹，单纯的一个碰撞体，移动一段距离后消失
 */
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bulletId = 0;
        _this.bThrought = false;
        _this.hurt = 0;
        _this.repel = 0;
        _this.stiff = 0;
        _this.moveDir = cc.v2();
        _this._collider = null;
        _this._contacts = [];
        return _this;
    }
    Object.defineProperty(Bullet.prototype, "contacts", {
        get: function () {
            return this._contacts;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "collider", {
        get: function () {
            return this._collider;
        },
        enumerable: false,
        configurable: true
    });
    Bullet.prototype.onLoad = function () {
        var _this = this;
        this._collider = this.getComponent(cc.Collider);
        this.node.on(cc.Node.EventType.ROTATION_CHANGED, function () {
            var dir = cc.v2(0, 1).rotate(cc.misc.degreesToRadians(-_this.node.rotation));
            _this.moveDir.x = dir.x;
            _this.moveDir.y = dir.y;
        });
    };
    Bullet.prototype.init = function (id) {
        this.bulletId = id;
        var config = ExcelConfig_1.ExcelConfig.getExcelTable(ExcelTableNames_1.ExcelTableNames.Weapon)[this.bulletId % 100 - 1];
        this.bThrought = config['pierce'] === 1;
        this.hurt = Math.floor(config['hurt'] * World_1.World.My.armory.hurtMulOf(this.bulletId % 100));
        this.repel = config['repel'];
        this.stiff = config['stiff'];
    };
    /** 让子弹飞 */
    Bullet.prototype.fly = function (dir, distance, speed) {
        var _this = this;
        this.node.rotation = 90 - cc.misc.radiansToDegrees(Math.atan2(dir.y, dir.x));
        this.node.runAction(cc.sequence(cc.moveBy(distance / speed, dir.mul(distance)), cc.callFunc(function () {
            _this.node.active = false;
        })));
    };
    Bullet.prototype.onEnable = function () {
        window['GameBulletsController'].roleBullets.push(this);
    };
    Bullet.prototype.onDisable = function () {
        this.node.stopAllActions();
        this._contacts.length = 0;
        var gameBulletsController = window['GameBulletsController'];
        gameBulletsController.roleBullets.splice(gameBulletsController.roleBullets.indexOf(this), 1);
    };
    Bullet.prototype.getStrikePos = function (other, self) {
        var otherAABB = other.world.aabb;
        var selfAABB = self.world.aabb;
        // console.log("otherAABB==>", otherAABB);
        // console.log("selfAABB==>", selfAABB);
        // console.log("===================");
        /** 方法一 */
        /** 取包围盒的面积做比较，决策碰撞点，播放碰撞动画
         * 1.怪物比子弹大很多时就在子弹的位置播放
         * 2.子弹比怪物大很多时在怪物的位置播放
         * 3.大小差不多时取中点(小于0.5倍则取中点)
         * */
        // let rate = 1.5;
        // let selfArea = self.world.aabb.width * self.world.aabb.height;
        // let otherArea = other.world.aabb.width * other.world.aabb.height;
        // let strikePos = cc.v2();
        // if (selfArea > otherArea){
        //     if (selfArea/otherArea > rate){
        //         /** 取other节点的位置 */
        //         strikePos = other.world.aabb.center;
        //     } else {
        //         /** 取中心点 */
        //     }
        // }else {
        //     if (otherArea/selfArea > rate){
        //         /** 取self节点的位置 */
        //     } else {
        //         /** 取中心点 */
        //     }
        // }
        /** 方法二 */
        /** 用aabb包围盒判断碰撞点 */
        // let selfDir = selfAABB.center.sub(self.world.preAabb.center).normalize();
        //虽然可以用子弹的移动方向与物体的点集做运算，计算出边界碰撞位置，但是子弹已经飞过了这个位置，再在其他位置播放击中效果更突兀.
        /** 水平方向 */
        var strikePos = cc.v2();
        if (selfAABB.xMin >= otherAABB.xMin && selfAABB.xMax <= otherAABB.xMax) {
            strikePos.x = selfAABB.center.x;
        }
        else if (selfAABB.xMax <= otherAABB.center.x && selfAABB.xMin < otherAABB.xMin) {
            strikePos.x = selfAABB.xMax;
        }
        else if (selfAABB.xMin >= otherAABB.center.x && selfAABB.xMax > otherAABB.xMax) {
            strikePos.x = selfAABB.xMin;
        }
        else {
            strikePos.x = otherAABB.center.x;
        }
        /** 垂直方向 */
        if (selfAABB.yMin >= otherAABB.yMin && selfAABB.yMax <= otherAABB.yMax) {
            strikePos.y = selfAABB.center.y;
        }
        else if (selfAABB.yMax <= otherAABB.center.y && selfAABB.yMin < otherAABB.yMin) {
            strikePos.y = selfAABB.yMax;
        }
        else if (selfAABB.yMin >= otherAABB.center.y && selfAABB.yMax > otherAABB.yMax) {
            strikePos.y = selfAABB.yMin;
        }
        else {
            strikePos.y = otherAABB.center.y;
        }
        return strikePos;
    };
    /** 创建strike */
    Bullet.prototype.strike = function (other, self) {
        var bulletStrike = window['GameBulletsController'].getInactiveBulletStrike(this.bulletId);
        bulletStrike.node.active = true;
        bulletStrike.node.position = this.getStrikePos(other, self);
        bulletStrike.node.rotation = this.node.rotation;
        bulletStrike.strike();
    };
    Bullet.prototype.doRepeal = function (enemy, repel) {
        enemy.doRepel(this.moveDir, repel);
    };
    /**
     * 当碰撞产生的时候调用
     *  */
    Bullet.prototype.collisionEnemy = function (other, self) {
        this.strike(other, self);
        var enemy = other.getComponent('Enemy');
        /** 僵硬 */
        if (this.stiff > 0) {
            enemy.doStiff(this.stiff);
        }
        /** 减速 */
        enemy.doSpeedcut();
        /** 击退效果 */
        var subRepel = this.repel - enemy.unrepel;
        // let subRepel = 10;
        if (subRepel > 0) {
            // console.log("击退效果……。");
            this.doRepeal(enemy, subRepel);
        }
        else if (enemy.enemyID < 7) {
            enemy.playBeatenBack();
        }
        /** 飘血效果 */
        var damage = this.hurt;
        if (damage > 0) {
            enemy.hp -= damage;
        }
    };
    /**
     * 碰撞处理
     * */
    Bullet.prototype.onCollisionEnter = function (other, self) {
        this.collisionEnemy(other, self);
        if (!this.bThrought) {
            this.node.active = false;
        }
        // console.log('子弹碰撞');
    };
    /**
     * 当碰撞产生后，碰撞结束前的情况下，每次计算碰撞结果后调用
     * */
    Bullet.prototype.onCollisionStay = function (other, self) {
    };
    /** 当碰撞结束后调用 */
    Bullet.prototype.onCollisionExit = function (other, self) {
    };
    Bullet = __decorate([
        ccclass
    ], Bullet);
    return Bullet;
}(cc.Component));
exports.default = Bullet;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/prop/PropStateController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ad6c7iO+p1G1qYI4btYwplX', 'PropStateController');
// script/app/entities/prop/PropStateController.ts

Object.defineProperty(exports, "__esModule", { value: true });
var CDTimer_1 = require("../../../../framework/component/CDTimer");
var GameProxy_1 = require("../../game/GameProxy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var PropStateController = /** @class */ (function (_super) {
    __extends(PropStateController, _super);
    function PropStateController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.spriteFrames = [];
        _this.sprite = null;
        _this.prgressBar = null;
        _this.cdTimer = null;
        _this.propID = 0;
        return _this;
    }
    PropStateController.prototype.onEnable = function () {
        this.sprite.node.active = false;
        this.prgressBar.node.active = false;
    };
    PropStateController.prototype.onDisable = function () {
        this.node.stopAllActions();
    };
    PropStateController.prototype.init = function (id) {
        this.propID = id;
        var spriteFrameIndex = 0;
        var cd = 0;
        switch (id) {
            case 5:
                spriteFrameIndex = 0;
                cd = 15;
                break;
            case 9:
                spriteFrameIndex = 1;
                cd = 12;
                break;
            case 10:
                spriteFrameIndex = 2;
                cd = 12;
                break;
            case 12:
                spriteFrameIndex = 3;
                cd = 20;
                break;
            case 13:
                spriteFrameIndex = 4;
                cd = 10;
                break;
        }
        this.sprite.spriteFrame = this.spriteFrames[spriteFrameIndex];
        this.cdTimer.cd = cd;
        this.cdTimer.reset();
        this.prgressBar.progress = 1;
        this.cdTimer.pause = true;
        this.node.scale = 1;
        this.sprite.node.active = true;
        this.prgressBar.node.active = true;
    };
    PropStateController.prototype.onProgressEvent = function (progress) {
        this.prgressBar.progress = 1 - progress;
    };
    PropStateController.prototype.onZeroEvent = function () {
        var _this = this;
        GameProxy_1.GameProxy.emit(GameProxy_1.GameProxy.Event.PropCDZero, this.propID);
        this.node.runAction(cc.sequence(cc.scaleTo(0.15, 0), cc.callFunc(function () {
            _this.node.active = false;
        })));
    };
    __decorate([
        property(cc.SpriteFrame)
    ], PropStateController.prototype, "spriteFrames", void 0);
    __decorate([
        property(cc.Sprite)
    ], PropStateController.prototype, "sprite", void 0);
    __decorate([
        property(cc.ProgressBar)
    ], PropStateController.prototype, "prgressBar", void 0);
    __decorate([
        property(CDTimer_1.default)
    ], PropStateController.prototype, "cdTimer", void 0);
    PropStateController = __decorate([
        ccclass
    ], PropStateController);
    return PropStateController;
}(cc.Component));
exports.default = PropStateController;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL3Byb3AvUHJvcFN0YXRlQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsbUVBQThEO0FBQzlELGtEQUErQztBQUV6QyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFpRCx1Q0FBWTtJQUE3RDtRQUFBLHFFQXVFQztRQXBFRyxrQkFBWSxHQUFxQixFQUFFLENBQUM7UUFHcEMsWUFBTSxHQUFhLElBQUksQ0FBQztRQUd4QixnQkFBVSxHQUFrQixJQUFJLENBQUM7UUFHakMsYUFBTyxHQUFXLElBQUksQ0FBQztRQUV2QixZQUFNLEdBQUcsQ0FBQyxDQUFDOztJQXlEZixDQUFDO0lBdkRHLHNDQUFRLEdBQVI7UUFDSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDeEMsQ0FBQztJQUVELHVDQUFTLEdBQVQ7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCxrQ0FBSSxHQUFKLFVBQUssRUFBUztRQUNWLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLElBQUksZ0JBQWdCLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNYLFFBQVEsRUFBRSxFQUFDO1lBQ1AsS0FBSyxDQUFDO2dCQUNGLGdCQUFnQixHQUFHLENBQUMsQ0FBQztnQkFDckIsRUFBRSxHQUFHLEVBQUUsQ0FBQztnQkFDUixNQUFNO1lBQ1YsS0FBSyxDQUFDO2dCQUNGLGdCQUFnQixHQUFHLENBQUMsQ0FBQztnQkFDckIsRUFBRSxHQUFHLEVBQUUsQ0FBQztnQkFDUixNQUFNO1lBQ1YsS0FBSyxFQUFFO2dCQUNILGdCQUFnQixHQUFHLENBQUMsQ0FBQztnQkFDckIsRUFBRSxHQUFHLEVBQUUsQ0FBQztnQkFDUixNQUFNO1lBQ1YsS0FBSyxFQUFFO2dCQUNILGdCQUFnQixHQUFHLENBQUMsQ0FBQztnQkFDckIsRUFBRSxHQUFHLEVBQUUsQ0FBQztnQkFDUixNQUFNO1lBQ1YsS0FBSyxFQUFFO2dCQUNILGdCQUFnQixHQUFHLENBQUMsQ0FBQztnQkFDckIsRUFBRSxHQUFHLEVBQUUsQ0FBQztnQkFDUixNQUFNO1NBQ2I7UUFDRCxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUMxQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCw2Q0FBZSxHQUFmLFVBQWdCLFFBQWU7UUFDM0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEdBQUcsQ0FBQyxHQUFHLFFBQVEsQ0FBQztJQUM1QyxDQUFDO0lBRUQseUNBQVcsR0FBWDtRQUFBLGlCQUtDO1FBSkcscUJBQVMsQ0FBQyxJQUFJLENBQUMscUJBQVMsQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUM7WUFDN0QsS0FBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNULENBQUM7SUFuRUQ7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQzs2REFDVztJQUdwQztRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO3VEQUNJO0lBR3hCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUM7MkRBQ1E7SUFHakM7UUFEQyxRQUFRLENBQUMsaUJBQU8sQ0FBQzt3REFDSztJQVpOLG1CQUFtQjtRQUR2QyxPQUFPO09BQ2EsbUJBQW1CLENBdUV2QztJQUFELDBCQUFDO0NBdkVELEFBdUVDLENBdkVnRCxFQUFFLENBQUMsU0FBUyxHQXVFNUQ7a0JBdkVvQixtQkFBbUIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IENEVGltZXIgZnJvbSBcIi4uLy4uLy4uLy4uL2ZyYW1ld29yay9jb21wb25lbnQvQ0RUaW1lclwiO1xyXG5pbXBvcnQge0dhbWVQcm94eX0gZnJvbSBcIi4uLy4uL2dhbWUvR2FtZVByb3h5XCI7XHJcblxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb3BTdGF0ZUNvbnRyb2xsZXIgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGVGcmFtZSlcclxuICAgIHNwcml0ZUZyYW1lczogW2NjLlNwcml0ZUZyYW1lXSA9IFtdO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5TcHJpdGUpXHJcbiAgICBzcHJpdGU6Y2MuU3ByaXRlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuUHJvZ3Jlc3NCYXIpXHJcbiAgICBwcmdyZXNzQmFyOmNjLlByb2dyZXNzQmFyID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoQ0RUaW1lcilcclxuICAgIGNkVGltZXI6Q0RUaW1lciA9IG51bGw7XHJcblxyXG4gICAgcHJvcElEID0gMDtcclxuXHJcbiAgICBvbkVuYWJsZSgpe1xyXG4gICAgICAgIHRoaXMuc3ByaXRlLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5wcmdyZXNzQmFyLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCl7XHJcbiAgICAgICAgdGhpcy5ub2RlLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdChpZDpudW1iZXIpe1xyXG4gICAgICAgIHRoaXMucHJvcElEID0gaWQ7XHJcbiAgICAgICAgbGV0IHNwcml0ZUZyYW1lSW5kZXggPSAwO1xyXG4gICAgICAgIGxldCBjZCA9IDA7XHJcbiAgICAgICAgc3dpdGNoIChpZCl7XHJcbiAgICAgICAgICAgIGNhc2UgNTpcclxuICAgICAgICAgICAgICAgIHNwcml0ZUZyYW1lSW5kZXggPSAwO1xyXG4gICAgICAgICAgICAgICAgY2QgPSAxNTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDk6XHJcbiAgICAgICAgICAgICAgICBzcHJpdGVGcmFtZUluZGV4ID0gMTtcclxuICAgICAgICAgICAgICAgIGNkID0gMTI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAxMDpcclxuICAgICAgICAgICAgICAgIHNwcml0ZUZyYW1lSW5kZXggPSAyO1xyXG4gICAgICAgICAgICAgICAgY2QgPSAxMjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDEyOlxyXG4gICAgICAgICAgICAgICAgc3ByaXRlRnJhbWVJbmRleCA9IDM7XHJcbiAgICAgICAgICAgICAgICBjZCA9IDIwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgMTM6XHJcbiAgICAgICAgICAgICAgICBzcHJpdGVGcmFtZUluZGV4ID0gNDtcclxuICAgICAgICAgICAgICAgIGNkID0gMTA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zcHJpdGUuc3ByaXRlRnJhbWUgPSB0aGlzLnNwcml0ZUZyYW1lc1tzcHJpdGVGcmFtZUluZGV4XTtcclxuICAgICAgICB0aGlzLmNkVGltZXIuY2QgPSBjZDtcclxuICAgICAgICB0aGlzLmNkVGltZXIucmVzZXQoKTtcclxuICAgICAgICB0aGlzLnByZ3Jlc3NCYXIucHJvZ3Jlc3MgPSAxO1xyXG4gICAgICAgIHRoaXMuY2RUaW1lci5wYXVzZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5ub2RlLnNjYWxlID0gMTtcclxuICAgICAgICB0aGlzLnNwcml0ZS5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5wcmdyZXNzQmFyLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBvblByb2dyZXNzRXZlbnQocHJvZ3Jlc3M6bnVtYmVyKXtcclxuICAgICAgICB0aGlzLnByZ3Jlc3NCYXIucHJvZ3Jlc3MgPSAxIC0gcHJvZ3Jlc3M7XHJcbiAgICB9XHJcblxyXG4gICAgb25aZXJvRXZlbnQoKXtcclxuICAgICAgICBHYW1lUHJveHkuZW1pdChHYW1lUHJveHkuRXZlbnQuUHJvcENEWmVybywgdGhpcy5wcm9wSUQpO1xyXG4gICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2Muc2NhbGVUbygwLjE1LCAwKSwgY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIH0pKSk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/role/ImpenetrableDefence.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4cfaeeoywhMBKH2pNDKPKw0', 'ImpenetrableDefence');
// script/app/entities/role/ImpenetrableDefence.ts

Object.defineProperty(exports, "__esModule", { value: true });
var GameProxy_1 = require("../../game/GameProxy");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ImpenetrableDefence = /** @class */ (function (_super) {
    __extends(ImpenetrableDefence, _super);
    function ImpenetrableDefence() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ske = null;
        _this.followNode = null;
        _this.rotateAction = null;
        //密不透风的防御(武术)
        _this._impenetrableDefenceCD = 0;
        _this._defenceCD = 0;
        return _this;
    }
    ImpenetrableDefence.prototype.onLoad = function () {
        var _this = this;
        this.followNode.on(cc.Node.EventType.POSITION_CHANGED, function () {
            _this.node.position = _this.followNode.position;
        });
        this.ske.setCompleteListener(function (trackEntry, loop) {
            var name = trackEntry.animation ? trackEntry.animation.name : '';
            if (name == "start") {
                _this.ske.setAnimation(0, "loops", true);
                _this.rotateAction = cc.speed(cc.repeatForever(cc.rotateBy(0.45, 360)), 0);
                _this.rotateAction.setTag(140);
                _this.node.runAction(_this.rotateAction);
            }
            else if (name == "transition") {
                _this.ske.setAnimation(0, "loops", true);
            }
        });
    };
    ImpenetrableDefence.prototype.start = function () {
        this.node.position = this.followNode.position;
    };
    Object.defineProperty(ImpenetrableDefence.prototype, "impenetrableDefenceCD", {
        set: function (value) {
            this._impenetrableDefenceCD = value;
            if (!this.node.active) {
                this.node.active = true;
                this.node.stopAllActions();
                this.ske.setAnimation(0, "start", false);
            }
        },
        enumerable: false,
        configurable: true
    });
    ImpenetrableDefence.prototype.defence = function () {
        if (this.ske.animation == "loops") {
            // this.rotateAction.setSpeed(0);
            this.ske.setAnimation(0, "transition", false);
            // this._defenceCD = 0.5;
        }
    };
    ImpenetrableDefence.prototype.update = function (dt) {
        if (GameProxy_1.GameProxy.pauseGame)
            return;
        if (this.node.color.getR() < 255) {
            this.node.color.setR(this.node.color.getR() + 1);
        }
        if (this.node.color.getG() < 255) {
            this.node.color.setG(this.node.color.getG() + 1);
        }
        if (this.node.color.getB() < 255) {
            this.node.color.setB(this.node.color.getB() + 1);
        }
        if (this.ske.animation === "loops") {
            if (this._defenceCD > 0) {
                this._defenceCD -= dt;
            }
            else if (this.rotateAction.getSpeed() < 1) {
                var speed = this.rotateAction.getSpeed() + 0.01;
                if (speed > 1) {
                    speed = 1;
                }
                this.rotateAction.setSpeed(speed);
            }
        }
        this._impenetrableDefenceCD -= dt;
        if (this._impenetrableDefenceCD <= 0) {
            this.node.active = false;
        }
    };
    __decorate([
        property(sp.Skeleton)
    ], ImpenetrableDefence.prototype, "ske", void 0);
    __decorate([
        property(cc.Node)
    ], ImpenetrableDefence.prototype, "followNode", void 0);
    ImpenetrableDefence = __decorate([
        ccclass
    ], ImpenetrableDefence);
    return ImpenetrableDefence;
}(cc.Component));
exports.default = ImpenetrableDefence;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL3JvbGUvSW1wZW5ldHJhYmxlRGVmZW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0Esa0RBQStDO0FBRXpDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQWlELHVDQUFZO0lBQTdEO1FBQUEscUVBa0ZDO1FBL0VHLFNBQUcsR0FBZSxJQUFJLENBQUM7UUFHdkIsZ0JBQVUsR0FBVyxJQUFJLENBQUM7UUFFbEIsa0JBQVksR0FBRyxJQUFJLENBQUM7UUF3QmhDLGFBQWE7UUFDRCw0QkFBc0IsR0FBRyxDQUFDLENBQUM7UUFFM0IsZ0JBQVUsR0FBRyxDQUFDLENBQUM7O0lBK0MzQixDQUFDO0lBdkVhLG9DQUFNLEdBQWhCO1FBQUEsaUJBZUM7UUFkRyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRTtZQUNuRCxLQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztRQUNsRCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsVUFBQyxVQUFVLEVBQUUsSUFBSTtZQUMxQyxJQUFJLElBQUksR0FBRyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQ2pFLElBQUksSUFBSSxJQUFJLE9BQU8sRUFBQztnQkFDaEIsS0FBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDeEMsS0FBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDMUUsS0FBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQzlCLEtBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUMxQztpQkFBSyxJQUFJLElBQUksSUFBSSxZQUFZLEVBQUM7Z0JBQzNCLEtBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7YUFDM0M7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxtQ0FBSyxHQUFMO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7SUFDbEQsQ0FBQztJQVFELHNCQUFJLHNEQUFxQjthQUF6QixVQUEwQixLQUFhO1lBQ25DLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxLQUFLLENBQUM7WUFDcEMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFDO2dCQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7Z0JBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDNUM7UUFDTCxDQUFDOzs7T0FBQTtJQUVELHFDQUFPLEdBQVA7UUFDSSxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxJQUFJLE9BQU8sRUFBQztZQUM5QixpQ0FBaUM7WUFDakMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQztZQUM5Qyx5QkFBeUI7U0FDNUI7SUFDTCxDQUFDO0lBRUQsb0NBQU0sR0FBTixVQUFPLEVBQVM7UUFDWixJQUFJLHFCQUFTLENBQUMsU0FBUztZQUFDLE9BQU87UUFDL0IsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsR0FBRyxHQUFHLEVBQUM7WUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ3BEO1FBQ0QsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsR0FBRyxHQUFHLEVBQUM7WUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ3BEO1FBQ0QsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsR0FBRyxHQUFHLEVBQUM7WUFDN0IsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ3BEO1FBQ0QsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsS0FBSyxPQUFPLEVBQUM7WUFDL0IsSUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsRUFBQztnQkFDcEIsSUFBSSxDQUFDLFVBQVUsSUFBSSxFQUFFLENBQUM7YUFDekI7aUJBQUssSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsRUFBQztnQkFDdkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUM7Z0JBQ2hELElBQUksS0FBSyxHQUFHLENBQUMsRUFBQztvQkFDVixLQUFLLEdBQUcsQ0FBQyxDQUFDO2lCQUNiO2dCQUNELElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ3JDO1NBQ0o7UUFDRCxJQUFJLENBQUMsc0JBQXNCLElBQUksRUFBRSxDQUFDO1FBQ2xDLElBQUksSUFBSSxDQUFDLHNCQUFzQixJQUFJLENBQUMsRUFBQztZQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7U0FDNUI7SUFDTCxDQUFDO0lBOUVEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUM7b0RBQ0M7SUFHdkI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzsyREFDUTtJQU5ULG1CQUFtQjtRQUR2QyxPQUFPO09BQ2EsbUJBQW1CLENBa0Z2QztJQUFELDBCQUFDO0NBbEZELEFBa0ZDLENBbEZnRCxFQUFFLENBQUMsU0FBUyxHQWtGNUQ7a0JBbEZvQixtQkFBbUIiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHtHYW1lUHJveHl9IGZyb20gXCIuLi8uLi9nYW1lL0dhbWVQcm94eVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbXBlbmV0cmFibGVEZWZlbmNlIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBAcHJvcGVydHkoc3AuU2tlbGV0b24pXHJcbiAgICBza2U6c3AuU2tlbGV0b24gPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgZm9sbG93Tm9kZTpjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICBwcml2YXRlIHJvdGF0ZUFjdGlvbiA9IG51bGw7XHJcblxyXG5cclxuICAgIHByb3RlY3RlZCBvbkxvYWQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5mb2xsb3dOb2RlLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlBPU0lUSU9OX0NIQU5HRUQsICgpPT57XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5wb3NpdGlvbiA9IHRoaXMuZm9sbG93Tm9kZS5wb3NpdGlvbjtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNrZS5zZXRDb21wbGV0ZUxpc3RlbmVyKCh0cmFja0VudHJ5LCBsb29wKT0+e1xyXG4gICAgICAgICAgICBsZXQgbmFtZSA9IHRyYWNrRW50cnkuYW5pbWF0aW9uID8gdHJhY2tFbnRyeS5hbmltYXRpb24ubmFtZSA6ICcnO1xyXG4gICAgICAgICAgICBpZiAobmFtZSA9PSBcInN0YXJ0XCIpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5za2Uuc2V0QW5pbWF0aW9uKDAsIFwibG9vcHNcIiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJvdGF0ZUFjdGlvbiA9IGNjLnNwZWVkKGNjLnJlcGVhdEZvcmV2ZXIoY2Mucm90YXRlQnkoMC40NSwgMzYwKSksIDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb3RhdGVBY3Rpb24uc2V0VGFnKDE0MCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKHRoaXMucm90YXRlQWN0aW9uKTtcclxuICAgICAgICAgICAgfWVsc2UgaWYgKG5hbWUgPT0gXCJ0cmFuc2l0aW9uXCIpe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5za2Uuc2V0QW5pbWF0aW9uKDAsIFwibG9vcHNcIiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzdGFydCgpe1xyXG4gICAgICAgIHRoaXMubm9kZS5wb3NpdGlvbiA9IHRoaXMuZm9sbG93Tm9kZS5wb3NpdGlvbjtcclxuICAgIH1cclxuXHJcbi8v5a+G5LiN6YCP6aOO55qE6Ziy5b6hKOatpuacrylcclxuICAgIHByaXZhdGUgX2ltcGVuZXRyYWJsZURlZmVuY2VDRCA9IDA7XHJcblxyXG4gICAgcHJpdmF0ZSBfZGVmZW5jZUNEID0gMDtcclxuXHJcblxyXG4gICAgc2V0IGltcGVuZXRyYWJsZURlZmVuY2VDRCh2YWx1ZTogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5faW1wZW5ldHJhYmxlRGVmZW5jZUNEID0gdmFsdWU7XHJcbiAgICAgICAgaWYgKCF0aGlzLm5vZGUuYWN0aXZlKXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgICAgICB0aGlzLnNrZS5zZXRBbmltYXRpb24oMCwgXCJzdGFydFwiLCBmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRlZmVuY2UoKXtcclxuICAgICAgICBpZiAodGhpcy5za2UuYW5pbWF0aW9uID09IFwibG9vcHNcIil7XHJcbiAgICAgICAgICAgIC8vIHRoaXMucm90YXRlQWN0aW9uLnNldFNwZWVkKDApO1xyXG4gICAgICAgICAgICB0aGlzLnNrZS5zZXRBbmltYXRpb24oMCwgXCJ0cmFuc2l0aW9uXCIsIGZhbHNlKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5fZGVmZW5jZUNEID0gMC41O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoZHQ6bnVtYmVyKXtcclxuICAgICAgICBpZiAoR2FtZVByb3h5LnBhdXNlR2FtZSlyZXR1cm47XHJcbiAgICAgICAgaWYgKHRoaXMubm9kZS5jb2xvci5nZXRSKCkgPCAyNTUpe1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuY29sb3Iuc2V0Uih0aGlzLm5vZGUuY29sb3IuZ2V0UigpICsgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLm5vZGUuY29sb3IuZ2V0RygpIDwgMjU1KXtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmNvbG9yLnNldEcodGhpcy5ub2RlLmNvbG9yLmdldEcoKSArIDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5ub2RlLmNvbG9yLmdldEIoKSA8IDI1NSl7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5jb2xvci5zZXRCKHRoaXMubm9kZS5jb2xvci5nZXRCKCkgKyAxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuc2tlLmFuaW1hdGlvbiA9PT0gXCJsb29wc1wiKXtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2RlZmVuY2VDRCA+IDApe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGVmZW5jZUNEIC09IGR0O1xyXG4gICAgICAgICAgICB9ZWxzZSBpZiAodGhpcy5yb3RhdGVBY3Rpb24uZ2V0U3BlZWQoKSA8IDEpe1xyXG4gICAgICAgICAgICAgICAgbGV0IHNwZWVkID0gdGhpcy5yb3RhdGVBY3Rpb24uZ2V0U3BlZWQoKSArIDAuMDE7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3BlZWQgPiAxKXtcclxuICAgICAgICAgICAgICAgICAgICBzcGVlZCA9IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJvdGF0ZUFjdGlvbi5zZXRTcGVlZChzcGVlZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5faW1wZW5ldHJhYmxlRGVmZW5jZUNEIC09IGR0O1xyXG4gICAgICAgIGlmICh0aGlzLl9pbXBlbmV0cmFibGVEZWZlbmNlQ0QgPD0gMCl7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/script/app/entities/explosive/Explosive.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '289e79F1UZP3ZKZdsJwQRLh', 'Explosive');
// script/app/entities/explosive/Explosive.ts

Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_1 = require("../bullet/Bullet");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Explosive = /** @class */ (function (_super) {
    __extends(Explosive, _super);
    function Explosive() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Explosive = __decorate([
        ccclass
    ], Explosive);
    return Explosive;
}(Bullet_1.default));
exports.default = Explosive;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zY3JpcHQvYXBwL2VudGl0aWVzL2V4cGxvc2l2ZS9FeHBsb3NpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDJDQUFzQztBQUVoQyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUcxQztJQUFnRCw2QkFBTTtJQUF0RDs7SUFHQSxDQUFDO0lBSDZCLFNBQVM7UUFEdEMsT0FBTztPQUNzQixTQUFTLENBR3RDO0lBQUQsZ0JBQUM7Q0FIRCxBQUdDLENBSCtDLGdCQUFNLEdBR3JEO2tCQUg2QixTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBCdWxsZXQgZnJvbSBcIi4uL2J1bGxldC9CdWxsZXRcIjtcclxuXHJcbmNvbnN0IHtjY2NsYXNzLCBwcm9wZXJ0eX0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgRXhwbG9zaXZlIGV4dGVuZHMgQnVsbGV0IHtcclxuXHJcbiAgICBhYnN0cmFjdCBib29tKCk7XHJcbn0iXX0=
//------QC-SOURCE-SPLIT------
