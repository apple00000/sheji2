{"version":3,"sources":["assets/framework/facade/LoadSceneCommand.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;;;AAGnG,mCAA8B;AAExB,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAE1C,IAAI,gBAAgB,GAAU,cAAc,CAAC;AAE7C,IAAI,cAAc,GAAW,IAAI,CAAC;AAGlC;IAAA;IAqCA,CAAC;IAnCS,kCAAO,GAAb;QAAe,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;uCAAE,OAAO;;;gBAC3B,sBAAO,IAAI,OAAO,CAAC,UAAM,OAAO,EAAE,MAAM;;;;;oCAKhC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;oCACxB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;oCACrC,IAAI,cAAc,IAAI,IAAI,EAAC;wCACvB,cAAc,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;wCAC/B,cAAc,CAAC,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC;wCAC5C,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC;wCACjD,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;wCACxD,cAAc,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC;wCAC7D,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;qCACpD;oCAED,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC;oCAChB,qBAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,GAAC,SAAS,EAAE,EAAE,CAAC,MAAM,CAAC,EAAA;;oCAArE,MAAM,GAAG,SAA4D;oCACzE,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;oCAE7B,OAAO,GAAG,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,IAAI,EAArC,CAAqC,CAAC,CAAC;oCAChG,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK;wCACjB,gCAAgC;wCAChC,KAAK,CAAC,OAAO,EAAE,CAAC;oCACpB,CAAC,CAAC,CAAC;oCACH,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oCACvB,cAAc,CAAC,MAAM,GAAG,KAAK,CAAC;oCAC1B,IAAI,GAAW,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oCAC1C,IAAI,CAAC,SAAS,CAAC,gBAAM,CAAC,UAAU,CAAC,CAAC;oCAClC,gBAAgB,GAAG,SAAS,CAAC;oCAC7B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;oCAClC,OAAO,CAAC,IAAI,CAAC,CAAC;;;;yBACjB,CAAC,EAAC;;;KACN;IApCgB,gBAAgB;QADpC,OAAO,CAAC,kBAAkB,CAAC;OACP,gBAAgB,CAqCpC;IAAD,uBAAC;CArCD,AAqCC,IAAA;kBArCoB,gBAAgB;AAuCrC,SAAgB,mBAAmB;IAC/B,OAAO,gBAAgB,CAAC;AAC5B,CAAC;AAFD,kDAEC","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport {ICommand} from \"./ICommand\";\r\nimport Facade from \"./Facade\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nlet currentSceneName:string = \"WelcomeScene\";\r\n\r\nlet blockInputNode:cc.Node = null;\r\n\r\n@ccclass(\"LoadSceneCommand\")\r\nexport default class LoadSceneCommand implements ICommand {\r\n\r\n    async execute (...args):Promise{\r\n        return new Promise(async(resolve, reject) => {\r\n            /** 由于cocos切换场景在部分android手机上会黑屏一下，所以加载场景改为加载对应prefab */\r\n            /*cc.director.loadScene(sceneName, function () {\r\n                resolve();\r\n            })*/\r\n            let sceneName = args[0];\r\n            console.log(sceneName, \"sceneName.\");\r\n            if (blockInputNode == null){\r\n                blockInputNode = new cc.Node();\r\n                blockInputNode.zIndex = cc.macro.MAX_ZINDEX;\r\n                blockInputNode.addComponent(cc.BlockInputEvents);\r\n                blockInputNode.setContentSize(cc.view.getVisibleSize());\r\n                blockInputNode.setPosition(cc.view.getViewportRect().center);\r\n                blockInputNode.setParent(cc.director.getScene());\r\n            }\r\n\r\n            blockInputNode.active = true;\r\n            let prefab = await cc.loader.loadResAwait(\"prefab/\"+sceneName, cc.Prefab);\r\n            console.log(\"加载场景成功\", sceneName);\r\n            /** 先把场景上的资源都干掉除了摄像机 */\r\n            let deletes = Facade.canvasNode.children.filter(value => value.getComponent(cc.Camera) == null);\r\n            deletes.forEach(value => {\r\n                // value.removeFromParent(true);\r\n                value.destroy();\r\n            });\r\n            console.log(\"清理场景成功.\");\r\n            blockInputNode.active = false;\r\n            let node:cc.Node = cc.instantiate(prefab);\r\n            node.setParent(Facade.canvasNode);\r\n            currentSceneName = sceneName;\r\n            console.log(\"创建场景成功.\", sceneName);\r\n            resolve(node);\r\n        });\r\n    }\r\n}\r\n\r\nexport function getCurrentSceneName():string {\r\n    return currentSceneName;\r\n}\r\n"]}