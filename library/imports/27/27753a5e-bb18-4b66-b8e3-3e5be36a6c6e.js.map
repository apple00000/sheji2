{"version":3,"sources":["assets/script/app/interceptor/OpenViewInterceptor.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport {ICommandInterceptor} from \"../../../framework/interceptor/CommandInterceptor\";\r\nimport Facade from \"../../../framework/facade/Facade\";\r\nimport LifeCycle from \"../../../framework/component/LifeCycle\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\nconst BLOCK_LAYER_NAME_PREV = \"blockLayer==>\";\r\n\r\n\r\n\r\n@ccclass\r\nexport default class OpenViewInterceptor implements ICommandInterceptor {\r\n\r\n    static BlockLayerEvent ={\r\n        destroy : \"destroy\",\r\n        viewCreateFinish : \"viewCreateFinish\",\r\n        viewDisplayFinish : \"viewDisplayFinish\",\r\n    };\r\n\r\n    static async onceAwait(viewPath:string, event:string){\r\n        let blockLayer = Facade.canvasNode.getChildByName(`${BLOCK_LAYER_NAME_PREV +viewPath}`);\r\n        if (blockLayer){\r\n            return blockLayer.onceAwait(event);\r\n        } else {\r\n            console.error(\"not found view==>\"+viewPath);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开view之前处理\r\n     * @param args 打窗口的参数\r\n     *\r\n     * 说明：\r\n     * 1.如果要给阻塞层添加灰色的背景，则可以在preHandle中给this.blockLayer.addComponent(cc.Sprite);\r\n     * 2.如果要在两个界面间插入一个界面，则可以在此处拦截并阻塞消息，直到插入的界面关闭(await Facade.canvasNode.onceAwait(xxx));\r\n     * 3.如果要在打开窗口和其他事件同时进行的任务。比如打开窗口的同时请求网络数据，等网络数据到达时刷新界面。(Promise.all([p1, p2]));\r\n     * */\r\n    async preHandle(...args):Promise<boolean>{\r\n        return new Promise<boolean>(async(resolve, reject) => {\r\n            let colorPrefab = await cc.loader.loadResAwait(\"prefab/color\", cc.Prefab);\r\n            /** 添加阻塞层 */\r\n            let blockLayer = new cc.Node(`${BLOCK_LAYER_NAME_PREV + args[0]}`);\r\n            blockLayer.on(cc.Node.EventType.TOUCH_START, (event)=>{\r\n                console.log(`点击了阻塞层touch start=>${blockLayer.name}`);\r\n            });\r\n            blockLayer.addComponent(cc.BlockInputEvents);\r\n            let colorSpriteFrame = cc.instantiate(colorPrefab).getComponent(cc.Sprite).spriteFrame;\r\n            blockLayer.addComponent(cc.Sprite).spriteFrame = colorSpriteFrame;\r\n            blockLayer.color = cc.Color.BLACK;\r\n            blockLayer.opacity = 0;\r\n            blockLayer.setContentSize(cc.view.getVisibleSize());\r\n            Facade.canvasNode.addChild(blockLayer);\r\n            blockLayer.runAction(cc.fadeTo(1, 150));\r\n            resolve(true);\r\n        });\r\n    }\r\n    /**\r\n     * 打开view之后处理\r\n     * @param node 打开窗口的node\r\n     * @param args 打开窗口的参数\r\n     *\r\n     * 说明：\r\n     * 1.如果要处理点击阻塞层就关闭窗口，则在postHandle中监听this.blockLayer的Touch事件即可处理.\r\n     * 2.如果要添加打开窗口的动画，则在postHandle中处理，如调用this.moveDownToFocus(res)等方法\r\n     * */\r\n    async postHandle(node:any, ...args):Promise{\r\n        return new Promise(async(resolve, reject) => {\r\n            let blockLayer = Facade.canvasNode.getChildByName(`${BLOCK_LAYER_NAME_PREV +args[0]}`);\r\n            blockLayer.emit(OpenViewInterceptor.BlockLayerEvent.viewCreateFinish, node);\r\n            /** 将阻塞层与节点的destroy生命周期绑定 */\r\n            let lifeCycle = node.addComponent(LifeCycle);\r\n            lifeCycle.addCall(\"onDestroy\", ()=> {\r\n                blockLayer.emit(OpenViewInterceptor.BlockLayerEvent.destroy);\r\n                blockLayer.destroy();\r\n            });\r\n            if (args[0] == \"prefab/task\"){\r\n                cc.director.getScene().getChildByName('top').active = true;\r\n                await this.moveDownToFocus(node);\r\n            }else if (args[0] == 'prefab/gameover'){\r\n                cc.director.getScene().getChildByName('top').active = true;\r\n            }\r\n            blockLayer.emit(OpenViewInterceptor.BlockLayerEvent.viewDisplayFinish, node);\r\n            resolve();\r\n        });\r\n    }\r\n\r\n\r\n    /** 打开窗口的特效 */\r\n\r\n    /** 从屏幕下方弹出 */\r\n    async moveDownToFocus(node:cc.Node){\r\n        let x = node.x;\r\n        let y = node.y;\r\n        node.y = y - cc.view.getVisibleSize().height;\r\n        await node.runActionAwait(cc.moveTo(1.2, x, y).easing(cc.easeElasticOut(0.6)));\r\n    }\r\n\r\n}\r\n"]}