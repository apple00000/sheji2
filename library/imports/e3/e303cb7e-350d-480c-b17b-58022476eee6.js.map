{"version":3,"sources":["assets/framework/extend/ccloaderAwait.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;AAEnG,SAAe,MAAM,CAAC,GAAW,EAAE,IAAe;mCAAE,OAAO;;;YACvD,sBAAO,IAAI,OAAO,CAAC,UAAO,OAAO,EAAE,MAAM;;;;;gCACjC,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;qCACnC,CAAA,GAAG,IAAI,IAAI,CAAA,EAAX,wBAAW;gCACA,qBAAM,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG;wCAClD,MAAM,CAAC,GAAG,CAAC,CAAC;oCAChB,CAAC,CAAC,EAAA;;gCAFE,QAAM,SAER;gCACF,OAAO,CAAC,KAAG,CAAC,CAAC;;;gCAEb,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;qBAEpB,CAAC,EAAC;;;CACN;AAED,SAAe,OAAO;IAAC,cAAO;SAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;QAAP,yBAAO;;mCAAE,OAAO;;YACnC,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;;oBAC/B,CAAA,KAAA,EAAE,CAAC,MAAM,CAAA,CAAC,OAAO,0BAAI,IAAI,GAAE,UAAU,GAAG,EAAE,GAAG;4BACzC,IAAI,GAAG,IAAI,IAAI,EAAC;gCACZ,OAAO,CAAC,GAAG,CAAC,CAAC;6BAChB;iCAAM;gCACH,MAAM,CAAC,GAAG,CAAC,CAAC;6BACf;wBACL,CAAC,IAAE;gBACP,CAAC,CAAC,EAAC;;;CACN;AAED,SAAe,YAAY;IAAC,cAAO;SAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;QAAP,yBAAO;;mCAAE,OAAO;;YACxC,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;;oBAC/B,CAAA,KAAA,EAAE,CAAC,MAAM,CAAA,CAAC,YAAY,0BAAI,IAAI,GAAE,UAAU,GAAG,EAAE,GAAG;4BAC9C,IAAI,GAAG,IAAI,IAAI,EAAC;gCACZ,OAAO,CAAC,GAAG,CAAC,CAAC;6BAChB;iCAAM;gCACH,MAAM,CAAC,GAAG,CAAC,CAAC;6BACf;wBACL,CAAC,IAAE;gBACP,CAAC,CAAC,EAAC;;;CACN;AAED,SAAe,UAAU;IAAC,cAAO;SAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;QAAP,yBAAO;;mCAAE,OAAO;;YACtC,sBAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;;oBAC/B,CAAA,KAAA,EAAE,CAAC,MAAM,CAAA,CAAC,UAAU,0BAAI,IAAI,GAAE,UAAU,GAAU,EAAE,QAAe,EAAE,IAAc;4BAC/E,IAAI,GAAG,IAAI,IAAI,EAAC;gCACZ,OAAO,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;6BAC7B;iCAAM;gCACH,MAAM,CAAC,GAAG,CAAC,CAAC;6BACf;wBACL,CAAC,IAAE;gBACP,CAAC,CAAC,EAAC;;;CACN;AAGD,SAAS,YAAY,CAAC,GAAU,EAAE,IAAqB;IACnD,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACnD,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,EAAE,CAAC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC;AAC/B,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,OAAO,CAAC;AACjC,EAAE,CAAC,MAAM,CAAC,iBAAiB,GAAG,YAAY,CAAC;AAC3C,EAAE,CAAC,MAAM,CAAC,eAAe,GAAG,UAAU,CAAC;AACvC,EAAE,CAAC,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nasync function getRes(url: string, type?: Function):Promise{\r\n    return new Promise(async (resolve, reject) => {\r\n        let res = cc.loader.getRes(url, type);\r\n        if(res == null){\r\n            let res = await loadRes(url, type).catch(function (err) {\r\n                reject(err);\r\n            });\r\n            resolve(res);\r\n        }else {\r\n            resolve(res);\r\n        }\r\n    });\r\n}\r\n\r\nasync function loadRes(...args):Promise{\r\n    return new Promise((resolve, reject) => {\r\n        cc.loader.loadRes(...args, function (err, res) {\r\n            if (err == null){\r\n                resolve(res);\r\n            } else {\r\n                reject(err);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nasync function loadResArray(...args):Promise{\r\n    return new Promise((resolve, reject) => {\r\n        cc.loader.loadResArray(...args, function (err, res) {\r\n            if (err == null){\r\n                resolve(res);\r\n            } else {\r\n                reject(err);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nasync function loadResDir(...args):Promise{\r\n    return new Promise((resolve, reject) => {\r\n        cc.loader.loadResDir(...args, function (err: Error, resource: any[], urls: string[]) {\r\n            if (err == null){\r\n                resolve([resource, urls]);\r\n            } else {\r\n                reject(err);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction getFileNames(dir:string, type: typeof cc.Asset):Array<string>{\r\n    let urls = [];\r\n    cc.loader._resources.getUuidArray(dir, type, urls);\r\n    return urls;\r\n}\r\n\r\ncc.loader.getResAwait = getRes;\r\ncc.loader.loadResAwait = loadRes;\r\ncc.loader.loadResArrayAwait = loadResArray;\r\ncc.loader.loadResDirAwait = loadResDir;\r\ncc.loader.getFileNames = getFileNames;\r\n"]}